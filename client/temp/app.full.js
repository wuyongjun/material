/* ========================================================================
 * Bootstrap: collapse.js v3.3.2
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2015 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================
  var Collapse = function (element, options) {
    this.$element = $(element);
    this.options = $.extend({}, Collapse.DEFAULTS, options);
    this.$trigger = $(this.options.trigger).filter('[href="#' + element.id + '"], [data-target="#' + element.id + '"]');
    this.transitioning = null;
    if (this.options.parent) {
      this.$parent = this.getParent();
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger);
    }
    if (this.options.toggle)
      this.toggle();
  };
  Collapse.VERSION = '3.3.2';
  Collapse.TRANSITION_DURATION = 350;
  Collapse.DEFAULTS = {
    toggle: true,
    trigger: '[data-toggle="collapse"]'
  };
  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width');
    return hasWidth ? 'width' : 'height';
  };
  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in'))
      return;
    var activesData;
    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing');
    if (actives && actives.length) {
      activesData = actives.data('bs.collapse');
      if (activesData && activesData.transitioning)
        return;
    }
    var startEvent = $.Event('show.bs.collapse');
    this.$element.trigger(startEvent);
    if (startEvent.isDefaultPrevented())
      return;
    if (actives && actives.length) {
      Plugin.call(actives, 'hide');
      activesData || actives.data('bs.collapse', null);
    }
    var dimension = this.dimension();
    this.$element.removeClass('collapse').addClass('collapsing')[dimension](0).attr('aria-expanded', true);
    this.$trigger.removeClass('collapsed').attr('aria-expanded', true);
    this.transitioning = 1;
    var complete = function () {
      this.$element.removeClass('collapsing').addClass('collapse in')[dimension]('');
      this.transitioning = 0;
      this.$element.trigger('shown.bs.collapse');
    };
    if (!$.support.transition)
      return complete.call(this);
    var scrollSize = $.camelCase([
        'scroll',
        dimension
      ].join('-'));
    this.$element.one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize]);
  };
  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in'))
      return;
    var startEvent = $.Event('hide.bs.collapse');
    this.$element.trigger(startEvent);
    if (startEvent.isDefaultPrevented())
      return;
    var dimension = this.dimension();
    this.$element[dimension](this.$element[dimension]())[0].offsetHeight;
    this.$element.addClass('collapsing').removeClass('collapse in').attr('aria-expanded', false);
    this.$trigger.addClass('collapsed').attr('aria-expanded', false);
    this.transitioning = 1;
    var complete = function () {
      this.transitioning = 0;
      this.$element.removeClass('collapsing').addClass('collapse').trigger('hidden.bs.collapse');
    };
    if (!$.support.transition)
      return complete.call(this);
    this.$element[dimension](0).one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION);
  };
  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']();
  };
  Collapse.prototype.getParent = function () {
    return $(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each($.proxy(function (i, element) {
      var $element = $(element);
      this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element);
    }, this)).end();
  };
  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass('in');
    $element.attr('aria-expanded', isOpen);
    $trigger.toggleClass('collapsed', !isOpen).attr('aria-expanded', isOpen);
  };
  function getTargetFromTrigger($trigger) {
    var href;
    var target = $trigger.attr('data-target') || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '');
    // strip for ie7
    return $(target);
  }
  // COLLAPSE PLUGIN DEFINITION
  // ==========================
  function Plugin(option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.collapse');
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option);
      if (!data && options.toggle && option == 'show')
        options.toggle = false;
      if (!data)
        $this.data('bs.collapse', data = new Collapse(this, options));
      if (typeof option == 'string')
        data[option]();
    });
  }
  var old = $.fn.collapse;
  $.fn.collapse = Plugin;
  $.fn.collapse.Constructor = Collapse;
  // COLLAPSE NO CONFLICT
  // ====================
  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old;
    return this;
  };
  // COLLAPSE DATA-API
  // =================
  $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {
    var $this = $(this);
    if (!$this.attr('data-target'))
      e.preventDefault();
    var $target = getTargetFromTrigger($this);
    var data = $target.data('bs.collapse');
    var option = data ? 'toggle' : $.extend({}, $this.data(), { trigger: this });
    Plugin.call($target, option);
  });
}(jQuery);
//     Underscore.js 1.7.0
//     http://underscorejs.org
//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.
(function () {
  // Baseline setup
  // --------------
  // Establish the root object, `window` in the browser, or `exports` on the server.
  var root = this;
  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;
  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;
  // Create quick reference variables for speed access to core prototypes.
  var push = ArrayProto.push, slice = ArrayProto.slice, concat = ArrayProto.concat, toString = ObjProto.toString, hasOwnProperty = ObjProto.hasOwnProperty;
  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var nativeIsArray = Array.isArray, nativeKeys = Object.keys, nativeBind = FuncProto.bind;
  // Create a safe reference to the Underscore object for use below.
  var _ = function (obj) {
    if (obj instanceof _)
      return obj;
    if (!(this instanceof _))
      return new _(obj);
    this._wrapped = obj;
  };
  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }
  // Current version.
  _.VERSION = '1.7.0';
  // Internal function that returns an efficient (for current engines) version
  // of the passed-in callback, to be repeatedly applied in other Underscore
  // functions.
  var createCallback = function (func, context, argCount) {
    if (context === void 0)
      return func;
    switch (argCount == null ? 3 : argCount) {
    case 1:
      return function (value) {
        return func.call(context, value);
      };
    case 2:
      return function (value, other) {
        return func.call(context, value, other);
      };
    case 3:
      return function (value, index, collection) {
        return func.call(context, value, index, collection);
      };
    case 4:
      return function (accumulator, value, index, collection) {
        return func.call(context, accumulator, value, index, collection);
      };
    }
    return function () {
      return func.apply(context, arguments);
    };
  };
  // A mostly-internal function to generate callbacks that can be applied
  // to each element in a collection, returning the desired result — either
  // identity, an arbitrary callback, a property matcher, or a property accessor.
  _.iteratee = function (value, context, argCount) {
    if (value == null)
      return _.identity;
    if (_.isFunction(value))
      return createCallback(value, context, argCount);
    if (_.isObject(value))
      return _.matches(value);
    return _.property(value);
  };
  // Collection Functions
  // --------------------
  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles raw objects in addition to array-likes. Treats all
  // sparse array-likes as if they were dense.
  _.each = _.forEach = function (obj, iteratee, context) {
    if (obj == null)
      return obj;
    iteratee = createCallback(iteratee, context);
    var i, length = obj.length;
    if (length === +length) {
      for (i = 0; i < length; i++) {
        iteratee(obj[i], i, obj);
      }
    } else {
      var keys = _.keys(obj);
      for (i = 0, length = keys.length; i < length; i++) {
        iteratee(obj[keys[i]], keys[i], obj);
      }
    }
    return obj;
  };
  // Return the results of applying the iteratee to each element.
  _.map = _.collect = function (obj, iteratee, context) {
    if (obj == null)
      return [];
    iteratee = _.iteratee(iteratee, context);
    var keys = obj.length !== +obj.length && _.keys(obj), length = (keys || obj).length, results = Array(length), currentKey;
    for (var index = 0; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      results[index] = iteratee(obj[currentKey], currentKey, obj);
    }
    return results;
  };
  var reduceError = 'Reduce of empty array with no initial value';
  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`.
  _.reduce = _.foldl = _.inject = function (obj, iteratee, memo, context) {
    if (obj == null)
      obj = [];
    iteratee = createCallback(iteratee, context, 4);
    var keys = obj.length !== +obj.length && _.keys(obj), length = (keys || obj).length, index = 0, currentKey;
    if (arguments.length < 3) {
      if (!length)
        throw new TypeError(reduceError);
      memo = obj[keys ? keys[index++] : index++];
    }
    for (; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      memo = iteratee(memo, obj[currentKey], currentKey, obj);
    }
    return memo;
  };
  // The right-associative version of reduce, also known as `foldr`.
  _.reduceRight = _.foldr = function (obj, iteratee, memo, context) {
    if (obj == null)
      obj = [];
    iteratee = createCallback(iteratee, context, 4);
    var keys = obj.length !== +obj.length && _.keys(obj), index = (keys || obj).length, currentKey;
    if (arguments.length < 3) {
      if (!index)
        throw new TypeError(reduceError);
      memo = obj[keys ? keys[--index] : --index];
    }
    while (index--) {
      currentKey = keys ? keys[index] : index;
      memo = iteratee(memo, obj[currentKey], currentKey, obj);
    }
    return memo;
  };
  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function (obj, predicate, context) {
    var result;
    predicate = _.iteratee(predicate, context);
    _.some(obj, function (value, index, list) {
      if (predicate(value, index, list)) {
        result = value;
        return true;
      }
    });
    return result;
  };
  // Return all the elements that pass a truth test.
  // Aliased as `select`.
  _.filter = _.select = function (obj, predicate, context) {
    var results = [];
    if (obj == null)
      return results;
    predicate = _.iteratee(predicate, context);
    _.each(obj, function (value, index, list) {
      if (predicate(value, index, list))
        results.push(value);
    });
    return results;
  };
  // Return all the elements for which a truth test fails.
  _.reject = function (obj, predicate, context) {
    return _.filter(obj, _.negate(_.iteratee(predicate)), context);
  };
  // Determine whether all of the elements match a truth test.
  // Aliased as `all`.
  _.every = _.all = function (obj, predicate, context) {
    if (obj == null)
      return true;
    predicate = _.iteratee(predicate, context);
    var keys = obj.length !== +obj.length && _.keys(obj), length = (keys || obj).length, index, currentKey;
    for (index = 0; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      if (!predicate(obj[currentKey], currentKey, obj))
        return false;
    }
    return true;
  };
  // Determine if at least one element in the object matches a truth test.
  // Aliased as `any`.
  _.some = _.any = function (obj, predicate, context) {
    if (obj == null)
      return false;
    predicate = _.iteratee(predicate, context);
    var keys = obj.length !== +obj.length && _.keys(obj), length = (keys || obj).length, index, currentKey;
    for (index = 0; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      if (predicate(obj[currentKey], currentKey, obj))
        return true;
    }
    return false;
  };
  // Determine if the array or object contains a given value (using `===`).
  // Aliased as `include`.
  _.contains = _.include = function (obj, target) {
    if (obj == null)
      return false;
    if (obj.length !== +obj.length)
      obj = _.values(obj);
    return _.indexOf(obj, target) >= 0;
  };
  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function (obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function (value) {
      return (isFunc ? method : value[method]).apply(value, args);
    });
  };
  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function (obj, key) {
    return _.map(obj, _.property(key));
  };
  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function (obj, attrs) {
    return _.filter(obj, _.matches(attrs));
  };
  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function (obj, attrs) {
    return _.find(obj, _.matches(attrs));
  };
  // Return the maximum element (or element-based computation).
  _.max = function (obj, iteratee, context) {
    var result = -Infinity, lastComputed = -Infinity, value, computed;
    if (iteratee == null && obj != null) {
      obj = obj.length === +obj.length ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value > result) {
          result = value;
        }
      }
    } else {
      iteratee = _.iteratee(iteratee, context);
      _.each(obj, function (value, index, list) {
        computed = iteratee(value, index, list);
        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };
  // Return the minimum element (or element-based computation).
  _.min = function (obj, iteratee, context) {
    var result = Infinity, lastComputed = Infinity, value, computed;
    if (iteratee == null && obj != null) {
      obj = obj.length === +obj.length ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value < result) {
          result = value;
        }
      }
    } else {
      iteratee = _.iteratee(iteratee, context);
      _.each(obj, function (value, index, list) {
        computed = iteratee(value, index, list);
        if (computed < lastComputed || computed === Infinity && result === Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };
  // Shuffle a collection, using the modern version of the
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
  _.shuffle = function (obj) {
    var set = obj && obj.length === +obj.length ? obj : _.values(obj);
    var length = set.length;
    var shuffled = Array(length);
    for (var index = 0, rand; index < length; index++) {
      rand = _.random(0, index);
      if (rand !== index)
        shuffled[index] = shuffled[rand];
      shuffled[rand] = set[index];
    }
    return shuffled;
  };
  // Sample **n** random values from a collection.
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `map`.
  _.sample = function (obj, n, guard) {
    if (n == null || guard) {
      if (obj.length !== +obj.length)
        obj = _.values(obj);
      return obj[_.random(obj.length - 1)];
    }
    return _.shuffle(obj).slice(0, Math.max(0, n));
  };
  // Sort the object's values by a criterion produced by an iteratee.
  _.sortBy = function (obj, iteratee, context) {
    iteratee = _.iteratee(iteratee, context);
    return _.pluck(_.map(obj, function (value, index, list) {
      return {
        value: value,
        index: index,
        criteria: iteratee(value, index, list)
      };
    }).sort(function (left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0)
          return 1;
        if (a < b || b === void 0)
          return -1;
      }
      return left.index - right.index;
    }), 'value');
  };
  // An internal function used for aggregate "group by" operations.
  var group = function (behavior) {
    return function (obj, iteratee, context) {
      var result = {};
      iteratee = _.iteratee(iteratee, context);
      _.each(obj, function (value, index) {
        var key = iteratee(value, index, obj);
        behavior(result, value, key);
      });
      return result;
    };
  };
  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = group(function (result, value, key) {
    if (_.has(result, key))
      result[key].push(value);
    else
      result[key] = [value];
  });
  // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.
  _.indexBy = group(function (result, value, key) {
    result[key] = value;
  });
  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = group(function (result, value, key) {
    if (_.has(result, key))
      result[key]++;
    else
      result[key] = 1;
  });
  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function (array, obj, iteratee, context) {
    iteratee = _.iteratee(iteratee, context, 1);
    var value = iteratee(obj);
    var low = 0, high = array.length;
    while (low < high) {
      var mid = low + high >>> 1;
      if (iteratee(array[mid]) < value)
        low = mid + 1;
      else
        high = mid;
    }
    return low;
  };
  // Safely create a real, live array from anything iterable.
  _.toArray = function (obj) {
    if (!obj)
      return [];
    if (_.isArray(obj))
      return slice.call(obj);
    if (obj.length === +obj.length)
      return _.map(obj, _.identity);
    return _.values(obj);
  };
  // Return the number of elements in an object.
  _.size = function (obj) {
    if (obj == null)
      return 0;
    return obj.length === +obj.length ? obj.length : _.keys(obj).length;
  };
  // Split a collection into two arrays: one whose elements all satisfy the given
  // predicate, and one whose elements all do not satisfy the predicate.
  _.partition = function (obj, predicate, context) {
    predicate = _.iteratee(predicate, context);
    var pass = [], fail = [];
    _.each(obj, function (value, key, obj) {
      (predicate(value, key, obj) ? pass : fail).push(value);
    });
    return [
      pass,
      fail
    ];
  };
  // Array Functions
  // ---------------
  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function (array, n, guard) {
    if (array == null)
      return void 0;
    if (n == null || guard)
      return array[0];
    if (n < 0)
      return [];
    return slice.call(array, 0, n);
  };
  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N. The **guard** check allows it to work with
  // `_.map`.
  _.initial = function (array, n, guard) {
    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
  };
  // Get the last element of an array. Passing **n** will return the last N
  // values in the array. The **guard** check allows it to work with `_.map`.
  _.last = function (array, n, guard) {
    if (array == null)
      return void 0;
    if (n == null || guard)
      return array[array.length - 1];
    return slice.call(array, Math.max(array.length - n, 0));
  };
  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array. The **guard**
  // check allows it to work with `_.map`.
  _.rest = _.tail = _.drop = function (array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  };
  // Trim out all falsy values from an array.
  _.compact = function (array) {
    return _.filter(array, _.identity);
  };
  // Internal implementation of a recursive `flatten` function.
  var flatten = function (input, shallow, strict, output) {
    if (shallow && _.every(input, _.isArray)) {
      return concat.apply(output, input);
    }
    for (var i = 0, length = input.length; i < length; i++) {
      var value = input[i];
      if (!_.isArray(value) && !_.isArguments(value)) {
        if (!strict)
          output.push(value);
      } else if (shallow) {
        push.apply(output, value);
      } else {
        flatten(value, shallow, strict, output);
      }
    }
    return output;
  };
  // Flatten out an array, either recursively (by default), or just one level.
  _.flatten = function (array, shallow) {
    return flatten(array, shallow, false, []);
  };
  // Return a version of the array that does not contain the specified value(s).
  _.without = function (array) {
    return _.difference(array, slice.call(arguments, 1));
  };
  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function (array, isSorted, iteratee, context) {
    if (array == null)
      return [];
    if (!_.isBoolean(isSorted)) {
      context = iteratee;
      iteratee = isSorted;
      isSorted = false;
    }
    if (iteratee != null)
      iteratee = _.iteratee(iteratee, context);
    var result = [];
    var seen = [];
    for (var i = 0, length = array.length; i < length; i++) {
      var value = array[i];
      if (isSorted) {
        if (!i || seen !== value)
          result.push(value);
        seen = value;
      } else if (iteratee) {
        var computed = iteratee(value, i, array);
        if (_.indexOf(seen, computed) < 0) {
          seen.push(computed);
          result.push(value);
        }
      } else if (_.indexOf(result, value) < 0) {
        result.push(value);
      }
    }
    return result;
  };
  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function () {
    return _.uniq(flatten(arguments, true, true, []));
  };
  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function (array) {
    if (array == null)
      return [];
    var result = [];
    var argsLength = arguments.length;
    for (var i = 0, length = array.length; i < length; i++) {
      var item = array[i];
      if (_.contains(result, item))
        continue;
      for (var j = 1; j < argsLength; j++) {
        if (!_.contains(arguments[j], item))
          break;
      }
      if (j === argsLength)
        result.push(item);
    }
    return result;
  };
  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function (array) {
    var rest = flatten(slice.call(arguments, 1), true, true, []);
    return _.filter(array, function (value) {
      return !_.contains(rest, value);
    });
  };
  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function (array) {
    if (array == null)
      return [];
    var length = _.max(arguments, 'length').length;
    var results = Array(length);
    for (var i = 0; i < length; i++) {
      results[i] = _.pluck(arguments, i);
    }
    return results;
  };
  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function (list, values) {
    if (list == null)
      return {};
    var result = {};
    for (var i = 0, length = list.length; i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };
  // Return the position of the first occurrence of an item in an array,
  // or -1 if the item is not included in the array.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = function (array, item, isSorted) {
    if (array == null)
      return -1;
    var i = 0, length = array.length;
    if (isSorted) {
      if (typeof isSorted == 'number') {
        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;
      } else {
        i = _.sortedIndex(array, item);
        return array[i] === item ? i : -1;
      }
    }
    for (; i < length; i++)
      if (array[i] === item)
        return i;
    return -1;
  };
  _.lastIndexOf = function (array, item, from) {
    if (array == null)
      return -1;
    var idx = array.length;
    if (typeof from == 'number') {
      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);
    }
    while (--idx >= 0)
      if (array[idx] === item)
        return idx;
    return -1;
  };
  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function (start, stop, step) {
    if (arguments.length <= 1) {
      stop = start || 0;
      start = 0;
    }
    step = step || 1;
    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var range = Array(length);
    for (var idx = 0; idx < length; idx++, start += step) {
      range[idx] = start;
    }
    return range;
  };
  // Function (ahem) Functions
  // ------------------
  // Reusable constructor function for prototype setting.
  var Ctor = function () {
  };
  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function (func, context) {
    var args, bound;
    if (nativeBind && func.bind === nativeBind)
      return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func))
      throw new TypeError('Bind must be called on a function');
    args = slice.call(arguments, 2);
    bound = function () {
      if (!(this instanceof bound))
        return func.apply(context, args.concat(slice.call(arguments)));
      Ctor.prototype = func.prototype;
      var self = new Ctor();
      Ctor.prototype = null;
      var result = func.apply(self, args.concat(slice.call(arguments)));
      if (_.isObject(result))
        return result;
      return self;
    };
    return bound;
  };
  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context. _ acts
  // as a placeholder, allowing any combination of arguments to be pre-filled.
  _.partial = function (func) {
    var boundArgs = slice.call(arguments, 1);
    return function () {
      var position = 0;
      var args = boundArgs.slice();
      for (var i = 0, length = args.length; i < length; i++) {
        if (args[i] === _)
          args[i] = arguments[position++];
      }
      while (position < arguments.length)
        args.push(arguments[position++]);
      return func.apply(this, args);
    };
  };
  // Bind a number of an object's methods to that object. Remaining arguments
  // are the method names to be bound. Useful for ensuring that all callbacks
  // defined on an object belong to it.
  _.bindAll = function (obj) {
    var i, length = arguments.length, key;
    if (length <= 1)
      throw new Error('bindAll must be passed function names');
    for (i = 1; i < length; i++) {
      key = arguments[i];
      obj[key] = _.bind(obj[key], obj);
    }
    return obj;
  };
  // Memoize an expensive function by storing its results.
  _.memoize = function (func, hasher) {
    var memoize = function (key) {
      var cache = memoize.cache;
      var address = hasher ? hasher.apply(this, arguments) : key;
      if (!_.has(cache, address))
        cache[address] = func.apply(this, arguments);
      return cache[address];
    };
    memoize.cache = {};
    return memoize;
  };
  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function (func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function () {
      return func.apply(null, args);
    }, wait);
  };
  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = function (func) {
    return _.delay.apply(_, [
      func,
      1
    ].concat(slice.call(arguments, 1)));
  };
  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function (func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    if (!options)
      options = {};
    var later = function () {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout)
        context = args = null;
    };
    return function () {
      var now = _.now();
      if (!previous && options.leading === false)
        previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0 || remaining > wait) {
        clearTimeout(timeout);
        timeout = null;
        previous = now;
        result = func.apply(context, args);
        if (!timeout)
          context = args = null;
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };
  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function (func, wait, immediate) {
    var timeout, args, context, timestamp, result;
    var later = function () {
      var last = _.now() - timestamp;
      if (last < wait && last > 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout)
            context = args = null;
        }
      }
    };
    return function () {
      context = this;
      args = arguments;
      timestamp = _.now();
      var callNow = immediate && !timeout;
      if (!timeout)
        timeout = setTimeout(later, wait);
      if (callNow) {
        result = func.apply(context, args);
        context = args = null;
      }
      return result;
    };
  };
  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function (func, wrapper) {
    return _.partial(wrapper, func);
  };
  // Returns a negated version of the passed-in predicate.
  _.negate = function (predicate) {
    return function () {
      return !predicate.apply(this, arguments);
    };
  };
  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function () {
    var args = arguments;
    var start = args.length - 1;
    return function () {
      var i = start;
      var result = args[start].apply(this, arguments);
      while (i--)
        result = args[i].call(this, result);
      return result;
    };
  };
  // Returns a function that will only be executed after being called N times.
  _.after = function (times, func) {
    return function () {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };
  // Returns a function that will only be executed before being called N times.
  _.before = function (times, func) {
    var memo;
    return function () {
      if (--times > 0) {
        memo = func.apply(this, arguments);
      } else {
        func = null;
      }
      return memo;
    };
  };
  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = _.partial(_.before, 2);
  // Object Functions
  // ----------------
  // Retrieve the names of an object's properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = function (obj) {
    if (!_.isObject(obj))
      return [];
    if (nativeKeys)
      return nativeKeys(obj);
    var keys = [];
    for (var key in obj)
      if (_.has(obj, key))
        keys.push(key);
    return keys;
  };
  // Retrieve the values of an object's properties.
  _.values = function (obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var values = Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  };
  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function (obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var pairs = Array(length);
    for (var i = 0; i < length; i++) {
      pairs[i] = [
        keys[i],
        obj[keys[i]]
      ];
    }
    return pairs;
  };
  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function (obj) {
    var result = {};
    var keys = _.keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  };
  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function (obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key]))
        names.push(key);
    }
    return names.sort();
  };
  // Extend a given object with all the properties in passed-in object(s).
  _.extend = function (obj) {
    if (!_.isObject(obj))
      return obj;
    var source, prop;
    for (var i = 1, length = arguments.length; i < length; i++) {
      source = arguments[i];
      for (prop in source) {
        if (hasOwnProperty.call(source, prop)) {
          obj[prop] = source[prop];
        }
      }
    }
    return obj;
  };
  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function (obj, iteratee, context) {
    var result = {}, key;
    if (obj == null)
      return result;
    if (_.isFunction(iteratee)) {
      iteratee = createCallback(iteratee, context);
      for (key in obj) {
        var value = obj[key];
        if (iteratee(value, key, obj))
          result[key] = value;
      }
    } else {
      var keys = concat.apply([], slice.call(arguments, 1));
      obj = new Object(obj);
      for (var i = 0, length = keys.length; i < length; i++) {
        key = keys[i];
        if (key in obj)
          result[key] = obj[key];
      }
    }
    return result;
  };
  // Return a copy of the object without the blacklisted properties.
  _.omit = function (obj, iteratee, context) {
    if (_.isFunction(iteratee)) {
      iteratee = _.negate(iteratee);
    } else {
      var keys = _.map(concat.apply([], slice.call(arguments, 1)), String);
      iteratee = function (value, key) {
        return !_.contains(keys, key);
      };
    }
    return _.pick(obj, iteratee, context);
  };
  // Fill in a given object with default properties.
  _.defaults = function (obj) {
    if (!_.isObject(obj))
      return obj;
    for (var i = 1, length = arguments.length; i < length; i++) {
      var source = arguments[i];
      for (var prop in source) {
        if (obj[prop] === void 0)
          obj[prop] = source[prop];
      }
    }
    return obj;
  };
  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function (obj) {
    if (!_.isObject(obj))
      return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };
  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function (obj, interceptor) {
    interceptor(obj);
    return obj;
  };
  // Internal recursive comparison function for `isEqual`.
  var eq = function (a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b)
      return a !== 0 || 1 / a === 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null)
      return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _)
      a = a._wrapped;
    if (b instanceof _)
      b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className !== toString.call(b))
      return false;
    switch (className) {
    // Strings, numbers, regular expressions, dates, and booleans are compared by value.
    case '[object RegExp]':
    // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
    case '[object String]':
      // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
      // equivalent to `new String("5")`.
      return '' + a === '' + b;
    case '[object Number]':
      // `NaN`s are equivalent, but non-reflexive.
      // Object(NaN) is equivalent to NaN
      if (+a !== +a)
        return +b !== +b;
      // An `egal` comparison is performed for other numeric values.
      return +a === 0 ? 1 / +a === 1 / b : +a === +b;
    case '[object Date]':
    case '[object Boolean]':
      // Coerce dates and booleans to numeric primitive values. Dates are compared by their
      // millisecond representations. Note that invalid dates with millisecond representations
      // of `NaN` are not equivalent.
      return +a === +b;
    }
    if (typeof a != 'object' || typeof b != 'object')
      return false;
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] === a)
        return bStack[length] === b;
    }
    // Objects with different constructors are not equivalent, but `Object`s
    // from different frames are.
    var aCtor = a.constructor, bCtor = b.constructor;
    if (aCtor !== bCtor && 'constructor' in a && 'constructor' in b && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor)) {
      return false;
    }
    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);
    var size, result;
    // Recursively compare objects and arrays.
    if (className === '[object Array]') {
      // Compare array lengths to determine if a deep comparison is necessary.
      size = a.length;
      result = size === b.length;
      if (result) {
        // Deep compare the contents, ignoring non-numeric properties.
        while (size--) {
          if (!(result = eq(a[size], b[size], aStack, bStack)))
            break;
        }
      }
    } else {
      // Deep compare objects.
      var keys = _.keys(a), key;
      size = keys.length;
      // Ensure that both objects contain the same number of properties before comparing deep equality.
      result = _.keys(b).length === size;
      if (result) {
        while (size--) {
          // Deep compare each member
          key = keys[size];
          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack)))
            break;
        }
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return result;
  };
  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function (a, b) {
    return eq(a, b, [], []);
  };
  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function (obj) {
    if (obj == null)
      return true;
    if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))
      return obj.length === 0;
    for (var key in obj)
      if (_.has(obj, key))
        return false;
    return true;
  };
  // Is a given value a DOM element?
  _.isElement = function (obj) {
    return !!(obj && obj.nodeType === 1);
  };
  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function (obj) {
    return toString.call(obj) === '[object Array]';
  };
  // Is a given variable an object?
  _.isObject = function (obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  };
  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.
  _.each([
    'Arguments',
    'Function',
    'String',
    'Number',
    'Date',
    'RegExp'
  ], function (name) {
    _['is' + name] = function (obj) {
      return toString.call(obj) === '[object ' + name + ']';
    };
  });
  // Define a fallback version of the method in browsers (ahem, IE), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function (obj) {
      return _.has(obj, 'callee');
    };
  }
  // Optimize `isFunction` if appropriate. Work around an IE 11 bug.
  if (typeof /./ !== 'function') {
    _.isFunction = function (obj) {
      return typeof obj == 'function' || false;
    };
  }
  // Is a given object a finite number?
  _.isFinite = function (obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };
  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function (obj) {
    return _.isNumber(obj) && obj !== +obj;
  };
  // Is a given value a boolean?
  _.isBoolean = function (obj) {
    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
  };
  // Is a given value equal to null?
  _.isNull = function (obj) {
    return obj === null;
  };
  // Is a given variable undefined?
  _.isUndefined = function (obj) {
    return obj === void 0;
  };
  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function (obj, key) {
    return obj != null && hasOwnProperty.call(obj, key);
  };
  // Utility Functions
  // -----------------
  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function () {
    root._ = previousUnderscore;
    return this;
  };
  // Keep the identity function around for default iteratees.
  _.identity = function (value) {
    return value;
  };
  _.constant = function (value) {
    return function () {
      return value;
    };
  };
  _.noop = function () {
  };
  _.property = function (key) {
    return function (obj) {
      return obj[key];
    };
  };
  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.
  _.matches = function (attrs) {
    var pairs = _.pairs(attrs), length = pairs.length;
    return function (obj) {
      if (obj == null)
        return !length;
      obj = new Object(obj);
      for (var i = 0; i < length; i++) {
        var pair = pairs[i], key = pair[0];
        if (pair[1] !== obj[key] || !(key in obj))
          return false;
      }
      return true;
    };
  };
  // Run a function **n** times.
  _.times = function (n, iteratee, context) {
    var accum = Array(Math.max(0, n));
    iteratee = createCallback(iteratee, context, 1);
    for (var i = 0; i < n; i++)
      accum[i] = iteratee(i);
    return accum;
  };
  // Return a random integer between min and max (inclusive).
  _.random = function (min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };
  // A (possibly faster) way to get the current timestamp as an integer.
  _.now = Date.now || function () {
    return new Date().getTime();
  };
  // List of HTML entities for escaping.
  var escapeMap = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      '\'': '&#x27;',
      '`': '&#x60;'
    };
  var unescapeMap = _.invert(escapeMap);
  // Functions for escaping and unescaping strings to/from HTML interpolation.
  var createEscaper = function (map) {
    var escaper = function (match) {
      return map[match];
    };
    // Regexes for identifying a key that needs to be escaped
    var source = '(?:' + _.keys(map).join('|') + ')';
    var testRegexp = RegExp(source);
    var replaceRegexp = RegExp(source, 'g');
    return function (string) {
      string = string == null ? '' : '' + string;
      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
    };
  };
  _.escape = createEscaper(escapeMap);
  _.unescape = createEscaper(unescapeMap);
  // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.
  _.result = function (object, property) {
    if (object == null)
      return void 0;
    var value = object[property];
    return _.isFunction(value) ? object[property]() : value;
  };
  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function (prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };
  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate: /<%([\s\S]+?)%>/g,
    interpolate: /<%=([\s\S]+?)%>/g,
    escape: /<%-([\s\S]+?)%>/g
  };
  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;
  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
      '\'': '\'',
      '\\': '\\',
      '\r': 'r',
      '\n': 'n',
      '\u2028': 'u2028',
      '\u2029': 'u2029'
    };
  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;
  var escapeChar = function (match) {
    return '\\' + escapes[match];
  };
  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  // NB: `oldSettings` only exists for backwards compatibility.
  _.template = function (text, settings, oldSettings) {
    if (!settings && oldSettings)
      settings = oldSettings;
    settings = _.defaults({}, settings, _.templateSettings);
    // Combine delimiters into one regular expression via alternation.
    var matcher = RegExp([
        (settings.escape || noMatch).source,
        (settings.interpolate || noMatch).source,
        (settings.evaluate || noMatch).source
      ].join('|') + '|$', 'g');
    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = '__p+=\'';
    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escaper, escapeChar);
      index = offset + match.length;
      if (escape) {
        source += '\'+\n((__t=(' + escape + '))==null?\'\':_.escape(__t))+\n\'';
      } else if (interpolate) {
        source += '\'+\n((__t=(' + interpolate + '))==null?\'\':__t)+\n\'';
      } else if (evaluate) {
        source += '\';\n' + evaluate + '\n__p+=\'';
      }
      // Adobe VMs need the match returned to produce the correct offest.
      return match;
    });
    source += '\';\n';
    // If a variable is not specified, place data values in local scope.
    if (!settings.variable)
      source = 'with(obj||{}){\n' + source + '}\n';
    source = 'var __t,__p=\'\',__j=Array.prototype.join,' + 'print=function(){__p+=__j.call(arguments,\'\');};\n' + source + 'return __p;\n';
    try {
      var render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }
    var template = function (data) {
      return render.call(this, data, _);
    };
    // Provide the compiled source as a convenience for precompilation.
    var argument = settings.variable || 'obj';
    template.source = 'function(' + argument + '){\n' + source + '}';
    return template;
  };
  // Add a "chain" function. Start chaining a wrapped Underscore object.
  _.chain = function (obj) {
    var instance = _(obj);
    instance._chain = true;
    return instance;
  };
  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.
  // Helper function to continue chaining intermediate results.
  var result = function (obj) {
    return this._chain ? _(obj).chain() : obj;
  };
  // Add your own custom functions to the Underscore object.
  _.mixin = function (obj) {
    _.each(_.functions(obj), function (name) {
      var func = _[name] = obj[name];
      _.prototype[name] = function () {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result.call(this, func.apply(_, args));
      };
    });
  };
  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);
  // Add all mutator Array functions to the wrapper.
  _.each([
    'pop',
    'push',
    'reverse',
    'shift',
    'sort',
    'splice',
    'unshift'
  ], function (name) {
    var method = ArrayProto[name];
    _.prototype[name] = function () {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name === 'shift' || name === 'splice') && obj.length === 0)
        delete obj[0];
      return result.call(this, obj);
    };
  });
  // Add all accessor Array functions to the wrapper.
  _.each([
    'concat',
    'join',
    'slice'
  ], function (name) {
    var method = ArrayProto[name];
    _.prototype[name] = function () {
      return result.call(this, method.apply(this._wrapped, arguments));
    };
  });
  // Extracts the result from a wrapped and chained object.
  _.prototype.value = function () {
    return this._wrapped;
  };
  // AMD registration happens at the end for compatibility with AMD loaders
  // that may not enforce next-turn semantics on modules. Even though general
  // practice for AMD registration is to be anonymous, underscore registers
  // as a named module because, like jQuery, it is a base library that is
  // popular enough to be bundled in a third party lib, but not be part of
  // an AMD load request. Those cases could generate an error when an
  // anonymous define() is called outside of a loader request.
  if (typeof define === 'function' && define.amd) {
    define('underscore', [], function () {
      return _;
    });
  }
}.call(this));
/*! ========================================================================
 * Bootstrap Toggle: bootstrap-toggle.js v2.2.0
 * http://www.bootstraptoggle.com
 * ========================================================================
 * Copyright 2014 Min Hur, The New York Times Company
 * Licensed under MIT
 * ======================================================================== */
+function (a) {
  'use strict';
  function b(b) {
    return this.each(function () {
      var d = a(this), e = d.data('bs.toggle'), f = 'object' == typeof b && b;
      e || d.data('bs.toggle', e = new c(this, f)), 'string' == typeof b && e[b] && e[b]();
    });
  }
  var c = function (b, c) {
    this.$element = a(b), this.options = a.extend({}, this.defaults(), c), this.render();
  };
  c.VERSION = '2.2.0', c.DEFAULTS = {
    on: 'On',
    off: 'Off',
    onstyle: 'primary',
    offstyle: 'default',
    size: 'normal',
    style: '',
    width: null,
    height: null
  }, c.prototype.defaults = function () {
    return {
      on: this.$element.attr('data-on') || c.DEFAULTS.on,
      off: this.$element.attr('data-off') || c.DEFAULTS.off,
      onstyle: this.$element.attr('data-onstyle') || c.DEFAULTS.onstyle,
      offstyle: this.$element.attr('data-offstyle') || c.DEFAULTS.offstyle,
      size: this.$element.attr('data-size') || c.DEFAULTS.size,
      style: this.$element.attr('data-style') || c.DEFAULTS.style,
      width: this.$element.attr('data-width') || c.DEFAULTS.width,
      height: this.$element.attr('data-height') || c.DEFAULTS.height
    };
  }, c.prototype.render = function () {
    this._onstyle = 'btn-' + this.options.onstyle, this._offstyle = 'btn-' + this.options.offstyle;
    var b = 'large' === this.options.size ? 'btn-lg' : 'small' === this.options.size ? 'btn-sm' : 'mini' === this.options.size ? 'btn-xs' : '', c = a('<label class="btn">').html(this.options.on).addClass(this._onstyle + ' ' + b), d = a('<label class="btn">').html(this.options.off).addClass(this._offstyle + ' ' + b + ' active'), e = a('<span class="toggle-handle btn btn-default">').addClass(b), f = a('<div class="toggle-group">').append(c, d, e), g = a('<div class="toggle btn" data-toggle="toggle">').addClass(this.$element.prop('checked') ? this._onstyle : this._offstyle + ' off').addClass(b).addClass(this.options.style);
    this.$element.wrap(g), a.extend(this, {
      $toggle: this.$element.parent(),
      $toggleOn: c,
      $toggleOff: d,
      $toggleGroup: f
    }), this.$toggle.append(f);
    var h = this.options.width || Math.max(c.outerWidth(), d.outerWidth()) + e.outerWidth() / 2, i = this.options.height || Math.max(c.outerHeight(), d.outerHeight());
    c.addClass('toggle-on'), d.addClass('toggle-off'), this.$toggle.css({
      width: h,
      height: i
    }), this.options.height && (c.css('line-height', c.height() + 'px'), d.css('line-height', d.height() + 'px')), this.update(!0), this.trigger(!0);
  }, c.prototype.toggle = function () {
    this.$element.prop('checked') ? this.off() : this.on();
  }, c.prototype.on = function (a) {
    return this.$element.prop('disabled') ? !1 : (this.$toggle.removeClass(this._offstyle + ' off').addClass(this._onstyle), this.$element.prop('checked', !0), void (a || this.trigger()));
  }, c.prototype.off = function (a) {
    return this.$element.prop('disabled') ? !1 : (this.$toggle.removeClass(this._onstyle).addClass(this._offstyle + ' off'), this.$element.prop('checked', !1), void (a || this.trigger()));
  }, c.prototype.enable = function () {
    this.$toggle.removeAttr('disabled'), this.$element.prop('disabled', !1);
  }, c.prototype.disable = function () {
    this.$toggle.attr('disabled', 'disabled'), this.$element.prop('disabled', !0);
  }, c.prototype.update = function (a) {
    this.$element.prop('disabled') ? this.disable() : this.enable(), this.$element.prop('checked') ? this.on(a) : this.off(a);
  }, c.prototype.trigger = function (b) {
    this.$element.off('change.bs.toggle'), b || this.$element.change(), this.$element.on('change.bs.toggle', a.proxy(function () {
      this.update();
    }, this));
  }, c.prototype.destroy = function () {
    this.$element.off('change.bs.toggle'), this.$toggleGroup.remove(), this.$element.removeData('bs.toggle'), this.$element.unwrap();
  };
  var d = a.fn.bootstrapToggle;
  a.fn.bootstrapToggle = b, a.fn.bootstrapToggle.Constructor = c, a.fn.toggle.noConflict = function () {
    return a.fn.bootstrapToggle = d, this;
  }, a(function () {
    a('input[type=checkbox][data-toggle^=toggle]').bootstrapToggle();
  }), a(document).on('click.bs.toggle', 'div[data-toggle^=toggle]', function (b) {
    var c = a(this).find('input[type=checkbox]');
    c.bootstrapToggle('toggle'), b.preventDefault();
  });
}(jQuery);
//# sourceMappingURL=bootstrap-toggle.min.js.map
/*
 AngularJS v1.4.10
 (c) 2010-2015 Google, Inc. http://angularjs.org
 License: MIT
*/
(function (n, h, p) {
  'use strict';
  function E(a) {
    var f = [];
    r(f, h.noop).chars(a);
    return f.join('');
  }
  function g(a, f) {
    var d = {}, c = a.split(','), b;
    for (b = 0; b < c.length; b++)
      d[f ? h.lowercase(c[b]) : c[b]] = !0;
    return d;
  }
  function F(a, f) {
    function d(a, b, d, l) {
      b = h.lowercase(b);
      if (s[b])
        for (; e.last() && t[e.last()];)
          c('', e.last());
      u[b] && e.last() == b && c('', b);
      (l = v[b] || !!l) || e.push(b);
      var m = {};
      d.replace(G, function (b, a, f, c, d) {
        m[a] = q(f || c || d || '');
      });
      f.start && f.start(b, m, l);
    }
    function c(b, a) {
      var c = 0, d;
      if (a = h.lowercase(a))
        for (c = e.length - 1; 0 <= c && e[c] != a; c--);
      if (0 <= c) {
        for (d = e.length - 1; d >= c; d--)
          f.end && f.end(e[d]);
        e.length = c;
      }
    }
    'string' !== typeof a && (a = null === a || 'undefined' === typeof a ? '' : '' + a);
    var b, k, e = [], m = a, l;
    for (e.last = function () {
        return e[e.length - 1];
      }; a;) {
      l = '';
      k = !0;
      if (e.last() && w[e.last()])
        a = a.replace(new RegExp('([\\W\\w]*)<\\s*\\/\\s*' + e.last() + '[^>]*>', 'i'), function (a, b) {
          b = b.replace(H, '$1').replace(I, '$1');
          f.chars && f.chars(q(b));
          return '';
        }), c('', e.last());
      else {
        if (0 === a.indexOf('<!--'))
          b = a.indexOf('--', 4), 0 <= b && a.lastIndexOf('-->', b) === b && (f.comment && f.comment(a.substring(4, b)), a = a.substring(b + 3), k = !1);
        else if (x.test(a)) {
          if (b = a.match(x))
            a = a.replace(b[0], ''), k = !1;
        } else if (J.test(a)) {
          if (b = a.match(y))
            a = a.substring(b[0].length), b[0].replace(y, c), k = !1;
        } else
          K.test(a) && ((b = a.match(z)) ? (b[4] && (a = a.substring(b[0].length), b[0].replace(z, d)), k = !1) : (l += '<', a = a.substring(1)));
        k && (b = a.indexOf('<'), l += 0 > b ? a : a.substring(0, b), a = 0 > b ? '' : a.substring(b), f.chars && f.chars(q(l)));
      }
      if (a == m)
        throw L('badparse', a);
      m = a;
    }
    c();
  }
  function q(a) {
    if (!a)
      return '';
    A.innerHTML = a.replace(/</g, '&lt;');
    return A.textContent;
  }
  function B(a) {
    return a.replace(/&/g, '&amp;').replace(M, function (a) {
      var d = a.charCodeAt(0);
      a = a.charCodeAt(1);
      return '&#' + (1024 * (d - 55296) + (a - 56320) + 65536) + ';';
    }).replace(N, function (a) {
      return '&#' + a.charCodeAt(0) + ';';
    }).replace(/</g, '&lt;').replace(/>/g, '&gt;');
  }
  function r(a, f) {
    var d = !1, c = h.bind(a, a.push);
    return {
      start: function (a, k, e) {
        a = h.lowercase(a);
        !d && w[a] && (d = a);
        d || !0 !== C[a] || (c('<'), c(a), h.forEach(k, function (d, e) {
          var k = h.lowercase(e), g = 'img' === a && 'src' === k || 'background' === k;
          !0 !== O[k] || !0 === D[k] && !f(d, g) || (c(' '), c(e), c('="'), c(B(d)), c('"'));
        }), c(e ? '/>' : '>'));
      },
      end: function (a) {
        a = h.lowercase(a);
        d || !0 !== C[a] || (c('</'), c(a), c('>'));
        a == d && (d = !1);
      },
      chars: function (a) {
        d || c(B(a));
      }
    };
  }
  var L = h.$$minErr('$sanitize'), z = /^<((?:[a-zA-Z])[\w:-]*)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\s*(>?)/, y = /^<\/\s*([\w:-]+)[^>]*>/, G = /([\w:-]+)(?:\s*=\s*(?:(?:"((?:[^"])*)")|(?:'((?:[^'])*)')|([^>\s]+)))?/g, K = /^</, J = /^<\//, H = /\x3c!--(.*?)--\x3e/g, x = /<!DOCTYPE([^>]*?)>/i, I = /<!\[CDATA\[(.*?)]]\x3e/g, M = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g, N = /([^\#-~| |!])/g, v = g('area,br,col,hr,img,wbr');
  n = g('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');
  p = g('rp,rt');
  var u = h.extend({}, p, n), s = h.extend({}, n, g('address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul')), t = h.extend({}, p, g('a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var'));
  n = g('circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,stop,svg,switch,text,title,tspan,use');
  var w = g('script,style'), C = h.extend({}, v, s, t, u, n), D = g('background,cite,href,longdesc,src,usemap,xlink:href');
  n = g('abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,valign,value,vspace,width');
  p = g('accent-height,accumulate,additive,alphabetic,arabic-form,ascent,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan', !0);
  var O = h.extend({}, D, p, n), A = document.createElement('pre');
  h.module('ngSanitize', []).provider('$sanitize', function () {
    this.$get = [
      '$$sanitizeUri',
      function (a) {
        return function (f) {
          var d = [];
          F(f, r(d, function (c, b) {
            return !/^unsafe/.test(a(c, b));
          }));
          return d.join('');
        };
      }
    ];
  });
  h.module('ngSanitize').filter('linky', [
    '$sanitize',
    function (a) {
      var f = /((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i, d = /^mailto:/i;
      return function (c, b) {
        function k(a) {
          a && g.push(E(a));
        }
        function e(a, c) {
          g.push('<a ');
          h.isDefined(b) && g.push('target="', b, '" ');
          g.push('href="', a.replace(/"/g, '&quot;'), '">');
          k(c);
          g.push('</a>');
        }
        if (!c)
          return c;
        for (var m, l = c, g = [], n, p; m = l.match(f);)
          n = m[0], m[2] || m[4] || (n = (m[3] ? 'http://' : 'mailto:') + n), p = m.index, k(l.substr(0, p)), e(n, m[0].replace(d, '')), l = l.substring(p + m[0].length);
        k(l);
        return a(g.join(''));
      };
    }
  ]);
}(window, window.angular));
//# sourceMappingURL=angular-sanitize.min.js.map
/**
 * @license AngularJS v1.3.8
 * (c) 2010-2014 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function (window, angular, undefined) {
  'use strict';
  /* jshint maxlen: false */
  /**
 * @ngdoc module
 * @name ngAnimate
 * @description
 *
 * The `ngAnimate` module provides support for JavaScript, CSS3 transition and CSS3 keyframe animation hooks within existing core and custom directives.
 *
 * <div doc-module-components="ngAnimate"></div>
 *
 * # Usage
 *
 * To see animations in action, all that is required is to define the appropriate CSS classes
 * or to register a JavaScript animation via the `myModule.animation()` function. The directives that support animation automatically are:
 * `ngRepeat`, `ngInclude`, `ngIf`, `ngSwitch`, `ngShow`, `ngHide`, `ngView` and `ngClass`. Custom directives can take advantage of animation
 * by using the `$animate` service.
 *
 * Below is a more detailed breakdown of the supported animation events provided by pre-existing ng directives:
 *
 * | Directive                                                                                                | Supported Animations                                                     |
 * |----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------|
 * | {@link ng.directive:ngRepeat#animations ngRepeat}                                                        | enter, leave and move                                                    |
 * | {@link ngRoute.directive:ngView#animations ngView}                                                       | enter and leave                                                          |
 * | {@link ng.directive:ngInclude#animations ngInclude}                                                      | enter and leave                                                          |
 * | {@link ng.directive:ngSwitch#animations ngSwitch}                                                        | enter and leave                                                          |
 * | {@link ng.directive:ngIf#animations ngIf}                                                                | enter and leave                                                          |
 * | {@link ng.directive:ngClass#animations ngClass}                                                          | add and remove (the CSS class(es) present)                               |
 * | {@link ng.directive:ngShow#animations ngShow} & {@link ng.directive:ngHide#animations ngHide}            | add and remove (the ng-hide class value)                                 |
 * | {@link ng.directive:form#animation-hooks form} & {@link ng.directive:ngModel#animation-hooks ngModel}    | add and remove (dirty, pristine, valid, invalid & all other validations) |
 * | {@link module:ngMessages#animations ngMessages}                                                          | add and remove (ng-active & ng-inactive)                                 |
 * | {@link module:ngMessages#animations ngMessage}                                                           | enter and leave                                                          |
 *
 * You can find out more information about animations upon visiting each directive page.
 *
 * Below is an example of how to apply animations to a directive that supports animation hooks:
 *
 * ```html
 * <style type="text/css">
 * .slide.ng-enter, .slide.ng-leave {
 *   -webkit-transition:0.5s linear all;
 *   transition:0.5s linear all;
 * }
 *
 * .slide.ng-enter { }        /&#42; starting animations for enter &#42;/
 * .slide.ng-enter.ng-enter-active { } /&#42; terminal animations for enter &#42;/
 * .slide.ng-leave { }        /&#42; starting animations for leave &#42;/
 * .slide.ng-leave.ng-leave-active { } /&#42; terminal animations for leave &#42;/
 * </style>
 *
 * <!--
 * the animate service will automatically add .ng-enter and .ng-leave to the element
 * to trigger the CSS transition/animations
 * -->
 * <ANY class="slide" ng-include="..."></ANY>
 * ```
 *
 * Keep in mind that, by default, if an animation is running, any child elements cannot be animated
 * until the parent element's animation has completed. This blocking feature can be overridden by
 * placing the `ng-animate-children` attribute on a parent container tag.
 *
 * ```html
 * <div class="slide-animation" ng-if="on" ng-animate-children>
 *   <div class="fade-animation" ng-if="on">
 *     <div class="explode-animation" ng-if="on">
 *        ...
 *     </div>
 *   </div>
 * </div>
 * ```
 *
 * When the `on` expression value changes and an animation is triggered then each of the elements within
 * will all animate without the block being applied to child elements.
 *
 * ## Are animations run when the application starts?
 * No they are not. When an application is bootstrapped Angular will disable animations from running to avoid
 * a frenzy of animations from being triggered as soon as the browser has rendered the screen. For this to work,
 * Angular will wait for two digest cycles until enabling animations. From there on, any animation-triggering
 * layout changes in the application will trigger animations as normal.
 *
 * In addition, upon bootstrap, if the routing system or any directives or load remote data (via $http) then Angular
 * will automatically extend the wait time to enable animations once **all** of the outbound HTTP requests
 * are complete.
 *
 * ## CSS-defined Animations
 * The animate service will automatically apply two CSS classes to the animated element and these two CSS classes
 * are designed to contain the start and end CSS styling. Both CSS transitions and keyframe animations are supported
 * and can be used to play along with this naming structure.
 *
 * The following code below demonstrates how to perform animations using **CSS transitions** with Angular:
 *
 * ```html
 * <style type="text/css">
 * /&#42;
 *  The animate class is apart of the element and the ng-enter class
 *  is attached to the element once the enter animation event is triggered
 * &#42;/
 * .reveal-animation.ng-enter {
 *  -webkit-transition: 1s linear all; /&#42; Safari/Chrome &#42;/
 *  transition: 1s linear all; /&#42; All other modern browsers and IE10+ &#42;/
 *
 *  /&#42; The animation preparation code &#42;/
 *  opacity: 0;
 * }
 *
 * /&#42;
 *  Keep in mind that you want to combine both CSS
 *  classes together to avoid any CSS-specificity
 *  conflicts
 * &#42;/
 * .reveal-animation.ng-enter.ng-enter-active {
 *  /&#42; The animation code itself &#42;/
 *  opacity: 1;
 * }
 * </style>
 *
 * <div class="view-container">
 *   <div ng-view class="reveal-animation"></div>
 * </div>
 * ```
 *
 * The following code below demonstrates how to perform animations using **CSS animations** with Angular:
 *
 * ```html
 * <style type="text/css">
 * .reveal-animation.ng-enter {
 *   -webkit-animation: enter_sequence 1s linear; /&#42; Safari/Chrome &#42;/
 *   animation: enter_sequence 1s linear; /&#42; IE10+ and Future Browsers &#42;/
 * }
 * @-webkit-keyframes enter_sequence {
 *   from { opacity:0; }
 *   to { opacity:1; }
 * }
 * @keyframes enter_sequence {
 *   from { opacity:0; }
 *   to { opacity:1; }
 * }
 * </style>
 *
 * <div class="view-container">
 *   <div ng-view class="reveal-animation"></div>
 * </div>
 * ```
 *
 * Both CSS3 animations and transitions can be used together and the animate service will figure out the correct duration and delay timing.
 *
 * Upon DOM mutation, the event class is added first (something like `ng-enter`), then the browser prepares itself to add
 * the active class (in this case `ng-enter-active`) which then triggers the animation. The animation module will automatically
 * detect the CSS code to determine when the animation ends. Once the animation is over then both CSS classes will be
 * removed from the DOM. If a browser does not support CSS transitions or CSS animations then the animation will start and end
 * immediately resulting in a DOM element that is at its final state. This final state is when the DOM element
 * has no CSS transition/animation classes applied to it.
 *
 * ### Structural transition animations
 *
 * Structural transitions (such as enter, leave and move) will always apply a `0s none` transition
 * value to force the browser into rendering the styles defined in the setup (`.ng-enter`, `.ng-leave`
 * or `.ng-move`) class. This means that any active transition animations operating on the element
 * will be cut off to make way for the enter, leave or move animation.
 *
 * ### Class-based transition animations
 *
 * Class-based transitions refer to transition animations that are triggered when a CSS class is
 * added to or removed from the element (via `$animate.addClass`, `$animate.removeClass`,
 * `$animate.setClass`, or by directives such as `ngClass`, `ngModel` and `form`).
 * They are different when compared to structural animations since they **do not cancel existing
 * animations** nor do they **block successive transitions** from rendering on the same element.
 * This distinction allows for **multiple class-based transitions** to be performed on the same element.
 *
 * In addition to ngAnimate supporting the default (natural) functionality of class-based transition
 * animations, ngAnimate also decorates the element with starting and ending CSS classes to aid the
 * developer in further styling the element throughout the transition animation. Earlier versions
 * of ngAnimate may have caused natural CSS transitions to break and not render properly due to
 * $animate temporarily blocking transitions using `0s none` in order to allow the setup CSS class
 * (the `-add` or `-remove` class) to be applied without triggering an animation. However, as of
 * **version 1.3**, this workaround has been removed with ngAnimate and all non-ngAnimate CSS
 * class transitions are compatible with ngAnimate.
 *
 * There is, however, one special case when dealing with class-based transitions in ngAnimate.
 * When rendering class-based transitions that make use of the setup and active CSS classes
 * (e.g. `.fade-add` and `.fade-add-active` for when `.fade` is added) be sure to define
 * the transition value **on the active CSS class** and not the setup class.
 *
 * ```css
 * .fade-add {
 *   /&#42; remember to place a 0s transition here
 *      to ensure that the styles are applied instantly
 *      even if the element already has a transition style &#42;/
 *   transition:0s linear all;
 *
 *   /&#42; starting CSS styles &#42;/
 *   opacity:1;
 * }
 * .fade-add.fade-add-active {
 *   /&#42; this will be the length of the animation &#42;/
 *   transition:1s linear all;
 *   opacity:0;
 * }
 * ```
 *
 * The setup CSS class (in this case `.fade-add`) also has a transition style property, however, it
 * has a duration of zero. This may not be required, however, incase the browser is unable to render
 * the styling present in this CSS class instantly then it could be that the browser is attempting
 * to perform an unnecessary transition.
 *
 * This workaround, however, does not apply to  standard class-based transitions that are rendered
 * when a CSS class containing a transition is applied to an element:
 *
 * ```css
 * /&#42; this works as expected &#42;/
 * .fade {
 *   transition:1s linear all;
 *   opacity:0;
 * }
 * ```
 *
 * Please keep this in mind when coding the CSS markup that will be used within class-based transitions.
 * Also, try not to mix the two class-based animation flavors together since the CSS code may become
 * overly complex.
 *
 *
 * ### Preventing Collisions With Third Party Libraries
 *
 * Some third-party frameworks place animation duration defaults across many element or className
 * selectors in order to make their code small and reuseable. This can lead to issues with ngAnimate, which
 * is expecting actual animations on these elements and has to wait for their completion.
 *
 * You can prevent this unwanted behavior by using a prefix on all your animation classes:
 *
 * ```css
 * /&#42; prefixed with animate- &#42;/
 * .animate-fade-add.animate-fade-add-active {
 *   transition:1s linear all;
 *   opacity:0;
 * }
 * ```
 *
 * You then configure `$animate` to enforce this prefix:
 *
 * ```js
 * $animateProvider.classNameFilter(/animate-/);
 * ```
 * </div>
 *
 * ### CSS Staggering Animations
 * A Staggering animation is a collection of animations that are issued with a slight delay in between each successive operation resulting in a
 * curtain-like effect. The ngAnimate module (versions >=1.2) supports staggering animations and the stagger effect can be
 * performed by creating a **ng-EVENT-stagger** CSS class and attaching that class to the base CSS class used for
 * the animation. The style property expected within the stagger class can either be a **transition-delay** or an
 * **animation-delay** property (or both if your animation contains both transitions and keyframe animations).
 *
 * ```css
 * .my-animation.ng-enter {
 *   /&#42; standard transition code &#42;/
 *   -webkit-transition: 1s linear all;
 *   transition: 1s linear all;
 *   opacity:0;
 * }
 * .my-animation.ng-enter-stagger {
 *   /&#42; this will have a 100ms delay between each successive leave animation &#42;/
 *   -webkit-transition-delay: 0.1s;
 *   transition-delay: 0.1s;
 *
 *   /&#42; in case the stagger doesn't work then these two values
 *    must be set to 0 to avoid an accidental CSS inheritance &#42;/
 *   -webkit-transition-duration: 0s;
 *   transition-duration: 0s;
 * }
 * .my-animation.ng-enter.ng-enter-active {
 *   /&#42; standard transition styles &#42;/
 *   opacity:1;
 * }
 * ```
 *
 * Staggering animations work by default in ngRepeat (so long as the CSS class is defined). Outside of ngRepeat, to use staggering animations
 * on your own, they can be triggered by firing multiple calls to the same event on $animate. However, the restrictions surrounding this
 * are that each of the elements must have the same CSS className value as well as the same parent element. A stagger operation
 * will also be reset if more than 10ms has passed after the last animation has been fired.
 *
 * The following code will issue the **ng-leave-stagger** event on the element provided:
 *
 * ```js
 * var kids = parent.children();
 *
 * $animate.leave(kids[0]); //stagger index=0
 * $animate.leave(kids[1]); //stagger index=1
 * $animate.leave(kids[2]); //stagger index=2
 * $animate.leave(kids[3]); //stagger index=3
 * $animate.leave(kids[4]); //stagger index=4
 *
 * $timeout(function() {
 *   //stagger has reset itself
 *   $animate.leave(kids[5]); //stagger index=0
 *   $animate.leave(kids[6]); //stagger index=1
 * }, 100, false);
 * ```
 *
 * Stagger animations are currently only supported within CSS-defined animations.
 *
 * ## JavaScript-defined Animations
 * In the event that you do not want to use CSS3 transitions or CSS3 animations or if you wish to offer animations on browsers that do not
 * yet support CSS transitions/animations, then you can make use of JavaScript animations defined inside of your AngularJS module.
 *
 * ```js
 * //!annotate="YourApp" Your AngularJS Module|Replace this or ngModule with the module that you used to define your application.
 * var ngModule = angular.module('YourApp', ['ngAnimate']);
 * ngModule.animation('.my-crazy-animation', function() {
 *   return {
 *     enter: function(element, done) {
 *       //run the animation here and call done when the animation is complete
 *       return function(cancelled) {
 *         //this (optional) function will be called when the animation
 *         //completes or when the animation is cancelled (the cancelled
 *         //flag will be set to true if cancelled).
 *       };
 *     },
 *     leave: function(element, done) { },
 *     move: function(element, done) { },
 *
 *     //animation that can be triggered before the class is added
 *     beforeAddClass: function(element, className, done) { },
 *
 *     //animation that can be triggered after the class is added
 *     addClass: function(element, className, done) { },
 *
 *     //animation that can be triggered before the class is removed
 *     beforeRemoveClass: function(element, className, done) { },
 *
 *     //animation that can be triggered after the class is removed
 *     removeClass: function(element, className, done) { }
 *   };
 * });
 * ```
 *
 * JavaScript-defined animations are created with a CSS-like class selector and a collection of events which are set to run
 * a javascript callback function. When an animation is triggered, $animate will look for a matching animation which fits
 * the element's CSS class attribute value and then run the matching animation event function (if found).
 * In other words, if the CSS classes present on the animated element match any of the JavaScript animations then the callback function will
 * be executed. It should be also noted that only simple, single class selectors are allowed (compound class selectors are not supported).
 *
 * Within a JavaScript animation, an object containing various event callback animation functions is expected to be returned.
 * As explained above, these callbacks are triggered based on the animation event. Therefore if an enter animation is run,
 * and the JavaScript animation is found, then the enter callback will handle that animation (in addition to the CSS keyframe animation
 * or transition code that is defined via a stylesheet).
 *
 *
 * ### Applying Directive-specific Styles to an Animation
 * In some cases a directive or service may want to provide `$animate` with extra details that the animation will
 * include into its animation. Let's say for example we wanted to render an animation that animates an element
 * towards the mouse coordinates as to where the user clicked last. By collecting the X/Y coordinates of the click
 * (via the event parameter) we can set the `top` and `left` styles into an object and pass that into our function
 * call to `$animate.addClass`.
 *
 * ```js
 * canvas.on('click', function(e) {
 *   $animate.addClass(element, 'on', {
 *     to: {
 *       left : e.client.x + 'px',
 *       top : e.client.y + 'px'
 *     }
 *   }):
 * });
 * ```
 *
 * Now when the animation runs, and a transition or keyframe animation is picked up, then the animation itself will
 * also include and transition the styling of the `left` and `top` properties into its running animation. If we want
 * to provide some starting animation values then we can do so by placing the starting animations styles into an object
 * called `from` in the same object as the `to` animations.
 *
 * ```js
 * canvas.on('click', function(e) {
 *   $animate.addClass(element, 'on', {
 *     from: {
 *        position: 'absolute',
 *        left: '0px',
 *        top: '0px'
 *     },
 *     to: {
 *       left : e.client.x + 'px',
 *       top : e.client.y + 'px'
 *     }
 *   }):
 * });
 * ```
 *
 * Once the animation is complete or cancelled then the union of both the before and after styles are applied to the
 * element. If `ngAnimate` is not present then the styles will be applied immediately.
 *
 */
  angular.module('ngAnimate', ['ng']).directive('ngAnimateChildren', function () {
    var NG_ANIMATE_CHILDREN = '$$ngAnimateChildren';
    return function (scope, element, attrs) {
      var val = attrs.ngAnimateChildren;
      if (angular.isString(val) && val.length === 0) {
        //empty attribute
        element.data(NG_ANIMATE_CHILDREN, true);
      } else {
        scope.$watch(val, function (value) {
          element.data(NG_ANIMATE_CHILDREN, !!value);
        });
      }
    };
  }).factory('$$animateReflow', [
    '$$rAF',
    '$document',
    function ($$rAF, $document) {
      var bod = $document[0].body;
      return function (fn) {
        //the returned function acts as the cancellation function
        return $$rAF(function () {
          //the line below will force the browser to perform a repaint
          //so that all the animated elements within the animation frame
          //will be properly updated and drawn on screen. This is
          //required to perform multi-class CSS based animations with
          //Firefox. DO NOT REMOVE THIS LINE.
          var a = bod.offsetWidth + 1;
          fn();
        });
      };
    }
  ]).config([
    '$provide',
    '$animateProvider',
    function ($provide, $animateProvider) {
      var noop = angular.noop;
      var forEach = angular.forEach;
      var selectors = $animateProvider.$$selectors;
      var isArray = angular.isArray;
      var isString = angular.isString;
      var isObject = angular.isObject;
      var ELEMENT_NODE = 1;
      var NG_ANIMATE_STATE = '$$ngAnimateState';
      var NG_ANIMATE_CHILDREN = '$$ngAnimateChildren';
      var NG_ANIMATE_CLASS_NAME = 'ng-animate';
      var rootAnimateState = { running: true };
      function extractElementNode(element) {
        for (var i = 0; i < element.length; i++) {
          var elm = element[i];
          if (elm.nodeType == ELEMENT_NODE) {
            return elm;
          }
        }
      }
      function prepareElement(element) {
        return element && angular.element(element);
      }
      function stripCommentsFromElement(element) {
        return angular.element(extractElementNode(element));
      }
      function isMatchingElement(elm1, elm2) {
        return extractElementNode(elm1) == extractElementNode(elm2);
      }
      var $$jqLite;
      $provide.decorator('$animate', [
        '$delegate',
        '$$q',
        '$injector',
        '$sniffer',
        '$rootElement',
        '$$asyncCallback',
        '$rootScope',
        '$document',
        '$templateRequest',
        '$$jqLite',
        function ($delegate, $$q, $injector, $sniffer, $rootElement, $$asyncCallback, $rootScope, $document, $templateRequest, $$$jqLite) {
          $$jqLite = $$$jqLite;
          $rootElement.data(NG_ANIMATE_STATE, rootAnimateState);
          // Wait until all directive and route-related templates are downloaded and
          // compiled. The $templateRequest.totalPendingRequests variable keeps track of
          // all of the remote templates being currently downloaded. If there are no
          // templates currently downloading then the watcher will still fire anyway.
          var deregisterWatch = $rootScope.$watch(function () {
              return $templateRequest.totalPendingRequests;
            }, function (val, oldVal) {
              if (val !== 0)
                return;
              deregisterWatch();
              // Now that all templates have been downloaded, $animate will wait until
              // the post digest queue is empty before enabling animations. By having two
              // calls to $postDigest calls we can ensure that the flag is enabled at the
              // very end of the post digest queue. Since all of the animations in $animate
              // use $postDigest, it's important that the code below executes at the end.
              // This basically means that the page is fully downloaded and compiled before
              // any animations are triggered.
              $rootScope.$$postDigest(function () {
                $rootScope.$$postDigest(function () {
                  rootAnimateState.running = false;
                });
              });
            });
          var globalAnimationCounter = 0;
          var classNameFilter = $animateProvider.classNameFilter();
          var isAnimatableClassName = !classNameFilter ? function () {
              return true;
            } : function (className) {
              return classNameFilter.test(className);
            };
          function classBasedAnimationsBlocked(element, setter) {
            var data = element.data(NG_ANIMATE_STATE) || {};
            if (setter) {
              data.running = true;
              data.structural = true;
              element.data(NG_ANIMATE_STATE, data);
            }
            return data.disabled || data.running && data.structural;
          }
          function runAnimationPostDigest(fn) {
            var cancelFn, defer = $$q.defer();
            defer.promise.$$cancelFn = function () {
              cancelFn && cancelFn();
            };
            $rootScope.$$postDigest(function () {
              cancelFn = fn(function () {
                defer.resolve();
              });
            });
            return defer.promise;
          }
          function parseAnimateOptions(options) {
            // some plugin code may still be passing in the callback
            // function as the last param for the $animate methods so
            // it's best to only allow string or array values for now
            if (isObject(options)) {
              if (options.tempClasses && isString(options.tempClasses)) {
                options.tempClasses = options.tempClasses.split(/\s+/);
              }
              return options;
            }
          }
          function resolveElementClasses(element, cache, runningAnimations) {
            runningAnimations = runningAnimations || {};
            var lookup = {};
            forEach(runningAnimations, function (data, selector) {
              forEach(selector.split(' '), function (s) {
                lookup[s] = data;
              });
            });
            var hasClasses = Object.create(null);
            forEach((element.attr('class') || '').split(/\s+/), function (className) {
              hasClasses[className] = true;
            });
            var toAdd = [], toRemove = [];
            forEach(cache && cache.classes || [], function (status, className) {
              var hasClass = hasClasses[className];
              var matchingAnimation = lookup[className] || {};
              // When addClass and removeClass is called then $animate will check to
              // see if addClass and removeClass cancel each other out. When there are
              // more calls to removeClass than addClass then the count falls below 0
              // and then the removeClass animation will be allowed. Otherwise if the
              // count is above 0 then that means an addClass animation will commence.
              // Once an animation is allowed then the code will also check to see if
              // there exists any on-going animation that is already adding or remvoing
              // the matching CSS class.
              if (status === false) {
                //does it have the class or will it have the class
                if (hasClass || matchingAnimation.event == 'addClass') {
                  toRemove.push(className);
                }
              } else if (status === true) {
                //is the class missing or will it be removed?
                if (!hasClass || matchingAnimation.event == 'removeClass') {
                  toAdd.push(className);
                }
              }
            });
            return toAdd.length + toRemove.length > 0 && [
              toAdd.join(' '),
              toRemove.join(' ')
            ];
          }
          function lookup(name) {
            if (name) {
              var matches = [], flagMap = {}, classes = name.substr(1).split('.');
              //the empty string value is the default animation
              //operation which performs CSS transition and keyframe
              //animations sniffing. This is always included for each
              //element animation procedure if the browser supports
              //transitions and/or keyframe animations. The default
              //animation is added to the top of the list to prevent
              //any previous animations from affecting the element styling
              //prior to the element being animated.
              if ($sniffer.transitions || $sniffer.animations) {
                matches.push($injector.get(selectors['']));
              }
              for (var i = 0; i < classes.length; i++) {
                var klass = classes[i], selectorFactoryName = selectors[klass];
                if (selectorFactoryName && !flagMap[klass]) {
                  matches.push($injector.get(selectorFactoryName));
                  flagMap[klass] = true;
                }
              }
              return matches;
            }
          }
          function animationRunner(element, animationEvent, className, options) {
            //transcluded directives may sometimes fire an animation using only comment nodes
            //best to catch this early on to prevent any animation operations from occurring
            var node = element[0];
            if (!node) {
              return;
            }
            if (options) {
              options.to = options.to || {};
              options.from = options.from || {};
            }
            var classNameAdd;
            var classNameRemove;
            if (isArray(className)) {
              classNameAdd = className[0];
              classNameRemove = className[1];
              if (!classNameAdd) {
                className = classNameRemove;
                animationEvent = 'removeClass';
              } else if (!classNameRemove) {
                className = classNameAdd;
                animationEvent = 'addClass';
              } else {
                className = classNameAdd + ' ' + classNameRemove;
              }
            }
            var isSetClassOperation = animationEvent == 'setClass';
            var isClassBased = isSetClassOperation || animationEvent == 'addClass' || animationEvent == 'removeClass' || animationEvent == 'animate';
            var currentClassName = element.attr('class');
            var classes = currentClassName + ' ' + className;
            if (!isAnimatableClassName(classes)) {
              return;
            }
            var beforeComplete = noop, beforeCancel = [], before = [], afterComplete = noop, afterCancel = [], after = [];
            var animationLookup = (' ' + classes).replace(/\s+/g, '.');
            forEach(lookup(animationLookup), function (animationFactory) {
              var created = registerAnimation(animationFactory, animationEvent);
              if (!created && isSetClassOperation) {
                registerAnimation(animationFactory, 'addClass');
                registerAnimation(animationFactory, 'removeClass');
              }
            });
            function registerAnimation(animationFactory, event) {
              var afterFn = animationFactory[event];
              var beforeFn = animationFactory['before' + event.charAt(0).toUpperCase() + event.substr(1)];
              if (afterFn || beforeFn) {
                if (event == 'leave') {
                  beforeFn = afterFn;
                  //when set as null then animation knows to skip this phase
                  afterFn = null;
                }
                after.push({
                  event: event,
                  fn: afterFn
                });
                before.push({
                  event: event,
                  fn: beforeFn
                });
                return true;
              }
            }
            function run(fns, cancellations, allCompleteFn) {
              var animations = [];
              forEach(fns, function (animation) {
                animation.fn && animations.push(animation);
              });
              var count = 0;
              function afterAnimationComplete(index) {
                if (cancellations) {
                  (cancellations[index] || noop)();
                  if (++count < animations.length)
                    return;
                  cancellations = null;
                }
                allCompleteFn();
              }
              //The code below adds directly to the array in order to work with
              //both sync and async animations. Sync animations are when the done()
              //operation is called right away. DO NOT REFACTOR!
              forEach(animations, function (animation, index) {
                var progress = function () {
                  afterAnimationComplete(index);
                };
                switch (animation.event) {
                case 'setClass':
                  cancellations.push(animation.fn(element, classNameAdd, classNameRemove, progress, options));
                  break;
                case 'animate':
                  cancellations.push(animation.fn(element, className, options.from, options.to, progress));
                  break;
                case 'addClass':
                  cancellations.push(animation.fn(element, classNameAdd || className, progress, options));
                  break;
                case 'removeClass':
                  cancellations.push(animation.fn(element, classNameRemove || className, progress, options));
                  break;
                default:
                  cancellations.push(animation.fn(element, progress, options));
                  break;
                }
              });
              if (cancellations && cancellations.length === 0) {
                allCompleteFn();
              }
            }
            return {
              node: node,
              event: animationEvent,
              className: className,
              isClassBased: isClassBased,
              isSetClassOperation: isSetClassOperation,
              applyStyles: function () {
                if (options) {
                  element.css(angular.extend(options.from || {}, options.to || {}));
                }
              },
              before: function (allCompleteFn) {
                beforeComplete = allCompleteFn;
                run(before, beforeCancel, function () {
                  beforeComplete = noop;
                  allCompleteFn();
                });
              },
              after: function (allCompleteFn) {
                afterComplete = allCompleteFn;
                run(after, afterCancel, function () {
                  afterComplete = noop;
                  allCompleteFn();
                });
              },
              cancel: function () {
                if (beforeCancel) {
                  forEach(beforeCancel, function (cancelFn) {
                    (cancelFn || noop)(true);
                  });
                  beforeComplete(true);
                }
                if (afterCancel) {
                  forEach(afterCancel, function (cancelFn) {
                    (cancelFn || noop)(true);
                  });
                  afterComplete(true);
                }
              }
            };
          }
          /**
       * @ngdoc service
       * @name $animate
       * @kind object
       *
       * @description
       * The `$animate` service provides animation detection support while performing DOM operations (enter, leave and move) as well as during addClass and removeClass operations.
       * When any of these operations are run, the $animate service
       * will examine any JavaScript-defined animations (which are defined by using the $animateProvider provider object)
       * as well as any CSS-defined animations against the CSS classes present on the element once the DOM operation is run.
       *
       * The `$animate` service is used behind the scenes with pre-existing directives and animation with these directives
       * will work out of the box without any extra configuration.
       *
       * Requires the {@link ngAnimate `ngAnimate`} module to be installed.
       *
       * Please visit the {@link ngAnimate `ngAnimate`} module overview page learn more about how to use animations in your application.
       * ## Callback Promises
       * With AngularJS 1.3, each of the animation methods, on the `$animate` service, return a promise when called. The
       * promise itself is then resolved once the animation has completed itself, has been cancelled or has been
       * skipped due to animations being disabled. (Note that even if the animation is cancelled it will still
       * call the resolve function of the animation.)
       *
       * ```js
       * $animate.enter(element, container).then(function() {
       *   //...this is called once the animation is complete...
       * });
       * ```
       *
       * Also note that, due to the nature of the callback promise, if any Angular-specific code (like changing the scope,
       * location of the page, etc...) is executed within the callback promise then be sure to wrap the code using
       * `$scope.$apply(...)`;
       *
       * ```js
       * $animate.leave(element).then(function() {
       *   $scope.$apply(function() {
       *     $location.path('/new-page');
       *   });
       * });
       * ```
       *
       * An animation can also be cancelled by calling the `$animate.cancel(promise)` method with the provided
       * promise that was returned when the animation was started.
       *
       * ```js
       * var promise = $animate.addClass(element, 'super-long-animation');
       * promise.then(function() {
       *   //this will still be called even if cancelled
       * });
       *
       * element.on('click', function() {
       *   //tooo lazy to wait for the animation to end
       *   $animate.cancel(promise);
       * });
       * ```
       *
       * (Keep in mind that the promise cancellation is unique to `$animate` since promises in
       * general cannot be cancelled.)
       *
       */
          return {
            animate: function (element, from, to, className, options) {
              className = className || 'ng-inline-animate';
              options = parseAnimateOptions(options) || {};
              options.from = to ? from : null;
              options.to = to ? to : from;
              return runAnimationPostDigest(function (done) {
                return performAnimation('animate', className, stripCommentsFromElement(element), null, null, noop, options, done);
              });
            },
            enter: function (element, parentElement, afterElement, options) {
              options = parseAnimateOptions(options);
              element = angular.element(element);
              parentElement = prepareElement(parentElement);
              afterElement = prepareElement(afterElement);
              classBasedAnimationsBlocked(element, true);
              $delegate.enter(element, parentElement, afterElement);
              return runAnimationPostDigest(function (done) {
                return performAnimation('enter', 'ng-enter', stripCommentsFromElement(element), parentElement, afterElement, noop, options, done);
              });
            },
            leave: function (element, options) {
              options = parseAnimateOptions(options);
              element = angular.element(element);
              cancelChildAnimations(element);
              classBasedAnimationsBlocked(element, true);
              return runAnimationPostDigest(function (done) {
                return performAnimation('leave', 'ng-leave', stripCommentsFromElement(element), null, null, function () {
                  $delegate.leave(element);
                }, options, done);
              });
            },
            move: function (element, parentElement, afterElement, options) {
              options = parseAnimateOptions(options);
              element = angular.element(element);
              parentElement = prepareElement(parentElement);
              afterElement = prepareElement(afterElement);
              cancelChildAnimations(element);
              classBasedAnimationsBlocked(element, true);
              $delegate.move(element, parentElement, afterElement);
              return runAnimationPostDigest(function (done) {
                return performAnimation('move', 'ng-move', stripCommentsFromElement(element), parentElement, afterElement, noop, options, done);
              });
            },
            addClass: function (element, className, options) {
              return this.setClass(element, className, [], options);
            },
            removeClass: function (element, className, options) {
              return this.setClass(element, [], className, options);
            },
            setClass: function (element, add, remove, options) {
              options = parseAnimateOptions(options);
              var STORAGE_KEY = '$$animateClasses';
              element = angular.element(element);
              element = stripCommentsFromElement(element);
              if (classBasedAnimationsBlocked(element)) {
                return $delegate.$$setClassImmediately(element, add, remove, options);
              }
              // we're using a combined array for both the add and remove
              // operations since the ORDER OF addClass and removeClass matters
              var classes, cache = element.data(STORAGE_KEY);
              var hasCache = !!cache;
              if (!cache) {
                cache = {};
                cache.classes = {};
              }
              classes = cache.classes;
              add = isArray(add) ? add : add.split(' ');
              forEach(add, function (c) {
                if (c && c.length) {
                  classes[c] = true;
                }
              });
              remove = isArray(remove) ? remove : remove.split(' ');
              forEach(remove, function (c) {
                if (c && c.length) {
                  classes[c] = false;
                }
              });
              if (hasCache) {
                if (options && cache.options) {
                  cache.options = angular.extend(cache.options || {}, options);
                }
                //the digest cycle will combine all the animations into one function
                return cache.promise;
              } else {
                element.data(STORAGE_KEY, cache = {
                  classes: classes,
                  options: options
                });
              }
              return cache.promise = runAnimationPostDigest(function (done) {
                var parentElement = element.parent();
                var elementNode = extractElementNode(element);
                var parentNode = elementNode.parentNode;
                // TODO(matsko): move this code into the animationsDisabled() function once #8092 is fixed
                if (!parentNode || parentNode['$$NG_REMOVED'] || elementNode['$$NG_REMOVED']) {
                  done();
                  return;
                }
                var cache = element.data(STORAGE_KEY);
                element.removeData(STORAGE_KEY);
                var state = element.data(NG_ANIMATE_STATE) || {};
                var classes = resolveElementClasses(element, cache, state.active);
                return !classes ? done() : performAnimation('setClass', classes, element, parentElement, null, function () {
                  if (classes[0])
                    $delegate.$$addClassImmediately(element, classes[0]);
                  if (classes[1])
                    $delegate.$$removeClassImmediately(element, classes[1]);
                }, cache.options, done);
              });
            },
            cancel: function (promise) {
              promise.$$cancelFn();
            },
            enabled: function (value, element) {
              switch (arguments.length) {
              case 2:
                if (value) {
                  cleanup(element);
                } else {
                  var data = element.data(NG_ANIMATE_STATE) || {};
                  data.disabled = true;
                  element.data(NG_ANIMATE_STATE, data);
                }
                break;
              case 1:
                rootAnimateState.disabled = !value;
                break;
              default:
                value = !rootAnimateState.disabled;
                break;
              }
              return !!value;
            }
          };
          /*
        all animations call this shared animation triggering function internally.
        The animationEvent variable refers to the JavaScript animation event that will be triggered
        and the className value is the name of the animation that will be applied within the
        CSS code. Element, `parentElement` and `afterElement` are provided DOM elements for the animation
        and the onComplete callback will be fired once the animation is fully complete.
      */
          function performAnimation(animationEvent, className, element, parentElement, afterElement, domOperation, options, doneCallback) {
            var noopCancel = noop;
            var runner = animationRunner(element, animationEvent, className, options);
            if (!runner) {
              fireDOMOperation();
              fireBeforeCallbackAsync();
              fireAfterCallbackAsync();
              closeAnimation();
              return noopCancel;
            }
            animationEvent = runner.event;
            className = runner.className;
            var elementEvents = angular.element._data(runner.node);
            elementEvents = elementEvents && elementEvents.events;
            if (!parentElement) {
              parentElement = afterElement ? afterElement.parent() : element.parent();
            }
            //skip the animation if animations are disabled, a parent is already being animated,
            //the element is not currently attached to the document body or then completely close
            //the animation if any matching animations are not found at all.
            //NOTE: IE8 + IE9 should close properly (run closeAnimation()) in case an animation was found.
            if (animationsDisabled(element, parentElement)) {
              fireDOMOperation();
              fireBeforeCallbackAsync();
              fireAfterCallbackAsync();
              closeAnimation();
              return noopCancel;
            }
            var ngAnimateState = element.data(NG_ANIMATE_STATE) || {};
            var runningAnimations = ngAnimateState.active || {};
            var totalActiveAnimations = ngAnimateState.totalActive || 0;
            var lastAnimation = ngAnimateState.last;
            var skipAnimation = false;
            if (totalActiveAnimations > 0) {
              var animationsToCancel = [];
              if (!runner.isClassBased) {
                if (animationEvent == 'leave' && runningAnimations['ng-leave']) {
                  skipAnimation = true;
                } else {
                  //cancel all animations when a structural animation takes place
                  for (var klass in runningAnimations) {
                    animationsToCancel.push(runningAnimations[klass]);
                  }
                  ngAnimateState = {};
                  cleanup(element, true);
                }
              } else if (lastAnimation.event == 'setClass') {
                animationsToCancel.push(lastAnimation);
                cleanup(element, className);
              } else if (runningAnimations[className]) {
                var current = runningAnimations[className];
                if (current.event == animationEvent) {
                  skipAnimation = true;
                } else {
                  animationsToCancel.push(current);
                  cleanup(element, className);
                }
              }
              if (animationsToCancel.length > 0) {
                forEach(animationsToCancel, function (operation) {
                  operation.cancel();
                });
              }
            }
            if (runner.isClassBased && !runner.isSetClassOperation && animationEvent != 'animate' && !skipAnimation) {
              skipAnimation = animationEvent == 'addClass' == element.hasClass(className);  //opposite of XOR
            }
            if (skipAnimation) {
              fireDOMOperation();
              fireBeforeCallbackAsync();
              fireAfterCallbackAsync();
              fireDoneCallbackAsync();
              return noopCancel;
            }
            runningAnimations = ngAnimateState.active || {};
            totalActiveAnimations = ngAnimateState.totalActive || 0;
            if (animationEvent == 'leave') {
              //there's no need to ever remove the listener since the element
              //will be removed (destroyed) after the leave animation ends or
              //is cancelled midway
              element.one('$destroy', function (e) {
                var element = angular.element(this);
                var state = element.data(NG_ANIMATE_STATE);
                if (state) {
                  var activeLeaveAnimation = state.active['ng-leave'];
                  if (activeLeaveAnimation) {
                    activeLeaveAnimation.cancel();
                    cleanup(element, 'ng-leave');
                  }
                }
              });
            }
            //the ng-animate class does nothing, but it's here to allow for
            //parent animations to find and cancel child animations when needed
            $$jqLite.addClass(element, NG_ANIMATE_CLASS_NAME);
            if (options && options.tempClasses) {
              forEach(options.tempClasses, function (className) {
                $$jqLite.addClass(element, className);
              });
            }
            var localAnimationCount = globalAnimationCounter++;
            totalActiveAnimations++;
            runningAnimations[className] = runner;
            element.data(NG_ANIMATE_STATE, {
              last: runner,
              active: runningAnimations,
              index: localAnimationCount,
              totalActive: totalActiveAnimations
            });
            //first we run the before animations and when all of those are complete
            //then we perform the DOM operation and run the next set of animations
            fireBeforeCallbackAsync();
            runner.before(function (cancelled) {
              var data = element.data(NG_ANIMATE_STATE);
              cancelled = cancelled || !data || !data.active[className] || runner.isClassBased && data.active[className].event != animationEvent;
              fireDOMOperation();
              if (cancelled === true) {
                closeAnimation();
              } else {
                fireAfterCallbackAsync();
                runner.after(closeAnimation);
              }
            });
            return runner.cancel;
            function fireDOMCallback(animationPhase) {
              var eventName = '$animate:' + animationPhase;
              if (elementEvents && elementEvents[eventName] && elementEvents[eventName].length > 0) {
                $$asyncCallback(function () {
                  element.triggerHandler(eventName, {
                    event: animationEvent,
                    className: className
                  });
                });
              }
            }
            function fireBeforeCallbackAsync() {
              fireDOMCallback('before');
            }
            function fireAfterCallbackAsync() {
              fireDOMCallback('after');
            }
            function fireDoneCallbackAsync() {
              fireDOMCallback('close');
              doneCallback();
            }
            //it is less complicated to use a flag than managing and canceling
            //timeouts containing multiple callbacks.
            function fireDOMOperation() {
              if (!fireDOMOperation.hasBeenRun) {
                fireDOMOperation.hasBeenRun = true;
                domOperation();
              }
            }
            function closeAnimation() {
              if (!closeAnimation.hasBeenRun) {
                if (runner) {
                  //the runner doesn't exist if it fails to instantiate
                  runner.applyStyles();
                }
                closeAnimation.hasBeenRun = true;
                if (options && options.tempClasses) {
                  forEach(options.tempClasses, function (className) {
                    $$jqLite.removeClass(element, className);
                  });
                }
                var data = element.data(NG_ANIMATE_STATE);
                if (data) {
                  /* only structural animations wait for reflow before removing an
                 animation, but class-based animations don't. An example of this
                 failing would be when a parent HTML tag has a ng-class attribute
                 causing ALL directives below to skip animations during the digest */
                  if (runner && runner.isClassBased) {
                    cleanup(element, className);
                  } else {
                    $$asyncCallback(function () {
                      var data = element.data(NG_ANIMATE_STATE) || {};
                      if (localAnimationCount == data.index) {
                        cleanup(element, className, animationEvent);
                      }
                    });
                    element.data(NG_ANIMATE_STATE, data);
                  }
                }
                fireDoneCallbackAsync();
              }
            }
          }
          function cancelChildAnimations(element) {
            var node = extractElementNode(element);
            if (node) {
              var nodes = angular.isFunction(node.getElementsByClassName) ? node.getElementsByClassName(NG_ANIMATE_CLASS_NAME) : node.querySelectorAll('.' + NG_ANIMATE_CLASS_NAME);
              forEach(nodes, function (element) {
                element = angular.element(element);
                var data = element.data(NG_ANIMATE_STATE);
                if (data && data.active) {
                  forEach(data.active, function (runner) {
                    runner.cancel();
                  });
                }
              });
            }
          }
          function cleanup(element, className) {
            if (isMatchingElement(element, $rootElement)) {
              if (!rootAnimateState.disabled) {
                rootAnimateState.running = false;
                rootAnimateState.structural = false;
              }
            } else if (className) {
              var data = element.data(NG_ANIMATE_STATE) || {};
              var removeAnimations = className === true;
              if (!removeAnimations && data.active && data.active[className]) {
                data.totalActive--;
                delete data.active[className];
              }
              if (removeAnimations || !data.totalActive) {
                $$jqLite.removeClass(element, NG_ANIMATE_CLASS_NAME);
                element.removeData(NG_ANIMATE_STATE);
              }
            }
          }
          function animationsDisabled(element, parentElement) {
            if (rootAnimateState.disabled) {
              return true;
            }
            if (isMatchingElement(element, $rootElement)) {
              return rootAnimateState.running;
            }
            var allowChildAnimations, parentRunningAnimation, hasParent;
            do {
              //the element did not reach the root element which means that it
              //is not apart of the DOM. Therefore there is no reason to do
              //any animations on it
              if (parentElement.length === 0)
                break;
              var isRoot = isMatchingElement(parentElement, $rootElement);
              var state = isRoot ? rootAnimateState : parentElement.data(NG_ANIMATE_STATE) || {};
              if (state.disabled) {
                return true;
              }
              //no matter what, for an animation to work it must reach the root element
              //this implies that the element is attached to the DOM when the animation is run
              if (isRoot) {
                hasParent = true;
              }
              //once a flag is found that is strictly false then everything before
              //it will be discarded and all child animations will be restricted
              if (allowChildAnimations !== false) {
                var animateChildrenFlag = parentElement.data(NG_ANIMATE_CHILDREN);
                if (angular.isDefined(animateChildrenFlag)) {
                  allowChildAnimations = animateChildrenFlag;
                }
              }
              parentRunningAnimation = parentRunningAnimation || state.running || state.last && !state.last.isClassBased;
            } while (parentElement = parentElement.parent());
            return !hasParent || !allowChildAnimations && parentRunningAnimation;
          }
        }
      ]);
      $animateProvider.register('', [
        '$window',
        '$sniffer',
        '$timeout',
        '$$animateReflow',
        function ($window, $sniffer, $timeout, $$animateReflow) {
          // Detect proper transitionend/animationend event names.
          var CSS_PREFIX = '', TRANSITION_PROP, TRANSITIONEND_EVENT, ANIMATION_PROP, ANIMATIONEND_EVENT;
          // If unprefixed events are not supported but webkit-prefixed are, use the latter.
          // Otherwise, just use W3C names, browsers not supporting them at all will just ignore them.
          // Note: Chrome implements `window.onwebkitanimationend` and doesn't implement `window.onanimationend`
          // but at the same time dispatches the `animationend` event and not `webkitAnimationEnd`.
          // Register both events in case `window.onanimationend` is not supported because of that,
          // do the same for `transitionend` as Safari is likely to exhibit similar behavior.
          // Also, the only modern browser that uses vendor prefixes for transitions/keyframes is webkit
          // therefore there is no reason to test anymore for other vendor prefixes: http://caniuse.com/#search=transition
          if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {
            CSS_PREFIX = '-webkit-';
            TRANSITION_PROP = 'WebkitTransition';
            TRANSITIONEND_EVENT = 'webkitTransitionEnd transitionend';
          } else {
            TRANSITION_PROP = 'transition';
            TRANSITIONEND_EVENT = 'transitionend';
          }
          if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {
            CSS_PREFIX = '-webkit-';
            ANIMATION_PROP = 'WebkitAnimation';
            ANIMATIONEND_EVENT = 'webkitAnimationEnd animationend';
          } else {
            ANIMATION_PROP = 'animation';
            ANIMATIONEND_EVENT = 'animationend';
          }
          var DURATION_KEY = 'Duration';
          var PROPERTY_KEY = 'Property';
          var DELAY_KEY = 'Delay';
          var ANIMATION_ITERATION_COUNT_KEY = 'IterationCount';
          var ANIMATION_PLAYSTATE_KEY = 'PlayState';
          var NG_ANIMATE_PARENT_KEY = '$$ngAnimateKey';
          var NG_ANIMATE_CSS_DATA_KEY = '$$ngAnimateCSS3Data';
          var ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;
          var CLOSING_TIME_BUFFER = 1.5;
          var ONE_SECOND = 1000;
          var lookupCache = {};
          var parentCounter = 0;
          var animationReflowQueue = [];
          var cancelAnimationReflow;
          function clearCacheAfterReflow() {
            if (!cancelAnimationReflow) {
              cancelAnimationReflow = $$animateReflow(function () {
                animationReflowQueue = [];
                cancelAnimationReflow = null;
                lookupCache = {};
              });
            }
          }
          function afterReflow(element, callback) {
            if (cancelAnimationReflow) {
              cancelAnimationReflow();
            }
            animationReflowQueue.push(callback);
            cancelAnimationReflow = $$animateReflow(function () {
              forEach(animationReflowQueue, function (fn) {
                fn();
              });
              animationReflowQueue = [];
              cancelAnimationReflow = null;
              lookupCache = {};
            });
          }
          var closingTimer = null;
          var closingTimestamp = 0;
          var animationElementQueue = [];
          function animationCloseHandler(element, totalTime) {
            var node = extractElementNode(element);
            element = angular.element(node);
            //this item will be garbage collected by the closing
            //animation timeout
            animationElementQueue.push(element);
            //but it may not need to cancel out the existing timeout
            //if the timestamp is less than the previous one
            var futureTimestamp = Date.now() + totalTime;
            if (futureTimestamp <= closingTimestamp) {
              return;
            }
            $timeout.cancel(closingTimer);
            closingTimestamp = futureTimestamp;
            closingTimer = $timeout(function () {
              closeAllAnimations(animationElementQueue);
              animationElementQueue = [];
            }, totalTime, false);
          }
          function closeAllAnimations(elements) {
            forEach(elements, function (element) {
              var elementData = element.data(NG_ANIMATE_CSS_DATA_KEY);
              if (elementData) {
                forEach(elementData.closeAnimationFns, function (fn) {
                  fn();
                });
              }
            });
          }
          function getElementAnimationDetails(element, cacheKey) {
            var data = cacheKey ? lookupCache[cacheKey] : null;
            if (!data) {
              var transitionDuration = 0;
              var transitionDelay = 0;
              var animationDuration = 0;
              var animationDelay = 0;
              //we want all the styles defined before and after
              forEach(element, function (element) {
                if (element.nodeType == ELEMENT_NODE) {
                  var elementStyles = $window.getComputedStyle(element) || {};
                  var transitionDurationStyle = elementStyles[TRANSITION_PROP + DURATION_KEY];
                  transitionDuration = Math.max(parseMaxTime(transitionDurationStyle), transitionDuration);
                  var transitionDelayStyle = elementStyles[TRANSITION_PROP + DELAY_KEY];
                  transitionDelay = Math.max(parseMaxTime(transitionDelayStyle), transitionDelay);
                  var animationDelayStyle = elementStyles[ANIMATION_PROP + DELAY_KEY];
                  animationDelay = Math.max(parseMaxTime(elementStyles[ANIMATION_PROP + DELAY_KEY]), animationDelay);
                  var aDuration = parseMaxTime(elementStyles[ANIMATION_PROP + DURATION_KEY]);
                  if (aDuration > 0) {
                    aDuration *= parseInt(elementStyles[ANIMATION_PROP + ANIMATION_ITERATION_COUNT_KEY], 10) || 1;
                  }
                  animationDuration = Math.max(aDuration, animationDuration);
                }
              });
              data = {
                total: 0,
                transitionDelay: transitionDelay,
                transitionDuration: transitionDuration,
                animationDelay: animationDelay,
                animationDuration: animationDuration
              };
              if (cacheKey) {
                lookupCache[cacheKey] = data;
              }
            }
            return data;
          }
          function parseMaxTime(str) {
            var maxValue = 0;
            var values = isString(str) ? str.split(/\s*,\s*/) : [];
            forEach(values, function (value) {
              maxValue = Math.max(parseFloat(value) || 0, maxValue);
            });
            return maxValue;
          }
          function getCacheKey(element) {
            var parentElement = element.parent();
            var parentID = parentElement.data(NG_ANIMATE_PARENT_KEY);
            if (!parentID) {
              parentElement.data(NG_ANIMATE_PARENT_KEY, ++parentCounter);
              parentID = parentCounter;
            }
            return parentID + '-' + extractElementNode(element).getAttribute('class');
          }
          function animateSetup(animationEvent, element, className, styles) {
            var structural = [
                'ng-enter',
                'ng-leave',
                'ng-move'
              ].indexOf(className) >= 0;
            var cacheKey = getCacheKey(element);
            var eventCacheKey = cacheKey + ' ' + className;
            var itemIndex = lookupCache[eventCacheKey] ? ++lookupCache[eventCacheKey].total : 0;
            var stagger = {};
            if (itemIndex > 0) {
              var staggerClassName = className + '-stagger';
              var staggerCacheKey = cacheKey + ' ' + staggerClassName;
              var applyClasses = !lookupCache[staggerCacheKey];
              applyClasses && $$jqLite.addClass(element, staggerClassName);
              stagger = getElementAnimationDetails(element, staggerCacheKey);
              applyClasses && $$jqLite.removeClass(element, staggerClassName);
            }
            $$jqLite.addClass(element, className);
            var formerData = element.data(NG_ANIMATE_CSS_DATA_KEY) || {};
            var timings = getElementAnimationDetails(element, eventCacheKey);
            var transitionDuration = timings.transitionDuration;
            var animationDuration = timings.animationDuration;
            if (structural && transitionDuration === 0 && animationDuration === 0) {
              $$jqLite.removeClass(element, className);
              return false;
            }
            var blockTransition = styles || structural && transitionDuration > 0;
            var blockAnimation = animationDuration > 0 && stagger.animationDelay > 0 && stagger.animationDuration === 0;
            var closeAnimationFns = formerData.closeAnimationFns || [];
            element.data(NG_ANIMATE_CSS_DATA_KEY, {
              stagger: stagger,
              cacheKey: eventCacheKey,
              running: formerData.running || 0,
              itemIndex: itemIndex,
              blockTransition: blockTransition,
              closeAnimationFns: closeAnimationFns
            });
            var node = extractElementNode(element);
            if (blockTransition) {
              blockTransitions(node, true);
              if (styles) {
                element.css(styles);
              }
            }
            if (blockAnimation) {
              blockAnimations(node, true);
            }
            return true;
          }
          function animateRun(animationEvent, element, className, activeAnimationComplete, styles) {
            var node = extractElementNode(element);
            var elementData = element.data(NG_ANIMATE_CSS_DATA_KEY);
            if (node.getAttribute('class').indexOf(className) == -1 || !elementData) {
              activeAnimationComplete();
              return;
            }
            var activeClassName = '';
            var pendingClassName = '';
            forEach(className.split(' '), function (klass, i) {
              var prefix = (i > 0 ? ' ' : '') + klass;
              activeClassName += prefix + '-active';
              pendingClassName += prefix + '-pending';
            });
            var style = '';
            var appliedStyles = [];
            var itemIndex = elementData.itemIndex;
            var stagger = elementData.stagger;
            var staggerTime = 0;
            if (itemIndex > 0) {
              var transitionStaggerDelay = 0;
              if (stagger.transitionDelay > 0 && stagger.transitionDuration === 0) {
                transitionStaggerDelay = stagger.transitionDelay * itemIndex;
              }
              var animationStaggerDelay = 0;
              if (stagger.animationDelay > 0 && stagger.animationDuration === 0) {
                animationStaggerDelay = stagger.animationDelay * itemIndex;
                appliedStyles.push(CSS_PREFIX + 'animation-play-state');
              }
              staggerTime = Math.round(Math.max(transitionStaggerDelay, animationStaggerDelay) * 100) / 100;
            }
            if (!staggerTime) {
              $$jqLite.addClass(element, activeClassName);
              if (elementData.blockTransition) {
                blockTransitions(node, false);
              }
            }
            var eventCacheKey = elementData.cacheKey + ' ' + activeClassName;
            var timings = getElementAnimationDetails(element, eventCacheKey);
            var maxDuration = Math.max(timings.transitionDuration, timings.animationDuration);
            if (maxDuration === 0) {
              $$jqLite.removeClass(element, activeClassName);
              animateClose(element, className);
              activeAnimationComplete();
              return;
            }
            if (!staggerTime && styles) {
              if (!timings.transitionDuration) {
                element.css('transition', timings.animationDuration + 's linear all');
                appliedStyles.push('transition');
              }
              element.css(styles);
            }
            var maxDelay = Math.max(timings.transitionDelay, timings.animationDelay);
            var maxDelayTime = maxDelay * ONE_SECOND;
            if (appliedStyles.length > 0) {
              //the element being animated may sometimes contain comment nodes in
              //the jqLite object, so we're safe to use a single variable to house
              //the styles since there is always only one element being animated
              var oldStyle = node.getAttribute('style') || '';
              if (oldStyle.charAt(oldStyle.length - 1) !== ';') {
                oldStyle += ';';
              }
              node.setAttribute('style', oldStyle + ' ' + style);
            }
            var startTime = Date.now();
            var css3AnimationEvents = ANIMATIONEND_EVENT + ' ' + TRANSITIONEND_EVENT;
            var animationTime = (maxDelay + maxDuration) * CLOSING_TIME_BUFFER;
            var totalTime = (staggerTime + animationTime) * ONE_SECOND;
            var staggerTimeout;
            if (staggerTime > 0) {
              $$jqLite.addClass(element, pendingClassName);
              staggerTimeout = $timeout(function () {
                staggerTimeout = null;
                if (timings.transitionDuration > 0) {
                  blockTransitions(node, false);
                }
                if (timings.animationDuration > 0) {
                  blockAnimations(node, false);
                }
                $$jqLite.addClass(element, activeClassName);
                $$jqLite.removeClass(element, pendingClassName);
                if (styles) {
                  if (timings.transitionDuration === 0) {
                    element.css('transition', timings.animationDuration + 's linear all');
                  }
                  element.css(styles);
                  appliedStyles.push('transition');
                }
              }, staggerTime * ONE_SECOND, false);
            }
            element.on(css3AnimationEvents, onAnimationProgress);
            elementData.closeAnimationFns.push(function () {
              onEnd();
              activeAnimationComplete();
            });
            elementData.running++;
            animationCloseHandler(element, totalTime);
            return onEnd;
            // This will automatically be called by $animate so
            // there is no need to attach this internally to the
            // timeout done method.
            function onEnd() {
              element.off(css3AnimationEvents, onAnimationProgress);
              $$jqLite.removeClass(element, activeClassName);
              $$jqLite.removeClass(element, pendingClassName);
              if (staggerTimeout) {
                $timeout.cancel(staggerTimeout);
              }
              animateClose(element, className);
              var node = extractElementNode(element);
              for (var i in appliedStyles) {
                node.style.removeProperty(appliedStyles[i]);
              }
            }
            function onAnimationProgress(event) {
              event.stopPropagation();
              var ev = event.originalEvent || event;
              var timeStamp = ev.$manualTimeStamp || ev.timeStamp || Date.now();
              /* Firefox (or possibly just Gecko) likes to not round values up
           * when a ms measurement is used for the animation */
              var elapsedTime = parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));
              /* $manualTimeStamp is a mocked timeStamp value which is set
           * within browserTrigger(). This is only here so that tests can
           * mock animations properly. Real events fallback to event.timeStamp,
           * or, if they don't, then a timeStamp is automatically created for them.
           * We're checking to see if the timeStamp surpasses the expected delay,
           * but we're using elapsedTime instead of the timeStamp on the 2nd
           * pre-condition since animations sometimes close off early */
              if (Math.max(timeStamp - startTime, 0) >= maxDelayTime && elapsedTime >= maxDuration) {
                activeAnimationComplete();
              }
            }
          }
          function blockTransitions(node, bool) {
            node.style[TRANSITION_PROP + PROPERTY_KEY] = bool ? 'none' : '';
          }
          function blockAnimations(node, bool) {
            node.style[ANIMATION_PROP + ANIMATION_PLAYSTATE_KEY] = bool ? 'paused' : '';
          }
          function animateBefore(animationEvent, element, className, styles) {
            if (animateSetup(animationEvent, element, className, styles)) {
              return function (cancelled) {
                cancelled && animateClose(element, className);
              };
            }
          }
          function animateAfter(animationEvent, element, className, afterAnimationComplete, styles) {
            if (element.data(NG_ANIMATE_CSS_DATA_KEY)) {
              return animateRun(animationEvent, element, className, afterAnimationComplete, styles);
            } else {
              animateClose(element, className);
              afterAnimationComplete();
            }
          }
          function animate(animationEvent, element, className, animationComplete, options) {
            //If the animateSetup function doesn't bother returning a
            //cancellation function then it means that there is no animation
            //to perform at all
            var preReflowCancellation = animateBefore(animationEvent, element, className, options.from);
            if (!preReflowCancellation) {
              clearCacheAfterReflow();
              animationComplete();
              return;
            }
            //There are two cancellation functions: one is before the first
            //reflow animation and the second is during the active state
            //animation. The first function will take care of removing the
            //data from the element which will not make the 2nd animation
            //happen in the first place
            var cancel = preReflowCancellation;
            afterReflow(element, function () {
              //once the reflow is complete then we point cancel to
              //the new cancellation function which will remove all of the
              //animation properties from the active animation
              cancel = animateAfter(animationEvent, element, className, animationComplete, options.to);
            });
            return function (cancelled) {
              (cancel || noop)(cancelled);
            };
          }
          function animateClose(element, className) {
            $$jqLite.removeClass(element, className);
            var data = element.data(NG_ANIMATE_CSS_DATA_KEY);
            if (data) {
              if (data.running) {
                data.running--;
              }
              if (!data.running || data.running === 0) {
                element.removeData(NG_ANIMATE_CSS_DATA_KEY);
              }
            }
          }
          return {
            animate: function (element, className, from, to, animationCompleted, options) {
              options = options || {};
              options.from = from;
              options.to = to;
              return animate('animate', element, className, animationCompleted, options);
            },
            enter: function (element, animationCompleted, options) {
              options = options || {};
              return animate('enter', element, 'ng-enter', animationCompleted, options);
            },
            leave: function (element, animationCompleted, options) {
              options = options || {};
              return animate('leave', element, 'ng-leave', animationCompleted, options);
            },
            move: function (element, animationCompleted, options) {
              options = options || {};
              return animate('move', element, 'ng-move', animationCompleted, options);
            },
            beforeSetClass: function (element, add, remove, animationCompleted, options) {
              options = options || {};
              var className = suffixClasses(remove, '-remove') + ' ' + suffixClasses(add, '-add');
              var cancellationMethod = animateBefore('setClass', element, className, options.from);
              if (cancellationMethod) {
                afterReflow(element, animationCompleted);
                return cancellationMethod;
              }
              clearCacheAfterReflow();
              animationCompleted();
            },
            beforeAddClass: function (element, className, animationCompleted, options) {
              options = options || {};
              var cancellationMethod = animateBefore('addClass', element, suffixClasses(className, '-add'), options.from);
              if (cancellationMethod) {
                afterReflow(element, animationCompleted);
                return cancellationMethod;
              }
              clearCacheAfterReflow();
              animationCompleted();
            },
            beforeRemoveClass: function (element, className, animationCompleted, options) {
              options = options || {};
              var cancellationMethod = animateBefore('removeClass', element, suffixClasses(className, '-remove'), options.from);
              if (cancellationMethod) {
                afterReflow(element, animationCompleted);
                return cancellationMethod;
              }
              clearCacheAfterReflow();
              animationCompleted();
            },
            setClass: function (element, add, remove, animationCompleted, options) {
              options = options || {};
              remove = suffixClasses(remove, '-remove');
              add = suffixClasses(add, '-add');
              var className = remove + ' ' + add;
              return animateAfter('setClass', element, className, animationCompleted, options.to);
            },
            addClass: function (element, className, animationCompleted, options) {
              options = options || {};
              return animateAfter('addClass', element, suffixClasses(className, '-add'), animationCompleted, options.to);
            },
            removeClass: function (element, className, animationCompleted, options) {
              options = options || {};
              return animateAfter('removeClass', element, suffixClasses(className, '-remove'), animationCompleted, options.to);
            }
          };
          function suffixClasses(classes, suffix) {
            var className = '';
            classes = isArray(classes) ? classes : classes.split(/\s+/);
            forEach(classes, function (klass, i) {
              if (klass && klass.length > 0) {
                className += (i > 0 ? ' ' : '') + klass + suffix;
              }
            });
            return className;
          }
        }
      ]);
    }
  ]);
}(window, window.angular));
/**
 * State-based routing for AngularJS
 * @version v0.2.13
 * @link http://angular-ui.github.com/
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
/* commonjs package manager support (eg componentjs) */
if (typeof module !== 'undefined' && typeof exports !== 'undefined' && module.exports === exports) {
  module.exports = 'ui.router';
}
(function (window, angular, undefined) {
  /*jshint globalstrict:true*/
  /*global angular:false*/
  'use strict';
  var isDefined = angular.isDefined, isFunction = angular.isFunction, isString = angular.isString, isObject = angular.isObject, isArray = angular.isArray, forEach = angular.forEach, extend = angular.extend, copy = angular.copy;
  function inherit(parent, extra) {
    return extend(new (extend(function () {
    }, { prototype: parent }))(), extra);
  }
  function merge(dst) {
    forEach(arguments, function (obj) {
      if (obj !== dst) {
        forEach(obj, function (value, key) {
          if (!dst.hasOwnProperty(key))
            dst[key] = value;
        });
      }
    });
    return dst;
  }
  /**
 * Finds the common ancestor path between two states.
 *
 * @param {Object} first The first state.
 * @param {Object} second The second state.
 * @return {Array} Returns an array of state names in descending order, not including the root.
 */
  function ancestors(first, second) {
    var path = [];
    for (var n in first.path) {
      if (first.path[n] !== second.path[n])
        break;
      path.push(first.path[n]);
    }
    return path;
  }
  /**
 * IE8-safe wrapper for `Object.keys()`.
 *
 * @param {Object} object A JavaScript object.
 * @return {Array} Returns the keys of the object as an array.
 */
  function objectKeys(object) {
    if (Object.keys) {
      return Object.keys(object);
    }
    var result = [];
    angular.forEach(object, function (val, key) {
      result.push(key);
    });
    return result;
  }
  /**
 * IE8-safe wrapper for `Array.prototype.indexOf()`.
 *
 * @param {Array} array A JavaScript array.
 * @param {*} value A value to search the array for.
 * @return {Number} Returns the array index value of `value`, or `-1` if not present.
 */
  function indexOf(array, value) {
    if (Array.prototype.indexOf) {
      return array.indexOf(value, Number(arguments[2]) || 0);
    }
    var len = array.length >>> 0, from = Number(arguments[2]) || 0;
    from = from < 0 ? Math.ceil(from) : Math.floor(from);
    if (from < 0)
      from += len;
    for (; from < len; from++) {
      if (from in array && array[from] === value)
        return from;
    }
    return -1;
  }
  /**
 * Merges a set of parameters with all parameters inherited between the common parents of the
 * current state and a given destination state.
 *
 * @param {Object} currentParams The value of the current state parameters ($stateParams).
 * @param {Object} newParams The set of parameters which will be composited with inherited params.
 * @param {Object} $current Internal definition of object representing the current state.
 * @param {Object} $to Internal definition of object representing state to transition to.
 */
  function inheritParams(currentParams, newParams, $current, $to) {
    var parents = ancestors($current, $to), parentParams, inherited = {}, inheritList = [];
    for (var i in parents) {
      if (!parents[i].params)
        continue;
      parentParams = objectKeys(parents[i].params);
      if (!parentParams.length)
        continue;
      for (var j in parentParams) {
        if (indexOf(inheritList, parentParams[j]) >= 0)
          continue;
        inheritList.push(parentParams[j]);
        inherited[parentParams[j]] = currentParams[parentParams[j]];
      }
    }
    return extend({}, inherited, newParams);
  }
  /**
 * Performs a non-strict comparison of the subset of two objects, defined by a list of keys.
 *
 * @param {Object} a The first object.
 * @param {Object} b The second object.
 * @param {Array} keys The list of keys within each object to compare. If the list is empty or not specified,
 *                     it defaults to the list of keys in `a`.
 * @return {Boolean} Returns `true` if the keys match, otherwise `false`.
 */
  function equalForKeys(a, b, keys) {
    if (!keys) {
      keys = [];
      for (var n in a)
        keys.push(n);  // Used instead of Object.keys() for IE8 compatibility
    }
    for (var i = 0; i < keys.length; i++) {
      var k = keys[i];
      if (a[k] != b[k])
        return false;  // Not '===', values aren't necessarily normalized
    }
    return true;
  }
  /**
 * Returns the subset of an object, based on a list of keys.
 *
 * @param {Array} keys
 * @param {Object} values
 * @return {Boolean} Returns a subset of `values`.
 */
  function filterByKeys(keys, values) {
    var filtered = {};
    forEach(keys, function (name) {
      filtered[name] = values[name];
    });
    return filtered;
  }
  // like _.indexBy
  // when you know that your index values will be unique, or you want last-one-in to win
  function indexBy(array, propName) {
    var result = {};
    forEach(array, function (item) {
      result[item[propName]] = item;
    });
    return result;
  }
  // extracted from underscore.js
  // Return a copy of the object only containing the whitelisted properties.
  function pick(obj) {
    var copy = {};
    var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
    forEach(keys, function (key) {
      if (key in obj)
        copy[key] = obj[key];
    });
    return copy;
  }
  // extracted from underscore.js
  // Return a copy of the object omitting the blacklisted properties.
  function omit(obj) {
    var copy = {};
    var keys = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
    for (var key in obj) {
      if (indexOf(keys, key) == -1)
        copy[key] = obj[key];
    }
    return copy;
  }
  function pluck(collection, key) {
    var result = isArray(collection) ? [] : {};
    forEach(collection, function (val, i) {
      result[i] = isFunction(key) ? key(val) : val[key];
    });
    return result;
  }
  function filter(collection, callback) {
    var array = isArray(collection);
    var result = array ? [] : {};
    forEach(collection, function (val, i) {
      if (callback(val, i)) {
        result[array ? result.length : i] = val;
      }
    });
    return result;
  }
  function map(collection, callback) {
    var result = isArray(collection) ? [] : {};
    forEach(collection, function (val, i) {
      result[i] = callback(val, i);
    });
    return result;
  }
  /**
 * @ngdoc overview
 * @name ui.router.util
 *
 * @description
 * # ui.router.util sub-module
 *
 * This module is a dependency of other sub-modules. Do not include this module as a dependency
 * in your angular app (use {@link ui.router} module instead).
 *
 */
  angular.module('ui.router.util', ['ng']);
  /**
 * @ngdoc overview
 * @name ui.router.router
 * 
 * @requires ui.router.util
 *
 * @description
 * # ui.router.router sub-module
 *
 * This module is a dependency of other sub-modules. Do not include this module as a dependency
 * in your angular app (use {@link ui.router} module instead).
 */
  angular.module('ui.router.router', ['ui.router.util']);
  /**
 * @ngdoc overview
 * @name ui.router.state
 * 
 * @requires ui.router.router
 * @requires ui.router.util
 *
 * @description
 * # ui.router.state sub-module
 *
 * This module is a dependency of the main ui.router module. Do not include this module as a dependency
 * in your angular app (use {@link ui.router} module instead).
 * 
 */
  angular.module('ui.router.state', [
    'ui.router.router',
    'ui.router.util'
  ]);
  /**
 * @ngdoc overview
 * @name ui.router
 *
 * @requires ui.router.state
 *
 * @description
 * # ui.router
 * 
 * ## The main module for ui.router 
 * There are several sub-modules included with the ui.router module, however only this module is needed
 * as a dependency within your angular app. The other modules are for organization purposes. 
 *
 * The modules are:
 * * ui.router - the main "umbrella" module
 * * ui.router.router - 
 * 
 * *You'll need to include **only** this module as the dependency within your angular app.*
 * 
 * <pre>
 * <!doctype html>
 * <html ng-app="myApp">
 * <head>
 *   <script src="js/angular.js"></script>
 *   <!-- Include the ui-router script -->
 *   <script src="js/angular-ui-router.min.js"></script>
 *   <script>
 *     // ...and add 'ui.router' as a dependency
 *     var myApp = angular.module('myApp', ['ui.router']);
 *   </script>
 * </head>
 * <body>
 * </body>
 * </html>
 * </pre>
 */
  angular.module('ui.router', ['ui.router.state']);
  angular.module('ui.router.compat', ['ui.router']);
  /**
 * @ngdoc object
 * @name ui.router.util.$resolve
 *
 * @requires $q
 * @requires $injector
 *
 * @description
 * Manages resolution of (acyclic) graphs of promises.
 */
  $Resolve.$inject = [
    '$q',
    '$injector'
  ];
  function $Resolve($q, $injector) {
    var VISIT_IN_PROGRESS = 1, VISIT_DONE = 2, NOTHING = {}, NO_DEPENDENCIES = [], NO_LOCALS = NOTHING, NO_PARENT = extend($q.when(NOTHING), {
        $$promises: NOTHING,
        $$values: NOTHING
      });
    /**
   * @ngdoc function
   * @name ui.router.util.$resolve#study
   * @methodOf ui.router.util.$resolve
   *
   * @description
   * Studies a set of invocables that are likely to be used multiple times.
   * <pre>
   * $resolve.study(invocables)(locals, parent, self)
   * </pre>
   * is equivalent to
   * <pre>
   * $resolve.resolve(invocables, locals, parent, self)
   * </pre>
   * but the former is more efficient (in fact `resolve` just calls `study` 
   * internally).
   *
   * @param {object} invocables Invocable objects
   * @return {function} a function to pass in locals, parent and self
   */
    this.study = function (invocables) {
      if (!isObject(invocables))
        throw new Error('\'invocables\' must be an object');
      var invocableKeys = objectKeys(invocables || {});
      // Perform a topological sort of invocables to build an ordered plan
      var plan = [], cycle = [], visited = {};
      function visit(value, key) {
        if (visited[key] === VISIT_DONE)
          return;
        cycle.push(key);
        if (visited[key] === VISIT_IN_PROGRESS) {
          cycle.splice(0, indexOf(cycle, key));
          throw new Error('Cyclic dependency: ' + cycle.join(' -> '));
        }
        visited[key] = VISIT_IN_PROGRESS;
        if (isString(value)) {
          plan.push(key, [function () {
              return $injector.get(value);
            }], NO_DEPENDENCIES);
        } else {
          var params = $injector.annotate(value);
          forEach(params, function (param) {
            if (param !== key && invocables.hasOwnProperty(param))
              visit(invocables[param], param);
          });
          plan.push(key, value, params);
        }
        cycle.pop();
        visited[key] = VISIT_DONE;
      }
      forEach(invocables, visit);
      invocables = cycle = visited = null;
      // plan is all that's required
      function isResolve(value) {
        return isObject(value) && value.then && value.$$promises;
      }
      return function (locals, parent, self) {
        if (isResolve(locals) && self === undefined) {
          self = parent;
          parent = locals;
          locals = null;
        }
        if (!locals)
          locals = NO_LOCALS;
        else if (!isObject(locals)) {
          throw new Error('\'locals\' must be an object');
        }
        if (!parent)
          parent = NO_PARENT;
        else if (!isResolve(parent)) {
          throw new Error('\'parent\' must be a promise returned by $resolve.resolve()');
        }
        // To complete the overall resolution, we have to wait for the parent
        // promise and for the promise for each invokable in our plan.
        var resolution = $q.defer(), result = resolution.promise, promises = result.$$promises = {}, values = extend({}, locals), wait = 1 + plan.length / 3, merged = false;
        function done() {
          // Merge parent values we haven't got yet and publish our own $$values
          if (!--wait) {
            if (!merged)
              merge(values, parent.$$values);
            result.$$values = values;
            result.$$promises = result.$$promises || true;
            // keep for isResolve()
            delete result.$$inheritedValues;
            resolution.resolve(values);
          }
        }
        function fail(reason) {
          result.$$failure = reason;
          resolution.reject(reason);
        }
        // Short-circuit if parent has already failed
        if (isDefined(parent.$$failure)) {
          fail(parent.$$failure);
          return result;
        }
        if (parent.$$inheritedValues) {
          merge(values, omit(parent.$$inheritedValues, invocableKeys));
        }
        // Merge parent values if the parent has already resolved, or merge
        // parent promises and wait if the parent resolve is still in progress.
        extend(promises, parent.$$promises);
        if (parent.$$values) {
          merged = merge(values, omit(parent.$$values, invocableKeys));
          result.$$inheritedValues = omit(parent.$$values, invocableKeys);
          done();
        } else {
          if (parent.$$inheritedValues) {
            result.$$inheritedValues = omit(parent.$$inheritedValues, invocableKeys);
          }
          parent.then(done, fail);
        }
        // Process each invocable in the plan, but ignore any where a local of the same name exists.
        for (var i = 0, ii = plan.length; i < ii; i += 3) {
          if (locals.hasOwnProperty(plan[i]))
            done();
          else
            invoke(plan[i], plan[i + 1], plan[i + 2]);
        }
        function invoke(key, invocable, params) {
          // Create a deferred for this invocation. Failures will propagate to the resolution as well.
          var invocation = $q.defer(), waitParams = 0;
          function onfailure(reason) {
            invocation.reject(reason);
            fail(reason);
          }
          // Wait for any parameter that we have a promise for (either from parent or from this
          // resolve; in that case study() will have made sure it's ordered before us in the plan).
          forEach(params, function (dep) {
            if (promises.hasOwnProperty(dep) && !locals.hasOwnProperty(dep)) {
              waitParams++;
              promises[dep].then(function (result) {
                values[dep] = result;
                if (!--waitParams)
                  proceed();
              }, onfailure);
            }
          });
          if (!waitParams)
            proceed();
          function proceed() {
            if (isDefined(result.$$failure))
              return;
            try {
              invocation.resolve($injector.invoke(invocable, self, values));
              invocation.promise.then(function (result) {
                values[key] = result;
                done();
              }, onfailure);
            } catch (e) {
              onfailure(e);
            }
          }
          // Publish promise synchronously; invocations further down in the plan may depend on it.
          promises[key] = invocation.promise;
        }
        return result;
      };
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$resolve#resolve
   * @methodOf ui.router.util.$resolve
   *
   * @description
   * Resolves a set of invocables. An invocable is a function to be invoked via 
   * `$injector.invoke()`, and can have an arbitrary number of dependencies. 
   * An invocable can either return a value directly,
   * or a `$q` promise. If a promise is returned it will be resolved and the 
   * resulting value will be used instead. Dependencies of invocables are resolved 
   * (in this order of precedence)
   *
   * - from the specified `locals`
   * - from another invocable that is part of this `$resolve` call
   * - from an invocable that is inherited from a `parent` call to `$resolve` 
   *   (or recursively
   * - from any ancestor `$resolve` of that parent).
   *
   * The return value of `$resolve` is a promise for an object that contains 
   * (in this order of precedence)
   *
   * - any `locals` (if specified)
   * - the resolved return values of all injectables
   * - any values inherited from a `parent` call to `$resolve` (if specified)
   *
   * The promise will resolve after the `parent` promise (if any) and all promises 
   * returned by injectables have been resolved. If any invocable 
   * (or `$injector.invoke`) throws an exception, or if a promise returned by an 
   * invocable is rejected, the `$resolve` promise is immediately rejected with the 
   * same error. A rejection of a `parent` promise (if specified) will likewise be 
   * propagated immediately. Once the `$resolve` promise has been rejected, no 
   * further invocables will be called.
   * 
   * Cyclic dependencies between invocables are not permitted and will caues `$resolve`
   * to throw an error. As a special case, an injectable can depend on a parameter 
   * with the same name as the injectable, which will be fulfilled from the `parent` 
   * injectable of the same name. This allows inherited values to be decorated. 
   * Note that in this case any other injectable in the same `$resolve` with the same
   * dependency would see the decorated value, not the inherited value.
   *
   * Note that missing dependencies -- unlike cyclic dependencies -- will cause an 
   * (asynchronous) rejection of the `$resolve` promise rather than a (synchronous) 
   * exception.
   *
   * Invocables are invoked eagerly as soon as all dependencies are available. 
   * This is true even for dependencies inherited from a `parent` call to `$resolve`.
   *
   * As a special case, an invocable can be a string, in which case it is taken to 
   * be a service name to be passed to `$injector.get()`. This is supported primarily 
   * for backwards-compatibility with the `resolve` property of `$routeProvider` 
   * routes.
   *
   * @param {object} invocables functions to invoke or 
   * `$injector` services to fetch.
   * @param {object} locals  values to make available to the injectables
   * @param {object} parent  a promise returned by another call to `$resolve`.
   * @param {object} self  the `this` for the invoked methods
   * @return {object} Promise for an object that contains the resolved return value
   * of all invocables, as well as any inherited and local values.
   */
    this.resolve = function (invocables, locals, parent, self) {
      return this.study(invocables)(locals, parent, self);
    };
  }
  angular.module('ui.router.util').service('$resolve', $Resolve);
  /**
 * @ngdoc object
 * @name ui.router.util.$templateFactory
 *
 * @requires $http
 * @requires $templateCache
 * @requires $injector
 *
 * @description
 * Service. Manages loading of templates.
 */
  $TemplateFactory.$inject = [
    '$http',
    '$templateCache',
    '$injector'
  ];
  function $TemplateFactory($http, $templateCache, $injector) {
    /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromConfig
   * @methodOf ui.router.util.$templateFactory
   *
   * @description
   * Creates a template from a configuration object. 
   *
   * @param {object} config Configuration object for which to load a template. 
   * The following properties are search in the specified order, and the first one 
   * that is defined is used to create the template:
   *
   * @param {string|object} config.template html string template or function to 
   * load via {@link ui.router.util.$templateFactory#fromString fromString}.
   * @param {string|object} config.templateUrl url to load or a function returning 
   * the url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.
   * @param {Function} config.templateProvider function to invoke via 
   * {@link ui.router.util.$templateFactory#fromProvider fromProvider}.
   * @param {object} params  Parameters to pass to the template function.
   * @param {object} locals Locals to pass to `invoke` if the template is loaded 
   * via a `templateProvider`. Defaults to `{ params: params }`.
   *
   * @return {string|object}  The template html as a string, or a promise for 
   * that string,or `null` if no template is configured.
   */
    this.fromConfig = function (config, params, locals) {
      return isDefined(config.template) ? this.fromString(config.template, params) : isDefined(config.templateUrl) ? this.fromUrl(config.templateUrl, params) : isDefined(config.templateProvider) ? this.fromProvider(config.templateProvider, params, locals) : null;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromString
   * @methodOf ui.router.util.$templateFactory
   *
   * @description
   * Creates a template from a string or a function returning a string.
   *
   * @param {string|object} template html template as a string or function that 
   * returns an html template as a string.
   * @param {object} params Parameters to pass to the template function.
   *
   * @return {string|object} The template html as a string, or a promise for that 
   * string.
   */
    this.fromString = function (template, params) {
      return isFunction(template) ? template(params) : template;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromUrl
   * @methodOf ui.router.util.$templateFactory
   * 
   * @description
   * Loads a template from the a URL via `$http` and `$templateCache`.
   *
   * @param {string|Function} url url of the template to load, or a function 
   * that returns a url.
   * @param {Object} params Parameters to pass to the url function.
   * @return {string|Promise.<string>} The template html as a string, or a promise 
   * for that string.
   */
    this.fromUrl = function (url, params) {
      if (isFunction(url))
        url = url(params);
      if (url == null)
        return null;
      else
        return $http.get(url, {
          cache: $templateCache,
          headers: { Accept: 'text/html' }
        }).then(function (response) {
          return response.data;
        });
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$templateFactory#fromProvider
   * @methodOf ui.router.util.$templateFactory
   *
   * @description
   * Creates a template by invoking an injectable provider function.
   *
   * @param {Function} provider Function to invoke via `$injector.invoke`
   * @param {Object} params Parameters for the template.
   * @param {Object} locals Locals to pass to `invoke`. Defaults to 
   * `{ params: params }`.
   * @return {string|Promise.<string>} The template html as a string, or a promise 
   * for that string.
   */
    this.fromProvider = function (provider, params, locals) {
      return $injector.invoke(provider, null, locals || { params: params });
    };
  }
  angular.module('ui.router.util').service('$templateFactory', $TemplateFactory);
  var $$UMFP;
  // reference to $UrlMatcherFactoryProvider
  /**
 * @ngdoc object
 * @name ui.router.util.type:UrlMatcher
 *
 * @description
 * Matches URLs against patterns and extracts named parameters from the path or the search
 * part of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list
 * of search parameters. Multiple search parameter names are separated by '&'. Search parameters
 * do not influence whether or not a URL is matched, but their values are passed through into
 * the matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.
 * 
 * Path parameter placeholders can be specified using simple colon/catch-all syntax or curly brace
 * syntax, which optionally allows a regular expression for the parameter to be specified:
 *
 * * `':'` name - colon placeholder
 * * `'*'` name - catch-all placeholder
 * * `'{' name '}'` - curly placeholder
 * * `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the
 *   regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.
 *
 * Parameter names may contain only word characters (latin letters, digits, and underscore) and
 * must be unique within the pattern (across both path and search parameters). For colon 
 * placeholders or curly placeholders without an explicit regexp, a path parameter matches any
 * number of characters other than '/'. For catch-all placeholders the path parameter matches
 * any number of characters.
 * 
 * Examples:
 * 
 * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for
 *   trailing slashes, and patterns have to match the entire path, not just a prefix.
 * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or
 *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.
 * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.
 * * `'/user/{id:[^/]*}'` - Same as the previous example.
 * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id
 *   parameter consists of 1 to 8 hex digits.
 * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the
 *   path into the parameter 'path'.
 * * `'/files/*path'` - ditto.
 * * `'/calendar/{start:date}'` - Matches "/calendar/2014-11-12" (because the pattern defined
 *   in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start
 *
 * @param {string} pattern  The pattern to compile into a matcher.
 * @param {Object} config  A configuration object hash:
 * @param {Object=} parentMatcher Used to concatenate the pattern/config onto
 *   an existing UrlMatcher
 *
 * * `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.
 * * `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.
 *
 * @property {string} prefix  A static prefix of this pattern. The matcher guarantees that any
 *   URL matching this matcher (i.e. any string for which {@link ui.router.util.type:UrlMatcher#methods_exec exec()} returns
 *   non-null) will start with this prefix.
 *
 * @property {string} source  The pattern that was passed into the constructor
 *
 * @property {string} sourcePath  The path portion of the source property
 *
 * @property {string} sourceSearch  The search portion of the source property
 *
 * @property {string} regex  The constructed regex that will be used to match against the url when 
 *   it is time to determine which url will match.
 *
 * @returns {Object}  New `UrlMatcher` object
 */
  function UrlMatcher(pattern, config, parentMatcher) {
    config = extend({ params: {} }, isObject(config) ? config : {});
    // Find all placeholders and create a compiled pattern, using either classic or curly syntax:
    //   '*' name
    //   ':' name
    //   '{' name '}'
    //   '{' name ':' regexp '}'
    // The regular expression is somewhat complicated due to the need to allow curly braces
    // inside the regular expression. The placeholder regexp breaks down as follows:
    //    ([:*])([\w\[\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)
    //    \{([\w\[\]]+)(?:\:( ... ))?\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case
    //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either
    //    [^{}\\]+                       - anything other than curly braces or backslash
    //    \\.                            - a backslash escape
    //    \{(?:[^{}\\]+|\\.)*\}          - a matched set of curly braces containing other atoms
    var placeholder = /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, searchPlaceholder = /([:]?)([\w\[\]-]+)|\{([\w\[\]-]+)(?:\:((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g, compiled = '^', last = 0, m, segments = this.segments = [], parentParams = parentMatcher ? parentMatcher.params : {}, params = this.params = parentMatcher ? parentMatcher.params.$$new() : new $$UMFP.ParamSet(), paramNames = [];
    function addParameter(id, type, config, location) {
      paramNames.push(id);
      if (parentParams[id])
        return parentParams[id];
      if (!/^\w+(-+\w+)*(?:\[\])?$/.test(id))
        throw new Error('Invalid parameter name \'' + id + '\' in pattern \'' + pattern + '\'');
      if (params[id])
        throw new Error('Duplicate parameter name \'' + id + '\' in pattern \'' + pattern + '\'');
      params[id] = new $$UMFP.Param(id, type, config, location);
      return params[id];
    }
    function quoteRegExp(string, pattern, squash) {
      var surroundPattern = [
          '',
          ''
        ], result = string.replace(/[\\\[\]\^$*+?.()|{}]/g, '\\$&');
      if (!pattern)
        return result;
      switch (squash) {
      case false:
        surroundPattern = [
          '(',
          ')'
        ];
        break;
      case true:
        surroundPattern = [
          '?(',
          ')?'
        ];
        break;
      default:
        surroundPattern = [
          '(' + squash + '|',
          ')?'
        ];
        break;
      }
      return result + surroundPattern[0] + pattern + surroundPattern[1];
    }
    this.source = pattern;
    // Split into static segments separated by path parameter placeholders.
    // The number of segments is always 1 more than the number of parameters.
    function matchDetails(m, isSearch) {
      var id, regexp, segment, type, cfg, arrayMode;
      id = m[2] || m[3];
      // IE[78] returns '' for unmatched groups instead of null
      cfg = config.params[id];
      segment = pattern.substring(last, m.index);
      regexp = isSearch ? m[4] : m[4] || (m[1] == '*' ? '.*' : null);
      type = $$UMFP.type(regexp || 'string') || inherit($$UMFP.type('string'), { pattern: new RegExp(regexp) });
      return {
        id: id,
        regexp: regexp,
        segment: segment,
        type: type,
        cfg: cfg
      };
    }
    var p, param, segment;
    while (m = placeholder.exec(pattern)) {
      p = matchDetails(m, false);
      if (p.segment.indexOf('?') >= 0)
        break;
      // we're into the search part
      param = addParameter(p.id, p.type, p.cfg, 'path');
      compiled += quoteRegExp(p.segment, param.type.pattern.source, param.squash);
      segments.push(p.segment);
      last = placeholder.lastIndex;
    }
    segment = pattern.substring(last);
    // Find any search parameter names and remove them from the last segment
    var i = segment.indexOf('?');
    if (i >= 0) {
      var search = this.sourceSearch = segment.substring(i);
      segment = segment.substring(0, i);
      this.sourcePath = pattern.substring(0, last + i);
      if (search.length > 0) {
        last = 0;
        while (m = searchPlaceholder.exec(search)) {
          p = matchDetails(m, true);
          param = addParameter(p.id, p.type, p.cfg, 'search');
          last = placeholder.lastIndex;  // check if ?&
        }
      }
    } else {
      this.sourcePath = pattern;
      this.sourceSearch = '';
    }
    compiled += quoteRegExp(segment) + (config.strict === false ? '/?' : '') + '$';
    segments.push(segment);
    this.regexp = new RegExp(compiled, config.caseInsensitive ? 'i' : undefined);
    this.prefix = segments[0];
    this.$$paramNames = paramNames;
  }
  /**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#concat
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Returns a new matcher for a pattern constructed by appending the path part and adding the
 * search parameters of the specified pattern to this pattern. The current pattern is not
 * modified. This can be understood as creating a pattern for URLs that are relative to (or
 * suffixes of) the current pattern.
 *
 * @example
 * The following two matchers are equivalent:
 * <pre>
 * new UrlMatcher('/user/{id}?q').concat('/details?date');
 * new UrlMatcher('/user/{id}/details?q&date');
 * </pre>
 *
 * @param {string} pattern  The pattern to append.
 * @param {Object} config  An object hash of the configuration for the matcher.
 * @returns {UrlMatcher}  A matcher for the concatenated pattern.
 */
  UrlMatcher.prototype.concat = function (pattern, config) {
    // Because order of search parameters is irrelevant, we can add our own search
    // parameters to the end of the new pattern. Parse the new pattern by itself
    // and then join the bits together, but it's much easier to do this on a string level.
    var defaultConfig = {
        caseInsensitive: $$UMFP.caseInsensitive(),
        strict: $$UMFP.strictMode(),
        squash: $$UMFP.defaultSquashPolicy()
      };
    return new UrlMatcher(this.sourcePath + pattern + this.sourceSearch, extend(defaultConfig, config), this);
  };
  UrlMatcher.prototype.toString = function () {
    return this.source;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#exec
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Tests the specified path against this matcher, and returns an object containing the captured
 * parameter values, or null if the path does not match. The returned object contains the values
 * of any search parameters that are mentioned in the pattern, but their value may be null if
 * they are not present in `searchParams`. This means that search parameters are always treated
 * as optional.
 *
 * @example
 * <pre>
 * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {
 *   x: '1', q: 'hello'
 * });
 * // returns { id: 'bob', q: 'hello', r: null }
 * </pre>
 *
 * @param {string} path  The URL path to match, e.g. `$location.path()`.
 * @param {Object} searchParams  URL search parameters, e.g. `$location.search()`.
 * @returns {Object}  The captured parameter values.
 */
  UrlMatcher.prototype.exec = function (path, searchParams) {
    var m = this.regexp.exec(path);
    if (!m)
      return null;
    searchParams = searchParams || {};
    var paramNames = this.parameters(), nTotal = paramNames.length, nPath = this.segments.length - 1, values = {}, i, j, cfg, paramName;
    if (nPath !== m.length - 1)
      throw new Error('Unbalanced capture group in route \'' + this.source + '\'');
    function decodePathArray(string) {
      function reverseString(str) {
        return str.split('').reverse().join('');
      }
      function unquoteDashes(str) {
        return str.replace(/\\-/, '-');
      }
      var split = reverseString(string).split(/-(?!\\)/);
      var allReversed = map(split, reverseString);
      return map(allReversed, unquoteDashes).reverse();
    }
    for (i = 0; i < nPath; i++) {
      paramName = paramNames[i];
      var param = this.params[paramName];
      var paramVal = m[i + 1];
      // if the param value matches a pre-replace pair, replace the value before decoding.
      for (j = 0; j < param.replace; j++) {
        if (param.replace[j].from === paramVal)
          paramVal = param.replace[j].to;
      }
      if (paramVal && param.array === true)
        paramVal = decodePathArray(paramVal);
      values[paramName] = param.value(paramVal);
    }
    for (; i < nTotal; i++) {
      paramName = paramNames[i];
      values[paramName] = this.params[paramName].value(searchParams[paramName]);
    }
    return values;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#parameters
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Returns the names of all path and search parameters of this pattern in an unspecified order.
 * 
 * @returns {Array.<string>}  An array of parameter names. Must be treated as read-only. If the
 *    pattern has no parameters, an empty array is returned.
 */
  UrlMatcher.prototype.parameters = function (param) {
    if (!isDefined(param))
      return this.$$paramNames;
    return this.params[param] || null;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#validate
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Checks an object hash of parameters to validate their correctness according to the parameter
 * types of this `UrlMatcher`.
 *
 * @param {Object} params The object hash of parameters to validate.
 * @returns {boolean} Returns `true` if `params` validates, otherwise `false`.
 */
  UrlMatcher.prototype.validates = function (params) {
    return this.params.$$validates(params);
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:UrlMatcher#format
 * @methodOf ui.router.util.type:UrlMatcher
 *
 * @description
 * Creates a URL that matches this pattern by substituting the specified values
 * for the path and search parameters. Null values for path parameters are
 * treated as empty strings.
 *
 * @example
 * <pre>
 * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });
 * // returns '/user/bob?q=yes'
 * </pre>
 *
 * @param {Object} values  the values to substitute for the parameters in this pattern.
 * @returns {string}  the formatted URL (path and optionally search part).
 */
  UrlMatcher.prototype.format = function (values) {
    values = values || {};
    var segments = this.segments, params = this.parameters(), paramset = this.params;
    if (!this.validates(values))
      return null;
    var i, search = false, nPath = segments.length - 1, nTotal = params.length, result = segments[0];
    function encodeDashes(str) {
      // Replace dashes with encoded "\-"
      return encodeURIComponent(str).replace(/-/g, function (c) {
        return '%5C%' + c.charCodeAt(0).toString(16).toUpperCase();
      });
    }
    for (i = 0; i < nTotal; i++) {
      var isPathParam = i < nPath;
      var name = params[i], param = paramset[name], value = param.value(values[name]);
      var isDefaultValue = param.isOptional && param.type.equals(param.value(), value);
      var squash = isDefaultValue ? param.squash : false;
      var encoded = param.type.encode(value);
      if (isPathParam) {
        var nextSegment = segments[i + 1];
        if (squash === false) {
          if (encoded != null) {
            if (isArray(encoded)) {
              result += map(encoded, encodeDashes).join('-');
            } else {
              result += encodeURIComponent(encoded);
            }
          }
          result += nextSegment;
        } else if (squash === true) {
          var capture = result.match(/\/$/) ? /\/?(.*)/ : /(.*)/;
          result += nextSegment.match(capture)[1];
        } else if (isString(squash)) {
          result += squash + nextSegment;
        }
      } else {
        if (encoded == null || isDefaultValue && squash !== false)
          continue;
        if (!isArray(encoded))
          encoded = [encoded];
        encoded = map(encoded, encodeURIComponent).join('&' + name + '=');
        result += (search ? '&' : '?') + (name + '=' + encoded);
        search = true;
      }
    }
    return result;
  };
  /**
 * @ngdoc object
 * @name ui.router.util.type:Type
 *
 * @description
 * Implements an interface to define custom parameter types that can be decoded from and encoded to
 * string parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}
 * objects when matching or formatting URLs, or comparing or validating parameter values.
 *
 * See {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more
 * information on registering custom types.
 *
 * @param {Object} config  A configuration object which contains the custom type definition.  The object's
 *        properties will override the default methods and/or pattern in `Type`'s public interface.
 * @example
 * <pre>
 * {
 *   decode: function(val) { return parseInt(val, 10); },
 *   encode: function(val) { return val && val.toString(); },
 *   equals: function(a, b) { return this.is(a) && a === b; },
 *   is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },
 *   pattern: /\d+/
 * }
 * </pre>
 *
 * @property {RegExp} pattern The regular expression pattern used to match values of this type when
 *           coming from a substring of a URL.
 *
 * @returns {Object}  Returns a new `Type` object.
 */
  function Type(config) {
    extend(this, config);
  }
  /**
 * @ngdoc function
 * @name ui.router.util.type:Type#is
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Detects whether a value is of a particular type. Accepts a native (decoded) value
 * and determines whether it matches the current `Type` object.
 *
 * @param {*} val  The value to check.
 * @param {string} key  Optional. If the type check is happening in the context of a specific
 *        {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the
 *        parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.
 * @returns {Boolean}  Returns `true` if the value matches the type, otherwise `false`.
 */
  Type.prototype.is = function (val, key) {
    return true;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:Type#encode
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Encodes a custom/native type value to a string that can be embedded in a URL. Note that the
 * return value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it
 * only needs to be a representation of `val` that has been coerced to a string.
 *
 * @param {*} val  The value to encode.
 * @param {string} key  The name of the parameter in which `val` is stored. Can be used for
 *        meta-programming of `Type` objects.
 * @returns {string}  Returns a string representation of `val` that can be encoded in a URL.
 */
  Type.prototype.encode = function (val, key) {
    return val;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:Type#decode
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Converts a parameter value (from URL string or transition param) to a custom/native value.
 *
 * @param {string} val  The URL parameter value to decode.
 * @param {string} key  The name of the parameter in which `val` is stored. Can be used for
 *        meta-programming of `Type` objects.
 * @returns {*}  Returns a custom representation of the URL parameter value.
 */
  Type.prototype.decode = function (val, key) {
    return val;
  };
  /**
 * @ngdoc function
 * @name ui.router.util.type:Type#equals
 * @methodOf ui.router.util.type:Type
 *
 * @description
 * Determines whether two decoded values are equivalent.
 *
 * @param {*} a  A value to compare against.
 * @param {*} b  A value to compare against.
 * @returns {Boolean}  Returns `true` if the values are equivalent/equal, otherwise `false`.
 */
  Type.prototype.equals = function (a, b) {
    return a == b;
  };
  Type.prototype.$subPattern = function () {
    var sub = this.pattern.toString();
    return sub.substr(1, sub.length - 2);
  };
  Type.prototype.pattern = /.*/;
  Type.prototype.toString = function () {
    return '{Type:' + this.name + '}';
  };
  /*
 * Wraps an existing custom Type as an array of Type, depending on 'mode'.
 * e.g.:
 * - urlmatcher pattern "/path?{queryParam[]:int}"
 * - url: "/path?queryParam=1&queryParam=2
 * - $stateParams.queryParam will be [1, 2]
 * if `mode` is "auto", then
 * - url: "/path?queryParam=1 will create $stateParams.queryParam: 1
 * - url: "/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]
 */
  Type.prototype.$asArray = function (mode, isSearch) {
    if (!mode)
      return this;
    if (mode === 'auto' && !isSearch)
      throw new Error('\'auto\' array mode is for query parameters only');
    return new ArrayType(this, mode);
    function ArrayType(type, mode) {
      function bindTo(type, callbackName) {
        return function () {
          return type[callbackName].apply(type, arguments);
        };
      }
      // Wrap non-array value as array
      function arrayWrap(val) {
        return isArray(val) ? val : isDefined(val) ? [val] : [];
      }
      // Unwrap array value for "auto" mode. Return undefined for empty array.
      function arrayUnwrap(val) {
        switch (val.length) {
        case 0:
          return undefined;
        case 1:
          return mode === 'auto' ? val[0] : val;
        default:
          return val;
        }
      }
      function falsey(val) {
        return !val;
      }
      // Wraps type (.is/.encode/.decode) functions to operate on each value of an array
      function arrayHandler(callback, allTruthyMode) {
        return function handleArray(val) {
          val = arrayWrap(val);
          var result = map(val, callback);
          if (allTruthyMode === true)
            return filter(result, falsey).length === 0;
          return arrayUnwrap(result);
        };
      }
      // Wraps type (.equals) functions to operate on each value of an array
      function arrayEqualsHandler(callback) {
        return function handleArray(val1, val2) {
          var left = arrayWrap(val1), right = arrayWrap(val2);
          if (left.length !== right.length)
            return false;
          for (var i = 0; i < left.length; i++) {
            if (!callback(left[i], right[i]))
              return false;
          }
          return true;
        };
      }
      this.encode = arrayHandler(bindTo(type, 'encode'));
      this.decode = arrayHandler(bindTo(type, 'decode'));
      this.is = arrayHandler(bindTo(type, 'is'), true);
      this.equals = arrayEqualsHandler(bindTo(type, 'equals'));
      this.pattern = type.pattern;
      this.$arrayMode = mode;
    }
  };
  /**
 * @ngdoc object
 * @name ui.router.util.$urlMatcherFactory
 *
 * @description
 * Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory
 * is also available to providers under the name `$urlMatcherFactoryProvider`.
 */
  function $UrlMatcherFactory() {
    $$UMFP = this;
    var isCaseInsensitive = false, isStrictMode = true, defaultSquashPolicy = false;
    function valToString(val) {
      return val != null ? val.toString().replace(/\//g, '%2F') : val;
    }
    function valFromString(val) {
      return val != null ? val.toString().replace(/%2F/g, '/') : val;
    }
    //  TODO: in 1.0, make string .is() return false if value is undefined by default.
    //  function regexpMatches(val) { /*jshint validthis:true */ return isDefined(val) && this.pattern.test(val); }
    function regexpMatches(val) {
      /*jshint validthis:true */
      return this.pattern.test(val);
    }
    var $types = {}, enqueue = true, typeQueue = [], injector, defaultTypes = {
        string: {
          encode: valToString,
          decode: valFromString,
          is: regexpMatches,
          pattern: /[^/]*/
        },
        int: {
          encode: valToString,
          decode: function (val) {
            return parseInt(val, 10);
          },
          is: function (val) {
            return isDefined(val) && this.decode(val.toString()) === val;
          },
          pattern: /\d+/
        },
        bool: {
          encode: function (val) {
            return val ? 1 : 0;
          },
          decode: function (val) {
            return parseInt(val, 10) !== 0;
          },
          is: function (val) {
            return val === true || val === false;
          },
          pattern: /0|1/
        },
        date: {
          encode: function (val) {
            if (!this.is(val))
              return undefined;
            return [
              val.getFullYear(),
              ('0' + (val.getMonth() + 1)).slice(-2),
              ('0' + val.getDate()).slice(-2)
            ].join('-');
          },
          decode: function (val) {
            if (this.is(val))
              return val;
            var match = this.capture.exec(val);
            return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;
          },
          is: function (val) {
            return val instanceof Date && !isNaN(val.valueOf());
          },
          equals: function (a, b) {
            return this.is(a) && this.is(b) && a.toISOString() === b.toISOString();
          },
          pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,
          capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/
        },
        json: {
          encode: angular.toJson,
          decode: angular.fromJson,
          is: angular.isObject,
          equals: angular.equals,
          pattern: /[^/]*/
        },
        any: {
          encode: angular.identity,
          decode: angular.identity,
          is: angular.identity,
          equals: angular.equals,
          pattern: /.*/
        }
      };
    function getDefaultConfig() {
      return {
        strict: isStrictMode,
        caseInsensitive: isCaseInsensitive
      };
    }
    function isInjectable(value) {
      return isFunction(value) || isArray(value) && isFunction(value[value.length - 1]);
    }
    /**
   * [Internal] Get the default value of a parameter, which may be an injectable function.
   */
    $UrlMatcherFactory.$$getDefaultValue = function (config) {
      if (!isInjectable(config.value))
        return config.value;
      if (!injector)
        throw new Error('Injectable functions cannot be called at configuration time');
      return injector.invoke(config.value);
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#caseInsensitive
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Defines whether URL matching should be case sensitive (the default behavior), or not.
   *
   * @param {boolean} value `false` to match URL in a case sensitive manner; otherwise `true`;
   * @returns {boolean} the current value of caseInsensitive
   */
    this.caseInsensitive = function (value) {
      if (isDefined(value))
        isCaseInsensitive = value;
      return isCaseInsensitive;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#strictMode
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Defines whether URLs should match trailing slashes, or not (the default behavior).
   *
   * @param {boolean=} value `false` to match trailing slashes in URLs, otherwise `true`.
   * @returns {boolean} the current value of strictMode
   */
    this.strictMode = function (value) {
      if (isDefined(value))
        isStrictMode = value;
      return isStrictMode;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#defaultSquashPolicy
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Sets the default behavior when generating or matching URLs with default parameter values.
   *
   * @param {string} value A string that defines the default parameter URL squashing behavior.
   *    `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL
   *    `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the
   *             parameter is surrounded by slashes, squash (remove) one slash from the URL
   *    any other string, e.g. "~": When generating an href with a default parameter value, squash (remove)
   *             the parameter value from the URL and replace it with this string.
   */
    this.defaultSquashPolicy = function (value) {
      if (!isDefined(value))
        return defaultSquashPolicy;
      if (value !== true && value !== false && !isString(value))
        throw new Error('Invalid squash policy: ' + value + '. Valid policies: false, true, arbitrary-string');
      defaultSquashPolicy = value;
      return value;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#compile
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.
   *
   * @param {string} pattern  The URL pattern.
   * @param {Object} config  The config object hash.
   * @returns {UrlMatcher}  The UrlMatcher.
   */
    this.compile = function (pattern, config) {
      return new UrlMatcher(pattern, extend(getDefaultConfig(), config));
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#isMatcher
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Returns true if the specified object is a `UrlMatcher`, or false otherwise.
   *
   * @param {Object} object  The object to perform the type check against.
   * @returns {Boolean}  Returns `true` if the object matches the `UrlMatcher` interface, by
   *          implementing all the same methods.
   */
    this.isMatcher = function (o) {
      if (!isObject(o))
        return false;
      var result = true;
      forEach(UrlMatcher.prototype, function (val, name) {
        if (isFunction(val)) {
          result = result && (isDefined(o[name]) && isFunction(o[name]));
        }
      });
      return result;
    };
    /**
   * @ngdoc function
   * @name ui.router.util.$urlMatcherFactory#type
   * @methodOf ui.router.util.$urlMatcherFactory
   *
   * @description
   * Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to
   * generate URLs with typed parameters.
   *
   * @param {string} name  The type name.
   * @param {Object|Function} definition   The type definition. See
   *        {@link ui.router.util.type:Type `Type`} for information on the values accepted.
   * @param {Object|Function} definitionFn (optional) A function that is injected before the app
   *        runtime starts.  The result of this function is merged into the existing `definition`.
   *        See {@link ui.router.util.type:Type `Type`} for information on the values accepted.
   *
   * @returns {Object}  Returns `$urlMatcherFactoryProvider`.
   *
   * @example
   * This is a simple example of a custom type that encodes and decodes items from an
   * array, using the array index as the URL-encoded value:
   *
   * <pre>
   * var list = ['John', 'Paul', 'George', 'Ringo'];
   *
   * $urlMatcherFactoryProvider.type('listItem', {
   *   encode: function(item) {
   *     // Represent the list item in the URL using its corresponding index
   *     return list.indexOf(item);
   *   },
   *   decode: function(item) {
   *     // Look up the list item by index
   *     return list[parseInt(item, 10)];
   *   },
   *   is: function(item) {
   *     // Ensure the item is valid by checking to see that it appears
   *     // in the list
   *     return list.indexOf(item) > -1;
   *   }
   * });
   *
   * $stateProvider.state('list', {
   *   url: "/list/{item:listItem}",
   *   controller: function($scope, $stateParams) {
   *     console.log($stateParams.item);
   *   }
   * });
   *
   * // ...
   *
   * // Changes URL to '/list/3', logs "Ringo" to the console
   * $state.go('list', { item: "Ringo" });
   * </pre>
   *
   * This is a more complex example of a type that relies on dependency injection to
   * interact with services, and uses the parameter name from the URL to infer how to
   * handle encoding and decoding parameter values:
   *
   * <pre>
   * // Defines a custom type that gets a value from a service,
   * // where each service gets different types of values from
   * // a backend API:
   * $urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {
   *
   *   // Matches up services to URL parameter names
   *   var services = {
   *     user: Users,
   *     post: Posts
   *   };
   *
   *   return {
   *     encode: function(object) {
   *       // Represent the object in the URL using its unique ID
   *       return object.id;
   *     },
   *     decode: function(value, key) {
   *       // Look up the object by ID, using the parameter
   *       // name (key) to call the correct service
   *       return services[key].findById(value);
   *     },
   *     is: function(object, key) {
   *       // Check that object is a valid dbObject
   *       return angular.isObject(object) && object.id && services[key];
   *     }
   *     equals: function(a, b) {
   *       // Check the equality of decoded objects by comparing
   *       // their unique IDs
   *       return a.id === b.id;
   *     }
   *   };
   * });
   *
   * // In a config() block, you can then attach URLs with
   * // type-annotated parameters:
   * $stateProvider.state('users', {
   *   url: "/users",
   *   // ...
   * }).state('users.item', {
   *   url: "/{user:dbObject}",
   *   controller: function($scope, $stateParams) {
   *     // $stateParams.user will now be an object returned from
   *     // the Users service
   *   },
   *   // ...
   * });
   * </pre>
   */
    this.type = function (name, definition, definitionFn) {
      if (!isDefined(definition))
        return $types[name];
      if ($types.hasOwnProperty(name))
        throw new Error('A type named \'' + name + '\' has already been defined.');
      $types[name] = new Type(extend({ name: name }, definition));
      if (definitionFn) {
        typeQueue.push({
          name: name,
          def: definitionFn
        });
        if (!enqueue)
          flushTypeQueue();
      }
      return this;
    };
    // `flushTypeQueue()` waits until `$urlMatcherFactory` is injected before invoking the queued `definitionFn`s
    function flushTypeQueue() {
      while (typeQueue.length) {
        var type = typeQueue.shift();
        if (type.pattern)
          throw new Error('You cannot override a type\'s .pattern at runtime.');
        angular.extend($types[type.name], injector.invoke(type.def));
      }
    }
    // Register default types. Store them in the prototype of $types.
    forEach(defaultTypes, function (type, name) {
      $types[name] = new Type(extend({ name: name }, type));
    });
    $types = inherit($types, {});
    /* No need to document $get, since it returns this */
    this.$get = [
      '$injector',
      function ($injector) {
        injector = $injector;
        enqueue = false;
        flushTypeQueue();
        forEach(defaultTypes, function (type, name) {
          if (!$types[name])
            $types[name] = new Type(type);
        });
        return this;
      }
    ];
    this.Param = function Param(id, type, config, location) {
      var self = this;
      config = unwrapShorthand(config);
      type = getType(config, type, location);
      var arrayMode = getArrayMode();
      type = arrayMode ? type.$asArray(arrayMode, location === 'search') : type;
      if (type.name === 'string' && !arrayMode && location === 'path' && config.value === undefined)
        config.value = '';
      // for 0.2.x; in 0.3.0+ do not automatically default to ""
      var isOptional = config.value !== undefined;
      var squash = getSquashPolicy(config, isOptional);
      var replace = getReplace(config, arrayMode, isOptional, squash);
      function unwrapShorthand(config) {
        var keys = isObject(config) ? objectKeys(config) : [];
        var isShorthand = indexOf(keys, 'value') === -1 && indexOf(keys, 'type') === -1 && indexOf(keys, 'squash') === -1 && indexOf(keys, 'array') === -1;
        if (isShorthand)
          config = { value: config };
        config.$$fn = isInjectable(config.value) ? config.value : function () {
          return config.value;
        };
        return config;
      }
      function getType(config, urlType, location) {
        if (config.type && urlType)
          throw new Error('Param \'' + id + '\' has two type configurations.');
        if (urlType)
          return urlType;
        if (!config.type)
          return location === 'config' ? $types.any : $types.string;
        return config.type instanceof Type ? config.type : new Type(config.type);
      }
      // array config: param name (param[]) overrides default settings.  explicit config overrides param name.
      function getArrayMode() {
        var arrayDefaults = { array: location === 'search' ? 'auto' : false };
        var arrayParamNomenclature = id.match(/\[\]$/) ? { array: true } : {};
        return extend(arrayDefaults, arrayParamNomenclature, config).array;
      }
      /**
     * returns false, true, or the squash value to indicate the "default parameter url squash policy".
     */
      function getSquashPolicy(config, isOptional) {
        var squash = config.squash;
        if (!isOptional || squash === false)
          return false;
        if (!isDefined(squash) || squash == null)
          return defaultSquashPolicy;
        if (squash === true || isString(squash))
          return squash;
        throw new Error('Invalid squash policy: \'' + squash + '\'. Valid policies: false, true, or arbitrary string');
      }
      function getReplace(config, arrayMode, isOptional, squash) {
        var replace, configuredKeys, defaultPolicy = [
            {
              from: '',
              to: isOptional || arrayMode ? undefined : ''
            },
            {
              from: null,
              to: isOptional || arrayMode ? undefined : ''
            }
          ];
        replace = isArray(config.replace) ? config.replace : [];
        if (isString(squash))
          replace.push({
            from: squash,
            to: undefined
          });
        configuredKeys = map(replace, function (item) {
          return item.from;
        });
        return filter(defaultPolicy, function (item) {
          return indexOf(configuredKeys, item.from) === -1;
        }).concat(replace);
      }
      /**
     * [Internal] Get the default value of a parameter, which may be an injectable function.
     */
      function $$getDefaultValue() {
        if (!injector)
          throw new Error('Injectable functions cannot be called at configuration time');
        return injector.invoke(config.$$fn);
      }
      /**
     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the
     * default value, which may be the result of an injectable function.
     */
      function $value(value) {
        function hasReplaceVal(val) {
          return function (obj) {
            return obj.from === val;
          };
        }
        function $replace(value) {
          var replacement = map(filter(self.replace, hasReplaceVal(value)), function (obj) {
              return obj.to;
            });
          return replacement.length ? replacement[0] : value;
        }
        value = $replace(value);
        return isDefined(value) ? self.type.decode(value) : $$getDefaultValue();
      }
      function toString() {
        return '{Param:' + id + ' ' + type + ' squash: \'' + squash + '\' optional: ' + isOptional + '}';
      }
      extend(this, {
        id: id,
        type: type,
        location: location,
        array: arrayMode,
        squash: squash,
        replace: replace,
        isOptional: isOptional,
        value: $value,
        dynamic: undefined,
        config: config,
        toString: toString
      });
    };
    function ParamSet(params) {
      extend(this, params || {});
    }
    ParamSet.prototype = {
      $$new: function () {
        return inherit(this, extend(new ParamSet(), { $$parent: this }));
      },
      $$keys: function () {
        var keys = [], chain = [], parent = this, ignore = objectKeys(ParamSet.prototype);
        while (parent) {
          chain.push(parent);
          parent = parent.$$parent;
        }
        chain.reverse();
        forEach(chain, function (paramset) {
          forEach(objectKeys(paramset), function (key) {
            if (indexOf(keys, key) === -1 && indexOf(ignore, key) === -1)
              keys.push(key);
          });
        });
        return keys;
      },
      $$values: function (paramValues) {
        var values = {}, self = this;
        forEach(self.$$keys(), function (key) {
          values[key] = self[key].value(paramValues && paramValues[key]);
        });
        return values;
      },
      $$equals: function (paramValues1, paramValues2) {
        var equal = true, self = this;
        forEach(self.$$keys(), function (key) {
          var left = paramValues1 && paramValues1[key], right = paramValues2 && paramValues2[key];
          if (!self[key].type.equals(left, right))
            equal = false;
        });
        return equal;
      },
      $$validates: function $$validate(paramValues) {
        var result = true, isOptional, val, param, self = this;
        forEach(this.$$keys(), function (key) {
          param = self[key];
          val = paramValues[key];
          isOptional = !val && param.isOptional;
          result = result && (isOptional || !!param.type.is(val));
        });
        return result;
      },
      $$parent: undefined
    };
    this.ParamSet = ParamSet;
  }
  // Register as a provider so it's available to other providers
  angular.module('ui.router.util').provider('$urlMatcherFactory', $UrlMatcherFactory);
  angular.module('ui.router.util').run([
    '$urlMatcherFactory',
    function ($urlMatcherFactory) {
    }
  ]);
  /**
 * @ngdoc object
 * @name ui.router.router.$urlRouterProvider
 *
 * @requires ui.router.util.$urlMatcherFactoryProvider
 * @requires $locationProvider
 *
 * @description
 * `$urlRouterProvider` has the responsibility of watching `$location`. 
 * When `$location` changes it runs through a list of rules one by one until a 
 * match is found. `$urlRouterProvider` is used behind the scenes anytime you specify 
 * a url in a state configuration. All urls are compiled into a UrlMatcher object.
 *
 * There are several methods on `$urlRouterProvider` that make it useful to use directly
 * in your module config.
 */
  $UrlRouterProvider.$inject = [
    '$locationProvider',
    '$urlMatcherFactoryProvider'
  ];
  function $UrlRouterProvider($locationProvider, $urlMatcherFactory) {
    var rules = [], otherwise = null, interceptDeferred = false, listener;
    // Returns a string that is a prefix of all strings matching the RegExp
    function regExpPrefix(re) {
      var prefix = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(re.source);
      return prefix != null ? prefix[1].replace(/\\(.)/g, '$1') : '';
    }
    // Interpolates matched values into a String.replace()-style pattern
    function interpolate(pattern, match) {
      return pattern.replace(/\$(\$|\d{1,2})/, function (m, what) {
        return match[what === '$' ? 0 : Number(what)];
      });
    }
    /**
   * @ngdoc function
   * @name ui.router.router.$urlRouterProvider#rule
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Defines rules that are used by `$urlRouterProvider` to find matches for
   * specific URLs.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *   // Here's an example of how you might allow case insensitive urls
   *   $urlRouterProvider.rule(function ($injector, $location) {
   *     var path = $location.path(),
   *         normalized = path.toLowerCase();
   *
   *     if (path !== normalized) {
   *       return normalized;
   *     }
   *   });
   * });
   * </pre>
   *
   * @param {object} rule Handler function that takes `$injector` and `$location`
   * services as arguments. You can use them to return a valid path as a string.
   *
   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance
   */
    this.rule = function (rule) {
      if (!isFunction(rule))
        throw new Error('\'rule\' must be a function');
      rules.push(rule);
      return this;
    };
    /**
   * @ngdoc object
   * @name ui.router.router.$urlRouterProvider#otherwise
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Defines a path that is used when an invalid route is requested.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *   // if the path doesn't match any of the urls you configured
   *   // otherwise will take care of routing the user to the
   *   // specified url
   *   $urlRouterProvider.otherwise('/index');
   *
   *   // Example of using function rule as param
   *   $urlRouterProvider.otherwise(function ($injector, $location) {
   *     return '/a/valid/url';
   *   });
   * });
   * </pre>
   *
   * @param {string|object} rule The url path you want to redirect to or a function 
   * rule that returns the url path. The function version is passed two params: 
   * `$injector` and `$location` services, and must return a url string.
   *
   * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance
   */
    this.otherwise = function (rule) {
      if (isString(rule)) {
        var redirect = rule;
        rule = function () {
          return redirect;
        };
      } else if (!isFunction(rule))
        throw new Error('\'rule\' must be a function');
      otherwise = rule;
      return this;
    };
    function handleIfMatch($injector, handler, match) {
      if (!match)
        return false;
      var result = $injector.invoke(handler, handler, { $match: match });
      return isDefined(result) ? result : true;
    }
    /**
   * @ngdoc function
   * @name ui.router.router.$urlRouterProvider#when
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Registers a handler for a given url matching. if handle is a string, it is
   * treated as a redirect, and is interpolated according to the syntax of match
   * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).
   *
   * If the handler is a function, it is injectable. It gets invoked if `$location`
   * matches. You have the option of inject the match object as `$match`.
   *
   * The handler can return
   *
   * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`
   *   will continue trying to find another one that matches.
   * - **string** which is treated as a redirect and passed to `$location.url()`
   * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {
   *     if ($state.$current.navigable !== state ||
   *         !equalForKeys($match, $stateParams) {
   *      $state.transitionTo(state, $match, false);
   *     }
   *   });
   * });
   * </pre>
   *
   * @param {string|object} what The incoming path that you want to redirect.
   * @param {string|object} handler The path you want to redirect your user to.
   */
    this.when = function (what, handler) {
      var redirect, handlerIsString = isString(handler);
      if (isString(what))
        what = $urlMatcherFactory.compile(what);
      if (!handlerIsString && !isFunction(handler) && !isArray(handler))
        throw new Error('invalid \'handler\' in when()');
      var strategies = {
          matcher: function (what, handler) {
            if (handlerIsString) {
              redirect = $urlMatcherFactory.compile(handler);
              handler = [
                '$match',
                function ($match) {
                  return redirect.format($match);
                }
              ];
            }
            return extend(function ($injector, $location) {
              return handleIfMatch($injector, handler, what.exec($location.path(), $location.search()));
            }, { prefix: isString(what.prefix) ? what.prefix : '' });
          },
          regex: function (what, handler) {
            if (what.global || what.sticky)
              throw new Error('when() RegExp must not be global or sticky');
            if (handlerIsString) {
              redirect = handler;
              handler = [
                '$match',
                function ($match) {
                  return interpolate(redirect, $match);
                }
              ];
            }
            return extend(function ($injector, $location) {
              return handleIfMatch($injector, handler, what.exec($location.path()));
            }, { prefix: regExpPrefix(what) });
          }
        };
      var check = {
          matcher: $urlMatcherFactory.isMatcher(what),
          regex: what instanceof RegExp
        };
      for (var n in check) {
        if (check[n])
          return this.rule(strategies[n](what, handler));
      }
      throw new Error('invalid \'what\' in when()');
    };
    /**
   * @ngdoc function
   * @name ui.router.router.$urlRouterProvider#deferIntercept
   * @methodOf ui.router.router.$urlRouterProvider
   *
   * @description
   * Disables (or enables) deferring location change interception.
   *
   * If you wish to customize the behavior of syncing the URL (for example, if you wish to
   * defer a transition but maintain the current URL), call this method at configuration time.
   * Then, at run time, call `$urlRouter.listen()` after you have configured your own
   * `$locationChangeSuccess` event handler.
   *
   * @example
   * <pre>
   * var app = angular.module('app', ['ui.router.router']);
   *
   * app.config(function ($urlRouterProvider) {
   *
   *   // Prevent $urlRouter from automatically intercepting URL changes;
   *   // this allows you to configure custom behavior in between
   *   // location changes and route synchronization:
   *   $urlRouterProvider.deferIntercept();
   *
   * }).run(function ($rootScope, $urlRouter, UserService) {
   *
   *   $rootScope.$on('$locationChangeSuccess', function(e) {
   *     // UserService is an example service for managing user state
   *     if (UserService.isLoggedIn()) return;
   *
   *     // Prevent $urlRouter's default handler from firing
   *     e.preventDefault();
   *
   *     UserService.handleLogin().then(function() {
   *       // Once the user has logged in, sync the current URL
   *       // to the router:
   *       $urlRouter.sync();
   *     });
   *   });
   *
   *   // Configures $urlRouter's listener *after* your custom listener
   *   $urlRouter.listen();
   * });
   * </pre>
   *
   * @param {boolean} defer Indicates whether to defer location change interception. Passing
            no parameter is equivalent to `true`.
   */
    this.deferIntercept = function (defer) {
      if (defer === undefined)
        defer = true;
      interceptDeferred = defer;
    };
    /**
   * @ngdoc object
   * @name ui.router.router.$urlRouter
   *
   * @requires $location
   * @requires $rootScope
   * @requires $injector
   * @requires $browser
   *
   * @description
   *
   */
    this.$get = $get;
    $get.$inject = [
      '$location',
      '$rootScope',
      '$injector',
      '$browser'
    ];
    function $get($location, $rootScope, $injector, $browser) {
      var baseHref = $browser.baseHref(), location = $location.url(), lastPushedUrl;
      function appendBasePath(url, isHtml5, absolute) {
        if (baseHref === '/')
          return url;
        if (isHtml5)
          return baseHref.slice(0, -1) + url;
        if (absolute)
          return baseHref.slice(1) + url;
        return url;
      }
      // TODO: Optimize groups of rules with non-empty prefix into some sort of decision tree
      function update(evt) {
        if (evt && evt.defaultPrevented)
          return;
        var ignoreUpdate = lastPushedUrl && $location.url() === lastPushedUrl;
        lastPushedUrl = undefined;
        if (ignoreUpdate)
          return true;
        function check(rule) {
          var handled = rule($injector, $location);
          if (!handled)
            return false;
          if (isString(handled))
            $location.replace().url(handled);
          return true;
        }
        var n = rules.length, i;
        for (i = 0; i < n; i++) {
          if (check(rules[i]))
            return;
        }
        // always check otherwise last to allow dynamic updates to the set of rules
        if (otherwise)
          check(otherwise);
      }
      function listen() {
        listener = listener || $rootScope.$on('$locationChangeSuccess', update);
        return listener;
      }
      if (!interceptDeferred)
        listen();
      return {
        sync: function () {
          update();
        },
        listen: function () {
          return listen();
        },
        update: function (read) {
          if (read) {
            location = $location.url();
            return;
          }
          if ($location.url() === location)
            return;
          $location.url(location);
          $location.replace();
        },
        push: function (urlMatcher, params, options) {
          $location.url(urlMatcher.format(params || {}));
          lastPushedUrl = options && options.$$avoidResync ? $location.url() : undefined;
          if (options && options.replace)
            $location.replace();
        },
        href: function (urlMatcher, params, options) {
          if (!urlMatcher.validates(params))
            return null;
          var isHtml5 = $locationProvider.html5Mode();
          if (angular.isObject(isHtml5)) {
            isHtml5 = isHtml5.enabled;
          }
          var url = urlMatcher.format(params);
          options = options || {};
          if (!isHtml5 && url !== null) {
            url = '#' + $locationProvider.hashPrefix() + url;
          }
          url = appendBasePath(url, isHtml5, options.absolute);
          if (!options.absolute || !url) {
            return url;
          }
          var slash = !isHtml5 && url ? '/' : '', port = $location.port();
          port = port === 80 || port === 443 ? '' : ':' + port;
          return [
            $location.protocol(),
            '://',
            $location.host(),
            port,
            slash,
            url
          ].join('');
        }
      };
    }
  }
  angular.module('ui.router.router').provider('$urlRouter', $UrlRouterProvider);
  /**
 * @ngdoc object
 * @name ui.router.state.$stateProvider
 *
 * @requires ui.router.router.$urlRouterProvider
 * @requires ui.router.util.$urlMatcherFactoryProvider
 *
 * @description
 * The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely
 * on state.
 *
 * A state corresponds to a "place" in the application in terms of the overall UI and
 * navigation. A state describes (via the controller / template / view properties) what
 * the UI looks like and does at that place.
 *
 * States often have things in common, and the primary way of factoring out these
 * commonalities in this model is via the state hierarchy, i.e. parent/child states aka
 * nested states.
 *
 * The `$stateProvider` provides interfaces to declare these states for your app.
 */
  $StateProvider.$inject = [
    '$urlRouterProvider',
    '$urlMatcherFactoryProvider'
  ];
  function $StateProvider($urlRouterProvider, $urlMatcherFactory) {
    var root, states = {}, $state, queue = {}, abstractKey = 'abstract';
    // Builds state properties from definition passed to registerState()
    var stateBuilder = {
        parent: function (state) {
          if (isDefined(state.parent) && state.parent)
            return findState(state.parent);
          // regex matches any valid composite state name
          // would match "contact.list" but not "contacts"
          var compositeName = /^(.+)\.[^.]+$/.exec(state.name);
          return compositeName ? findState(compositeName[1]) : root;
        },
        data: function (state) {
          if (state.parent && state.parent.data) {
            state.data = state.self.data = extend({}, state.parent.data, state.data);
          }
          return state.data;
        },
        url: function (state) {
          var url = state.url, config = { params: state.params || {} };
          if (isString(url)) {
            if (url.charAt(0) == '^')
              return $urlMatcherFactory.compile(url.substring(1), config);
            return (state.parent.navigable || root).url.concat(url, config);
          }
          if (!url || $urlMatcherFactory.isMatcher(url))
            return url;
          throw new Error('Invalid url \'' + url + '\' in state \'' + state + '\'');
        },
        navigable: function (state) {
          return state.url ? state : state.parent ? state.parent.navigable : null;
        },
        ownParams: function (state) {
          var params = state.url && state.url.params || new $$UMFP.ParamSet();
          forEach(state.params || {}, function (config, id) {
            if (!params[id])
              params[id] = new $$UMFP.Param(id, null, config, 'config');
          });
          return params;
        },
        params: function (state) {
          return state.parent && state.parent.params ? extend(state.parent.params.$$new(), state.ownParams) : new $$UMFP.ParamSet();
        },
        views: function (state) {
          var views = {};
          forEach(isDefined(state.views) ? state.views : { '': state }, function (view, name) {
            if (name.indexOf('@') < 0)
              name += '@' + state.parent.name;
            views[name] = view;
          });
          return views;
        },
        path: function (state) {
          return state.parent ? state.parent.path.concat(state) : [];  // exclude root from path
        },
        includes: function (state) {
          var includes = state.parent ? extend({}, state.parent.includes) : {};
          includes[state.name] = true;
          return includes;
        },
        $delegates: {}
      };
    function isRelative(stateName) {
      return stateName.indexOf('.') === 0 || stateName.indexOf('^') === 0;
    }
    function findState(stateOrName, base) {
      if (!stateOrName)
        return undefined;
      var isStr = isString(stateOrName), name = isStr ? stateOrName : stateOrName.name, path = isRelative(name);
      if (path) {
        if (!base)
          throw new Error('No reference point given for path \'' + name + '\'');
        base = findState(base);
        var rel = name.split('.'), i = 0, pathLength = rel.length, current = base;
        for (; i < pathLength; i++) {
          if (rel[i] === '' && i === 0) {
            current = base;
            continue;
          }
          if (rel[i] === '^') {
            if (!current.parent)
              throw new Error('Path \'' + name + '\' not valid for state \'' + base.name + '\'');
            current = current.parent;
            continue;
          }
          break;
        }
        rel = rel.slice(i).join('.');
        name = current.name + (current.name && rel ? '.' : '') + rel;
      }
      var state = states[name];
      if (state && (isStr || !isStr && (state === stateOrName || state.self === stateOrName))) {
        return state;
      }
      return undefined;
    }
    function queueState(parentName, state) {
      if (!queue[parentName]) {
        queue[parentName] = [];
      }
      queue[parentName].push(state);
    }
    function flushQueuedChildren(parentName) {
      var queued = queue[parentName] || [];
      while (queued.length) {
        registerState(queued.shift());
      }
    }
    function registerState(state) {
      // Wrap a new object around the state so we can store our private details easily.
      state = inherit(state, {
        self: state,
        resolve: state.resolve || {},
        toString: function () {
          return this.name;
        }
      });
      var name = state.name;
      if (!isString(name) || name.indexOf('@') >= 0)
        throw new Error('State must have a valid name');
      if (states.hasOwnProperty(name))
        throw new Error('State \'' + name + '\'\' is already defined');
      // Get parent name
      var parentName = name.indexOf('.') !== -1 ? name.substring(0, name.lastIndexOf('.')) : isString(state.parent) ? state.parent : isObject(state.parent) && isString(state.parent.name) ? state.parent.name : '';
      // If parent is not registered yet, add state to queue and register later
      if (parentName && !states[parentName]) {
        return queueState(parentName, state.self);
      }
      for (var key in stateBuilder) {
        if (isFunction(stateBuilder[key]))
          state[key] = stateBuilder[key](state, stateBuilder.$delegates[key]);
      }
      states[name] = state;
      // Register the state in the global state list and with $urlRouter if necessary.
      if (!state[abstractKey] && state.url) {
        $urlRouterProvider.when(state.url, [
          '$match',
          '$stateParams',
          function ($match, $stateParams) {
            if ($state.$current.navigable != state || !equalForKeys($match, $stateParams)) {
              $state.transitionTo(state, $match, {
                inherit: true,
                location: false
              });
            }
          }
        ]);
      }
      // Register any queued children
      flushQueuedChildren(name);
      return state;
    }
    // Checks text to see if it looks like a glob.
    function isGlob(text) {
      return text.indexOf('*') > -1;
    }
    // Returns true if glob matches current $state name.
    function doesStateMatchGlob(glob) {
      var globSegments = glob.split('.'), segments = $state.$current.name.split('.');
      //match greedy starts
      if (globSegments[0] === '**') {
        segments = segments.slice(indexOf(segments, globSegments[1]));
        segments.unshift('**');
      }
      //match greedy ends
      if (globSegments[globSegments.length - 1] === '**') {
        segments.splice(indexOf(segments, globSegments[globSegments.length - 2]) + 1, Number.MAX_VALUE);
        segments.push('**');
      }
      if (globSegments.length != segments.length) {
        return false;
      }
      //match single stars
      for (var i = 0, l = globSegments.length; i < l; i++) {
        if (globSegments[i] === '*') {
          segments[i] = '*';
        }
      }
      return segments.join('') === globSegments.join('');
    }
    // Implicit root state that is always active
    root = registerState({
      name: '',
      url: '^',
      views: null,
      'abstract': true
    });
    root.navigable = null;
    /**
   * @ngdoc function
   * @name ui.router.state.$stateProvider#decorator
   * @methodOf ui.router.state.$stateProvider
   *
   * @description
   * Allows you to extend (carefully) or override (at your own peril) the 
   * `stateBuilder` object used internally by `$stateProvider`. This can be used 
   * to add custom functionality to ui-router, for example inferring templateUrl 
   * based on the state name.
   *
   * When passing only a name, it returns the current (original or decorated) builder
   * function that matches `name`.
   *
   * The builder functions that can be decorated are listed below. Though not all
   * necessarily have a good use case for decoration, that is up to you to decide.
   *
   * In addition, users can attach custom decorators, which will generate new 
   * properties within the state's internal definition. There is currently no clear 
   * use-case for this beyond accessing internal states (i.e. $state.$current), 
   * however, expect this to become increasingly relevant as we introduce additional 
   * meta-programming features.
   *
   * **Warning**: Decorators should not be interdependent because the order of 
   * execution of the builder functions in non-deterministic. Builder functions 
   * should only be dependent on the state definition object and super function.
   *
   *
   * Existing builder functions and current return values:
   *
   * - **parent** `{object}` - returns the parent state object.
   * - **data** `{object}` - returns state data, including any inherited data that is not
   *   overridden by own values (if any).
   * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}
   *   or `null`.
   * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is 
   *   navigable).
   * - **params** `{object}` - returns an array of state params that are ensured to 
   *   be a super-set of parent's params.
   * - **views** `{object}` - returns a views object where each key is an absolute view 
   *   name (i.e. "viewName@stateName") and each value is the config object 
   *   (template, controller) for the view. Even when you don't use the views object 
   *   explicitly on a state config, one is still created for you internally.
   *   So by decorating this builder function you have access to decorating template 
   *   and controller properties.
   * - **ownParams** `{object}` - returns an array of params that belong to the state, 
   *   not including any params defined by ancestor states.
   * - **path** `{string}` - returns the full path from the root down to this state. 
   *   Needed for state activation.
   * - **includes** `{object}` - returns an object that includes every state that 
   *   would pass a `$state.includes()` test.
   *
   * @example
   * <pre>
   * // Override the internal 'views' builder with a function that takes the state
   * // definition, and a reference to the internal function being overridden:
   * $stateProvider.decorator('views', function (state, parent) {
   *   var result = {},
   *       views = parent(state);
   *
   *   angular.forEach(views, function (config, name) {
   *     var autoName = (state.name + '.' + name).replace('.', '/');
   *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';
   *     result[name] = config;
   *   });
   *   return result;
   * });
   *
   * $stateProvider.state('home', {
   *   views: {
   *     'contact.list': { controller: 'ListController' },
   *     'contact.item': { controller: 'ItemController' }
   *   }
   * });
   *
   * // ...
   *
   * $state.go('home');
   * // Auto-populates list and item views with /partials/home/contact/list.html,
   * // and /partials/home/contact/item.html, respectively.
   * </pre>
   *
   * @param {string} name The name of the builder function to decorate. 
   * @param {object} func A function that is responsible for decorating the original 
   * builder function. The function receives two parameters:
   *
   *   - `{object}` - state - The state config object.
   *   - `{object}` - super - The original builder function.
   *
   * @return {object} $stateProvider - $stateProvider instance
   */
    this.decorator = decorator;
    function decorator(name, func) {
      /*jshint validthis: true */
      if (isString(name) && !isDefined(func)) {
        return stateBuilder[name];
      }
      if (!isFunction(func) || !isString(name)) {
        return this;
      }
      if (stateBuilder[name] && !stateBuilder.$delegates[name]) {
        stateBuilder.$delegates[name] = stateBuilder[name];
      }
      stateBuilder[name] = func;
      return this;
    }
    /**
   * @ngdoc function
   * @name ui.router.state.$stateProvider#state
   * @methodOf ui.router.state.$stateProvider
   *
   * @description
   * Registers a state configuration under a given state name. The stateConfig object
   * has the following acceptable properties.
   *
   * @param {string} name A unique state name, e.g. "home", "about", "contacts".
   * To create a parent/child state use a dot, e.g. "about.sales", "home.newest".
   * @param {object} stateConfig State configuration object.
   * @param {string|function=} stateConfig.template
   * <a id='template'></a>
   *   html template as a string or a function that returns
   *   an html template as a string which should be used by the uiView directives. This property 
   *   takes precedence over templateUrl.
   *   
   *   If `template` is a function, it will be called with the following parameters:
   *
   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by
   *     applying the current state
   *
   * <pre>template:
   *   "<h1>inline template definition</h1>" +
   *   "<div ui-view></div>"</pre>
   * <pre>template: function(params) {
   *       return "<h1>generated template</h1>"; }</pre>
   * </div>
   *
   * @param {string|function=} stateConfig.templateUrl
   * <a id='templateUrl'></a>
   *
   *   path or function that returns a path to an html
   *   template that should be used by uiView.
   *   
   *   If `templateUrl` is a function, it will be called with the following parameters:
   *
   *   - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by 
   *     applying the current state
   *
   * <pre>templateUrl: "home.html"</pre>
   * <pre>templateUrl: function(params) {
   *     return myTemplates[params.pageId]; }</pre>
   *
   * @param {function=} stateConfig.templateProvider
   * <a id='templateProvider'></a>
   *    Provider function that returns HTML content string.
   * <pre> templateProvider:
   *       function(MyTemplateService, params) {
   *         return MyTemplateService.getTemplate(params.pageId);
   *       }</pre>
   *
   * @param {string|function=} stateConfig.controller
   * <a id='controller'></a>
   *
   *  Controller fn that should be associated with newly
   *   related scope or the name of a registered controller if passed as a string.
   *   Optionally, the ControllerAs may be declared here.
   * <pre>controller: "MyRegisteredController"</pre>
   * <pre>controller:
   *     "MyRegisteredController as fooCtrl"}</pre>
   * <pre>controller: function($scope, MyService) {
   *     $scope.data = MyService.getData(); }</pre>
   *
   * @param {function=} stateConfig.controllerProvider
   * <a id='controllerProvider'></a>
   *
   * Injectable provider function that returns the actual controller or string.
   * <pre>controllerProvider:
   *   function(MyResolveData) {
   *     if (MyResolveData.foo)
   *       return "FooCtrl"
   *     else if (MyResolveData.bar)
   *       return "BarCtrl";
   *     else return function($scope) {
   *       $scope.baz = "Qux";
   *     }
   *   }</pre>
   *
   * @param {string=} stateConfig.controllerAs
   * <a id='controllerAs'></a>
   * 
   * A controller alias name. If present the controller will be
   *   published to scope under the controllerAs name.
   * <pre>controllerAs: "myCtrl"</pre>
   *
   * @param {object=} stateConfig.resolve
   * <a id='resolve'></a>
   *
   * An optional map&lt;string, function&gt; of dependencies which
   *   should be injected into the controller. If any of these dependencies are promises, 
   *   the router will wait for them all to be resolved before the controller is instantiated.
   *   If all the promises are resolved successfully, the $stateChangeSuccess event is fired
   *   and the values of the resolved promises are injected into any controllers that reference them.
   *   If any  of the promises are rejected the $stateChangeError event is fired.
   *
   *   The map object is:
   *   
   *   - key - {string}: name of dependency to be injected into controller
   *   - factory - {string|function}: If string then it is alias for service. Otherwise if function, 
   *     it is injected and return value it treated as dependency. If result is a promise, it is 
   *     resolved before its value is injected into controller.
   *
   * <pre>resolve: {
   *     myResolve1:
   *       function($http, $stateParams) {
   *         return $http.get("/api/foos/"+stateParams.fooID);
   *       }
   *     }</pre>
   *
   * @param {string=} stateConfig.url
   * <a id='url'></a>
   *
   *   A url fragment with optional parameters. When a state is navigated or
   *   transitioned to, the `$stateParams` service will be populated with any 
   *   parameters that were passed.
   *
   * examples:
   * <pre>url: "/home"
   * url: "/users/:userid"
   * url: "/books/{bookid:[a-zA-Z_-]}"
   * url: "/books/{categoryid:int}"
   * url: "/books/{publishername:string}/{categoryid:int}"
   * url: "/messages?before&after"
   * url: "/messages?{before:date}&{after:date}"</pre>
   * url: "/messages/:mailboxid?{before:date}&{after:date}"
   *
   * @param {object=} stateConfig.views
   * <a id='views'></a>
   * an optional map&lt;string, object&gt; which defined multiple views, or targets views
   * manually/explicitly.
   *
   * Examples:
   *
   * Targets three named `ui-view`s in the parent state's template
   * <pre>views: {
   *     header: {
   *       controller: "headerCtrl",
   *       templateUrl: "header.html"
   *     }, body: {
   *       controller: "bodyCtrl",
   *       templateUrl: "body.html"
   *     }, footer: {
   *       controller: "footCtrl",
   *       templateUrl: "footer.html"
   *     }
   *   }</pre>
   *
   * Targets named `ui-view="header"` from grandparent state 'top''s template, and named `ui-view="body" from parent state's template.
   * <pre>views: {
   *     'header@top': {
   *       controller: "msgHeaderCtrl",
   *       templateUrl: "msgHeader.html"
   *     }, 'body': {
   *       controller: "messagesCtrl",
   *       templateUrl: "messages.html"
   *     }
   *   }</pre>
   *
   * @param {boolean=} [stateConfig.abstract=false]
   * <a id='abstract'></a>
   * An abstract state will never be directly activated,
   *   but can provide inherited properties to its common children states.
   * <pre>abstract: true</pre>
   *
   * @param {function=} stateConfig.onEnter
   * <a id='onEnter'></a>
   *
   * Callback function for when a state is entered. Good way
   *   to trigger an action or dispatch an event, such as opening a dialog.
   * If minifying your scripts, make sure to explictly annotate this function,
   * because it won't be automatically annotated by your build tools.
   *
   * <pre>onEnter: function(MyService, $stateParams) {
   *     MyService.foo($stateParams.myParam);
   * }</pre>
   *
   * @param {function=} stateConfig.onExit
   * <a id='onExit'></a>
   *
   * Callback function for when a state is exited. Good way to
   *   trigger an action or dispatch an event, such as opening a dialog.
   * If minifying your scripts, make sure to explictly annotate this function,
   * because it won't be automatically annotated by your build tools.
   *
   * <pre>onExit: function(MyService, $stateParams) {
   *     MyService.cleanup($stateParams.myParam);
   * }</pre>
   *
   * @param {boolean=} [stateConfig.reloadOnSearch=true]
   * <a id='reloadOnSearch'></a>
   *
   * If `false`, will not retrigger the same state
   *   just because a search/query parameter has changed (via $location.search() or $location.hash()). 
   *   Useful for when you'd like to modify $location.search() without triggering a reload.
   * <pre>reloadOnSearch: false</pre>
   *
   * @param {object=} stateConfig.data
   * <a id='data'></a>
   *
   * Arbitrary data object, useful for custom configuration.  The parent state's `data` is
   *   prototypally inherited.  In other words, adding a data property to a state adds it to
   *   the entire subtree via prototypal inheritance.
   *
   * <pre>data: {
   *     requiredRole: 'foo'
   * } </pre>
   *
   * @param {object=} stateConfig.params
   * <a id='params'></a>
   *
   * A map which optionally configures parameters declared in the `url`, or
   *   defines additional non-url parameters.  For each parameter being
   *   configured, add a configuration object keyed to the name of the parameter.
   *
   *   Each parameter configuration object may contain the following properties:
   *
   *   - ** value ** - {object|function=}: specifies the default value for this
   *     parameter.  This implicitly sets this parameter as optional.
   *
   *     When UI-Router routes to a state and no value is
   *     specified for this parameter in the URL or transition, the
   *     default value will be used instead.  If `value` is a function,
   *     it will be injected and invoked, and the return value used.
   *
   *     *Note*: `undefined` is treated as "no default value" while `null`
   *     is treated as "the default value is `null`".
   *
   *     *Shorthand*: If you only need to configure the default value of the
   *     parameter, you may use a shorthand syntax.   In the **`params`**
   *     map, instead mapping the param name to a full parameter configuration
   *     object, simply set map it to the default parameter value, e.g.:
   *
   * <pre>// define a parameter's default value
   * params: {
   *     param1: { value: "defaultValue" }
   * }
   * // shorthand default values
   * params: {
   *     param1: "defaultValue",
   *     param2: "param2Default"
   * }</pre>
   *
   *   - ** array ** - {boolean=}: *(default: false)* If true, the param value will be
   *     treated as an array of values.  If you specified a Type, the value will be
   *     treated as an array of the specified Type.  Note: query parameter values
   *     default to a special `"auto"` mode.
   *
   *     For query parameters in `"auto"` mode, if multiple  values for a single parameter
   *     are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values
   *     are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if
   *     only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single
   *     value (e.g.: `{ foo: '1' }`).
   *
   * <pre>params: {
   *     param1: { array: true }
   * }</pre>
   *
   *   - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when
   *     the current parameter value is the same as the default value. If `squash` is not set, it uses the
   *     configured default squash policy.
   *     (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})
   *
   *   There are three squash settings:
   *
   *     - false: The parameter's default value is not squashed.  It is encoded and included in the URL
   *     - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed
   *       by slashes in the state's `url` declaration, then one of those slashes are omitted.
   *       This can allow for cleaner looking URLs.
   *     - `"<arbitrary string>"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.
   *
   * <pre>params: {
   *     param1: {
   *       value: "defaultId",
   *       squash: true
   * } }
   * // squash "defaultValue" to "~"
   * params: {
   *     param1: {
   *       value: "defaultValue",
   *       squash: "~"
   * } }
   * </pre>
   *
   *
   * @example
   * <pre>
   * // Some state name examples
   *
   * // stateName can be a single top-level name (must be unique).
   * $stateProvider.state("home", {});
   *
   * // Or it can be a nested state name. This state is a child of the
   * // above "home" state.
   * $stateProvider.state("home.newest", {});
   *
   * // Nest states as deeply as needed.
   * $stateProvider.state("home.newest.abc.xyz.inception", {});
   *
   * // state() returns $stateProvider, so you can chain state declarations.
   * $stateProvider
   *   .state("home", {})
   *   .state("about", {})
   *   .state("contacts", {});
   * </pre>
   *
   */
    this.state = state;
    function state(name, definition) {
      /*jshint validthis: true */
      if (isObject(name))
        definition = name;
      else
        definition.name = name;
      registerState(definition);
      return this;
    }
    /**
   * @ngdoc object
   * @name ui.router.state.$state
   *
   * @requires $rootScope
   * @requires $q
   * @requires ui.router.state.$view
   * @requires $injector
   * @requires ui.router.util.$resolve
   * @requires ui.router.state.$stateParams
   * @requires ui.router.router.$urlRouter
   *
   * @property {object} params A param object, e.g. {sectionId: section.id)}, that 
   * you'd like to test against the current active state.
   * @property {object} current A reference to the state's config object. However 
   * you passed it in. Useful for accessing custom data.
   * @property {object} transition Currently pending transition. A promise that'll 
   * resolve or reject.
   *
   * @description
   * `$state` service is responsible for representing states as well as transitioning
   * between them. It also provides interfaces to ask for current state or even states
   * you're coming from.
   */
    this.$get = $get;
    $get.$inject = [
      '$rootScope',
      '$q',
      '$view',
      '$injector',
      '$resolve',
      '$stateParams',
      '$urlRouter',
      '$location',
      '$urlMatcherFactory'
    ];
    function $get($rootScope, $q, $view, $injector, $resolve, $stateParams, $urlRouter, $location, $urlMatcherFactory) {
      var TransitionSuperseded = $q.reject(new Error('transition superseded'));
      var TransitionPrevented = $q.reject(new Error('transition prevented'));
      var TransitionAborted = $q.reject(new Error('transition aborted'));
      var TransitionFailed = $q.reject(new Error('transition failed'));
      // Handles the case where a state which is the target of a transition is not found, and the user
      // can optionally retry or defer the transition
      function handleRedirect(redirect, state, params, options) {
        /**
       * @ngdoc event
       * @name ui.router.state.$state#$stateNotFound
       * @eventOf ui.router.state.$state
       * @eventType broadcast on root scope
       * @description
       * Fired when a requested state **cannot be found** using the provided state name during transition.
       * The event is broadcast allowing any handlers a single chance to deal with the error (usually by
       * lazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,
       * you can see its three properties in the example. You can use `event.preventDefault()` to abort the
       * transition and the promise returned from `go` will be rejected with a `'transition aborted'` value.
       *
       * @param {Object} event Event object.
       * @param {Object} unfoundState Unfound State information. Contains: `to, toParams, options` properties.
       * @param {State} fromState Current state object.
       * @param {Object} fromParams Current state params.
       *
       * @example
       *
       * <pre>
       * // somewhere, assume lazy.state has not been defined
       * $state.go("lazy.state", {a:1, b:2}, {inherit:false});
       *
       * // somewhere else
       * $scope.$on('$stateNotFound',
       * function(event, unfoundState, fromState, fromParams){
       *     console.log(unfoundState.to); // "lazy.state"
       *     console.log(unfoundState.toParams); // {a:1, b:2}
       *     console.log(unfoundState.options); // {inherit:false} + default options
       * })
       * </pre>
       */
        var evt = $rootScope.$broadcast('$stateNotFound', redirect, state, params);
        if (evt.defaultPrevented) {
          $urlRouter.update();
          return TransitionAborted;
        }
        if (!evt.retry) {
          return null;
        }
        // Allow the handler to return a promise to defer state lookup retry
        if (options.$retry) {
          $urlRouter.update();
          return TransitionFailed;
        }
        var retryTransition = $state.transition = $q.when(evt.retry);
        retryTransition.then(function () {
          if (retryTransition !== $state.transition)
            return TransitionSuperseded;
          redirect.options.$retry = true;
          return $state.transitionTo(redirect.to, redirect.toParams, redirect.options);
        }, function () {
          return TransitionAborted;
        });
        $urlRouter.update();
        return retryTransition;
      }
      root.locals = {
        resolve: null,
        globals: { $stateParams: {} }
      };
      $state = {
        params: {},
        current: root.self,
        $current: root,
        transition: null
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#reload
     * @methodOf ui.router.state.$state
     *
     * @description
     * A method that force reloads the current state. All resolves are re-resolved, events are not re-fired, 
     * and controllers reinstantiated (bug with controllers reinstantiating right now, fixing soon).
     *
     * @example
     * <pre>
     * var app angular.module('app', ['ui.router']);
     *
     * app.controller('ctrl', function ($scope, $state) {
     *   $scope.reload = function(){
     *     $state.reload();
     *   }
     * });
     * </pre>
     *
     * `reload()` is just an alias for:
     * <pre>
     * $state.transitionTo($state.current, $stateParams, { 
     *   reload: true, inherit: false, notify: true
     * });
     * </pre>
     *
     * @returns {promise} A promise representing the state of the new transition. See
     * {@link ui.router.state.$state#methods_go $state.go}.
     */
      $state.reload = function reload() {
        return $state.transitionTo($state.current, $stateParams, {
          reload: true,
          inherit: false,
          notify: true
        });
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#go
     * @methodOf ui.router.state.$state
     *
     * @description
     * Convenience method for transitioning to a new state. `$state.go` calls 
     * `$state.transitionTo` internally but automatically sets options to 
     * `{ location: true, inherit: true, relative: $state.$current, notify: true }`. 
     * This allows you to easily use an absolute or relative to path and specify 
     * only the parameters you'd like to update (while letting unspecified parameters 
     * inherit from the currently active ancestor states).
     *
     * @example
     * <pre>
     * var app = angular.module('app', ['ui.router']);
     *
     * app.controller('ctrl', function ($scope, $state) {
     *   $scope.changeState = function () {
     *     $state.go('contact.detail');
     *   };
     * });
     * </pre>
     * <img src='../ngdoc_assets/StateGoExamples.png'/>
     *
     * @param {string} to Absolute state name or relative state path. Some examples:
     *
     * - `$state.go('contact.detail')` - will go to the `contact.detail` state
     * - `$state.go('^')` - will go to a parent state
     * - `$state.go('^.sibling')` - will go to a sibling state
     * - `$state.go('.child.grandchild')` - will go to grandchild state
     *
     * @param {object=} params A map of the parameters that will be sent to the state, 
     * will populate $stateParams. Any parameters that are not specified will be inherited from currently 
     * defined parameters. This allows, for example, going to a sibling state that shares parameters
     * specified in a parent state. Parameter inheritance only works between common ancestor states, I.e.
     * transitioning to a sibling will get you the parameters for all parents, transitioning to a child
     * will get you all current parameters, etc.
     * @param {object=} options Options object. The options are:
     *
     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`
     *    will not. If string, must be `"replace"`, which will update url and also replace last history record.
     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.
     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), 
     *    defines which state to be relative from.
     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.
     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params 
     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd
     *    use this when you want to force a reload when *everything* is the same, including search params.
     *
     * @returns {promise} A promise representing the state of the new transition.
     *
     * Possible success values:
     *
     * - $state.current
     *
     * <br/>Possible rejection values:
     *
     * - 'transition superseded' - when a newer transition has been started after this one
     * - 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener
     * - 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or
     *   when a `$stateNotFound` `event.retry` promise errors.
     * - 'transition failed' - when a state has been unsuccessfully found after 2 tries.
     * - *resolve error* - when an error has occurred with a `resolve`
     *
     */
      $state.go = function go(to, params, options) {
        return $state.transitionTo(to, params, extend({
          inherit: true,
          relative: $state.$current
        }, options));
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#transitionTo
     * @methodOf ui.router.state.$state
     *
     * @description
     * Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}
     * uses `transitionTo` internally. `$state.go` is recommended in most situations.
     *
     * @example
     * <pre>
     * var app = angular.module('app', ['ui.router']);
     *
     * app.controller('ctrl', function ($scope, $state) {
     *   $scope.changeState = function () {
     *     $state.transitionTo('contact.detail');
     *   };
     * });
     * </pre>
     *
     * @param {string} to State name.
     * @param {object=} toParams A map of the parameters that will be sent to the state,
     * will populate $stateParams.
     * @param {object=} options Options object. The options are:
     *
     * - **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`
     *    will not. If string, must be `"replace"`, which will update url and also replace last history record.
     * - **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.
     * - **`relative`** - {object=}, When transitioning with relative path (e.g '^'), 
     *    defines which state to be relative from.
     * - **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.
     * - **`reload`** (v0.2.5) - {boolean=false}, If `true` will force transition even if the state or params 
     *    have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd
     *    use this when you want to force a reload when *everything* is the same, including search params.
     *
     * @returns {promise} A promise representing the state of the new transition. See
     * {@link ui.router.state.$state#methods_go $state.go}.
     */
      $state.transitionTo = function transitionTo(to, toParams, options) {
        toParams = toParams || {};
        options = extend({
          location: true,
          inherit: false,
          relative: null,
          notify: true,
          reload: false,
          $retry: false
        }, options || {});
        var from = $state.$current, fromParams = $state.params, fromPath = from.path;
        var evt, toState = findState(to, options.relative);
        if (!isDefined(toState)) {
          var redirect = {
              to: to,
              toParams: toParams,
              options: options
            };
          var redirectResult = handleRedirect(redirect, from.self, fromParams, options);
          if (redirectResult) {
            return redirectResult;
          }
          // Always retry once if the $stateNotFound was not prevented
          // (handles either redirect changed or state lazy-definition)
          to = redirect.to;
          toParams = redirect.toParams;
          options = redirect.options;
          toState = findState(to, options.relative);
          if (!isDefined(toState)) {
            if (!options.relative)
              throw new Error('No such state \'' + to + '\'');
            throw new Error('Could not resolve \'' + to + '\' from state \'' + options.relative + '\'');
          }
        }
        if (toState[abstractKey])
          throw new Error('Cannot transition to abstract state \'' + to + '\'');
        if (options.inherit)
          toParams = inheritParams($stateParams, toParams || {}, $state.$current, toState);
        if (!toState.params.$$validates(toParams))
          return TransitionFailed;
        toParams = toState.params.$$values(toParams);
        to = toState;
        var toPath = to.path;
        // Starting from the root of the path, keep all levels that haven't changed
        var keep = 0, state = toPath[keep], locals = root.locals, toLocals = [];
        if (!options.reload) {
          while (state && state === fromPath[keep] && state.ownParams.$$equals(toParams, fromParams)) {
            locals = toLocals[keep] = state.locals;
            keep++;
            state = toPath[keep];
          }
        }
        // If we're going to the same state and all locals are kept, we've got nothing to do.
        // But clear 'transition', as we still want to cancel any other pending transitions.
        // TODO: We may not want to bump 'transition' if we're called from a location change
        // that we've initiated ourselves, because we might accidentally abort a legitimate
        // transition initiated from code?
        if (shouldTriggerReload(to, from, locals, options)) {
          if (to.self.reloadOnSearch !== false)
            $urlRouter.update();
          $state.transition = null;
          return $q.when($state.current);
        }
        // Filter parameters before we pass them to event handlers etc.
        toParams = filterByKeys(to.params.$$keys(), toParams || {});
        // Broadcast start event and cancel the transition if requested
        if (options.notify) {
          /**
         * @ngdoc event
         * @name ui.router.state.$state#$stateChangeStart
         * @eventOf ui.router.state.$state
         * @eventType broadcast on root scope
         * @description
         * Fired when the state transition **begins**. You can use `event.preventDefault()`
         * to prevent the transition from happening and then the transition promise will be
         * rejected with a `'transition prevented'` value.
         *
         * @param {Object} event Event object.
         * @param {State} toState The state being transitioned to.
         * @param {Object} toParams The params supplied to the `toState`.
         * @param {State} fromState The current state, pre-transition.
         * @param {Object} fromParams The params supplied to the `fromState`.
         *
         * @example
         *
         * <pre>
         * $rootScope.$on('$stateChangeStart',
         * function(event, toState, toParams, fromState, fromParams){
         *     event.preventDefault();
         *     // transitionTo() promise will be rejected with
         *     // a 'transition prevented' error
         * })
         * </pre>
         */
          if ($rootScope.$broadcast('$stateChangeStart', to.self, toParams, from.self, fromParams).defaultPrevented) {
            $urlRouter.update();
            return TransitionPrevented;
          }
        }
        // Resolve locals for the remaining states, but don't update any global state just
        // yet -- if anything fails to resolve the current state needs to remain untouched.
        // We also set up an inheritance chain for the locals here. This allows the view directive
        // to quickly look up the correct definition for each view in the current state. Even
        // though we create the locals object itself outside resolveState(), it is initially
        // empty and gets filled asynchronously. We need to keep track of the promise for the
        // (fully resolved) current locals, and pass this down the chain.
        var resolved = $q.when(locals);
        for (var l = keep; l < toPath.length; l++, state = toPath[l]) {
          locals = toLocals[l] = inherit(locals);
          resolved = resolveState(state, toParams, state === to, resolved, locals, options);
        }
        // Once everything is resolved, we are ready to perform the actual transition
        // and return a promise for the new state. We also keep track of what the
        // current promise is, so that we can detect overlapping transitions and
        // keep only the outcome of the last transition.
        var transition = $state.transition = resolved.then(function () {
            var l, entering, exiting;
            if ($state.transition !== transition)
              return TransitionSuperseded;
            // Exit 'from' states not kept
            for (l = fromPath.length - 1; l >= keep; l--) {
              exiting = fromPath[l];
              if (exiting.self.onExit) {
                $injector.invoke(exiting.self.onExit, exiting.self, exiting.locals.globals);
              }
              exiting.locals = null;
            }
            // Enter 'to' states not kept
            for (l = keep; l < toPath.length; l++) {
              entering = toPath[l];
              entering.locals = toLocals[l];
              if (entering.self.onEnter) {
                $injector.invoke(entering.self.onEnter, entering.self, entering.locals.globals);
              }
            }
            // Run it again, to catch any transitions in callbacks
            if ($state.transition !== transition)
              return TransitionSuperseded;
            // Update globals in $state
            $state.$current = to;
            $state.current = to.self;
            $state.params = toParams;
            copy($state.params, $stateParams);
            $state.transition = null;
            if (options.location && to.navigable) {
              $urlRouter.push(to.navigable.url, to.navigable.locals.globals.$stateParams, {
                $$avoidResync: true,
                replace: options.location === 'replace'
              });
            }
            if (options.notify) {
              /**
         * @ngdoc event
         * @name ui.router.state.$state#$stateChangeSuccess
         * @eventOf ui.router.state.$state
         * @eventType broadcast on root scope
         * @description
         * Fired once the state transition is **complete**.
         *
         * @param {Object} event Event object.
         * @param {State} toState The state being transitioned to.
         * @param {Object} toParams The params supplied to the `toState`.
         * @param {State} fromState The current state, pre-transition.
         * @param {Object} fromParams The params supplied to the `fromState`.
         */
              $rootScope.$broadcast('$stateChangeSuccess', to.self, toParams, from.self, fromParams);
            }
            $urlRouter.update(true);
            return $state.current;
          }, function (error) {
            if ($state.transition !== transition)
              return TransitionSuperseded;
            $state.transition = null;
            /**
         * @ngdoc event
         * @name ui.router.state.$state#$stateChangeError
         * @eventOf ui.router.state.$state
         * @eventType broadcast on root scope
         * @description
         * Fired when an **error occurs** during transition. It's important to note that if you
         * have any errors in your resolve functions (javascript errors, non-existent services, etc)
         * they will not throw traditionally. You must listen for this $stateChangeError event to
         * catch **ALL** errors.
         *
         * @param {Object} event Event object.
         * @param {State} toState The state being transitioned to.
         * @param {Object} toParams The params supplied to the `toState`.
         * @param {State} fromState The current state, pre-transition.
         * @param {Object} fromParams The params supplied to the `fromState`.
         * @param {Error} error The resolve error object.
         */
            evt = $rootScope.$broadcast('$stateChangeError', to.self, toParams, from.self, fromParams, error);
            if (!evt.defaultPrevented) {
              $urlRouter.update();
            }
            return $q.reject(error);
          });
        return transition;
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#is
     * @methodOf ui.router.state.$state
     *
     * @description
     * Similar to {@link ui.router.state.$state#methods_includes $state.includes},
     * but only checks for the full state name. If params is supplied then it will be
     * tested for strict equality against the current active params object, so all params
     * must match with none missing and no extras.
     *
     * @example
     * <pre>
     * $state.$current.name = 'contacts.details.item';
     *
     * // absolute name
     * $state.is('contact.details.item'); // returns true
     * $state.is(contactDetailItemStateObject); // returns true
     *
     * // relative name (. and ^), typically from a template
     * // E.g. from the 'contacts.details' template
     * <div ng-class="{highlighted: $state.is('.item')}">Item</div>
     * </pre>
     *
     * @param {string|object} stateOrName The state name (absolute or relative) or state object you'd like to check.
     * @param {object=} params A param object, e.g. `{sectionId: section.id}`, that you'd like
     * to test against the current active state.
     * @param {object=} options An options object.  The options are:
     *
     * - **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will
     * test relative to `options.relative` state (or name).
     *
     * @returns {boolean} Returns true if it is the state.
     */
      $state.is = function is(stateOrName, params, options) {
        options = extend({ relative: $state.$current }, options || {});
        var state = findState(stateOrName, options.relative);
        if (!isDefined(state)) {
          return undefined;
        }
        if ($state.$current !== state) {
          return false;
        }
        return params ? equalForKeys(state.params.$$values(params), $stateParams) : true;
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#includes
     * @methodOf ui.router.state.$state
     *
     * @description
     * A method to determine if the current active state is equal to or is the child of the
     * state stateName. If any params are passed then they will be tested for a match as well.
     * Not all the parameters need to be passed, just the ones you'd like to test for equality.
     *
     * @example
     * Partial and relative names
     * <pre>
     * $state.$current.name = 'contacts.details.item';
     *
     * // Using partial names
     * $state.includes("contacts"); // returns true
     * $state.includes("contacts.details"); // returns true
     * $state.includes("contacts.details.item"); // returns true
     * $state.includes("contacts.list"); // returns false
     * $state.includes("about"); // returns false
     *
     * // Using relative names (. and ^), typically from a template
     * // E.g. from the 'contacts.details' template
     * <div ng-class="{highlighted: $state.includes('.item')}">Item</div>
     * </pre>
     *
     * Basic globbing patterns
     * <pre>
     * $state.$current.name = 'contacts.details.item.url';
     *
     * $state.includes("*.details.*.*"); // returns true
     * $state.includes("*.details.**"); // returns true
     * $state.includes("**.item.**"); // returns true
     * $state.includes("*.details.item.url"); // returns true
     * $state.includes("*.details.*.url"); // returns true
     * $state.includes("*.details.*"); // returns false
     * $state.includes("item.**"); // returns false
     * </pre>
     *
     * @param {string} stateOrName A partial name, relative name, or glob pattern
     * to be searched for within the current state name.
     * @param {object=} params A param object, e.g. `{sectionId: section.id}`,
     * that you'd like to test against the current active state.
     * @param {object=} options An options object.  The options are:
     *
     * - **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,
     * .includes will test relative to `options.relative` state (or name).
     *
     * @returns {boolean} Returns true if it does include the state
     */
      $state.includes = function includes(stateOrName, params, options) {
        options = extend({ relative: $state.$current }, options || {});
        if (isString(stateOrName) && isGlob(stateOrName)) {
          if (!doesStateMatchGlob(stateOrName)) {
            return false;
          }
          stateOrName = $state.$current.name;
        }
        var state = findState(stateOrName, options.relative);
        if (!isDefined(state)) {
          return undefined;
        }
        if (!isDefined($state.$current.includes[state.name])) {
          return false;
        }
        return params ? equalForKeys(state.params.$$values(params), $stateParams, objectKeys(params)) : true;
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#href
     * @methodOf ui.router.state.$state
     *
     * @description
     * A url generation method that returns the compiled url for the given state populated with the given params.
     *
     * @example
     * <pre>
     * expect($state.href("about.person", { person: "bob" })).toEqual("/about/bob");
     * </pre>
     *
     * @param {string|object} stateOrName The state name or state object you'd like to generate a url from.
     * @param {object=} params An object of parameter values to fill the state's required parameters.
     * @param {object=} options Options object. The options are:
     *
     * - **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the
     *    first parameter, then the constructed href url will be built from the first navigable ancestor (aka
     *    ancestor with a valid url).
     * - **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.
     * - **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), 
     *    defines which state to be relative from.
     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. "http://www.example.com/fullurl".
     * 
     * @returns {string} compiled state url
     */
      $state.href = function href(stateOrName, params, options) {
        options = extend({
          lossy: true,
          inherit: true,
          absolute: false,
          relative: $state.$current
        }, options || {});
        var state = findState(stateOrName, options.relative);
        if (!isDefined(state))
          return null;
        if (options.inherit)
          params = inheritParams($stateParams, params || {}, $state.$current, state);
        var nav = state && options.lossy ? state.navigable : state;
        if (!nav || nav.url === undefined || nav.url === null) {
          return null;
        }
        return $urlRouter.href(nav.url, filterByKeys(state.params.$$keys(), params || {}), { absolute: options.absolute });
      };
      /**
     * @ngdoc function
     * @name ui.router.state.$state#get
     * @methodOf ui.router.state.$state
     *
     * @description
     * Returns the state configuration object for any specific state or all states.
     *
     * @param {string|object=} stateOrName (absolute or relative) If provided, will only get the config for
     * the requested state. If not provided, returns an array of ALL state configs.
     * @param {string|object=} context When stateOrName is a relative state reference, the state will be retrieved relative to context.
     * @returns {Object|Array} State configuration object or array of all objects.
     */
      $state.get = function (stateOrName, context) {
        if (arguments.length === 0)
          return map(objectKeys(states), function (name) {
            return states[name].self;
          });
        var state = findState(stateOrName, context || $state.$current);
        return state && state.self ? state.self : null;
      };
      function resolveState(state, params, paramsAreFiltered, inherited, dst, options) {
        // Make a restricted $stateParams with only the parameters that apply to this state if
        // necessary. In addition to being available to the controller and onEnter/onExit callbacks,
        // we also need $stateParams to be available for any $injector calls we make during the
        // dependency resolution process.
        var $stateParams = paramsAreFiltered ? params : filterByKeys(state.params.$$keys(), params);
        var locals = { $stateParams: $stateParams };
        // Resolve 'global' dependencies for the state, i.e. those not specific to a view.
        // We're also including $stateParams in this; that way the parameters are restricted
        // to the set that should be visible to the state, and are independent of when we update
        // the global $state and $stateParams values.
        dst.resolve = $resolve.resolve(state.resolve, locals, dst.resolve, state);
        var promises = [dst.resolve.then(function (globals) {
              dst.globals = globals;
            })];
        if (inherited)
          promises.push(inherited);
        // Resolve template and dependencies for all views.
        forEach(state.views, function (view, name) {
          var injectables = view.resolve && view.resolve !== state.resolve ? view.resolve : {};
          injectables.$template = [function () {
              return $view.load(name, {
                view: view,
                locals: locals,
                params: $stateParams,
                notify: options.notify
              }) || '';
            }];
          promises.push($resolve.resolve(injectables, locals, dst.resolve, state).then(function (result) {
            // References to the controller (only instantiated at link time)
            if (isFunction(view.controllerProvider) || isArray(view.controllerProvider)) {
              var injectLocals = angular.extend({}, injectables, locals);
              result.$$controller = $injector.invoke(view.controllerProvider, null, injectLocals);
            } else {
              result.$$controller = view.controller;
            }
            // Provide access to the state itself for internal use
            result.$$state = state;
            result.$$controllerAs = view.controllerAs;
            dst[name] = result;
          }));
        });
        // Wait for all the promises and then return the activation object
        return $q.all(promises).then(function (values) {
          return dst;
        });
      }
      return $state;
    }
    function shouldTriggerReload(to, from, locals, options) {
      if (to === from && (locals === from.locals && !options.reload || to.self.reloadOnSearch === false)) {
        return true;
      }
    }
  }
  angular.module('ui.router.state').value('$stateParams', {}).provider('$state', $StateProvider);
  $ViewProvider.$inject = [];
  function $ViewProvider() {
    this.$get = $get;
    /**
   * @ngdoc object
   * @name ui.router.state.$view
   *
   * @requires ui.router.util.$templateFactory
   * @requires $rootScope
   *
   * @description
   *
   */
    $get.$inject = [
      '$rootScope',
      '$templateFactory'
    ];
    function $get($rootScope, $templateFactory) {
      return {
        load: function load(name, options) {
          var result, defaults = {
              template: null,
              controller: null,
              view: null,
              locals: null,
              notify: true,
              async: true,
              params: {}
            };
          options = extend(defaults, options);
          if (options.view) {
            result = $templateFactory.fromConfig(options.view, options.params, options.locals);
          }
          if (result && options.notify) {
            /**
         * @ngdoc event
         * @name ui.router.state.$state#$viewContentLoading
         * @eventOf ui.router.state.$view
         * @eventType broadcast on root scope
         * @description
         *
         * Fired once the view **begins loading**, *before* the DOM is rendered.
         *
         * @param {Object} event Event object.
         * @param {Object} viewConfig The view config properties (template, controller, etc).
         *
         * @example
         *
         * <pre>
         * $scope.$on('$viewContentLoading',
         * function(event, viewConfig){
         *     // Access to all the view config properties.
         *     // and one special property 'targetView'
         *     // viewConfig.targetView
         * });
         * </pre>
         */
            $rootScope.$broadcast('$viewContentLoading', options);
          }
          return result;
        }
      };
    }
  }
  angular.module('ui.router.state').provider('$view', $ViewProvider);
  /**
 * @ngdoc object
 * @name ui.router.state.$uiViewScrollProvider
 *
 * @description
 * Provider that returns the {@link ui.router.state.$uiViewScroll} service function.
 */
  function $ViewScrollProvider() {
    var useAnchorScroll = false;
    /**
   * @ngdoc function
   * @name ui.router.state.$uiViewScrollProvider#useAnchorScroll
   * @methodOf ui.router.state.$uiViewScrollProvider
   *
   * @description
   * Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for
   * scrolling based on the url anchor.
   */
    this.useAnchorScroll = function () {
      useAnchorScroll = true;
    };
    /**
   * @ngdoc object
   * @name ui.router.state.$uiViewScroll
   *
   * @requires $anchorScroll
   * @requires $timeout
   *
   * @description
   * When called with a jqLite element, it scrolls the element into view (after a
   * `$timeout` so the DOM has time to refresh).
   *
   * If you prefer to rely on `$anchorScroll` to scroll the view to the anchor,
   * this can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.
   */
    this.$get = [
      '$anchorScroll',
      '$timeout',
      function ($anchorScroll, $timeout) {
        if (useAnchorScroll) {
          return $anchorScroll;
        }
        return function ($element) {
          $timeout(function () {
            $element[0].scrollIntoView();
          }, 0, false);
        };
      }
    ];
  }
  angular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);
  /**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-view
 *
 * @requires ui.router.state.$state
 * @requires $compile
 * @requires $controller
 * @requires $injector
 * @requires ui.router.state.$uiViewScroll
 * @requires $document
 *
 * @restrict ECA
 *
 * @description
 * The ui-view directive tells $state where to place your templates.
 *
 * @param {string=} name A view name. The name should be unique amongst the other views in the
 * same state. You can have views of the same name that live in different states.
 *
 * @param {string=} autoscroll It allows you to set the scroll behavior of the browser window
 * when a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll
 * service, {@link ui.router.state.$uiViewScroll}. This custom service let's you
 * scroll ui-view elements into view when they are populated during a state activation.
 *
 * *Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)
 * functionality, call `$uiViewScrollProvider.useAnchorScroll()`.*
 *
 * @param {string=} onload Expression to evaluate whenever the view updates.
 * 
 * @example
 * A view can be unnamed or named. 
 * <pre>
 * <!-- Unnamed -->
 * <div ui-view></div> 
 * 
 * <!-- Named -->
 * <div ui-view="viewName"></div>
 * </pre>
 *
 * You can only have one unnamed view within any template (or root html). If you are only using a 
 * single view and it is unnamed then you can populate it like so:
 * <pre>
 * <div ui-view></div> 
 * $stateProvider.state("home", {
 *   template: "<h1>HELLO!</h1>"
 * })
 * </pre>
 * 
 * The above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}
 * config property, by name, in this case an empty name:
 * <pre>
 * $stateProvider.state("home", {
 *   views: {
 *     "": {
 *       template: "<h1>HELLO!</h1>"
 *     }
 *   }    
 * })
 * </pre>
 * 
 * But typically you'll only use the views property if you name your view or have more than one view 
 * in the same template. There's not really a compelling reason to name a view if its the only one, 
 * but you could if you wanted, like so:
 * <pre>
 * <div ui-view="main"></div>
 * </pre> 
 * <pre>
 * $stateProvider.state("home", {
 *   views: {
 *     "main": {
 *       template: "<h1>HELLO!</h1>"
 *     }
 *   }    
 * })
 * </pre>
 * 
 * Really though, you'll use views to set up multiple views:
 * <pre>
 * <div ui-view></div>
 * <div ui-view="chart"></div> 
 * <div ui-view="data"></div> 
 * </pre>
 * 
 * <pre>
 * $stateProvider.state("home", {
 *   views: {
 *     "": {
 *       template: "<h1>HELLO!</h1>"
 *     },
 *     "chart": {
 *       template: "<chart_thing/>"
 *     },
 *     "data": {
 *       template: "<data_thing/>"
 *     }
 *   }    
 * })
 * </pre>
 *
 * Examples for `autoscroll`:
 *
 * <pre>
 * <!-- If autoscroll present with no expression,
 *      then scroll ui-view into view -->
 * <ui-view autoscroll/>
 *
 * <!-- If autoscroll present with valid expression,
 *      then scroll ui-view into view if expression evaluates to true -->
 * <ui-view autoscroll='true'/>
 * <ui-view autoscroll='false'/>
 * <ui-view autoscroll='scopeVariable'/>
 * </pre>
 */
  $ViewDirective.$inject = [
    '$state',
    '$injector',
    '$uiViewScroll',
    '$interpolate'
  ];
  function $ViewDirective($state, $injector, $uiViewScroll, $interpolate) {
    function getService() {
      return $injector.has ? function (service) {
        return $injector.has(service) ? $injector.get(service) : null;
      } : function (service) {
        try {
          return $injector.get(service);
        } catch (e) {
          return null;
        }
      };
    }
    var service = getService(), $animator = service('$animator'), $animate = service('$animate');
    // Returns a set of DOM manipulation functions based on which Angular version
    // it should use
    function getRenderer(attrs, scope) {
      var statics = function () {
        return {
          enter: function (element, target, cb) {
            target.after(element);
            cb();
          },
          leave: function (element, cb) {
            element.remove();
            cb();
          }
        };
      };
      if ($animate) {
        return {
          enter: function (element, target, cb) {
            var promise = $animate.enter(element, null, target, cb);
            if (promise && promise.then)
              promise.then(cb);
          },
          leave: function (element, cb) {
            var promise = $animate.leave(element, cb);
            if (promise && promise.then)
              promise.then(cb);
          }
        };
      }
      if ($animator) {
        var animate = $animator && $animator(scope, attrs);
        return {
          enter: function (element, target, cb) {
            animate.enter(element, null, target);
            cb();
          },
          leave: function (element, cb) {
            animate.leave(element);
            cb();
          }
        };
      }
      return statics();
    }
    var directive = {
        restrict: 'ECA',
        terminal: true,
        priority: 400,
        transclude: 'element',
        compile: function (tElement, tAttrs, $transclude) {
          return function (scope, $element, attrs) {
            var previousEl, currentEl, currentScope, latestLocals, onloadExp = attrs.onload || '', autoScrollExp = attrs.autoscroll, renderer = getRenderer(attrs, scope);
            scope.$on('$stateChangeSuccess', function () {
              updateView(false);
            });
            scope.$on('$viewContentLoading', function () {
              updateView(false);
            });
            updateView(true);
            function cleanupLastView() {
              if (previousEl) {
                previousEl.remove();
                previousEl = null;
              }
              if (currentScope) {
                currentScope.$destroy();
                currentScope = null;
              }
              if (currentEl) {
                renderer.leave(currentEl, function () {
                  previousEl = null;
                });
                previousEl = currentEl;
                currentEl = null;
              }
            }
            function updateView(firstTime) {
              var newScope, name = getUiViewName(scope, attrs, $element, $interpolate), previousLocals = name && $state.$current && $state.$current.locals[name];
              if (!firstTime && previousLocals === latestLocals)
                return;
              // nothing to do
              newScope = scope.$new();
              latestLocals = $state.$current.locals[name];
              var clone = $transclude(newScope, function (clone) {
                  renderer.enter(clone, $element, function onUiViewEnter() {
                    if (currentScope) {
                      currentScope.$emit('$viewContentAnimationEnded');
                    }
                    if (angular.isDefined(autoScrollExp) && !autoScrollExp || scope.$eval(autoScrollExp)) {
                      $uiViewScroll(clone);
                    }
                  });
                  cleanupLastView();
                });
              currentEl = clone;
              currentScope = newScope;
              /**
           * @ngdoc event
           * @name ui.router.state.directive:ui-view#$viewContentLoaded
           * @eventOf ui.router.state.directive:ui-view
           * @eventType emits on ui-view directive scope
           * @description           *
           * Fired once the view is **loaded**, *after* the DOM is rendered.
           *
           * @param {Object} event Event object.
           */
              currentScope.$emit('$viewContentLoaded');
              currentScope.$eval(onloadExp);
            }
          };
        }
      };
    return directive;
  }
  $ViewDirectiveFill.$inject = [
    '$compile',
    '$controller',
    '$state',
    '$interpolate'
  ];
  function $ViewDirectiveFill($compile, $controller, $state, $interpolate) {
    return {
      restrict: 'ECA',
      priority: -400,
      compile: function (tElement) {
        var initial = tElement.html();
        return function (scope, $element, attrs) {
          var current = $state.$current, name = getUiViewName(scope, attrs, $element, $interpolate), locals = current && current.locals[name];
          if (!locals) {
            return;
          }
          $element.data('$uiView', {
            name: name,
            state: locals.$$state
          });
          $element.html(locals.$template ? locals.$template : initial);
          var link = $compile($element.contents());
          if (locals.$$controller) {
            locals.$scope = scope;
            var controller = $controller(locals.$$controller, locals);
            if (locals.$$controllerAs) {
              scope[locals.$$controllerAs] = controller;
            }
            $element.data('$ngControllerController', controller);
            $element.children().data('$ngControllerController', controller);
          }
          link(scope);
        };
      }
    };
  }
  /**
 * Shared ui-view code for both directives:
 * Given scope, element, and its attributes, return the view's name
 */
  function getUiViewName(scope, attrs, element, $interpolate) {
    var name = $interpolate(attrs.uiView || attrs.name || '')(scope);
    var inherited = element.inheritedData('$uiView');
    return name.indexOf('@') >= 0 ? name : name + '@' + (inherited ? inherited.state.name : '');
  }
  angular.module('ui.router.state').directive('uiView', $ViewDirective);
  angular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);
  function parseStateRef(ref, current) {
    var preparsed = ref.match(/^\s*({[^}]*})\s*$/), parsed;
    if (preparsed)
      ref = current + '(' + preparsed[1] + ')';
    parsed = ref.replace(/\n/g, ' ').match(/^([^(]+?)\s*(\((.*)\))?$/);
    if (!parsed || parsed.length !== 4)
      throw new Error('Invalid state ref \'' + ref + '\'');
    return {
      state: parsed[1],
      paramExpr: parsed[3] || null
    };
  }
  function stateContext(el) {
    var stateData = el.parent().inheritedData('$uiView');
    if (stateData && stateData.state && stateData.state.name) {
      return stateData.state;
    }
  }
  /**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-sref
 *
 * @requires ui.router.state.$state
 * @requires $timeout
 *
 * @restrict A
 *
 * @description
 * A directive that binds a link (`<a>` tag) to a state. If the state has an associated 
 * URL, the directive will automatically generate & update the `href` attribute via 
 * the {@link ui.router.state.$state#methods_href $state.href()} method. Clicking 
 * the link will trigger a state transition with optional parameters. 
 *
 * Also middle-clicking, right-clicking, and ctrl-clicking on the link will be 
 * handled natively by the browser.
 *
 * You can also use relative state paths within ui-sref, just like the relative 
 * paths passed to `$state.go()`. You just need to be aware that the path is relative
 * to the state that the link lives in, in other words the state that loaded the 
 * template containing the link.
 *
 * You can specify options to pass to {@link ui.router.state.$state#go $state.go()}
 * using the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,
 * and `reload`.
 *
 * @example
 * Here's an example of how you'd use ui-sref and how it would compile. If you have the 
 * following template:
 * <pre>
 * <a ui-sref="home">Home</a> | <a ui-sref="about">About</a> | <a ui-sref="{page: 2}">Next page</a>
 * 
 * <ul>
 *     <li ng-repeat="contact in contacts">
 *         <a ui-sref="contacts.detail({ id: contact.id })">{{ contact.name }}</a>
 *     </li>
 * </ul>
 * </pre>
 * 
 * Then the compiled html would be (assuming Html5Mode is off and current state is contacts):
 * <pre>
 * <a href="#/home" ui-sref="home">Home</a> | <a href="#/about" ui-sref="about">About</a> | <a href="#/contacts?page=2" ui-sref="{page: 2}">Next page</a>
 * 
 * <ul>
 *     <li ng-repeat="contact in contacts">
 *         <a href="#/contacts/1" ui-sref="contacts.detail({ id: contact.id })">Joe</a>
 *     </li>
 *     <li ng-repeat="contact in contacts">
 *         <a href="#/contacts/2" ui-sref="contacts.detail({ id: contact.id })">Alice</a>
 *     </li>
 *     <li ng-repeat="contact in contacts">
 *         <a href="#/contacts/3" ui-sref="contacts.detail({ id: contact.id })">Bob</a>
 *     </li>
 * </ul>
 *
 * <a ui-sref="home" ui-sref-opts="{reload: true}">Home</a>
 * </pre>
 *
 * @param {string} ui-sref 'stateName' can be any valid absolute or relative state
 * @param {Object} ui-sref-opts options to pass to {@link ui.router.state.$state#go $state.go()}
 */
  $StateRefDirective.$inject = [
    '$state',
    '$timeout'
  ];
  function $StateRefDirective($state, $timeout) {
    var allowedOptions = [
        'location',
        'inherit',
        'reload'
      ];
    return {
      restrict: 'A',
      require: [
        '?^uiSrefActive',
        '?^uiSrefActiveEq'
      ],
      link: function (scope, element, attrs, uiSrefActive) {
        var ref = parseStateRef(attrs.uiSref, $state.current.name);
        var params = null, url = null, base = stateContext(element) || $state.$current;
        var newHref = null, isAnchor = element.prop('tagName') === 'A';
        var isForm = element[0].nodeName === 'FORM';
        var attr = isForm ? 'action' : 'href', nav = true;
        var options = {
            relative: base,
            inherit: true
          };
        var optionsOverride = scope.$eval(attrs.uiSrefOpts) || {};
        angular.forEach(allowedOptions, function (option) {
          if (option in optionsOverride) {
            options[option] = optionsOverride[option];
          }
        });
        var update = function (newVal) {
          if (newVal)
            params = angular.copy(newVal);
          if (!nav)
            return;
          newHref = $state.href(ref.state, params, options);
          var activeDirective = uiSrefActive[1] || uiSrefActive[0];
          if (activeDirective) {
            activeDirective.$$setStateInfo(ref.state, params);
          }
          if (newHref === null) {
            nav = false;
            return false;
          }
          attrs.$set(attr, newHref);
        };
        if (ref.paramExpr) {
          scope.$watch(ref.paramExpr, function (newVal, oldVal) {
            if (newVal !== params)
              update(newVal);
          }, true);
          params = angular.copy(scope.$eval(ref.paramExpr));
        }
        update();
        if (isForm)
          return;
        element.bind('click', function (e) {
          var button = e.which || e.button;
          if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || element.attr('target'))) {
            // HACK: This is to allow ng-clicks to be processed before the transition is initiated:
            var transition = $timeout(function () {
                $state.go(ref.state, params, options);
              });
            e.preventDefault();
            // if the state has no URL, ignore one preventDefault from the <a> directive.
            var ignorePreventDefaultCount = isAnchor && !newHref ? 1 : 0;
            e.preventDefault = function () {
              if (ignorePreventDefaultCount-- <= 0)
                $timeout.cancel(transition);
            };
          }
        });
      }
    };
  }
  /**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-sref-active
 *
 * @requires ui.router.state.$state
 * @requires ui.router.state.$stateParams
 * @requires $interpolate
 *
 * @restrict A
 *
 * @description
 * A directive working alongside ui-sref to add classes to an element when the
 * related ui-sref directive's state is active, and removing them when it is inactive.
 * The primary use-case is to simplify the special appearance of navigation menus
 * relying on `ui-sref`, by having the "active" state's menu button appear different,
 * distinguishing it from the inactive menu items.
 *
 * ui-sref-active can live on the same element as ui-sref or on a parent element. The first
 * ui-sref-active found at the same level or above the ui-sref will be used.
 *
 * Will activate when the ui-sref's target state or any child state is active. If you
 * need to activate only when the ui-sref target state is active and *not* any of
 * it's children, then you will use
 * {@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}
 *
 * @example
 * Given the following template:
 * <pre>
 * <ul>
 *   <li ui-sref-active="active" class="item">
 *     <a href ui-sref="app.user({user: 'bilbobaggins'})">@bilbobaggins</a>
 *   </li>
 * </ul>
 * </pre>
 *
 *
 * When the app state is "app.user" (or any children states), and contains the state parameter "user" with value "bilbobaggins",
 * the resulting HTML will appear as (note the 'active' class):
 * <pre>
 * <ul>
 *   <li ui-sref-active="active" class="item active">
 *     <a ui-sref="app.user({user: 'bilbobaggins'})" href="/users/bilbobaggins">@bilbobaggins</a>
 *   </li>
 * </ul>
 * </pre>
 *
 * The class name is interpolated **once** during the directives link time (any further changes to the
 * interpolated value are ignored).
 *
 * Multiple classes may be specified in a space-separated format:
 * <pre>
 * <ul>
 *   <li ui-sref-active='class1 class2 class3'>
 *     <a ui-sref="app.user">link</a>
 *   </li>
 * </ul>
 * </pre>
 */
  /**
 * @ngdoc directive
 * @name ui.router.state.directive:ui-sref-active-eq
 *
 * @requires ui.router.state.$state
 * @requires ui.router.state.$stateParams
 * @requires $interpolate
 *
 * @restrict A
 *
 * @description
 * The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate
 * when the exact target state used in the `ui-sref` is active; no child states.
 *
 */
  $StateRefActiveDirective.$inject = [
    '$state',
    '$stateParams',
    '$interpolate'
  ];
  function $StateRefActiveDirective($state, $stateParams, $interpolate) {
    return {
      restrict: 'A',
      controller: [
        '$scope',
        '$element',
        '$attrs',
        function ($scope, $element, $attrs) {
          var state, params, activeClass;
          // There probably isn't much point in $observing this
          // uiSrefActive and uiSrefActiveEq share the same directive object with some
          // slight difference in logic routing
          activeClass = $interpolate($attrs.uiSrefActiveEq || $attrs.uiSrefActive || '', false)($scope);
          // Allow uiSref to communicate with uiSrefActive[Equals]
          this.$$setStateInfo = function (newState, newParams) {
            state = $state.get(newState, stateContext($element));
            params = newParams;
            update();
          };
          $scope.$on('$stateChangeSuccess', update);
          // Update route state
          function update() {
            if (isMatch()) {
              $element.addClass(activeClass);
            } else {
              $element.removeClass(activeClass);
            }
          }
          function isMatch() {
            if (typeof $attrs.uiSrefActiveEq !== 'undefined') {
              return state && $state.is(state.name, params);
            } else {
              return state && $state.includes(state.name, params);
            }
          }
        }
      ]
    };
  }
  angular.module('ui.router.state').directive('uiSref', $StateRefDirective).directive('uiSrefActive', $StateRefActiveDirective).directive('uiSrefActiveEq', $StateRefActiveDirective);
  /**
 * @ngdoc filter
 * @name ui.router.state.filter:isState
 *
 * @requires ui.router.state.$state
 *
 * @description
 * Translates to {@link ui.router.state.$state#methods_is $state.is("stateName")}.
 */
  $IsStateFilter.$inject = ['$state'];
  function $IsStateFilter($state) {
    var isFilter = function (state) {
      return $state.is(state);
    };
    isFilter.$stateful = true;
    return isFilter;
  }
  /**
 * @ngdoc filter
 * @name ui.router.state.filter:includedByState
 *
 * @requires ui.router.state.$state
 *
 * @description
 * Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.
 */
  $IncludedByStateFilter.$inject = ['$state'];
  function $IncludedByStateFilter($state) {
    var includesFilter = function (state) {
      return $state.includes(state);
    };
    includesFilter.$stateful = true;
    return includesFilter;
  }
  angular.module('ui.router.state').filter('isState', $IsStateFilter).filter('includedByState', $IncludedByStateFilter);
}(window, window.angular));
/**
 * @license AngularJS v1.3.8
 * (c) 2010-2014 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function (window, angular, undefined) {
  'use strict';
  var $resourceMinErr = angular.$$minErr('$resource');
  // Helper functions and regex to lookup a dotted path on an object
  // stopping at undefined/null.  The path must be composed of ASCII
  // identifiers (just like $parse)
  var MEMBER_NAME_REGEX = /^(\.[a-zA-Z_$][0-9a-zA-Z_$]*)+$/;
  function isValidDottedPath(path) {
    return path != null && path !== '' && path !== 'hasOwnProperty' && MEMBER_NAME_REGEX.test('.' + path);
  }
  function lookupDottedPath(obj, path) {
    if (!isValidDottedPath(path)) {
      throw $resourceMinErr('badmember', 'Dotted member path "@{0}" is invalid.', path);
    }
    var keys = path.split('.');
    for (var i = 0, ii = keys.length; i < ii && obj !== undefined; i++) {
      var key = keys[i];
      obj = obj !== null ? obj[key] : undefined;
    }
    return obj;
  }
  /**
 * Create a shallow copy of an object and clear other fields from the destination
 */
  function shallowClearAndCopy(src, dst) {
    dst = dst || {};
    angular.forEach(dst, function (value, key) {
      delete dst[key];
    });
    for (var key in src) {
      if (src.hasOwnProperty(key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {
        dst[key] = src[key];
      }
    }
    return dst;
  }
  /**
 * @ngdoc module
 * @name ngResource
 * @description
 *
 * # ngResource
 *
 * The `ngResource` module provides interaction support with RESTful services
 * via the $resource service.
 *
 *
 * <div doc-module-components="ngResource"></div>
 *
 * See {@link ngResource.$resource `$resource`} for usage.
 */
  /**
 * @ngdoc service
 * @name $resource
 * @requires $http
 *
 * @description
 * A factory which creates a resource object that lets you interact with
 * [RESTful](http://en.wikipedia.org/wiki/Representational_State_Transfer) server-side data sources.
 *
 * The returned resource object has action methods which provide high-level behaviors without
 * the need to interact with the low level {@link ng.$http $http} service.
 *
 * Requires the {@link ngResource `ngResource`} module to be installed.
 *
 * By default, trailing slashes will be stripped from the calculated URLs,
 * which can pose problems with server backends that do not expect that
 * behavior.  This can be disabled by configuring the `$resourceProvider` like
 * this:
 *
 * ```js
     app.config(['$resourceProvider', function($resourceProvider) {
       // Don't strip trailing slashes from calculated URLs
       $resourceProvider.defaults.stripTrailingSlashes = false;
     }]);
 * ```
 *
 * @param {string} url A parametrized URL template with parameters prefixed by `:` as in
 *   `/user/:username`. If you are using a URL with a port number (e.g.
 *   `http://example.com:8080/api`), it will be respected.
 *
 *   If you are using a url with a suffix, just add the suffix, like this:
 *   `$resource('http://example.com/resource.json')` or `$resource('http://example.com/:id.json')`
 *   or even `$resource('http://example.com/resource/:resource_id.:format')`
 *   If the parameter before the suffix is empty, :resource_id in this case, then the `/.` will be
 *   collapsed down to a single `.`.  If you need this sequence to appear and not collapse then you
 *   can escape it with `/\.`.
 *
 * @param {Object=} paramDefaults Default values for `url` parameters. These can be overridden in
 *   `actions` methods. If any of the parameter value is a function, it will be executed every time
 *   when a param value needs to be obtained for a request (unless the param was overridden).
 *
 *   Each key value in the parameter object is first bound to url template if present and then any
 *   excess keys are appended to the url search query after the `?`.
 *
 *   Given a template `/path/:verb` and parameter `{verb:'greet', salutation:'Hello'}` results in
 *   URL `/path/greet?salutation=Hello`.
 *
 *   If the parameter value is prefixed with `@` then the value for that parameter will be extracted
 *   from the corresponding property on the `data` object (provided when calling an action method).  For
 *   example, if the `defaultParam` object is `{someParam: '@someProp'}` then the value of `someParam`
 *   will be `data.someProp`.
 *
 * @param {Object.<Object>=} actions Hash with declaration of custom actions that should extend
 *   the default set of resource actions. The declaration should be created in the format of {@link
 *   ng.$http#usage $http.config}:
 *
 *       {action1: {method:?, params:?, isArray:?, headers:?, ...},
 *        action2: {method:?, params:?, isArray:?, headers:?, ...},
 *        ...}
 *
 *   Where:
 *
 *   - **`action`** – {string} – The name of action. This name becomes the name of the method on
 *     your resource object.
 *   - **`method`** – {string} – Case insensitive HTTP method (e.g. `GET`, `POST`, `PUT`,
 *     `DELETE`, `JSONP`, etc).
 *   - **`params`** – {Object=} – Optional set of pre-bound parameters for this action. If any of
 *     the parameter value is a function, it will be executed every time when a param value needs to
 *     be obtained for a request (unless the param was overridden).
 *   - **`url`** – {string} – action specific `url` override. The url templating is supported just
 *     like for the resource-level urls.
 *   - **`isArray`** – {boolean=} – If true then the returned object for this action is an array,
 *     see `returns` section.
 *   - **`transformRequest`** –
 *     `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –
 *     transform function or an array of such functions. The transform function takes the http
 *     request body and headers and returns its transformed (typically serialized) version.
 *     By default, transformRequest will contain one function that checks if the request data is
 *     an object and serializes to using `angular.toJson`. To prevent this behavior, set
 *     `transformRequest` to an empty array: `transformRequest: []`
 *   - **`transformResponse`** –
 *     `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –
 *     transform function or an array of such functions. The transform function takes the http
 *     response body and headers and returns its transformed (typically deserialized) version.
 *     By default, transformResponse will contain one function that checks if the response looks like
 *     a JSON string and deserializes it using `angular.fromJson`. To prevent this behavior, set
 *     `transformResponse` to an empty array: `transformResponse: []`
 *   - **`cache`** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the
 *     GET request, otherwise if a cache instance built with
 *     {@link ng.$cacheFactory $cacheFactory}, this cache will be used for
 *     caching.
 *   - **`timeout`** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise} that
 *     should abort the request when resolved.
 *   - **`withCredentials`** - `{boolean}` - whether to set the `withCredentials` flag on the
 *     XHR object. See
 *     [requests with credentials](https://developer.mozilla.org/en/http_access_control#section_5)
 *     for more information.
 *   - **`responseType`** - `{string}` - see
 *     [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).
 *   - **`interceptor`** - `{Object=}` - The interceptor object has two optional methods -
 *     `response` and `responseError`. Both `response` and `responseError` interceptors get called
 *     with `http response` object. See {@link ng.$http $http interceptors}.
 *
 * @param {Object} options Hash with custom settings that should extend the
 *   default `$resourceProvider` behavior.  The only supported option is
 *
 *   Where:
 *
 *   - **`stripTrailingSlashes`** – {boolean} – If true then the trailing
 *   slashes from any calculated URL will be stripped. (Defaults to true.)
 *
 * @returns {Object} A resource "class" object with methods for the default set of resource actions
 *   optionally extended with custom `actions`. The default set contains these actions:
 *   ```js
 *   { 'get':    {method:'GET'},
 *     'save':   {method:'POST'},
 *     'query':  {method:'GET', isArray:true},
 *     'remove': {method:'DELETE'},
 *     'delete': {method:'DELETE'} };
 *   ```
 *
 *   Calling these methods invoke an {@link ng.$http} with the specified http method,
 *   destination and parameters. When the data is returned from the server then the object is an
 *   instance of the resource class. The actions `save`, `remove` and `delete` are available on it
 *   as  methods with the `$` prefix. This allows you to easily perform CRUD operations (create,
 *   read, update, delete) on server-side data like this:
 *   ```js
 *   var User = $resource('/user/:userId', {userId:'@id'});
 *   var user = User.get({userId:123}, function() {
 *     user.abc = true;
 *     user.$save();
 *   });
 *   ```
 *
 *   It is important to realize that invoking a $resource object method immediately returns an
 *   empty reference (object or array depending on `isArray`). Once the data is returned from the
 *   server the existing reference is populated with the actual data. This is a useful trick since
 *   usually the resource is assigned to a model which is then rendered by the view. Having an empty
 *   object results in no rendering, once the data arrives from the server then the object is
 *   populated with the data and the view automatically re-renders itself showing the new data. This
 *   means that in most cases one never has to write a callback function for the action methods.
 *
 *   The action methods on the class object or instance object can be invoked with the following
 *   parameters:
 *
 *   - HTTP GET "class" actions: `Resource.action([parameters], [success], [error])`
 *   - non-GET "class" actions: `Resource.action([parameters], postData, [success], [error])`
 *   - non-GET instance actions:  `instance.$action([parameters], [success], [error])`
 *
 *   Success callback is called with (value, responseHeaders) arguments. Error callback is called
 *   with (httpResponse) argument.
 *
 *   Class actions return empty instance (with additional properties below).
 *   Instance actions return promise of the action.
 *
 *   The Resource instances and collection have these additional properties:
 *
 *   - `$promise`: the {@link ng.$q promise} of the original server interaction that created this
 *     instance or collection.
 *
 *     On success, the promise is resolved with the same resource instance or collection object,
 *     updated with data from server. This makes it easy to use in
 *     {@link ngRoute.$routeProvider resolve section of $routeProvider.when()} to defer view
 *     rendering until the resource(s) are loaded.
 *
 *     On failure, the promise is resolved with the {@link ng.$http http response} object, without
 *     the `resource` property.
 *
 *     If an interceptor object was provided, the promise will instead be resolved with the value
 *     returned by the interceptor.
 *
 *   - `$resolved`: `true` after first server interaction is completed (either with success or
 *      rejection), `false` before that. Knowing if the Resource has been resolved is useful in
 *      data-binding.
 *
 * @example
 *
 * # Credit card resource
 *
 * ```js
     // Define CreditCard class
     var CreditCard = $resource('/user/:userId/card/:cardId',
      {userId:123, cardId:'@id'}, {
       charge: {method:'POST', params:{charge:true}}
      });

     // We can retrieve a collection from the server
     var cards = CreditCard.query(function() {
       // GET: /user/123/card
       // server returns: [ {id:456, number:'1234', name:'Smith'} ];

       var card = cards[0];
       // each item is an instance of CreditCard
       expect(card instanceof CreditCard).toEqual(true);
       card.name = "J. Smith";
       // non GET methods are mapped onto the instances
       card.$save();
       // POST: /user/123/card/456 {id:456, number:'1234', name:'J. Smith'}
       // server returns: {id:456, number:'1234', name: 'J. Smith'};

       // our custom method is mapped as well.
       card.$charge({amount:9.99});
       // POST: /user/123/card/456?amount=9.99&charge=true {id:456, number:'1234', name:'J. Smith'}
     });

     // we can create an instance as well
     var newCard = new CreditCard({number:'0123'});
     newCard.name = "Mike Smith";
     newCard.$save();
     // POST: /user/123/card {number:'0123', name:'Mike Smith'}
     // server returns: {id:789, number:'0123', name: 'Mike Smith'};
     expect(newCard.id).toEqual(789);
 * ```
 *
 * The object returned from this function execution is a resource "class" which has "static" method
 * for each action in the definition.
 *
 * Calling these methods invoke `$http` on the `url` template with the given `method`, `params` and
 * `headers`.
 * When the data is returned from the server then the object is an instance of the resource type and
 * all of the non-GET methods are available with `$` prefix. This allows you to easily support CRUD
 * operations (create, read, update, delete) on server-side data.

   ```js
     var User = $resource('/user/:userId', {userId:'@id'});
     User.get({userId:123}, function(user) {
       user.abc = true;
       user.$save();
     });
   ```
 *
 * It's worth noting that the success callback for `get`, `query` and other methods gets passed
 * in the response that came from the server as well as $http header getter function, so one
 * could rewrite the above example and get access to http headers as:
 *
   ```js
     var User = $resource('/user/:userId', {userId:'@id'});
     User.get({userId:123}, function(u, getResponseHeaders){
       u.abc = true;
       u.$save(function(u, putResponseHeaders) {
         //u => saved user object
         //putResponseHeaders => $http header getter
       });
     });
   ```
 *
 * You can also access the raw `$http` promise via the `$promise` property on the object returned
 *
   ```
     var User = $resource('/user/:userId', {userId:'@id'});
     User.get({userId:123})
         .$promise.then(function(user) {
           $scope.user = user;
         });
   ```

 * # Creating a custom 'PUT' request
 * In this example we create a custom method on our resource to make a PUT request
 * ```js
 *    var app = angular.module('app', ['ngResource', 'ngRoute']);
 *
 *    // Some APIs expect a PUT request in the format URL/object/ID
 *    // Here we are creating an 'update' method
 *    app.factory('Notes', ['$resource', function($resource) {
 *    return $resource('/notes/:id', null,
 *        {
 *            'update': { method:'PUT' }
 *        });
 *    }]);
 *
 *    // In our controller we get the ID from the URL using ngRoute and $routeParams
 *    // We pass in $routeParams and our Notes factory along with $scope
 *    app.controller('NotesCtrl', ['$scope', '$routeParams', 'Notes',
                                      function($scope, $routeParams, Notes) {
 *    // First get a note object from the factory
 *    var note = Notes.get({ id:$routeParams.id });
 *    $id = note.id;
 *
 *    // Now call update passing in the ID first then the object you are updating
 *    Notes.update({ id:$id }, note);
 *
 *    // This will PUT /notes/ID with the note object in the request payload
 *    }]);
 * ```
 */
  angular.module('ngResource', ['ng']).provider('$resource', function () {
    var provider = this;
    this.defaults = {
      stripTrailingSlashes: true,
      actions: {
        'get': { method: 'GET' },
        'save': { method: 'POST' },
        'query': {
          method: 'GET',
          isArray: true
        },
        'remove': { method: 'DELETE' },
        'delete': { method: 'DELETE' }
      }
    };
    this.$get = [
      '$http',
      '$q',
      function ($http, $q) {
        var noop = angular.noop, forEach = angular.forEach, extend = angular.extend, copy = angular.copy, isFunction = angular.isFunction;
        /**
       * We need our custom method because encodeURIComponent is too aggressive and doesn't follow
       * http://www.ietf.org/rfc/rfc3986.txt with regards to the character set
       * (pchar) allowed in path segments:
       *    segment       = *pchar
       *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
       *    pct-encoded   = "%" HEXDIG HEXDIG
       *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
       *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
       *                     / "*" / "+" / "," / ";" / "="
       */
        function encodeUriSegment(val) {
          return encodeUriQuery(val, true).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+');
        }
        /**
       * This method is intended for encoding *key* or *value* parts of query component. We need a
       * custom method because encodeURIComponent is too aggressive and encodes stuff that doesn't
       * have to be encoded per http://tools.ietf.org/html/rfc3986:
       *    query       = *( pchar / "/" / "?" )
       *    pchar         = unreserved / pct-encoded / sub-delims / ":" / "@"
       *    unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
       *    pct-encoded   = "%" HEXDIG HEXDIG
       *    sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
       *                     / "*" / "+" / "," / ";" / "="
       */
        function encodeUriQuery(val, pctEncodeSpaces) {
          return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, pctEncodeSpaces ? '%20' : '+');
        }
        function Route(template, defaults) {
          this.template = template;
          this.defaults = extend({}, provider.defaults, defaults);
          this.urlParams = {};
        }
        Route.prototype = {
          setUrlParams: function (config, params, actionUrl) {
            var self = this, url = actionUrl || self.template, val, encodedVal;
            var urlParams = self.urlParams = {};
            forEach(url.split(/\W/), function (param) {
              if (param === 'hasOwnProperty') {
                throw $resourceMinErr('badname', 'hasOwnProperty is not a valid parameter name.');
              }
              if (!new RegExp('^\\d+$').test(param) && param && new RegExp('(^|[^\\\\]):' + param + '(\\W|$)').test(url)) {
                urlParams[param] = true;
              }
            });
            url = url.replace(/\\:/g, ':');
            params = params || {};
            forEach(self.urlParams, function (_, urlParam) {
              val = params.hasOwnProperty(urlParam) ? params[urlParam] : self.defaults[urlParam];
              if (angular.isDefined(val) && val !== null) {
                encodedVal = encodeUriSegment(val);
                url = url.replace(new RegExp(':' + urlParam + '(\\W|$)', 'g'), function (match, p1) {
                  return encodedVal + p1;
                });
              } else {
                url = url.replace(new RegExp('(/?):' + urlParam + '(\\W|$)', 'g'), function (match, leadingSlashes, tail) {
                  if (tail.charAt(0) == '/') {
                    return tail;
                  } else {
                    return leadingSlashes + tail;
                  }
                });
              }
            });
            // strip trailing slashes and set the url (unless this behavior is specifically disabled)
            if (self.defaults.stripTrailingSlashes) {
              url = url.replace(/\/+$/, '') || '/';
            }
            // then replace collapse `/.` if found in the last URL path segment before the query
            // E.g. `http://url.com/id./format?q=x` becomes `http://url.com/id.format?q=x`
            url = url.replace(/\/\.(?=\w+($|\?))/, '.');
            // replace escaped `/\.` with `/.`
            config.url = url.replace(/\/\\\./, '/.');
            // set params - delegate param encoding to $http
            forEach(params, function (value, key) {
              if (!self.urlParams[key]) {
                config.params = config.params || {};
                config.params[key] = value;
              }
            });
          }
        };
        function resourceFactory(url, paramDefaults, actions, options) {
          var route = new Route(url, options);
          actions = extend({}, provider.defaults.actions, actions);
          function extractParams(data, actionParams) {
            var ids = {};
            actionParams = extend({}, paramDefaults, actionParams);
            forEach(actionParams, function (value, key) {
              if (isFunction(value)) {
                value = value();
              }
              ids[key] = value && value.charAt && value.charAt(0) == '@' ? lookupDottedPath(data, value.substr(1)) : value;
            });
            return ids;
          }
          function defaultResponseInterceptor(response) {
            return response.resource;
          }
          function Resource(value) {
            shallowClearAndCopy(value || {}, this);
          }
          Resource.prototype.toJSON = function () {
            var data = extend({}, this);
            delete data.$promise;
            delete data.$resolved;
            return data;
          };
          forEach(actions, function (action, name) {
            var hasBody = /^(POST|PUT|PATCH)$/i.test(action.method);
            Resource[name] = function (a1, a2, a3, a4) {
              var params = {}, data, success, error;
              /* jshint -W086 */
              /* (purposefully fall through case statements) */
              switch (arguments.length) {
              case 4:
                error = a4;
                success = a3;
              //fallthrough
              case 3:
              case 2:
                if (isFunction(a2)) {
                  if (isFunction(a1)) {
                    success = a1;
                    error = a2;
                    break;
                  }
                  success = a2;
                  error = a3;  //fallthrough
                } else {
                  params = a1;
                  data = a2;
                  success = a3;
                  break;
                }
              case 1:
                if (isFunction(a1))
                  success = a1;
                else if (hasBody)
                  data = a1;
                else
                  params = a1;
                break;
              case 0:
                break;
              default:
                throw $resourceMinErr('badargs', 'Expected up to 4 arguments [params, data, success, error], got {0} arguments', arguments.length);
              }
              /* jshint +W086 */
              /* (purposefully fall through case statements) */
              var isInstanceCall = this instanceof Resource;
              var value = isInstanceCall ? data : action.isArray ? [] : new Resource(data);
              var httpConfig = {};
              var responseInterceptor = action.interceptor && action.interceptor.response || defaultResponseInterceptor;
              var responseErrorInterceptor = action.interceptor && action.interceptor.responseError || undefined;
              forEach(action, function (value, key) {
                if (key != 'params' && key != 'isArray' && key != 'interceptor') {
                  httpConfig[key] = copy(value);
                }
              });
              if (hasBody)
                httpConfig.data = data;
              route.setUrlParams(httpConfig, extend({}, extractParams(data, action.params || {}), params), action.url);
              var promise = $http(httpConfig).then(function (response) {
                  var data = response.data, promise = value.$promise;
                  if (data) {
                    // Need to convert action.isArray to boolean in case it is undefined
                    // jshint -W018
                    if (angular.isArray(data) !== !!action.isArray) {
                      throw $resourceMinErr('badcfg', 'Error in resource configuration for action `{0}`. Expected response to ' + 'contain an {1} but got an {2}', name, action.isArray ? 'array' : 'object', angular.isArray(data) ? 'array' : 'object');
                    }
                    // jshint +W018
                    if (action.isArray) {
                      value.length = 0;
                      forEach(data, function (item) {
                        if (typeof item === 'object') {
                          value.push(new Resource(item));
                        } else {
                          // Valid JSON values may be string literals, and these should not be converted
                          // into objects. These items will not have access to the Resource prototype
                          // methods, but unfortunately there
                          value.push(item);
                        }
                      });
                    } else {
                      shallowClearAndCopy(data, value);
                      value.$promise = promise;
                    }
                  }
                  value.$resolved = true;
                  response.resource = value;
                  return response;
                }, function (response) {
                  value.$resolved = true;
                  (error || noop)(response);
                  return $q.reject(response);
                });
              promise = promise.then(function (response) {
                var value = responseInterceptor(response);
                (success || noop)(value, response.headers);
                return value;
              }, responseErrorInterceptor);
              if (!isInstanceCall) {
                // we are creating instance / collection
                // - set the initial promise
                // - return the instance / collection
                value.$promise = promise;
                value.$resolved = false;
                return value;
              }
              // instance call
              return promise;
            };
            Resource.prototype['$' + name] = function (params, success, error) {
              if (isFunction(params)) {
                error = success;
                success = params;
                params = {};
              }
              var result = Resource[name].call(this, params, this, success, error);
              return result.$promise || result;
            };
          });
          Resource.bind = function (additionalParamDefaults) {
            return resourceFactory(url, extend({}, paramDefaults, additionalParamDefaults), actions);
          };
          return Resource;
        }
        return resourceFactory;
      }
    ];
  });
}(window, window.angular));
/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/

 * Version: 0.12.0 - 2014-11-16
 * License: MIT
 */
angular.module('ui.bootstrap', [
  'ui.bootstrap.tpls',
  'ui.bootstrap.transition',
  'ui.bootstrap.collapse',
  'ui.bootstrap.accordion',
  'ui.bootstrap.alert',
  'ui.bootstrap.bindHtml',
  'ui.bootstrap.buttons',
  'ui.bootstrap.carousel',
  'ui.bootstrap.dateparser',
  'ui.bootstrap.position',
  'ui.bootstrap.datepicker',
  'ui.bootstrap.dropdown',
  'ui.bootstrap.modal',
  'ui.bootstrap.pagination',
  'ui.bootstrap.tooltip',
  'ui.bootstrap.popover',
  'ui.bootstrap.progressbar',
  'ui.bootstrap.rating',
  'ui.bootstrap.tabs',
  'ui.bootstrap.timepicker',
  'ui.bootstrap.typeahead'
]), angular.module('ui.bootstrap.tpls', [
  'template/accordion/accordion-group.html',
  'template/accordion/accordion.html',
  'template/alert/alert.html',
  'template/carousel/carousel.html',
  'template/carousel/slide.html',
  'template/datepicker/datepicker.html',
  'template/datepicker/day.html',
  'template/datepicker/month.html',
  'template/datepicker/popup.html',
  'template/datepicker/year.html',
  'template/modal/backdrop.html',
  'template/modal/window.html',
  'template/pagination/pager.html',
  'template/pagination/pagination.html',
  'template/tooltip/tooltip-html-unsafe-popup.html',
  'template/tooltip/tooltip-popup.html',
  'template/popover/popover.html',
  'template/progressbar/bar.html',
  'template/progressbar/progress.html',
  'template/progressbar/progressbar.html',
  'template/rating/rating.html',
  'template/tabs/tab.html',
  'template/tabs/tabset.html',
  'template/timepicker/timepicker.html',
  'template/typeahead/typeahead-match.html',
  'template/typeahead/typeahead-popup.html'
]), angular.module('ui.bootstrap.transition', []).factory('$transition', [
  '$q',
  '$timeout',
  '$rootScope',
  function (a, b, c) {
    function d(a) {
      for (var b in a)
        if (void 0 !== f.style[b])
          return a[b];
    }
    var e = function (d, f, g) {
        g = g || {};
        var h = a.defer(), i = e[g.animation ? 'animationEndEventName' : 'transitionEndEventName'], j = function () {
            c.$apply(function () {
              d.unbind(i, j), h.resolve(d);
            });
          };
        return i && d.bind(i, j), b(function () {
          angular.isString(f) ? d.addClass(f) : angular.isFunction(f) ? f(d) : angular.isObject(f) && d.css(f), i || h.resolve(d);
        }), h.promise.cancel = function () {
          i && d.unbind(i, j), h.reject('Transition cancelled');
        }, h.promise;
      }, f = document.createElement('trans'), g = {
        WebkitTransition: 'webkitTransitionEnd',
        MozTransition: 'transitionend',
        OTransition: 'oTransitionEnd',
        transition: 'transitionend'
      }, h = {
        WebkitTransition: 'webkitAnimationEnd',
        MozTransition: 'animationend',
        OTransition: 'oAnimationEnd',
        transition: 'animationend'
      };
    return e.transitionEndEventName = d(g), e.animationEndEventName = d(h), e;
  }
]), angular.module('ui.bootstrap.collapse', ['ui.bootstrap.transition']).directive('collapse', [
  '$transition',
  function (a) {
    return {
      link: function (b, c, d) {
        function e(b) {
          function d() {
            j === e && (j = void 0);
          }
          var e = a(c, b);
          return j && j.cancel(), j = e, e.then(d, d), e;
        }
        function f() {
          k ? (k = !1, g()) : (c.removeClass('collapse').addClass('collapsing'), e({ height: c[0].scrollHeight + 'px' }).then(g));
        }
        function g() {
          c.removeClass('collapsing'), c.addClass('collapse in'), c.css({ height: 'auto' });
        }
        function h() {
          if (k)
            k = !1, i(), c.css({ height: 0 });
          else {
            c.css({ height: c[0].scrollHeight + 'px' });
            {
              c[0].offsetWidth;
            }
            c.removeClass('collapse in').addClass('collapsing'), e({ height: 0 }).then(i);
          }
        }
        function i() {
          c.removeClass('collapsing'), c.addClass('collapse');
        }
        var j, k = !0;
        b.$watch(d.collapse, function (a) {
          a ? h() : f();
        });
      }
    };
  }
]), angular.module('ui.bootstrap.accordion', ['ui.bootstrap.collapse']).constant('accordionConfig', { closeOthers: !0 }).controller('AccordionController', [
  '$scope',
  '$attrs',
  'accordionConfig',
  function (a, b, c) {
    this.groups = [], this.closeOthers = function (d) {
      var e = angular.isDefined(b.closeOthers) ? a.$eval(b.closeOthers) : c.closeOthers;
      e && angular.forEach(this.groups, function (a) {
        a !== d && (a.isOpen = !1);
      });
    }, this.addGroup = function (a) {
      var b = this;
      this.groups.push(a), a.$on('$destroy', function () {
        b.removeGroup(a);
      });
    }, this.removeGroup = function (a) {
      var b = this.groups.indexOf(a);
      -1 !== b && this.groups.splice(b, 1);
    };
  }
]).directive('accordion', function () {
  return {
    restrict: 'EA',
    controller: 'AccordionController',
    transclude: !0,
    replace: !1,
    templateUrl: 'template/accordion/accordion.html'
  };
}).directive('accordionGroup', function () {
  return {
    require: '^accordion',
    restrict: 'EA',
    transclude: !0,
    replace: !0,
    templateUrl: 'template/accordion/accordion-group.html',
    scope: {
      heading: '@',
      isOpen: '=?',
      isDisabled: '=?'
    },
    controller: function () {
      this.setHeading = function (a) {
        this.heading = a;
      };
    },
    link: function (a, b, c, d) {
      d.addGroup(a), a.$watch('isOpen', function (b) {
        b && d.closeOthers(a);
      }), a.toggleOpen = function () {
        a.isDisabled || (a.isOpen = !a.isOpen);
      };
    }
  };
}).directive('accordionHeading', function () {
  return {
    restrict: 'EA',
    transclude: !0,
    template: '',
    replace: !0,
    require: '^accordionGroup',
    link: function (a, b, c, d, e) {
      d.setHeading(e(a, function () {
      }));
    }
  };
}).directive('accordionTransclude', function () {
  return {
    require: '^accordionGroup',
    link: function (a, b, c, d) {
      a.$watch(function () {
        return d[c.accordionTransclude];
      }, function (a) {
        a && (b.html(''), b.append(a));
      });
    }
  };
}), angular.module('ui.bootstrap.alert', []).controller('AlertController', [
  '$scope',
  '$attrs',
  function (a, b) {
    a.closeable = 'close' in b, this.close = a.close;
  }
]).directive('alert', function () {
  return {
    restrict: 'EA',
    controller: 'AlertController',
    templateUrl: 'template/alert/alert.html',
    transclude: !0,
    replace: !0,
    scope: {
      type: '@',
      close: '&'
    }
  };
}).directive('dismissOnTimeout', [
  '$timeout',
  function (a) {
    return {
      require: 'alert',
      link: function (b, c, d, e) {
        a(function () {
          e.close();
        }, parseInt(d.dismissOnTimeout, 10));
      }
    };
  }
]), angular.module('ui.bootstrap.bindHtml', []).directive('bindHtmlUnsafe', function () {
  return function (a, b, c) {
    b.addClass('ng-binding').data('$binding', c.bindHtmlUnsafe), a.$watch(c.bindHtmlUnsafe, function (a) {
      b.html(a || '');
    });
  };
}), angular.module('ui.bootstrap.buttons', []).constant('buttonConfig', {
  activeClass: 'active',
  toggleEvent: 'click'
}).controller('ButtonsController', [
  'buttonConfig',
  function (a) {
    this.activeClass = a.activeClass || 'active', this.toggleEvent = a.toggleEvent || 'click';
  }
]).directive('btnRadio', function () {
  return {
    require: [
      'btnRadio',
      'ngModel'
    ],
    controller: 'ButtonsController',
    link: function (a, b, c, d) {
      var e = d[0], f = d[1];
      f.$render = function () {
        b.toggleClass(e.activeClass, angular.equals(f.$modelValue, a.$eval(c.btnRadio)));
      }, b.bind(e.toggleEvent, function () {
        var d = b.hasClass(e.activeClass);
        (!d || angular.isDefined(c.uncheckable)) && a.$apply(function () {
          f.$setViewValue(d ? null : a.$eval(c.btnRadio)), f.$render();
        });
      });
    }
  };
}).directive('btnCheckbox', function () {
  return {
    require: [
      'btnCheckbox',
      'ngModel'
    ],
    controller: 'ButtonsController',
    link: function (a, b, c, d) {
      function e() {
        return g(c.btnCheckboxTrue, !0);
      }
      function f() {
        return g(c.btnCheckboxFalse, !1);
      }
      function g(b, c) {
        var d = a.$eval(b);
        return angular.isDefined(d) ? d : c;
      }
      var h = d[0], i = d[1];
      i.$render = function () {
        b.toggleClass(h.activeClass, angular.equals(i.$modelValue, e()));
      }, b.bind(h.toggleEvent, function () {
        a.$apply(function () {
          i.$setViewValue(b.hasClass(h.activeClass) ? f() : e()), i.$render();
        });
      });
    }
  };
}), angular.module('ui.bootstrap.carousel', ['ui.bootstrap.transition']).controller('CarouselController', [
  '$scope',
  '$timeout',
  '$interval',
  '$transition',
  function (a, b, c, d) {
    function e() {
      f();
      var b = +a.interval;
      !isNaN(b) && b > 0 && (h = c(g, b));
    }
    function f() {
      h && (c.cancel(h), h = null);
    }
    function g() {
      var b = +a.interval;
      i && !isNaN(b) && b > 0 ? a.next() : a.pause();
    }
    var h, i, j = this, k = j.slides = a.slides = [], l = -1;
    j.currentSlide = null;
    var m = !1;
    j.select = a.select = function (c, f) {
      function g() {
        if (!m) {
          if (j.currentSlide && angular.isString(f) && !a.noTransition && c.$element) {
            c.$element.addClass(f);
            {
              c.$element[0].offsetWidth;
            }
            angular.forEach(k, function (a) {
              angular.extend(a, {
                direction: '',
                entering: !1,
                leaving: !1,
                active: !1
              });
            }), angular.extend(c, {
              direction: f,
              active: !0,
              entering: !0
            }), angular.extend(j.currentSlide || {}, {
              direction: f,
              leaving: !0
            }), a.$currentTransition = d(c.$element, {}), function (b, c) {
              a.$currentTransition.then(function () {
                h(b, c);
              }, function () {
                h(b, c);
              });
            }(c, j.currentSlide);
          } else
            h(c, j.currentSlide);
          j.currentSlide = c, l = i, e();
        }
      }
      function h(b, c) {
        angular.extend(b, {
          direction: '',
          active: !0,
          leaving: !1,
          entering: !1
        }), angular.extend(c || {}, {
          direction: '',
          active: !1,
          leaving: !1,
          entering: !1
        }), a.$currentTransition = null;
      }
      var i = k.indexOf(c);
      void 0 === f && (f = i > l ? 'next' : 'prev'), c && c !== j.currentSlide && (a.$currentTransition ? (a.$currentTransition.cancel(), b(g)) : g());
    }, a.$on('$destroy', function () {
      m = !0;
    }), j.indexOfSlide = function (a) {
      return k.indexOf(a);
    }, a.next = function () {
      var b = (l + 1) % k.length;
      return a.$currentTransition ? void 0 : j.select(k[b], 'next');
    }, a.prev = function () {
      var b = 0 > l - 1 ? k.length - 1 : l - 1;
      return a.$currentTransition ? void 0 : j.select(k[b], 'prev');
    }, a.isActive = function (a) {
      return j.currentSlide === a;
    }, a.$watch('interval', e), a.$on('$destroy', f), a.play = function () {
      i || (i = !0, e());
    }, a.pause = function () {
      a.noPause || (i = !1, f());
    }, j.addSlide = function (b, c) {
      b.$element = c, k.push(b), 1 === k.length || b.active ? (j.select(k[k.length - 1]), 1 == k.length && a.play()) : b.active = !1;
    }, j.removeSlide = function (a) {
      var b = k.indexOf(a);
      k.splice(b, 1), k.length > 0 && a.active ? j.select(b >= k.length ? k[b - 1] : k[b]) : l > b && l--;
    };
  }
]).directive('carousel', [function () {
    return {
      restrict: 'EA',
      transclude: !0,
      replace: !0,
      controller: 'CarouselController',
      require: 'carousel',
      templateUrl: 'template/carousel/carousel.html',
      scope: {
        interval: '=',
        noTransition: '=',
        noPause: '='
      }
    };
  }]).directive('slide', function () {
  return {
    require: '^carousel',
    restrict: 'EA',
    transclude: !0,
    replace: !0,
    templateUrl: 'template/carousel/slide.html',
    scope: { active: '=?' },
    link: function (a, b, c, d) {
      d.addSlide(a, b), a.$on('$destroy', function () {
        d.removeSlide(a);
      }), a.$watch('active', function (b) {
        b && d.select(a);
      });
    }
  };
}), angular.module('ui.bootstrap.dateparser', []).service('dateParser', [
  '$locale',
  'orderByFilter',
  function (a, b) {
    function c(a) {
      var c = [], d = a.split('');
      return angular.forEach(e, function (b, e) {
        var f = a.indexOf(e);
        if (f > -1) {
          a = a.split(''), d[f] = '(' + b.regex + ')', a[f] = '$';
          for (var g = f + 1, h = f + e.length; h > g; g++)
            d[g] = '', a[g] = '$';
          a = a.join(''), c.push({
            index: f,
            apply: b.apply
          });
        }
      }), {
        regex: new RegExp('^' + d.join('') + '$'),
        map: b(c, 'index')
      };
    }
    function d(a, b, c) {
      return 1 === b && c > 28 ? 29 === c && (a % 4 === 0 && a % 100 !== 0 || a % 400 === 0) : 3 === b || 5 === b || 8 === b || 10 === b ? 31 > c : !0;
    }
    this.parsers = {};
    var e = {
        yyyy: {
          regex: '\\d{4}',
          apply: function (a) {
            this.year = +a;
          }
        },
        yy: {
          regex: '\\d{2}',
          apply: function (a) {
            this.year = +a + 2000;
          }
        },
        y: {
          regex: '\\d{1,4}',
          apply: function (a) {
            this.year = +a;
          }
        },
        MMMM: {
          regex: a.DATETIME_FORMATS.MONTH.join('|'),
          apply: function (b) {
            this.month = a.DATETIME_FORMATS.MONTH.indexOf(b);
          }
        },
        MMM: {
          regex: a.DATETIME_FORMATS.SHORTMONTH.join('|'),
          apply: function (b) {
            this.month = a.DATETIME_FORMATS.SHORTMONTH.indexOf(b);
          }
        },
        MM: {
          regex: '0[1-9]|1[0-2]',
          apply: function (a) {
            this.month = a - 1;
          }
        },
        M: {
          regex: '[1-9]|1[0-2]',
          apply: function (a) {
            this.month = a - 1;
          }
        },
        dd: {
          regex: '[0-2][0-9]{1}|3[0-1]{1}',
          apply: function (a) {
            this.date = +a;
          }
        },
        d: {
          regex: '[1-2]?[0-9]{1}|3[0-1]{1}',
          apply: function (a) {
            this.date = +a;
          }
        },
        EEEE: { regex: a.DATETIME_FORMATS.DAY.join('|') },
        EEE: { regex: a.DATETIME_FORMATS.SHORTDAY.join('|') }
      };
    this.parse = function (b, e) {
      if (!angular.isString(b) || !e)
        return b;
      e = a.DATETIME_FORMATS[e] || e, this.parsers[e] || (this.parsers[e] = c(e));
      var f = this.parsers[e], g = f.regex, h = f.map, i = b.match(g);
      if (i && i.length) {
        for (var j, k = {
              year: 1900,
              month: 0,
              date: 1,
              hours: 0
            }, l = 1, m = i.length; m > l; l++) {
          var n = h[l - 1];
          n.apply && n.apply.call(k, i[l]);
        }
        return d(k.year, k.month, k.date) && (j = new Date(k.year, k.month, k.date, k.hours)), j;
      }
    };
  }
]), angular.module('ui.bootstrap.position', []).factory('$position', [
  '$document',
  '$window',
  function (a, b) {
    function c(a, c) {
      return a.currentStyle ? a.currentStyle[c] : b.getComputedStyle ? b.getComputedStyle(a)[c] : a.style[c];
    }
    function d(a) {
      return 'static' === (c(a, 'position') || 'static');
    }
    var e = function (b) {
      for (var c = a[0], e = b.offsetParent || c; e && e !== c && d(e);)
        e = e.offsetParent;
      return e || c;
    };
    return {
      position: function (b) {
        var c = this.offset(b), d = {
            top: 0,
            left: 0
          }, f = e(b[0]);
        f != a[0] && (d = this.offset(angular.element(f)), d.top += f.clientTop - f.scrollTop, d.left += f.clientLeft - f.scrollLeft);
        var g = b[0].getBoundingClientRect();
        return {
          width: g.width || b.prop('offsetWidth'),
          height: g.height || b.prop('offsetHeight'),
          top: c.top - d.top,
          left: c.left - d.left
        };
      },
      offset: function (c) {
        var d = c[0].getBoundingClientRect();
        return {
          width: d.width || c.prop('offsetWidth'),
          height: d.height || c.prop('offsetHeight'),
          top: d.top + (b.pageYOffset || a[0].documentElement.scrollTop),
          left: d.left + (b.pageXOffset || a[0].documentElement.scrollLeft)
        };
      },
      positionElements: function (a, b, c, d) {
        var e, f, g, h, i = c.split('-'), j = i[0], k = i[1] || 'center';
        e = d ? this.offset(a) : this.position(a), f = b.prop('offsetWidth'), g = b.prop('offsetHeight');
        var l = {
            center: function () {
              return e.left + e.width / 2 - f / 2;
            },
            left: function () {
              return e.left;
            },
            right: function () {
              return e.left + e.width;
            }
          }, m = {
            center: function () {
              return e.top + e.height / 2 - g / 2;
            },
            top: function () {
              return e.top;
            },
            bottom: function () {
              return e.top + e.height;
            }
          };
        switch (j) {
        case 'right':
          h = {
            top: m[k](),
            left: l[j]()
          };
          break;
        case 'left':
          h = {
            top: m[k](),
            left: e.left - f
          };
          break;
        case 'bottom':
          h = {
            top: m[j](),
            left: l[k]()
          };
          break;
        default:
          h = {
            top: e.top - g,
            left: l[k]()
          };
        }
        return h;
      }
    };
  }
]), angular.module('ui.bootstrap.datepicker', [
  'ui.bootstrap.dateparser',
  'ui.bootstrap.position'
]).constant('datepickerConfig', {
  formatDay: 'dd',
  formatMonth: 'MMMM',
  formatYear: 'yyyy',
  formatDayHeader: 'EEE',
  formatDayTitle: 'MMMM yyyy',
  formatMonthTitle: 'yyyy',
  datepickerMode: 'day',
  minMode: 'day',
  maxMode: 'year',
  showWeeks: !0,
  startingDay: 0,
  yearRange: 20,
  minDate: null,
  maxDate: null
}).controller('DatepickerController', [
  '$scope',
  '$attrs',
  '$parse',
  '$interpolate',
  '$timeout',
  '$log',
  'dateFilter',
  'datepickerConfig',
  function (a, b, c, d, e, f, g, h) {
    var i = this, j = { $setViewValue: angular.noop };
    this.modes = [
      'day',
      'month',
      'year'
    ], angular.forEach([
      'formatDay',
      'formatMonth',
      'formatYear',
      'formatDayHeader',
      'formatDayTitle',
      'formatMonthTitle',
      'minMode',
      'maxMode',
      'showWeeks',
      'startingDay',
      'yearRange'
    ], function (c, e) {
      i[c] = angular.isDefined(b[c]) ? 8 > e ? d(b[c])(a.$parent) : a.$parent.$eval(b[c]) : h[c];
    }), angular.forEach([
      'minDate',
      'maxDate'
    ], function (d) {
      b[d] ? a.$parent.$watch(c(b[d]), function (a) {
        i[d] = a ? new Date(a) : null, i.refreshView();
      }) : i[d] = h[d] ? new Date(h[d]) : null;
    }), a.datepickerMode = a.datepickerMode || h.datepickerMode, a.uniqueId = 'datepicker-' + a.$id + '-' + Math.floor(10000 * Math.random()), this.activeDate = angular.isDefined(b.initDate) ? a.$parent.$eval(b.initDate) : new Date(), a.isActive = function (b) {
      return 0 === i.compare(b.date, i.activeDate) ? (a.activeDateId = b.uid, !0) : !1;
    }, this.init = function (a) {
      j = a, j.$render = function () {
        i.render();
      };
    }, this.render = function () {
      if (j.$modelValue) {
        var a = new Date(j.$modelValue), b = !isNaN(a);
        b ? this.activeDate = a : f.error('Datepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.'), j.$setValidity('date', b);
      }
      this.refreshView();
    }, this.refreshView = function () {
      if (this.element) {
        this._refreshView();
        var a = j.$modelValue ? new Date(j.$modelValue) : null;
        j.$setValidity('date-disabled', !a || this.element && !this.isDisabled(a));
      }
    }, this.createDateObject = function (a, b) {
      var c = j.$modelValue ? new Date(j.$modelValue) : null;
      return {
        date: a,
        label: g(a, b),
        selected: c && 0 === this.compare(a, c),
        disabled: this.isDisabled(a),
        current: 0 === this.compare(a, new Date())
      };
    }, this.isDisabled = function (c) {
      return this.minDate && this.compare(c, this.minDate) < 0 || this.maxDate && this.compare(c, this.maxDate) > 0 || b.dateDisabled && a.dateDisabled({
        date: c,
        mode: a.datepickerMode
      });
    }, this.split = function (a, b) {
      for (var c = []; a.length > 0;)
        c.push(a.splice(0, b));
      return c;
    }, a.select = function (b) {
      if (a.datepickerMode === i.minMode) {
        var c = j.$modelValue ? new Date(j.$modelValue) : new Date(0, 0, 0, 0, 0, 0, 0);
        c.setFullYear(b.getFullYear(), b.getMonth(), b.getDate()), j.$setViewValue(c), j.$render();
      } else
        i.activeDate = b, a.datepickerMode = i.modes[i.modes.indexOf(a.datepickerMode) - 1];
    }, a.move = function (a) {
      var b = i.activeDate.getFullYear() + a * (i.step.years || 0), c = i.activeDate.getMonth() + a * (i.step.months || 0);
      i.activeDate.setFullYear(b, c, 1), i.refreshView();
    }, a.toggleMode = function (b) {
      b = b || 1, a.datepickerMode === i.maxMode && 1 === b || a.datepickerMode === i.minMode && -1 === b || (a.datepickerMode = i.modes[i.modes.indexOf(a.datepickerMode) + b]);
    }, a.keys = {
      13: 'enter',
      32: 'space',
      33: 'pageup',
      34: 'pagedown',
      35: 'end',
      36: 'home',
      37: 'left',
      38: 'up',
      39: 'right',
      40: 'down'
    };
    var k = function () {
      e(function () {
        i.element[0].focus();
      }, 0, !1);
    };
    a.$on('datepicker.focus', k), a.keydown = function (b) {
      var c = a.keys[b.which];
      if (c && !b.shiftKey && !b.altKey)
        if (b.preventDefault(), b.stopPropagation(), 'enter' === c || 'space' === c) {
          if (i.isDisabled(i.activeDate))
            return;
          a.select(i.activeDate), k();
        } else
          !b.ctrlKey || 'up' !== c && 'down' !== c ? (i.handleKeyDown(c, b), i.refreshView()) : (a.toggleMode('up' === c ? 1 : -1), k());
    };
  }
]).directive('datepicker', function () {
  return {
    restrict: 'EA',
    replace: !0,
    templateUrl: 'template/datepicker/datepicker.html',
    scope: {
      datepickerMode: '=?',
      dateDisabled: '&'
    },
    require: [
      'datepicker',
      '?^ngModel'
    ],
    controller: 'DatepickerController',
    link: function (a, b, c, d) {
      var e = d[0], f = d[1];
      f && e.init(f);
    }
  };
}).directive('daypicker', [
  'dateFilter',
  function (a) {
    return {
      restrict: 'EA',
      replace: !0,
      templateUrl: 'template/datepicker/day.html',
      require: '^datepicker',
      link: function (b, c, d, e) {
        function f(a, b) {
          return 1 !== b || a % 4 !== 0 || a % 100 === 0 && a % 400 !== 0 ? i[b] : 29;
        }
        function g(a, b) {
          var c = new Array(b), d = new Date(a), e = 0;
          for (d.setHours(12); b > e;)
            c[e++] = new Date(d), d.setDate(d.getDate() + 1);
          return c;
        }
        function h(a) {
          var b = new Date(a);
          b.setDate(b.getDate() + 4 - (b.getDay() || 7));
          var c = b.getTime();
          return b.setMonth(0), b.setDate(1), Math.floor(Math.round((c - b) / 86400000) / 7) + 1;
        }
        b.showWeeks = e.showWeeks, e.step = { months: 1 }, e.element = c;
        var i = [
            31,
            28,
            31,
            30,
            31,
            30,
            31,
            31,
            30,
            31,
            30,
            31
          ];
        e._refreshView = function () {
          var c = e.activeDate.getFullYear(), d = e.activeDate.getMonth(), f = new Date(c, d, 1), i = e.startingDay - f.getDay(), j = i > 0 ? 7 - i : -i, k = new Date(f);
          j > 0 && k.setDate(-j + 1);
          for (var l = g(k, 42), m = 0; 42 > m; m++)
            l[m] = angular.extend(e.createDateObject(l[m], e.formatDay), {
              secondary: l[m].getMonth() !== d,
              uid: b.uniqueId + '-' + m
            });
          b.labels = new Array(7);
          for (var n = 0; 7 > n; n++)
            b.labels[n] = {
              abbr: a(l[n].date, e.formatDayHeader),
              full: a(l[n].date, 'EEEE')
            };
          if (b.title = a(e.activeDate, e.formatDayTitle), b.rows = e.split(l, 7), b.showWeeks) {
            b.weekNumbers = [];
            for (var o = h(b.rows[0][0].date), p = b.rows.length; b.weekNumbers.push(o++) < p;);
          }
        }, e.compare = function (a, b) {
          return new Date(a.getFullYear(), a.getMonth(), a.getDate()) - new Date(b.getFullYear(), b.getMonth(), b.getDate());
        }, e.handleKeyDown = function (a) {
          var b = e.activeDate.getDate();
          if ('left' === a)
            b -= 1;
          else if ('up' === a)
            b -= 7;
          else if ('right' === a)
            b += 1;
          else if ('down' === a)
            b += 7;
          else if ('pageup' === a || 'pagedown' === a) {
            var c = e.activeDate.getMonth() + ('pageup' === a ? -1 : 1);
            e.activeDate.setMonth(c, 1), b = Math.min(f(e.activeDate.getFullYear(), e.activeDate.getMonth()), b);
          } else
            'home' === a ? b = 1 : 'end' === a && (b = f(e.activeDate.getFullYear(), e.activeDate.getMonth()));
          e.activeDate.setDate(b);
        }, e.refreshView();
      }
    };
  }
]).directive('monthpicker', [
  'dateFilter',
  function (a) {
    return {
      restrict: 'EA',
      replace: !0,
      templateUrl: 'template/datepicker/month.html',
      require: '^datepicker',
      link: function (b, c, d, e) {
        e.step = { years: 1 }, e.element = c, e._refreshView = function () {
          for (var c = new Array(12), d = e.activeDate.getFullYear(), f = 0; 12 > f; f++)
            c[f] = angular.extend(e.createDateObject(new Date(d, f, 1), e.formatMonth), { uid: b.uniqueId + '-' + f });
          b.title = a(e.activeDate, e.formatMonthTitle), b.rows = e.split(c, 3);
        }, e.compare = function (a, b) {
          return new Date(a.getFullYear(), a.getMonth()) - new Date(b.getFullYear(), b.getMonth());
        }, e.handleKeyDown = function (a) {
          var b = e.activeDate.getMonth();
          if ('left' === a)
            b -= 1;
          else if ('up' === a)
            b -= 3;
          else if ('right' === a)
            b += 1;
          else if ('down' === a)
            b += 3;
          else if ('pageup' === a || 'pagedown' === a) {
            var c = e.activeDate.getFullYear() + ('pageup' === a ? -1 : 1);
            e.activeDate.setFullYear(c);
          } else
            'home' === a ? b = 0 : 'end' === a && (b = 11);
          e.activeDate.setMonth(b);
        }, e.refreshView();
      }
    };
  }
]).directive('yearpicker', [
  'dateFilter',
  function () {
    return {
      restrict: 'EA',
      replace: !0,
      templateUrl: 'template/datepicker/year.html',
      require: '^datepicker',
      link: function (a, b, c, d) {
        function e(a) {
          return parseInt((a - 1) / f, 10) * f + 1;
        }
        var f = d.yearRange;
        d.step = { years: f }, d.element = b, d._refreshView = function () {
          for (var b = new Array(f), c = 0, g = e(d.activeDate.getFullYear()); f > c; c++)
            b[c] = angular.extend(d.createDateObject(new Date(g + c, 0, 1), d.formatYear), { uid: a.uniqueId + '-' + c });
          a.title = [
            b[0].label,
            b[f - 1].label
          ].join(' - '), a.rows = d.split(b, 5);
        }, d.compare = function (a, b) {
          return a.getFullYear() - b.getFullYear();
        }, d.handleKeyDown = function (a) {
          var b = d.activeDate.getFullYear();
          'left' === a ? b -= 1 : 'up' === a ? b -= 5 : 'right' === a ? b += 1 : 'down' === a ? b += 5 : 'pageup' === a || 'pagedown' === a ? b += ('pageup' === a ? -1 : 1) * d.step.years : 'home' === a ? b = e(d.activeDate.getFullYear()) : 'end' === a && (b = e(d.activeDate.getFullYear()) + f - 1), d.activeDate.setFullYear(b);
        }, d.refreshView();
      }
    };
  }
]).constant('datepickerPopupConfig', {
  datepickerPopup: 'yyyy-MM-dd',
  currentText: 'Today',
  clearText: 'Clear',
  closeText: 'Done',
  closeOnDateSelection: !0,
  appendToBody: !1,
  showButtonBar: !0
}).directive('datepickerPopup', [
  '$compile',
  '$parse',
  '$document',
  '$position',
  'dateFilter',
  'dateParser',
  'datepickerPopupConfig',
  function (a, b, c, d, e, f, g) {
    return {
      restrict: 'EA',
      require: 'ngModel',
      scope: {
        isOpen: '=?',
        currentText: '@',
        clearText: '@',
        closeText: '@',
        dateDisabled: '&'
      },
      link: function (h, i, j, k) {
        function l(a) {
          return a.replace(/([A-Z])/g, function (a) {
            return '-' + a.toLowerCase();
          });
        }
        function m(a) {
          if (a) {
            if (angular.isDate(a) && !isNaN(a))
              return k.$setValidity('date', !0), a;
            if (angular.isString(a)) {
              var b = f.parse(a, n) || new Date(a);
              return isNaN(b) ? void k.$setValidity('date', !1) : (k.$setValidity('date', !0), b);
            }
            return void k.$setValidity('date', !1);
          }
          return k.$setValidity('date', !0), null;
        }
        var n, o = angular.isDefined(j.closeOnDateSelection) ? h.$parent.$eval(j.closeOnDateSelection) : g.closeOnDateSelection, p = angular.isDefined(j.datepickerAppendToBody) ? h.$parent.$eval(j.datepickerAppendToBody) : g.appendToBody;
        h.showButtonBar = angular.isDefined(j.showButtonBar) ? h.$parent.$eval(j.showButtonBar) : g.showButtonBar, h.getText = function (a) {
          return h[a + 'Text'] || g[a + 'Text'];
        }, j.$observe('datepickerPopup', function (a) {
          n = a || g.datepickerPopup, k.$render();
        });
        var q = angular.element('<div datepicker-popup-wrap><div datepicker></div></div>');
        q.attr({
          'ng-model': 'date',
          'ng-change': 'dateSelection()'
        });
        var r = angular.element(q.children()[0]);
        j.datepickerOptions && angular.forEach(h.$parent.$eval(j.datepickerOptions), function (a, b) {
          r.attr(l(b), a);
        }), h.watchData = {}, angular.forEach([
          'minDate',
          'maxDate',
          'datepickerMode'
        ], function (a) {
          if (j[a]) {
            var c = b(j[a]);
            if (h.$parent.$watch(c, function (b) {
                h.watchData[a] = b;
              }), r.attr(l(a), 'watchData.' + a), 'datepickerMode' === a) {
              var d = c.assign;
              h.$watch('watchData.' + a, function (a, b) {
                a !== b && d(h.$parent, a);
              });
            }
          }
        }), j.dateDisabled && r.attr('date-disabled', 'dateDisabled({ date: date, mode: mode })'), k.$parsers.unshift(m), h.dateSelection = function (a) {
          angular.isDefined(a) && (h.date = a), k.$setViewValue(h.date), k.$render(), o && (h.isOpen = !1, i[0].focus());
        }, i.bind('input change keyup', function () {
          h.$apply(function () {
            h.date = k.$modelValue;
          });
        }), k.$render = function () {
          var a = k.$viewValue ? e(k.$viewValue, n) : '';
          i.val(a), h.date = m(k.$modelValue);
        };
        var s = function (a) {
            h.isOpen && a.target !== i[0] && h.$apply(function () {
              h.isOpen = !1;
            });
          }, t = function (a) {
            h.keydown(a);
          };
        i.bind('keydown', t), h.keydown = function (a) {
          27 === a.which ? (a.preventDefault(), a.stopPropagation(), h.close()) : 40 !== a.which || h.isOpen || (h.isOpen = !0);
        }, h.$watch('isOpen', function (a) {
          a ? (h.$broadcast('datepicker.focus'), h.position = p ? d.offset(i) : d.position(i), h.position.top = h.position.top + i.prop('offsetHeight'), c.bind('click', s)) : c.unbind('click', s);
        }), h.select = function (a) {
          if ('today' === a) {
            var b = new Date();
            angular.isDate(k.$modelValue) ? (a = new Date(k.$modelValue), a.setFullYear(b.getFullYear(), b.getMonth(), b.getDate())) : a = new Date(b.setHours(0, 0, 0, 0));
          }
          h.dateSelection(a);
        }, h.close = function () {
          h.isOpen = !1, i[0].focus();
        };
        var u = a(q)(h);
        q.remove(), p ? c.find('body').append(u) : i.after(u), h.$on('$destroy', function () {
          u.remove(), i.unbind('keydown', t), c.unbind('click', s);
        });
      }
    };
  }
]).directive('datepickerPopupWrap', function () {
  return {
    restrict: 'EA',
    replace: !0,
    transclude: !0,
    templateUrl: 'template/datepicker/popup.html',
    link: function (a, b) {
      b.bind('click', function (a) {
        a.preventDefault(), a.stopPropagation();
      });
    }
  };
}), angular.module('ui.bootstrap.dropdown', []).constant('dropdownConfig', { openClass: 'open' }).service('dropdownService', [
  '$document',
  function (a) {
    var b = null;
    this.open = function (e) {
      b || (a.bind('click', c), a.bind('keydown', d)), b && b !== e && (b.isOpen = !1), b = e;
    }, this.close = function (e) {
      b === e && (b = null, a.unbind('click', c), a.unbind('keydown', d));
    };
    var c = function (a) {
        if (b) {
          var c = b.getToggleElement();
          a && c && c[0].contains(a.target) || b.$apply(function () {
            b.isOpen = !1;
          });
        }
      }, d = function (a) {
        27 === a.which && (b.focusToggleElement(), c());
      };
  }
]).controller('DropdownController', [
  '$scope',
  '$attrs',
  '$parse',
  'dropdownConfig',
  'dropdownService',
  '$animate',
  function (a, b, c, d, e, f) {
    var g, h = this, i = a.$new(), j = d.openClass, k = angular.noop, l = b.onToggle ? c(b.onToggle) : angular.noop;
    this.init = function (d) {
      h.$element = d, b.isOpen && (g = c(b.isOpen), k = g.assign, a.$watch(g, function (a) {
        i.isOpen = !!a;
      }));
    }, this.toggle = function (a) {
      return i.isOpen = arguments.length ? !!a : !i.isOpen;
    }, this.isOpen = function () {
      return i.isOpen;
    }, i.getToggleElement = function () {
      return h.toggleElement;
    }, i.focusToggleElement = function () {
      h.toggleElement && h.toggleElement[0].focus();
    }, i.$watch('isOpen', function (b, c) {
      f[b ? 'addClass' : 'removeClass'](h.$element, j), b ? (i.focusToggleElement(), e.open(i)) : e.close(i), k(a, b), angular.isDefined(b) && b !== c && l(a, { open: !!b });
    }), a.$on('$locationChangeSuccess', function () {
      i.isOpen = !1;
    }), a.$on('$destroy', function () {
      i.$destroy();
    });
  }
]).directive('dropdown', function () {
  return {
    controller: 'DropdownController',
    link: function (a, b, c, d) {
      d.init(b);
    }
  };
}).directive('dropdownToggle', function () {
  return {
    require: '?^dropdown',
    link: function (a, b, c, d) {
      if (d) {
        d.toggleElement = b;
        var e = function (e) {
          e.preventDefault(), b.hasClass('disabled') || c.disabled || a.$apply(function () {
            d.toggle();
          });
        };
        b.bind('click', e), b.attr({
          'aria-haspopup': !0,
          'aria-expanded': !1
        }), a.$watch(d.isOpen, function (a) {
          b.attr('aria-expanded', !!a);
        }), a.$on('$destroy', function () {
          b.unbind('click', e);
        });
      }
    }
  };
}), angular.module('ui.bootstrap.modal', ['ui.bootstrap.transition']).factory('$$stackedMap', function () {
  return {
    createNew: function () {
      var a = [];
      return {
        add: function (b, c) {
          a.push({
            key: b,
            value: c
          });
        },
        get: function (b) {
          for (var c = 0; c < a.length; c++)
            if (b == a[c].key)
              return a[c];
        },
        keys: function () {
          for (var b = [], c = 0; c < a.length; c++)
            b.push(a[c].key);
          return b;
        },
        top: function () {
          return a[a.length - 1];
        },
        remove: function (b) {
          for (var c = -1, d = 0; d < a.length; d++)
            if (b == a[d].key) {
              c = d;
              break;
            }
          return a.splice(c, 1)[0];
        },
        removeTop: function () {
          return a.splice(a.length - 1, 1)[0];
        },
        length: function () {
          return a.length;
        }
      };
    }
  };
}).directive('modalBackdrop', [
  '$timeout',
  function (a) {
    return {
      restrict: 'EA',
      replace: !0,
      templateUrl: 'template/modal/backdrop.html',
      link: function (b, c, d) {
        b.backdropClass = d.backdropClass || '', b.animate = !1, a(function () {
          b.animate = !0;
        });
      }
    };
  }
]).directive('modalWindow', [
  '$modalStack',
  '$timeout',
  function (a, b) {
    return {
      restrict: 'EA',
      scope: {
        index: '@',
        animate: '='
      },
      replace: !0,
      transclude: !0,
      templateUrl: function (a, b) {
        return b.templateUrl || 'template/modal/window.html';
      },
      link: function (c, d, e) {
        d.addClass(e.windowClass || ''), c.size = e.size, b(function () {
          c.animate = !0, d[0].querySelectorAll('[autofocus]').length || d[0].focus();
        }), c.close = function (b) {
          var c = a.getTop();
          c && c.value.backdrop && 'static' != c.value.backdrop && b.target === b.currentTarget && (b.preventDefault(), b.stopPropagation(), a.dismiss(c.key, 'backdrop click'));
        };
      }
    };
  }
]).directive('modalTransclude', function () {
  return {
    link: function (a, b, c, d, e) {
      e(a.$parent, function (a) {
        b.empty(), b.append(a);
      });
    }
  };
}).factory('$modalStack', [
  '$transition',
  '$timeout',
  '$document',
  '$compile',
  '$rootScope',
  '$$stackedMap',
  function (a, b, c, d, e, f) {
    function g() {
      for (var a = -1, b = n.keys(), c = 0; c < b.length; c++)
        n.get(b[c]).value.backdrop && (a = c);
      return a;
    }
    function h(a) {
      var b = c.find('body').eq(0), d = n.get(a).value;
      n.remove(a), j(d.modalDomEl, d.modalScope, 300, function () {
        d.modalScope.$destroy(), b.toggleClass(m, n.length() > 0), i();
      });
    }
    function i() {
      if (k && -1 == g()) {
        var a = l;
        j(k, l, 150, function () {
          a.$destroy(), a = null;
        }), k = void 0, l = void 0;
      }
    }
    function j(c, d, e, f) {
      function g() {
        g.done || (g.done = !0, c.remove(), f && f());
      }
      d.animate = !1;
      var h = a.transitionEndEventName;
      if (h) {
        var i = b(g, e);
        c.bind(h, function () {
          b.cancel(i), g(), d.$apply();
        });
      } else
        b(g);
    }
    var k, l, m = 'modal-open', n = f.createNew(), o = {};
    return e.$watch(g, function (a) {
      l && (l.index = a);
    }), c.bind('keydown', function (a) {
      var b;
      27 === a.which && (b = n.top(), b && b.value.keyboard && (a.preventDefault(), e.$apply(function () {
        o.dismiss(b.key, 'escape key press');
      })));
    }), o.open = function (a, b) {
      n.add(a, {
        deferred: b.deferred,
        modalScope: b.scope,
        backdrop: b.backdrop,
        keyboard: b.keyboard
      });
      var f = c.find('body').eq(0), h = g();
      if (h >= 0 && !k) {
        l = e.$new(!0), l.index = h;
        var i = angular.element('<div modal-backdrop></div>');
        i.attr('backdrop-class', b.backdropClass), k = d(i)(l), f.append(k);
      }
      var j = angular.element('<div modal-window></div>');
      j.attr({
        'template-url': b.windowTemplateUrl,
        'window-class': b.windowClass,
        size: b.size,
        index: n.length() - 1,
        animate: 'animate'
      }).html(b.content);
      var o = d(j)(b.scope);
      n.top().value.modalDomEl = o, f.append(o), f.addClass(m);
    }, o.close = function (a, b) {
      var c = n.get(a);
      c && (c.value.deferred.resolve(b), h(a));
    }, o.dismiss = function (a, b) {
      var c = n.get(a);
      c && (c.value.deferred.reject(b), h(a));
    }, o.dismissAll = function (a) {
      for (var b = this.getTop(); b;)
        this.dismiss(b.key, a), b = this.getTop();
    }, o.getTop = function () {
      return n.top();
    }, o;
  }
]).provider('$modal', function () {
  var a = {
      options: {
        backdrop: !0,
        keyboard: !0
      },
      $get: [
        '$injector',
        '$rootScope',
        '$q',
        '$http',
        '$templateCache',
        '$controller',
        '$modalStack',
        function (b, c, d, e, f, g, h) {
          function i(a) {
            return a.template ? d.when(a.template) : e.get(angular.isFunction(a.templateUrl) ? a.templateUrl() : a.templateUrl, { cache: f }).then(function (a) {
              return a.data;
            });
          }
          function j(a) {
            var c = [];
            return angular.forEach(a, function (a) {
              (angular.isFunction(a) || angular.isArray(a)) && c.push(d.when(b.invoke(a)));
            }), c;
          }
          var k = {};
          return k.open = function (b) {
            var e = d.defer(), f = d.defer(), k = {
                result: e.promise,
                opened: f.promise,
                close: function (a) {
                  h.close(k, a);
                },
                dismiss: function (a) {
                  h.dismiss(k, a);
                }
              };
            if (b = angular.extend({}, a.options, b), b.resolve = b.resolve || {}, !b.template && !b.templateUrl)
              throw new Error('One of template or templateUrl options is required.');
            var l = d.all([i(b)].concat(j(b.resolve)));
            return l.then(function (a) {
              var d = (b.scope || c).$new();
              d.$close = k.close, d.$dismiss = k.dismiss;
              var f, i = {}, j = 1;
              b.controller && (i.$scope = d, i.$modalInstance = k, angular.forEach(b.resolve, function (b, c) {
                i[c] = a[j++];
              }), f = g(b.controller, i), b.controllerAs && (d[b.controllerAs] = f)), h.open(k, {
                scope: d,
                deferred: e,
                content: a[0],
                backdrop: b.backdrop,
                keyboard: b.keyboard,
                backdropClass: b.backdropClass,
                windowClass: b.windowClass,
                windowTemplateUrl: b.windowTemplateUrl,
                size: b.size
              });
            }, function (a) {
              e.reject(a);
            }), l.then(function () {
              f.resolve(!0);
            }, function () {
              f.reject(!1);
            }), k;
          }, k;
        }
      ]
    };
  return a;
}), angular.module('ui.bootstrap.pagination', []).controller('PaginationController', [
  '$scope',
  '$attrs',
  '$parse',
  function (a, b, c) {
    var d = this, e = { $setViewValue: angular.noop }, f = b.numPages ? c(b.numPages).assign : angular.noop;
    this.init = function (f, g) {
      e = f, this.config = g, e.$render = function () {
        d.render();
      }, b.itemsPerPage ? a.$parent.$watch(c(b.itemsPerPage), function (b) {
        d.itemsPerPage = parseInt(b, 10), a.totalPages = d.calculateTotalPages();
      }) : this.itemsPerPage = g.itemsPerPage;
    }, this.calculateTotalPages = function () {
      var b = this.itemsPerPage < 1 ? 1 : Math.ceil(a.totalItems / this.itemsPerPage);
      return Math.max(b || 0, 1);
    }, this.render = function () {
      a.page = parseInt(e.$viewValue, 10) || 1;
    }, a.selectPage = function (b) {
      a.page !== b && b > 0 && b <= a.totalPages && (e.$setViewValue(b), e.$render());
    }, a.getText = function (b) {
      return a[b + 'Text'] || d.config[b + 'Text'];
    }, a.noPrevious = function () {
      return 1 === a.page;
    }, a.noNext = function () {
      return a.page === a.totalPages;
    }, a.$watch('totalItems', function () {
      a.totalPages = d.calculateTotalPages();
    }), a.$watch('totalPages', function (b) {
      f(a.$parent, b), a.page > b ? a.selectPage(b) : e.$render();
    });
  }
]).constant('paginationConfig', {
  itemsPerPage: 10,
  boundaryLinks: !1,
  directionLinks: !0,
  firstText: 'First',
  previousText: 'Previous',
  nextText: 'Next',
  lastText: 'Last',
  rotate: !0
}).directive('pagination', [
  '$parse',
  'paginationConfig',
  function (a, b) {
    return {
      restrict: 'EA',
      scope: {
        totalItems: '=',
        firstText: '@',
        previousText: '@',
        nextText: '@',
        lastText: '@'
      },
      require: [
        'pagination',
        '?ngModel'
      ],
      controller: 'PaginationController',
      templateUrl: 'template/pagination/pagination.html',
      replace: !0,
      link: function (c, d, e, f) {
        function g(a, b, c) {
          return {
            number: a,
            text: b,
            active: c
          };
        }
        function h(a, b) {
          var c = [], d = 1, e = b, f = angular.isDefined(k) && b > k;
          f && (l ? (d = Math.max(a - Math.floor(k / 2), 1), e = d + k - 1, e > b && (e = b, d = e - k + 1)) : (d = (Math.ceil(a / k) - 1) * k + 1, e = Math.min(d + k - 1, b)));
          for (var h = d; e >= h; h++) {
            var i = g(h, h, h === a);
            c.push(i);
          }
          if (f && !l) {
            if (d > 1) {
              var j = g(d - 1, '...', !1);
              c.unshift(j);
            }
            if (b > e) {
              var m = g(e + 1, '...', !1);
              c.push(m);
            }
          }
          return c;
        }
        var i = f[0], j = f[1];
        if (j) {
          var k = angular.isDefined(e.maxSize) ? c.$parent.$eval(e.maxSize) : b.maxSize, l = angular.isDefined(e.rotate) ? c.$parent.$eval(e.rotate) : b.rotate;
          c.boundaryLinks = angular.isDefined(e.boundaryLinks) ? c.$parent.$eval(e.boundaryLinks) : b.boundaryLinks, c.directionLinks = angular.isDefined(e.directionLinks) ? c.$parent.$eval(e.directionLinks) : b.directionLinks, i.init(j, b), e.maxSize && c.$parent.$watch(a(e.maxSize), function (a) {
            k = parseInt(a, 10), i.render();
          });
          var m = i.render;
          i.render = function () {
            m(), c.page > 0 && c.page <= c.totalPages && (c.pages = h(c.page, c.totalPages));
          };
        }
      }
    };
  }
]).constant('pagerConfig', {
  itemsPerPage: 10,
  previousText: '\xab Previous',
  nextText: 'Next \xbb',
  align: !0
}).directive('pager', [
  'pagerConfig',
  function (a) {
    return {
      restrict: 'EA',
      scope: {
        totalItems: '=',
        previousText: '@',
        nextText: '@'
      },
      require: [
        'pager',
        '?ngModel'
      ],
      controller: 'PaginationController',
      templateUrl: 'template/pagination/pager.html',
      replace: !0,
      link: function (b, c, d, e) {
        var f = e[0], g = e[1];
        g && (b.align = angular.isDefined(d.align) ? b.$parent.$eval(d.align) : a.align, f.init(g, a));
      }
    };
  }
]), angular.module('ui.bootstrap.tooltip', [
  'ui.bootstrap.position',
  'ui.bootstrap.bindHtml'
]).provider('$tooltip', function () {
  function a(a) {
    var b = /[A-Z]/g, c = '-';
    return a.replace(b, function (a, b) {
      return (b ? c : '') + a.toLowerCase();
    });
  }
  var b = {
      placement: 'top',
      animation: !0,
      popupDelay: 0
    }, c = {
      mouseenter: 'mouseleave',
      click: 'click',
      focus: 'blur'
    }, d = {};
  this.options = function (a) {
    angular.extend(d, a);
  }, this.setTriggers = function (a) {
    angular.extend(c, a);
  }, this.$get = [
    '$window',
    '$compile',
    '$timeout',
    '$document',
    '$position',
    '$interpolate',
    function (e, f, g, h, i, j) {
      return function (e, k, l) {
        function m(a) {
          var b = a || n.trigger || l, d = c[b] || b;
          return {
            show: b,
            hide: d
          };
        }
        var n = angular.extend({}, b, d), o = a(e), p = j.startSymbol(), q = j.endSymbol(), r = '<div ' + o + '-popup title="' + p + 'title' + q + '" content="' + p + 'content' + q + '" placement="' + p + 'placement' + q + '" animation="animation" is-open="isOpen"></div>';
        return {
          restrict: 'EA',
          compile: function () {
            var a = f(r);
            return function (b, c, d) {
              function f() {
                D.isOpen ? l() : j();
              }
              function j() {
                (!C || b.$eval(d[k + 'Enable'])) && (s(), D.popupDelay ? z || (z = g(o, D.popupDelay, !1), z.then(function (a) {
                  a();
                })) : o()());
              }
              function l() {
                b.$apply(function () {
                  p();
                });
              }
              function o() {
                return z = null, y && (g.cancel(y), y = null), D.content ? (q(), w.css({
                  top: 0,
                  left: 0,
                  display: 'block'
                }), A ? h.find('body').append(w) : c.after(w), E(), D.isOpen = !0, D.$digest(), E) : angular.noop;
              }
              function p() {
                D.isOpen = !1, g.cancel(z), z = null, D.animation ? y || (y = g(r, 500)) : r();
              }
              function q() {
                w && r(), x = D.$new(), w = a(x, angular.noop);
              }
              function r() {
                y = null, w && (w.remove(), w = null), x && (x.$destroy(), x = null);
              }
              function s() {
                t(), u();
              }
              function t() {
                var a = d[k + 'Placement'];
                D.placement = angular.isDefined(a) ? a : n.placement;
              }
              function u() {
                var a = d[k + 'PopupDelay'], b = parseInt(a, 10);
                D.popupDelay = isNaN(b) ? n.popupDelay : b;
              }
              function v() {
                var a = d[k + 'Trigger'];
                F(), B = m(a), B.show === B.hide ? c.bind(B.show, f) : (c.bind(B.show, j), c.bind(B.hide, l));
              }
              var w, x, y, z, A = angular.isDefined(n.appendToBody) ? n.appendToBody : !1, B = m(void 0), C = angular.isDefined(d[k + 'Enable']), D = b.$new(!0), E = function () {
                  var a = i.positionElements(c, w, D.placement, A);
                  a.top += 'px', a.left += 'px', w.css(a);
                };
              D.isOpen = !1, d.$observe(e, function (a) {
                D.content = a, !a && D.isOpen && p();
              }), d.$observe(k + 'Title', function (a) {
                D.title = a;
              });
              var F = function () {
                c.unbind(B.show, j), c.unbind(B.hide, l);
              };
              v();
              var G = b.$eval(d[k + 'Animation']);
              D.animation = angular.isDefined(G) ? !!G : n.animation;
              var H = b.$eval(d[k + 'AppendToBody']);
              A = angular.isDefined(H) ? H : A, A && b.$on('$locationChangeSuccess', function () {
                D.isOpen && p();
              }), b.$on('$destroy', function () {
                g.cancel(y), g.cancel(z), F(), r(), D = null;
              });
            };
          }
        };
      };
    }
  ];
}).directive('tooltipPopup', function () {
  return {
    restrict: 'EA',
    replace: !0,
    scope: {
      content: '@',
      placement: '@',
      animation: '&',
      isOpen: '&'
    },
    templateUrl: 'template/tooltip/tooltip-popup.html'
  };
}).directive('tooltip', [
  '$tooltip',
  function (a) {
    return a('tooltip', 'tooltip', 'mouseenter');
  }
]).directive('tooltipHtmlUnsafePopup', function () {
  return {
    restrict: 'EA',
    replace: !0,
    scope: {
      content: '@',
      placement: '@',
      animation: '&',
      isOpen: '&'
    },
    templateUrl: 'template/tooltip/tooltip-html-unsafe-popup.html'
  };
}).directive('tooltipHtmlUnsafe', [
  '$tooltip',
  function (a) {
    return a('tooltipHtmlUnsafe', 'tooltip', 'mouseenter');
  }
]), angular.module('ui.bootstrap.popover', ['ui.bootstrap.tooltip']).directive('popoverPopup', function () {
  return {
    restrict: 'EA',
    replace: !0,
    scope: {
      title: '@',
      content: '@',
      placement: '@',
      animation: '&',
      isOpen: '&'
    },
    templateUrl: 'template/popover/popover.html'
  };
}).directive('popover', [
  '$tooltip',
  function (a) {
    return a('popover', 'popover', 'click');
  }
]), angular.module('ui.bootstrap.progressbar', []).constant('progressConfig', {
  animate: !0,
  max: 100
}).controller('ProgressController', [
  '$scope',
  '$attrs',
  'progressConfig',
  function (a, b, c) {
    var d = this, e = angular.isDefined(b.animate) ? a.$parent.$eval(b.animate) : c.animate;
    this.bars = [], a.max = angular.isDefined(b.max) ? a.$parent.$eval(b.max) : c.max, this.addBar = function (b, c) {
      e || c.css({ transition: 'none' }), this.bars.push(b), b.$watch('value', function (c) {
        b.percent = +(100 * c / a.max).toFixed(2);
      }), b.$on('$destroy', function () {
        c = null, d.removeBar(b);
      });
    }, this.removeBar = function (a) {
      this.bars.splice(this.bars.indexOf(a), 1);
    };
  }
]).directive('progress', function () {
  return {
    restrict: 'EA',
    replace: !0,
    transclude: !0,
    controller: 'ProgressController',
    require: 'progress',
    scope: {},
    templateUrl: 'template/progressbar/progress.html'
  };
}).directive('bar', function () {
  return {
    restrict: 'EA',
    replace: !0,
    transclude: !0,
    require: '^progress',
    scope: {
      value: '=',
      type: '@'
    },
    templateUrl: 'template/progressbar/bar.html',
    link: function (a, b, c, d) {
      d.addBar(a, b);
    }
  };
}).directive('progressbar', function () {
  return {
    restrict: 'EA',
    replace: !0,
    transclude: !0,
    controller: 'ProgressController',
    scope: {
      value: '=',
      type: '@'
    },
    templateUrl: 'template/progressbar/progressbar.html',
    link: function (a, b, c, d) {
      d.addBar(a, angular.element(b.children()[0]));
    }
  };
}), angular.module('ui.bootstrap.rating', []).constant('ratingConfig', {
  max: 5,
  stateOn: null,
  stateOff: null
}).controller('RatingController', [
  '$scope',
  '$attrs',
  'ratingConfig',
  function (a, b, c) {
    var d = { $setViewValue: angular.noop };
    this.init = function (e) {
      d = e, d.$render = this.render, this.stateOn = angular.isDefined(b.stateOn) ? a.$parent.$eval(b.stateOn) : c.stateOn, this.stateOff = angular.isDefined(b.stateOff) ? a.$parent.$eval(b.stateOff) : c.stateOff;
      var f = angular.isDefined(b.ratingStates) ? a.$parent.$eval(b.ratingStates) : new Array(angular.isDefined(b.max) ? a.$parent.$eval(b.max) : c.max);
      a.range = this.buildTemplateObjects(f);
    }, this.buildTemplateObjects = function (a) {
      for (var b = 0, c = a.length; c > b; b++)
        a[b] = angular.extend({ index: b }, {
          stateOn: this.stateOn,
          stateOff: this.stateOff
        }, a[b]);
      return a;
    }, a.rate = function (b) {
      !a.readonly && b >= 0 && b <= a.range.length && (d.$setViewValue(b), d.$render());
    }, a.enter = function (b) {
      a.readonly || (a.value = b), a.onHover({ value: b });
    }, a.reset = function () {
      a.value = d.$viewValue, a.onLeave();
    }, a.onKeydown = function (b) {
      /(37|38|39|40)/.test(b.which) && (b.preventDefault(), b.stopPropagation(), a.rate(a.value + (38 === b.which || 39 === b.which ? 1 : -1)));
    }, this.render = function () {
      a.value = d.$viewValue;
    };
  }
]).directive('rating', function () {
  return {
    restrict: 'EA',
    require: [
      'rating',
      'ngModel'
    ],
    scope: {
      readonly: '=?',
      onHover: '&',
      onLeave: '&'
    },
    controller: 'RatingController',
    templateUrl: 'template/rating/rating.html',
    replace: !0,
    link: function (a, b, c, d) {
      var e = d[0], f = d[1];
      f && e.init(f);
    }
  };
}), angular.module('ui.bootstrap.tabs', []).controller('TabsetController', [
  '$scope',
  function (a) {
    var b = this, c = b.tabs = a.tabs = [];
    b.select = function (a) {
      angular.forEach(c, function (b) {
        b.active && b !== a && (b.active = !1, b.onDeselect());
      }), a.active = !0, a.onSelect();
    }, b.addTab = function (a) {
      c.push(a), 1 === c.length ? a.active = !0 : a.active && b.select(a);
    }, b.removeTab = function (a) {
      var e = c.indexOf(a);
      if (a.active && c.length > 1 && !d) {
        var f = e == c.length - 1 ? e - 1 : e + 1;
        b.select(c[f]);
      }
      c.splice(e, 1);
    };
    var d;
    a.$on('$destroy', function () {
      d = !0;
    });
  }
]).directive('tabset', function () {
  return {
    restrict: 'EA',
    transclude: !0,
    replace: !0,
    scope: { type: '@' },
    controller: 'TabsetController',
    templateUrl: 'template/tabs/tabset.html',
    link: function (a, b, c) {
      a.vertical = angular.isDefined(c.vertical) ? a.$parent.$eval(c.vertical) : !1, a.justified = angular.isDefined(c.justified) ? a.$parent.$eval(c.justified) : !1;
    }
  };
}).directive('tab', [
  '$parse',
  function (a) {
    return {
      require: '^tabset',
      restrict: 'EA',
      replace: !0,
      templateUrl: 'template/tabs/tab.html',
      transclude: !0,
      scope: {
        active: '=?',
        heading: '@',
        onSelect: '&select',
        onDeselect: '&deselect'
      },
      controller: function () {
      },
      compile: function (b, c, d) {
        return function (b, c, e, f) {
          b.$watch('active', function (a) {
            a && f.select(b);
          }), b.disabled = !1, e.disabled && b.$parent.$watch(a(e.disabled), function (a) {
            b.disabled = !!a;
          }), b.select = function () {
            b.disabled || (b.active = !0);
          }, f.addTab(b), b.$on('$destroy', function () {
            f.removeTab(b);
          }), b.$transcludeFn = d;
        };
      }
    };
  }
]).directive('tabHeadingTransclude', [function () {
    return {
      restrict: 'A',
      require: '^tab',
      link: function (a, b) {
        a.$watch('headingElement', function (a) {
          a && (b.html(''), b.append(a));
        });
      }
    };
  }]).directive('tabContentTransclude', function () {
  function a(a) {
    return a.tagName && (a.hasAttribute('tab-heading') || a.hasAttribute('data-tab-heading') || 'tab-heading' === a.tagName.toLowerCase() || 'data-tab-heading' === a.tagName.toLowerCase());
  }
  return {
    restrict: 'A',
    require: '^tabset',
    link: function (b, c, d) {
      var e = b.$eval(d.tabContentTransclude);
      e.$transcludeFn(e.$parent, function (b) {
        angular.forEach(b, function (b) {
          a(b) ? e.headingElement = b : c.append(b);
        });
      });
    }
  };
}), angular.module('ui.bootstrap.timepicker', []).constant('timepickerConfig', {
  hourStep: 1,
  minuteStep: 1,
  showMeridian: !0,
  meridians: null,
  readonlyInput: !1,
  mousewheel: !0
}).controller('TimepickerController', [
  '$scope',
  '$attrs',
  '$parse',
  '$log',
  '$locale',
  'timepickerConfig',
  function (a, b, c, d, e, f) {
    function g() {
      var b = parseInt(a.hours, 10), c = a.showMeridian ? b > 0 && 13 > b : b >= 0 && 24 > b;
      return c ? (a.showMeridian && (12 === b && (b = 0), a.meridian === p[1] && (b += 12)), b) : void 0;
    }
    function h() {
      var b = parseInt(a.minutes, 10);
      return b >= 0 && 60 > b ? b : void 0;
    }
    function i(a) {
      return angular.isDefined(a) && a.toString().length < 2 ? '0' + a : a;
    }
    function j(a) {
      k(), o.$setViewValue(new Date(n)), l(a);
    }
    function k() {
      o.$setValidity('time', !0), a.invalidHours = !1, a.invalidMinutes = !1;
    }
    function l(b) {
      var c = n.getHours(), d = n.getMinutes();
      a.showMeridian && (c = 0 === c || 12 === c ? 12 : c % 12), a.hours = 'h' === b ? c : i(c), a.minutes = 'm' === b ? d : i(d), a.meridian = n.getHours() < 12 ? p[0] : p[1];
    }
    function m(a) {
      var b = new Date(n.getTime() + 60000 * a);
      n.setHours(b.getHours(), b.getMinutes()), j();
    }
    var n = new Date(), o = { $setViewValue: angular.noop }, p = angular.isDefined(b.meridians) ? a.$parent.$eval(b.meridians) : f.meridians || e.DATETIME_FORMATS.AMPMS;
    this.init = function (c, d) {
      o = c, o.$render = this.render;
      var e = d.eq(0), g = d.eq(1), h = angular.isDefined(b.mousewheel) ? a.$parent.$eval(b.mousewheel) : f.mousewheel;
      h && this.setupMousewheelEvents(e, g), a.readonlyInput = angular.isDefined(b.readonlyInput) ? a.$parent.$eval(b.readonlyInput) : f.readonlyInput, this.setupInputEvents(e, g);
    };
    var q = f.hourStep;
    b.hourStep && a.$parent.$watch(c(b.hourStep), function (a) {
      q = parseInt(a, 10);
    });
    var r = f.minuteStep;
    b.minuteStep && a.$parent.$watch(c(b.minuteStep), function (a) {
      r = parseInt(a, 10);
    }), a.showMeridian = f.showMeridian, b.showMeridian && a.$parent.$watch(c(b.showMeridian), function (b) {
      if (a.showMeridian = !!b, o.$error.time) {
        var c = g(), d = h();
        angular.isDefined(c) && angular.isDefined(d) && (n.setHours(c), j());
      } else
        l();
    }), this.setupMousewheelEvents = function (b, c) {
      var d = function (a) {
        a.originalEvent && (a = a.originalEvent);
        var b = a.wheelDelta ? a.wheelDelta : -a.deltaY;
        return a.detail || b > 0;
      };
      b.bind('mousewheel wheel', function (b) {
        a.$apply(d(b) ? a.incrementHours() : a.decrementHours()), b.preventDefault();
      }), c.bind('mousewheel wheel', function (b) {
        a.$apply(d(b) ? a.incrementMinutes() : a.decrementMinutes()), b.preventDefault();
      });
    }, this.setupInputEvents = function (b, c) {
      if (a.readonlyInput)
        return a.updateHours = angular.noop, void (a.updateMinutes = angular.noop);
      var d = function (b, c) {
        o.$setViewValue(null), o.$setValidity('time', !1), angular.isDefined(b) && (a.invalidHours = b), angular.isDefined(c) && (a.invalidMinutes = c);
      };
      a.updateHours = function () {
        var a = g();
        angular.isDefined(a) ? (n.setHours(a), j('h')) : d(!0);
      }, b.bind('blur', function () {
        !a.invalidHours && a.hours < 10 && a.$apply(function () {
          a.hours = i(a.hours);
        });
      }), a.updateMinutes = function () {
        var a = h();
        angular.isDefined(a) ? (n.setMinutes(a), j('m')) : d(void 0, !0);
      }, c.bind('blur', function () {
        !a.invalidMinutes && a.minutes < 10 && a.$apply(function () {
          a.minutes = i(a.minutes);
        });
      });
    }, this.render = function () {
      var a = o.$modelValue ? new Date(o.$modelValue) : null;
      isNaN(a) ? (o.$setValidity('time', !1), d.error('Timepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.')) : (a && (n = a), k(), l());
    }, a.incrementHours = function () {
      m(60 * q);
    }, a.decrementHours = function () {
      m(60 * -q);
    }, a.incrementMinutes = function () {
      m(r);
    }, a.decrementMinutes = function () {
      m(-r);
    }, a.toggleMeridian = function () {
      m(720 * (n.getHours() < 12 ? 1 : -1));
    };
  }
]).directive('timepicker', function () {
  return {
    restrict: 'EA',
    require: [
      'timepicker',
      '?^ngModel'
    ],
    controller: 'TimepickerController',
    replace: !0,
    scope: {},
    templateUrl: 'template/timepicker/timepicker.html',
    link: function (a, b, c, d) {
      var e = d[0], f = d[1];
      f && e.init(f, b.find('input'));
    }
  };
}), angular.module('ui.bootstrap.typeahead', [
  'ui.bootstrap.position',
  'ui.bootstrap.bindHtml'
]).factory('typeaheadParser', [
  '$parse',
  function (a) {
    var b = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+([\s\S]+?)$/;
    return {
      parse: function (c) {
        var d = c.match(b);
        if (!d)
          throw new Error('Expected typeahead specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_" but got "' + c + '".');
        return {
          itemName: d[3],
          source: a(d[4]),
          viewMapper: a(d[2] || d[1]),
          modelMapper: a(d[1])
        };
      }
    };
  }
]).directive('typeahead', [
  '$compile',
  '$parse',
  '$q',
  '$timeout',
  '$document',
  '$position',
  'typeaheadParser',
  function (a, b, c, d, e, f, g) {
    var h = [
        9,
        13,
        27,
        38,
        40
      ];
    return {
      require: 'ngModel',
      link: function (i, j, k, l) {
        var m, n = i.$eval(k.typeaheadMinLength) || 1, o = i.$eval(k.typeaheadWaitMs) || 0, p = i.$eval(k.typeaheadEditable) !== !1, q = b(k.typeaheadLoading).assign || angular.noop, r = b(k.typeaheadOnSelect), s = k.typeaheadInputFormatter ? b(k.typeaheadInputFormatter) : void 0, t = k.typeaheadAppendToBody ? i.$eval(k.typeaheadAppendToBody) : !1, u = i.$eval(k.typeaheadFocusFirst) !== !1, v = b(k.ngModel).assign, w = g.parse(k.typeahead), x = i.$new();
        i.$on('$destroy', function () {
          x.$destroy();
        });
        var y = 'typeahead-' + x.$id + '-' + Math.floor(10000 * Math.random());
        j.attr({
          'aria-autocomplete': 'list',
          'aria-expanded': !1,
          'aria-owns': y
        });
        var z = angular.element('<div typeahead-popup></div>');
        z.attr({
          id: y,
          matches: 'matches',
          active: 'activeIdx',
          select: 'select(activeIdx)',
          query: 'query',
          position: 'position'
        }), angular.isDefined(k.typeaheadTemplateUrl) && z.attr('template-url', k.typeaheadTemplateUrl);
        var A = function () {
            x.matches = [], x.activeIdx = -1, j.attr('aria-expanded', !1);
          }, B = function (a) {
            return y + '-option-' + a;
          };
        x.$watch('activeIdx', function (a) {
          0 > a ? j.removeAttr('aria-activedescendant') : j.attr('aria-activedescendant', B(a));
        });
        var C = function (a) {
          var b = { $viewValue: a };
          q(i, !0), c.when(w.source(i, b)).then(function (c) {
            var d = a === l.$viewValue;
            if (d && m)
              if (c.length > 0) {
                x.activeIdx = u ? 0 : -1, x.matches.length = 0;
                for (var e = 0; e < c.length; e++)
                  b[w.itemName] = c[e], x.matches.push({
                    id: B(e),
                    label: w.viewMapper(x, b),
                    model: c[e]
                  });
                x.query = a, x.position = t ? f.offset(j) : f.position(j), x.position.top = x.position.top + j.prop('offsetHeight'), j.attr('aria-expanded', !0);
              } else
                A();
            d && q(i, !1);
          }, function () {
            A(), q(i, !1);
          });
        };
        A(), x.query = void 0;
        var D, E = function (a) {
            D = d(function () {
              C(a);
            }, o);
          }, F = function () {
            D && d.cancel(D);
          };
        l.$parsers.unshift(function (a) {
          return m = !0, a && a.length >= n ? o > 0 ? (F(), E(a)) : C(a) : (q(i, !1), F(), A()), p ? a : a ? void l.$setValidity('editable', !1) : (l.$setValidity('editable', !0), a);
        }), l.$formatters.push(function (a) {
          var b, c, d = {};
          return s ? (d.$model = a, s(i, d)) : (d[w.itemName] = a, b = w.viewMapper(i, d), d[w.itemName] = void 0, c = w.viewMapper(i, d), b !== c ? b : a);
        }), x.select = function (a) {
          var b, c, e = {};
          e[w.itemName] = c = x.matches[a].model, b = w.modelMapper(i, e), v(i, b), l.$setValidity('editable', !0), r(i, {
            $item: c,
            $model: b,
            $label: w.viewMapper(i, e)
          }), A(), d(function () {
            j[0].focus();
          }, 0, !1);
        }, j.bind('keydown', function (a) {
          0 !== x.matches.length && -1 !== h.indexOf(a.which) && (-1 != x.activeIdx || 13 !== a.which && 9 !== a.which) && (a.preventDefault(), 40 === a.which ? (x.activeIdx = (x.activeIdx + 1) % x.matches.length, x.$digest()) : 38 === a.which ? (x.activeIdx = (x.activeIdx > 0 ? x.activeIdx : x.matches.length) - 1, x.$digest()) : 13 === a.which || 9 === a.which ? x.$apply(function () {
            x.select(x.activeIdx);
          }) : 27 === a.which && (a.stopPropagation(), A(), x.$digest()));
        }), j.bind('blur', function () {
          m = !1;
        });
        var G = function (a) {
          j[0] !== a.target && (A(), x.$digest());
        };
        e.bind('click', G), i.$on('$destroy', function () {
          e.unbind('click', G), t && H.remove();
        });
        var H = a(z)(x);
        t ? e.find('body').append(H) : j.after(H);
      }
    };
  }
]).directive('typeaheadPopup', function () {
  return {
    restrict: 'EA',
    scope: {
      matches: '=',
      query: '=',
      active: '=',
      position: '=',
      select: '&'
    },
    replace: !0,
    templateUrl: 'template/typeahead/typeahead-popup.html',
    link: function (a, b, c) {
      a.templateUrl = c.templateUrl, a.isOpen = function () {
        return a.matches.length > 0;
      }, a.isActive = function (b) {
        return a.active == b;
      }, a.selectActive = function (b) {
        a.active = b;
      }, a.selectMatch = function (b) {
        a.select({ activeIdx: b });
      };
    }
  };
}).directive('typeaheadMatch', [
  '$http',
  '$templateCache',
  '$compile',
  '$parse',
  function (a, b, c, d) {
    return {
      restrict: 'EA',
      scope: {
        index: '=',
        match: '=',
        query: '='
      },
      link: function (e, f, g) {
        var h = d(g.templateUrl)(e.$parent) || 'template/typeahead/typeahead-match.html';
        a.get(h, { cache: b }).success(function (a) {
          f.replaceWith(c(a.trim())(e));
        });
      }
    };
  }
]).filter('typeaheadHighlight', function () {
  function a(a) {
    return a.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
  }
  return function (b, c) {
    return c ? ('' + b).replace(new RegExp(a(c), 'gi'), '<strong>$&</strong>') : b;
  };
}), angular.module('template/accordion/accordion-group.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/accordion/accordion-group.html', '<div class="panel panel-default">\n  <div class="panel-heading">\n    <h4 class="panel-title">\n      <a href class="accordion-toggle" ng-click="toggleOpen()" accordion-transclude="heading"><span ng-class="{\'text-muted\': isDisabled}">{{heading}}</span></a>\n    </h4>\n  </div>\n  <div class="panel-collapse" collapse="!isOpen">\n\t  <div class="panel-body" ng-transclude></div>\n  </div>\n</div>\n');
  }
]), angular.module('template/accordion/accordion.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/accordion/accordion.html', '<div class="panel-group" ng-transclude></div>');
  }
]), angular.module('template/alert/alert.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/alert/alert.html', '<div class="alert" ng-class="[\'alert-\' + (type || \'warning\'), closeable ? \'alert-dismissable\' : null]" role="alert">\n    <button ng-show="closeable" type="button" class="close" ng-click="close()">\n        <span aria-hidden="true">&times;</span>\n        <span class="sr-only">Close</span>\n    </button>\n    <div ng-transclude></div>\n</div>\n');
  }
]), angular.module('template/carousel/carousel.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/carousel/carousel.html', '<div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel" ng-swipe-right="prev()" ng-swipe-left="next()">\n    <ol class="carousel-indicators" ng-show="slides.length > 1">\n        <li ng-repeat="slide in slides track by $index" ng-class="{active: isActive(slide)}" ng-click="select(slide)"></li>\n    </ol>\n    <div class="carousel-inner" ng-transclude></div>\n    <a class="left carousel-control" ng-click="prev()" ng-show="slides.length > 1"><span class="glyphicon glyphicon-chevron-left"></span></a>\n    <a class="right carousel-control" ng-click="next()" ng-show="slides.length > 1"><span class="glyphicon glyphicon-chevron-right"></span></a>\n</div>\n');
  }
]), angular.module('template/carousel/slide.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/carousel/slide.html', '<div ng-class="{\n    \'active\': leaving || (active && !entering),\n    \'prev\': (next || active) && direction==\'prev\',\n    \'next\': (next || active) && direction==\'next\',\n    \'right\': direction==\'prev\',\n    \'left\': direction==\'next\'\n  }" class="item text-center" ng-transclude></div>\n');
  }
]), angular.module('template/datepicker/datepicker.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/datepicker/datepicker.html', '<div ng-switch="datepickerMode" role="application" ng-keydown="keydown($event)">\n  <daypicker ng-switch-when="day" tabindex="0"></daypicker>\n  <monthpicker ng-switch-when="month" tabindex="0"></monthpicker>\n  <yearpicker ng-switch-when="year" tabindex="0"></yearpicker>\n</div>');
  }
]), angular.module('template/datepicker/day.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/datepicker/day.html', '<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{5 + showWeeks}}"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n    <tr>\n      <th ng-show="showWeeks" class="text-center"></th>\n      <th ng-repeat="label in labels track by $index" class="text-center"><small aria-label="{{label.full}}">{{label.abbr}}</small></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-show="showWeeks" class="text-center h6"><em>{{ weekNumbers[$index] }}</em></td>\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default btn-sm" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-muted\': dt.secondary, \'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n');
  }
]), angular.module('template/datepicker/month.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/datepicker/month.html', '<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n');
  }
]), angular.module('template/datepicker/popup.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/datepicker/popup.html', '<ul class="dropdown-menu" ng-style="{display: (isOpen && \'block\') || \'none\', top: position.top+\'px\', left: position.left+\'px\'}" ng-keydown="keydown($event)">\n\t<li ng-transclude></li>\n\t<li ng-if="showButtonBar" style="padding:10px 9px 2px">\n\t\t<span class="btn-group pull-left">\n\t\t\t<button type="button" class="btn btn-sm btn-info" ng-click="select(\'today\')">{{ getText(\'current\') }}</button>\n\t\t\t<button type="button" class="btn btn-sm btn-danger" ng-click="select(null)">{{ getText(\'clear\') }}</button>\n\t\t</span>\n\t\t<button type="button" class="btn btn-sm btn-success pull-right" ng-click="close()">{{ getText(\'close\') }}</button>\n\t</li>\n</ul>\n');
  }
]), angular.module('template/datepicker/year.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/datepicker/year.html', '<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="3"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n');
  }
]), angular.module('template/modal/backdrop.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/modal/backdrop.html', '<div class="modal-backdrop fade {{ backdropClass }}"\n     ng-class="{in: animate}"\n     ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}"\n></div>\n');
  }
]), angular.module('template/modal/window.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/modal/window.html', '<div tabindex="-1" role="dialog" class="modal fade" ng-class="{in: animate}" ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}" ng-click="close($event)">\n    <div class="modal-dialog" ng-class="{\'modal-sm\': size == \'sm\', \'modal-lg\': size == \'lg\'}"><div class="modal-content" modal-transclude></div></div>\n</div>');
  }
]), angular.module('template/pagination/pager.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/pagination/pager.html', '<ul class="pager">\n  <li ng-class="{disabled: noPrevious(), previous: align}"><a href ng-click="selectPage(page - 1)">{{getText(\'previous\')}}</a></li>\n  <li ng-class="{disabled: noNext(), next: align}"><a href ng-click="selectPage(page + 1)">{{getText(\'next\')}}</a></li>\n</ul>');
  }
]), angular.module('template/pagination/pagination.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/pagination/pagination.html', '<ul class="pagination">\n  <li ng-if="boundaryLinks" ng-class="{disabled: noPrevious()}"><a href ng-click="selectPage(1)">{{getText(\'first\')}}</a></li>\n  <li ng-if="directionLinks" ng-class="{disabled: noPrevious()}"><a href ng-click="selectPage(page - 1)">{{getText(\'previous\')}}</a></li>\n  <li ng-repeat="page in pages track by $index" ng-class="{active: page.active}"><a href ng-click="selectPage(page.number)">{{page.text}}</a></li>\n  <li ng-if="directionLinks" ng-class="{disabled: noNext()}"><a href ng-click="selectPage(page + 1)">{{getText(\'next\')}}</a></li>\n  <li ng-if="boundaryLinks" ng-class="{disabled: noNext()}"><a href ng-click="selectPage(totalPages)">{{getText(\'last\')}}</a></li>\n</ul>');
  }
]), angular.module('template/tooltip/tooltip-html-unsafe-popup.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/tooltip/tooltip-html-unsafe-popup.html', '<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" bind-html-unsafe="content"></div>\n</div>\n');
  }
]), angular.module('template/tooltip/tooltip-popup.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/tooltip/tooltip-popup.html', '<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n');
  }
]), angular.module('template/popover/popover.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/popover/popover.html', '<div class="popover {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="title" ng-show="title"></h3>\n      <div class="popover-content" ng-bind="content"></div>\n  </div>\n</div>\n');
  }
]), angular.module('template/progressbar/bar.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/progressbar/bar.html', '<div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%" ng-transclude></div>');
  }
]), angular.module('template/progressbar/progress.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/progressbar/progress.html', '<div class="progress" ng-transclude></div>');
  }
]), angular.module('template/progressbar/progressbar.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/progressbar/progressbar.html', '<div class="progress">\n  <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%" ng-transclude></div>\n</div>');
  }
]), angular.module('template/rating/rating.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/rating/rating.html', '<span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="{{range.length}}" aria-valuenow="{{value}}">\n    <i ng-repeat="r in range track by $index" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon" ng-class="$index < value && (r.stateOn || \'glyphicon-star\') || (r.stateOff || \'glyphicon-star-empty\')">\n        <span class="sr-only">({{ $index < value ? \'*\' : \' \' }})</span>\n    </i>\n</span>');
  }
]), angular.module('template/tabs/tab.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/tabs/tab.html', '<li ng-class="{active: active, disabled: disabled}">\n  <a href ng-click="select()" tab-heading-transclude>{{heading}}</a>\n</li>\n');
  }
]), angular.module('template/tabs/tabset.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/tabs/tabset.html', '<div>\n  <ul class="nav nav-{{type || \'tabs\'}}" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude></ul>\n  <div class="tab-content">\n    <div class="tab-pane" \n         ng-repeat="tab in tabs" \n         ng-class="{active: tab.active}"\n         tab-content-transclude="tab">\n    </div>\n  </div>\n</div>\n');
  }
]), angular.module('template/timepicker/timepicker.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/timepicker/timepicker.html', '<table>\n\t<tbody>\n\t\t<tr class="text-center">\n\t\t\t<td><a ng-click="incrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td><a ng-click="incrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n\t\t\t<td ng-show="showMeridian"></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidHours}">\n\t\t\t\t<input type="text" ng-model="hours" ng-change="updateHours()" class="form-control text-center" ng-mousewheel="incrementHours()" ng-readonly="readonlyInput" maxlength="2">\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidMinutes}">\n\t\t\t\t<input type="text" ng-model="minutes" ng-change="updateMinutes()" class="form-control text-center" ng-readonly="readonlyInput" maxlength="2">\n\t\t\t</td>\n\t\t\t<td ng-show="showMeridian"><button type="button" class="btn btn-default text-center" ng-click="toggleMeridian()">{{meridian}}</button></td>\n\t\t</tr>\n\t\t<tr class="text-center">\n\t\t\t<td><a ng-click="decrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td><a ng-click="decrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n\t\t\t<td ng-show="showMeridian"></td>\n\t\t</tr>\n\t</tbody>\n</table>\n');
  }
]), angular.module('template/typeahead/typeahead-match.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/typeahead/typeahead-match.html', '<a tabindex="-1" bind-html-unsafe="match.label | typeaheadHighlight:query"></a>');
  }
]), angular.module('template/typeahead/typeahead-popup.html', []).run([
  '$templateCache',
  function (a) {
    a.put('template/typeahead/typeahead-popup.html', '<ul class="dropdown-menu" ng-show="isOpen()" ng-style="{top: position.top+\'px\', left: position.left+\'px\'}" style="display: block;" role="listbox" aria-hidden="{{!isOpen()}}">\n    <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index)" role="option" id="{{match.id}}">\n        <div typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n    </li>\n</ul>\n');
  }
]);
/**
 * angular-ui-utils - Swiss-Army-Knife of AngularJS tools (with no external dependencies!)
 * @version v0.2.1 - 2015-01-02
 * @link http://angular-ui.github.com
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
angular.module('ui.alias', []).config([
  '$compileProvider',
  'uiAliasConfig',
  function ($compileProvider, uiAliasConfig) {
    'use strict';
    uiAliasConfig = uiAliasConfig || {};
    angular.forEach(uiAliasConfig, function (config, alias) {
      if (angular.isString(config)) {
        config = {
          replace: true,
          template: config
        };
      }
      $compileProvider.directive(alias, function () {
        return config;
      });
    });
  }
]);
/**
 * General-purpose Event binding. Bind any event not natively supported by Angular
 * Pass an object with keynames for events to ui-event
 * Allows $event object and $params object to be passed
 *
 * @example <input ui-event="{ focus : 'counter++', blur : 'someCallback()' }">
 * @example <input ui-event="{ myCustomEvent : 'myEventHandler($event, $params)'}">
 *
 * @param ui-event {string|object literal} The event to bind to as a string or a hash of events with their callbacks
 */
angular.module('ui.event', []).directive('uiEvent', [
  '$parse',
  function ($parse) {
    'use strict';
    return function ($scope, elm, attrs) {
      var events = $scope.$eval(attrs.uiEvent);
      angular.forEach(events, function (uiEvent, eventName) {
        var fn = $parse(uiEvent);
        elm.bind(eventName, function (evt) {
          var params = Array.prototype.slice.call(arguments);
          //Take out first paramater (event object);
          params = params.splice(1);
          fn($scope, {
            $event: evt,
            $params: params
          });
          if (!$scope.$$phase) {
            $scope.$apply();
          }
        });
      });
    };
  }
]);
/**
 * A replacement utility for internationalization very similar to sprintf.
 *
 * @param replace {mixed} The tokens to replace depends on type
 *  string: all instances of $0 will be replaced
 *  array: each instance of $0, $1, $2 etc. will be placed with each array item in corresponding order
 *  object: all attributes will be iterated through, with :key being replaced with its corresponding value
 * @return string
 *
 * @example: 'Hello :name, how are you :day'.format({ name:'John', day:'Today' })
 * @example: 'Records $0 to $1 out of $2 total'.format(['10', '20', '3000'])
 * @example: '$0 agrees to all mentions $0 makes in the event that $0 hits a tree while $0 is driving drunk'.format('Bob')
 */
angular.module('ui.format', []).filter('format', function () {
  'use strict';
  return function (value, replace) {
    var target = value;
    if (angular.isString(target) && replace !== undefined) {
      if (!angular.isArray(replace) && !angular.isObject(replace)) {
        replace = [replace];
      }
      if (angular.isArray(replace)) {
        var rlen = replace.length;
        var rfx = function (str, i) {
          i = parseInt(i, 10);
          return i >= 0 && i < rlen ? replace[i] : str;
        };
        target = target.replace(/\$([0-9]+)/g, rfx);
      } else {
        angular.forEach(replace, function (value, key) {
          target = target.split(':' + key).join(value);
        });
      }
    }
    return target;
  };
});
/**
 * Wraps the
 * @param text {string} haystack to search through
 * @param search {string} needle to search for
 * @param [caseSensitive] {boolean} optional boolean to use case-sensitive searching
 */
angular.module('ui.highlight', []).filter('highlight', function () {
  'use strict';
  return function (text, search, caseSensitive) {
    if (text && (search || angular.isNumber(search))) {
      text = text.toString();
      search = search.toString();
      if (caseSensitive) {
        return text.split(search).join('<span class="ui-match">' + search + '</span>');
      } else {
        return text.replace(new RegExp(search, 'gi'), '<span class="ui-match">$&</span>');
      }
    } else {
      return text;
    }
  };
});
// modeled after: angular-1.0.7/src/ng/directive/ngInclude.js
angular.module('ui.include', []).directive('uiInclude', [
  '$http',
  '$templateCache',
  '$anchorScroll',
  '$compile',
  function ($http, $templateCache, $anchorScroll, $compile) {
    'use strict';
    return {
      restrict: 'ECA',
      terminal: true,
      compile: function (element, attr) {
        var srcExp = attr.uiInclude || attr.src, fragExp = attr.fragment || '', onloadExp = attr.onload || '', autoScrollExp = attr.autoscroll;
        return function (scope, element) {
          var changeCounter = 0, childScope;
          var clearContent = function () {
            if (childScope) {
              childScope.$destroy();
              childScope = null;
            }
            element.html('');
          };
          function ngIncludeWatchAction() {
            var thisChangeId = ++changeCounter;
            var src = scope.$eval(srcExp);
            var fragment = scope.$eval(fragExp);
            if (src) {
              $http.get(src, { cache: $templateCache }).success(function (response) {
                if (thisChangeId !== changeCounter) {
                  return;
                }
                if (childScope) {
                  childScope.$destroy();
                }
                childScope = scope.$new();
                var contents;
                if (fragment) {
                  contents = angular.element('<div/>').html(response).find(fragment);
                } else {
                  contents = angular.element('<div/>').html(response).contents();
                }
                element.html(contents);
                $compile(contents)(childScope);
                if (angular.isDefined(autoScrollExp) && (!autoScrollExp || scope.$eval(autoScrollExp))) {
                  $anchorScroll();
                }
                childScope.$emit('$includeContentLoaded');
                scope.$eval(onloadExp);
              }).error(function () {
                if (thisChangeId === changeCounter) {
                  clearContent();
                }
              });
            } else {
              clearContent();
            }
          }
          scope.$watch(fragExp, ngIncludeWatchAction);
          scope.$watch(srcExp, ngIncludeWatchAction);
        };
      }
    };
  }
]);
/**
 * Provides an easy way to toggle a checkboxes indeterminate property
 *
 * @example <input type="checkbox" ui-indeterminate="isUnkown">
 */
angular.module('ui.indeterminate', []).directive('uiIndeterminate', [function () {
    'use strict';
    return {
      compile: function (tElm, tAttrs) {
        if (!tAttrs.type || tAttrs.type.toLowerCase() !== 'checkbox') {
          return angular.noop;
        }
        return function ($scope, elm, attrs) {
          $scope.$watch(attrs.uiIndeterminate, function (newVal) {
            elm[0].indeterminate = !!newVal;
          });
        };
      }
    };
  }]);
/**
 * Converts variable-esque naming conventions to something presentational, capitalized words separated by space.
 * @param {String} value The value to be parsed and prettified.
 * @param {String} [inflector] The inflector to use. Default: humanize.
 * @return {String}
 * @example {{ 'Here Is my_phoneNumber' | inflector:'humanize' }} => Here Is My Phone Number
 *          {{ 'Here Is my_phoneNumber' | inflector:'underscore' }} => here_is_my_phone_number
 *          {{ 'Here Is my_phoneNumber' | inflector:'variable' }} => hereIsMyPhoneNumber
 */
angular.module('ui.inflector', []).filter('inflector', function () {
  'use strict';
  function tokenize(text) {
    text = text.replace(/([A-Z])|([\-|\_])/g, function (_, $1) {
      return ' ' + ($1 || '');
    });
    return text.replace(/\s\s+/g, ' ').trim().toLowerCase().split(' ');
  }
  function capitalizeTokens(tokens) {
    var result = [];
    angular.forEach(tokens, function (token) {
      result.push(token.charAt(0).toUpperCase() + token.substr(1));
    });
    return result;
  }
  var inflectors = {
      humanize: function (value) {
        return capitalizeTokens(tokenize(value)).join(' ');
      },
      underscore: function (value) {
        return tokenize(value).join('_');
      },
      variable: function (value) {
        value = tokenize(value);
        value = value[0] + capitalizeTokens(value.slice(1)).join('');
        return value;
      }
    };
  return function (text, inflector) {
    if (inflector !== false && angular.isString(text)) {
      inflector = inflector || 'humanize';
      return inflectors[inflector](text);
    } else {
      return text;
    }
  };
});
/**
 * General-purpose jQuery wrapper. Simply pass the plugin name as the expression.
 *
 * It is possible to specify a default set of parameters for each jQuery plugin.
 * Under the jq key, namespace each plugin by that which will be passed to ui-jq.
 * Unfortunately, at this time you can only pre-define the first parameter.
 * @example { jq : { datepicker : { showOn:'click' } } }
 *
 * @param ui-jq {string} The $elm.[pluginName]() to call.
 * @param [ui-options] {mixed} Expression to be evaluated and passed as options to the function
 *     Multiple parameters can be separated by commas
 * @param [ui-refresh] {expression} Watch expression and refire plugin on changes
 *
 * @example <input ui-jq="datepicker" ui-options="{showOn:'click'},secondParameter,thirdParameter" ui-refresh="iChange">
 */
angular.module('ui.jq', []).value('uiJqConfig', {}).directive('uiJq', [
  'uiJqConfig',
  '$timeout',
  function uiJqInjectingFunction(uiJqConfig, $timeout) {
    'use strict';
    return {
      restrict: 'A',
      compile: function uiJqCompilingFunction(tElm, tAttrs) {
        if (!angular.isFunction(tElm[tAttrs.uiJq])) {
          throw new Error('ui-jq: The "' + tAttrs.uiJq + '" function does not exist');
        }
        var options = uiJqConfig && uiJqConfig[tAttrs.uiJq];
        return function uiJqLinkingFunction(scope, elm, attrs) {
          var linkOptions = [];
          // If ui-options are passed, merge (or override) them onto global defaults and pass to the jQuery method
          if (attrs.uiOptions) {
            linkOptions = scope.$eval('[' + attrs.uiOptions + ']');
            if (angular.isObject(options) && angular.isObject(linkOptions[0])) {
              linkOptions[0] = angular.extend({}, options, linkOptions[0]);
            }
          } else if (options) {
            linkOptions = [options];
          }
          // If change compatibility is enabled, the form input's "change" event will trigger an "input" event
          if (attrs.ngModel && elm.is('select,input,textarea')) {
            elm.bind('change', function () {
              elm.trigger('input');
            });
          }
          // Call jQuery method and pass relevant options
          function callPlugin() {
            $timeout(function () {
              elm[attrs.uiJq].apply(elm, linkOptions);
            }, 0, false);
          }
          // If ui-refresh is used, re-fire the the method upon every change
          if (attrs.uiRefresh) {
            scope.$watch(attrs.uiRefresh, function () {
              callPlugin();
            });
          }
          callPlugin();
        };
      }
    };
  }
]);
angular.module('ui.keypress', []).factory('keypressHelper', [
  '$parse',
  function keypress($parse) {
    'use strict';
    var keysByCode = {
        8: 'backspace',
        9: 'tab',
        13: 'enter',
        27: 'esc',
        32: 'space',
        33: 'pageup',
        34: 'pagedown',
        35: 'end',
        36: 'home',
        37: 'left',
        38: 'up',
        39: 'right',
        40: 'down',
        45: 'insert',
        46: 'delete'
      };
    var capitaliseFirstLetter = function (string) {
      return string.charAt(0).toUpperCase() + string.slice(1);
    };
    return function (mode, scope, elm, attrs) {
      var params, combinations = [];
      params = scope.$eval(attrs['ui' + capitaliseFirstLetter(mode)]);
      // Prepare combinations for simple checking
      angular.forEach(params, function (v, k) {
        var combination, expression;
        expression = $parse(v);
        angular.forEach(k.split(' '), function (variation) {
          combination = {
            expression: expression,
            keys: {}
          };
          angular.forEach(variation.split('-'), function (value) {
            combination.keys[value] = true;
          });
          combinations.push(combination);
        });
      });
      // Check only matching of pressed keys one of the conditions
      elm.bind(mode, function (event) {
        // No need to do that inside the cycle
        var metaPressed = !!(event.metaKey && !event.ctrlKey);
        var altPressed = !!event.altKey;
        var ctrlPressed = !!event.ctrlKey;
        var shiftPressed = !!event.shiftKey;
        var keyCode = event.keyCode;
        // normalize keycodes
        if (mode === 'keypress' && !shiftPressed && keyCode >= 97 && keyCode <= 122) {
          keyCode = keyCode - 32;
        }
        // Iterate over prepared combinations
        angular.forEach(combinations, function (combination) {
          var mainKeyPressed = combination.keys[keysByCode[keyCode]] || combination.keys[keyCode.toString()];
          var metaRequired = !!combination.keys.meta;
          var altRequired = !!combination.keys.alt;
          var ctrlRequired = !!combination.keys.ctrl;
          var shiftRequired = !!combination.keys.shift;
          if (mainKeyPressed && metaRequired === metaPressed && altRequired === altPressed && ctrlRequired === ctrlPressed && shiftRequired === shiftPressed) {
            // Run the function
            scope.$apply(function () {
              combination.expression(scope, { '$event': event });
            });
          }
        });
      });
    };
  }
]);
/**
 * Bind one or more handlers to particular keys or their combination
 * @param hash {mixed} keyBindings Can be an object or string where keybinding expression of keys or keys combinations and AngularJS Exspressions are set. Object syntax: "{ keys1: expression1 [, keys2: expression2 [ , ... ]]}". String syntax: ""expression1 on keys1 [ and expression2 on keys2 [ and ... ]]"". Expression is an AngularJS Expression, and key(s) are dash-separated combinations of keys and modifiers (one or many, if any. Order does not matter). Supported modifiers are 'ctrl', 'shift', 'alt' and key can be used either via its keyCode (13 for Return) or name. Named keys are 'backspace', 'tab', 'enter', 'esc', 'space', 'pageup', 'pagedown', 'end', 'home', 'left', 'up', 'right', 'down', 'insert', 'delete'.
 * @example <input ui-keypress="{enter:'x = 1', 'ctrl-shift-space':'foo()', 'shift-13':'bar()'}" /> <input ui-keypress="foo = 2 on ctrl-13 and bar('hello') on shift-esc" />
 **/
angular.module('ui.keypress').directive('uiKeydown', [
  'keypressHelper',
  function (keypressHelper) {
    'use strict';
    return {
      link: function (scope, elm, attrs) {
        keypressHelper('keydown', scope, elm, attrs);
      }
    };
  }
]);
angular.module('ui.keypress').directive('uiKeypress', [
  'keypressHelper',
  function (keypressHelper) {
    'use strict';
    return {
      link: function (scope, elm, attrs) {
        keypressHelper('keypress', scope, elm, attrs);
      }
    };
  }
]);
angular.module('ui.keypress').directive('uiKeyup', [
  'keypressHelper',
  function (keypressHelper) {
    'use strict';
    return {
      link: function (scope, elm, attrs) {
        keypressHelper('keyup', scope, elm, attrs);
      }
    };
  }
]);
/*
 Attaches input mask onto input element
 */
angular.module('ui.mask', []).value('uiMaskConfig', {
  'maskDefinitions': {
    '9': /\d/,
    'A': /[a-zA-Z]/,
    '*': /[a-zA-Z0-9]/
  },
  'clearOnBlur': true
}).directive('uiMask', [
  'uiMaskConfig',
  '$parse',
  function (maskConfig, $parse) {
    'use strict';
    return {
      priority: 100,
      require: 'ngModel',
      restrict: 'A',
      compile: function uiMaskCompilingFunction() {
        var options = maskConfig;
        return function uiMaskLinkingFunction(scope, iElement, iAttrs, controller) {
          var maskProcessed = false, eventsBound = false, maskCaretMap, maskPatterns, maskPlaceholder, maskComponents,
            // Minimum required length of the value to be considered valid
            minRequiredLength, value, valueMasked, isValid,
            // Vars for initializing/uninitializing
            originalPlaceholder = iAttrs.placeholder, originalMaxlength = iAttrs.maxlength,
            // Vars used exclusively in eventHandler()
            oldValue, oldValueUnmasked, oldCaretPosition, oldSelectionLength;
          function initialize(maskAttr) {
            if (!angular.isDefined(maskAttr)) {
              return uninitialize();
            }
            processRawMask(maskAttr);
            if (!maskProcessed) {
              return uninitialize();
            }
            initializeElement();
            bindEventListeners();
            return true;
          }
          function initPlaceholder(placeholderAttr) {
            if (!angular.isDefined(placeholderAttr)) {
              return;
            }
            maskPlaceholder = placeholderAttr;
            // If the mask is processed, then we need to update the value
            if (maskProcessed) {
              eventHandler();
            }
          }
          function formatter(fromModelValue) {
            if (!maskProcessed) {
              return fromModelValue;
            }
            value = unmaskValue(fromModelValue || '');
            isValid = validateValue(value);
            controller.$setValidity('mask', isValid);
            return isValid && value.length ? maskValue(value) : undefined;
          }
          function parser(fromViewValue) {
            if (!maskProcessed) {
              return fromViewValue;
            }
            value = unmaskValue(fromViewValue || '');
            isValid = validateValue(value);
            // We have to set viewValue manually as the reformatting of the input
            // value performed by eventHandler() doesn't happen until after
            // this parser is called, which causes what the user sees in the input
            // to be out-of-sync with what the controller's $viewValue is set to.
            controller.$viewValue = value.length ? maskValue(value) : '';
            controller.$setValidity('mask', isValid);
            if (value === '' && iAttrs.required) {
              controller.$setValidity('required', !controller.$error.required);
            }
            return isValid ? value : undefined;
          }
          var linkOptions = {};
          if (iAttrs.uiOptions) {
            linkOptions = scope.$eval('[' + iAttrs.uiOptions + ']');
            if (angular.isObject(linkOptions[0])) {
              // we can't use angular.copy nor angular.extend, they lack the power to do a deep merge
              linkOptions = function (original, current) {
                for (var i in original) {
                  if (Object.prototype.hasOwnProperty.call(original, i)) {
                    if (current[i] === undefined) {
                      current[i] = angular.copy(original[i]);
                    } else {
                      angular.extend(current[i], original[i]);
                    }
                  }
                }
                return current;
              }(options, linkOptions[0]);
            }
          } else {
            linkOptions = options;
          }
          iAttrs.$observe('uiMask', initialize);
          iAttrs.$observe('placeholder', initPlaceholder);
          var modelViewValue = false;
          iAttrs.$observe('modelViewValue', function (val) {
            if (val === 'true') {
              modelViewValue = true;
            }
          });
          scope.$watch(iAttrs.ngModel, function (val) {
            if (modelViewValue && val) {
              var model = $parse(iAttrs.ngModel);
              model.assign(scope, controller.$viewValue);
            }
          });
          controller.$formatters.push(formatter);
          controller.$parsers.push(parser);
          function uninitialize() {
            maskProcessed = false;
            unbindEventListeners();
            if (angular.isDefined(originalPlaceholder)) {
              iElement.attr('placeholder', originalPlaceholder);
            } else {
              iElement.removeAttr('placeholder');
            }
            if (angular.isDefined(originalMaxlength)) {
              iElement.attr('maxlength', originalMaxlength);
            } else {
              iElement.removeAttr('maxlength');
            }
            iElement.val(controller.$modelValue);
            controller.$viewValue = controller.$modelValue;
            return false;
          }
          function initializeElement() {
            value = oldValueUnmasked = unmaskValue(controller.$modelValue || '');
            valueMasked = oldValue = maskValue(value);
            isValid = validateValue(value);
            var viewValue = isValid && value.length ? valueMasked : '';
            if (iAttrs.maxlength) {
              // Double maxlength to allow pasting new val at end of mask
              iElement.attr('maxlength', maskCaretMap[maskCaretMap.length - 1] * 2);
            }
            iElement.attr('placeholder', maskPlaceholder);
            iElement.val(viewValue);
            controller.$viewValue = viewValue;  // Not using $setViewValue so we don't clobber the model value and dirty the form
                                                // without any kind of user interaction.
          }
          function bindEventListeners() {
            if (eventsBound) {
              return;
            }
            iElement.bind('blur', blurHandler);
            iElement.bind('mousedown mouseup', mouseDownUpHandler);
            iElement.bind('input keyup click focus', eventHandler);
            eventsBound = true;
          }
          function unbindEventListeners() {
            if (!eventsBound) {
              return;
            }
            iElement.unbind('blur', blurHandler);
            iElement.unbind('mousedown', mouseDownUpHandler);
            iElement.unbind('mouseup', mouseDownUpHandler);
            iElement.unbind('input', eventHandler);
            iElement.unbind('keyup', eventHandler);
            iElement.unbind('click', eventHandler);
            iElement.unbind('focus', eventHandler);
            eventsBound = false;
          }
          function validateValue(value) {
            // Zero-length value validity is ngRequired's determination
            return value.length ? value.length >= minRequiredLength : true;
          }
          function unmaskValue(value) {
            var valueUnmasked = '', maskPatternsCopy = maskPatterns.slice();
            // Preprocess by stripping mask components from value
            value = value.toString();
            angular.forEach(maskComponents, function (component) {
              value = value.replace(component, '');
            });
            angular.forEach(value.split(''), function (chr) {
              if (maskPatternsCopy.length && maskPatternsCopy[0].test(chr)) {
                valueUnmasked += chr;
                maskPatternsCopy.shift();
              }
            });
            return valueUnmasked;
          }
          function maskValue(unmaskedValue) {
            var valueMasked = '', maskCaretMapCopy = maskCaretMap.slice();
            angular.forEach(maskPlaceholder.split(''), function (chr, i) {
              if (unmaskedValue.length && i === maskCaretMapCopy[0]) {
                valueMasked += unmaskedValue.charAt(0) || '_';
                unmaskedValue = unmaskedValue.substr(1);
                maskCaretMapCopy.shift();
              } else {
                valueMasked += chr;
              }
            });
            return valueMasked;
          }
          function getPlaceholderChar(i) {
            var placeholder = iAttrs.placeholder;
            if (typeof placeholder !== 'undefined' && placeholder[i]) {
              return placeholder[i];
            } else {
              return '_';
            }
          }
          // Generate array of mask components that will be stripped from a masked value
          // before processing to prevent mask components from being added to the unmasked value.
          // E.g., a mask pattern of '+7 9999' won't have the 7 bleed into the unmasked value.
          // If a maskable char is followed by a mask char and has a mask
          // char behind it, we'll split it into it's own component so if
          // a user is aggressively deleting in the input and a char ahead
          // of the maskable char gets deleted, we'll still be able to strip
          // it in the unmaskValue() preprocessing.
          function getMaskComponents() {
            return maskPlaceholder.replace(/[_]+/g, '_').replace(/([^_]+)([a-zA-Z0-9])([^_])/g, '$1$2_$3').split('_');
          }
          function processRawMask(mask) {
            var characterCount = 0;
            maskCaretMap = [];
            maskPatterns = [];
            maskPlaceholder = '';
            if (typeof mask === 'string') {
              minRequiredLength = 0;
              var isOptional = false, splitMask = mask.split('');
              angular.forEach(splitMask, function (chr, i) {
                if (linkOptions.maskDefinitions[chr]) {
                  maskCaretMap.push(characterCount);
                  maskPlaceholder += getPlaceholderChar(i);
                  maskPatterns.push(linkOptions.maskDefinitions[chr]);
                  characterCount++;
                  if (!isOptional) {
                    minRequiredLength++;
                  }
                } else if (chr === '?') {
                  isOptional = true;
                } else {
                  maskPlaceholder += chr;
                  characterCount++;
                }
              });
            }
            // Caret position immediately following last position is valid.
            maskCaretMap.push(maskCaretMap.slice().pop() + 1);
            maskComponents = getMaskComponents();
            maskProcessed = maskCaretMap.length > 1 ? true : false;
          }
          function blurHandler() {
            if (linkOptions.clearOnBlur) {
              oldCaretPosition = 0;
              oldSelectionLength = 0;
            }
            if (!isValid || value.length === 0) {
              if (linkOptions.clearOnBlur) {
                valueMasked = '';
                iElement.val('');
              }
              scope.$apply(function () {
                controller.$setViewValue('');
              });
            }
          }
          function mouseDownUpHandler(e) {
            if (e.type === 'mousedown') {
              iElement.bind('mouseout', mouseoutHandler);
            } else {
              iElement.unbind('mouseout', mouseoutHandler);
            }
          }
          iElement.bind('mousedown mouseup', mouseDownUpHandler);
          function mouseoutHandler() {
            /*jshint validthis: true */
            oldSelectionLength = getSelectionLength(this);
            iElement.unbind('mouseout', mouseoutHandler);
          }
          function eventHandler(e) {
            /*jshint validthis: true */
            e = e || {};
            // Allows more efficient minification
            var eventWhich = e.which, eventType = e.type;
            // Prevent shift and ctrl from mucking with old values
            if (eventWhich === 16 || eventWhich === 91) {
              return;
            }
            var val = iElement.val(), valOld = oldValue, valMasked, valUnmasked = unmaskValue(val), valUnmaskedOld = oldValueUnmasked, valAltered = false, caretPos = getCaretPosition(this) || 0, caretPosOld = oldCaretPosition || 0, caretPosDelta = caretPos - caretPosOld, caretPosMin = maskCaretMap[0], caretPosMax = maskCaretMap[valUnmasked.length] || maskCaretMap.slice().shift(), selectionLenOld = oldSelectionLength || 0, isSelected = getSelectionLength(this) > 0, wasSelected = selectionLenOld > 0,
              // Case: Typing a character to overwrite a selection
              isAddition = val.length > valOld.length || selectionLenOld && val.length > valOld.length - selectionLenOld,
              // Case: Delete and backspace behave identically on a selection
              isDeletion = val.length < valOld.length || selectionLenOld && val.length === valOld.length - selectionLenOld, isSelection = eventWhich >= 37 && eventWhich <= 40 && e.shiftKey,
              // Arrow key codes
              isKeyLeftArrow = eventWhich === 37,
              // Necessary due to "input" event not providing a key code
              isKeyBackspace = eventWhich === 8 || eventType !== 'keyup' && isDeletion && caretPosDelta === -1, isKeyDelete = eventWhich === 46 || eventType !== 'keyup' && isDeletion && caretPosDelta === 0 && !wasSelected,
              // Handles cases where caret is moved and placed in front of invalid maskCaretMap position. Logic below
              // ensures that, on click or leftward caret placement, caret is moved leftward until directly right of
              // non-mask character. Also applied to click since users are (arguably) more likely to backspace
              // a character when clicking within a filled input.
              caretBumpBack = (isKeyLeftArrow || isKeyBackspace || eventType === 'click') && caretPos > caretPosMin;
            oldSelectionLength = getSelectionLength(this);
            // These events don't require any action
            if (isSelection || isSelected && (eventType === 'click' || eventType === 'keyup')) {
              return;
            }
            // Value Handling
            // ==============
            // User attempted to delete but raw value was unaffected--correct this grievous offense
            if (eventType === 'input' && isDeletion && !wasSelected && valUnmasked === valUnmaskedOld) {
              while (isKeyBackspace && caretPos > caretPosMin && !isValidCaretPosition(caretPos)) {
                caretPos--;
              }
              while (isKeyDelete && caretPos < caretPosMax && maskCaretMap.indexOf(caretPos) === -1) {
                caretPos++;
              }
              var charIndex = maskCaretMap.indexOf(caretPos);
              // Strip out non-mask character that user would have deleted if mask hadn't been in the way.
              valUnmasked = valUnmasked.substring(0, charIndex) + valUnmasked.substring(charIndex + 1);
              valAltered = true;
            }
            // Update values
            valMasked = maskValue(valUnmasked);
            oldValue = valMasked;
            oldValueUnmasked = valUnmasked;
            iElement.val(valMasked);
            if (valAltered) {
              // We've altered the raw value after it's been $digest'ed, we need to $apply the new value.
              scope.$apply(function () {
                controller.$setViewValue(valUnmasked);
              });
            }
            // Caret Repositioning
            // ===================
            // Ensure that typing always places caret ahead of typed character in cases where the first char of
            // the input is a mask char and the caret is placed at the 0 position.
            if (isAddition && caretPos <= caretPosMin) {
              caretPos = caretPosMin + 1;
            }
            if (caretBumpBack) {
              caretPos--;
            }
            // Make sure caret is within min and max position limits
            caretPos = caretPos > caretPosMax ? caretPosMax : caretPos < caretPosMin ? caretPosMin : caretPos;
            // Scoot the caret back or forth until it's in a non-mask position and within min/max position limits
            while (!isValidCaretPosition(caretPos) && caretPos > caretPosMin && caretPos < caretPosMax) {
              caretPos += caretBumpBack ? -1 : 1;
            }
            if (caretBumpBack && caretPos < caretPosMax || isAddition && !isValidCaretPosition(caretPosOld)) {
              caretPos++;
            }
            oldCaretPosition = caretPos;
            setCaretPosition(this, caretPos);
          }
          function isValidCaretPosition(pos) {
            return maskCaretMap.indexOf(pos) > -1;
          }
          function getCaretPosition(input) {
            if (!input)
              return 0;
            if (input.selectionStart !== undefined) {
              return input.selectionStart;
            } else if (document.selection) {
              // Curse you IE
              input.focus();
              var selection = document.selection.createRange();
              selection.moveStart('character', input.value ? -input.value.length : 0);
              return selection.text.length;
            }
            return 0;
          }
          function setCaretPosition(input, pos) {
            if (!input)
              return 0;
            if (input.offsetWidth === 0 || input.offsetHeight === 0) {
              return;  // Input's hidden
            }
            if (input.setSelectionRange) {
              input.focus();
              input.setSelectionRange(pos, pos);
            } else if (input.createTextRange) {
              // Curse you IE
              var range = input.createTextRange();
              range.collapse(true);
              range.moveEnd('character', pos);
              range.moveStart('character', pos);
              range.select();
            }
          }
          function getSelectionLength(input) {
            if (!input)
              return 0;
            if (input.selectionStart !== undefined) {
              return input.selectionEnd - input.selectionStart;
            }
            if (document.selection) {
              return document.selection.createRange().text.length;
            }
            return 0;
          }
          // https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf
          if (!Array.prototype.indexOf) {
            Array.prototype.indexOf = function (searchElement) {
              if (this === null) {
                throw new TypeError();
              }
              var t = Object(this);
              var len = t.length >>> 0;
              if (len === 0) {
                return -1;
              }
              var n = 0;
              if (arguments.length > 1) {
                n = Number(arguments[1]);
                if (n !== n) {
                  // shortcut for verifying if it's NaN
                  n = 0;
                } else if (n !== 0 && n !== Infinity && n !== -Infinity) {
                  n = (n > 0 || -1) * Math.floor(Math.abs(n));
                }
              }
              if (n >= len) {
                return -1;
              }
              var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);
              for (; k < len; k++) {
                if (k in t && t[k] === searchElement) {
                  return k;
                }
              }
              return -1;
            };
          }
        };
      }
    };
  }
]);
/**
 * Add a clear button to form inputs to reset their value
 */
angular.module('ui.reset', []).value('uiResetConfig', null).directive('uiReset', [
  'uiResetConfig',
  function (uiResetConfig) {
    'use strict';
    var resetValue = null;
    if (uiResetConfig !== undefined) {
      resetValue = uiResetConfig;
    }
    return {
      require: 'ngModel',
      link: function (scope, elm, attrs, ctrl) {
        var aElement;
        aElement = angular.element('<a class="ui-reset" />');
        elm.wrap('<span class="ui-resetwrap" />').after(aElement);
        aElement.bind('click', function (e) {
          e.preventDefault();
          scope.$apply(function () {
            if (attrs.uiReset) {
              ctrl.$setViewValue(scope.$eval(attrs.uiReset));
            } else {
              ctrl.$setViewValue(resetValue);
            }
            ctrl.$render();
          });
        });
      }
    };
  }
]);
/**
 * Set a $uiRoute boolean to see if the current route matches
 */
angular.module('ui.route', []).directive('uiRoute', [
  '$location',
  '$parse',
  function ($location, $parse) {
    'use strict';
    return {
      restrict: 'AC',
      scope: true,
      compile: function (tElement, tAttrs) {
        var useProperty;
        if (tAttrs.uiRoute) {
          useProperty = 'uiRoute';
        } else if (tAttrs.ngHref) {
          useProperty = 'ngHref';
        } else if (tAttrs.href) {
          useProperty = 'href';
        } else {
          throw new Error('uiRoute missing a route or href property on ' + tElement[0]);
        }
        return function ($scope, elm, attrs) {
          var modelSetter = $parse(attrs.ngModel || attrs.routeModel || '$uiRoute').assign;
          var watcher = angular.noop;
          // Used by href and ngHref
          function staticWatcher(newVal) {
            var hash = newVal.indexOf('#');
            if (hash > -1) {
              newVal = newVal.substr(hash + 1);
            }
            watcher = function watchHref() {
              modelSetter($scope, $location.path().indexOf(newVal) > -1);
            };
            watcher();
          }
          // Used by uiRoute
          function regexWatcher(newVal) {
            var hash = newVal.indexOf('#');
            if (hash > -1) {
              newVal = newVal.substr(hash + 1);
            }
            watcher = function watchRegex() {
              var regexp = new RegExp('^' + newVal + '$', ['i']);
              modelSetter($scope, regexp.test($location.path()));
            };
            watcher();
          }
          switch (useProperty) {
          case 'uiRoute':
            // if uiRoute={{}} this will be undefined, otherwise it will have a value and $observe() never gets triggered
            if (attrs.uiRoute) {
              regexWatcher(attrs.uiRoute);
            } else {
              attrs.$observe('uiRoute', regexWatcher);
            }
            break;
          case 'ngHref':
            // Setup watcher() every time ngHref changes
            if (attrs.ngHref) {
              staticWatcher(attrs.ngHref);
            } else {
              attrs.$observe('ngHref', staticWatcher);
            }
            break;
          case 'href':
            // Setup watcher()
            staticWatcher(attrs.href);
          }
          $scope.$on('$routeChangeSuccess', function () {
            watcher();
          });
          //Added for compatibility with ui-router
          $scope.$on('$stateChangeSuccess', function () {
            watcher();
          });
        };
      }
    };
  }
]);
angular.module('ui.scroll.jqlite', ['ui.scroll']).service('jqLiteExtras', [
  '$log',
  '$window',
  function (console, window) {
    'use strict';
    return {
      registerFor: function (element) {
        var convertToPx, css, getMeasurements, getStyle, getWidthHeight, isWindow, scrollTo;
        css = angular.element.prototype.css;
        element.prototype.css = function (name, value) {
          var elem, self;
          self = this;
          elem = self[0];
          if (!(!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style)) {
            return css.call(self, name, value);
          }
        };
        isWindow = function (obj) {
          return obj && obj.document && obj.location && obj.alert && obj.setInterval;
        };
        scrollTo = function (self, direction, value) {
          var elem, method, preserve, prop, _ref;
          elem = self[0];
          _ref = {
            top: [
              'scrollTop',
              'pageYOffset',
              'scrollLeft'
            ],
            left: [
              'scrollLeft',
              'pageXOffset',
              'scrollTop'
            ]
          }[direction], method = _ref[0], prop = _ref[1], preserve = _ref[2];
          if (isWindow(elem)) {
            if (angular.isDefined(value)) {
              return elem.scrollTo(self[preserve].call(self), value);
            } else {
              if (prop in elem) {
                return elem[prop];
              } else {
                return elem.document.documentElement[method];
              }
            }
          } else {
            if (angular.isDefined(value)) {
              return elem[method] = value;
            } else {
              return elem[method];
            }
          }
        };
        if (window.getComputedStyle) {
          getStyle = function (elem) {
            return window.getComputedStyle(elem, null);
          };
          convertToPx = function (elem, value) {
            return parseFloat(value);
          };
        } else {
          getStyle = function (elem) {
            return elem.currentStyle;
          };
          convertToPx = function (elem, value) {
            var core_pnum, left, result, rnumnonpx, rs, rsLeft, style;
            core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
            rnumnonpx = new RegExp('^(' + core_pnum + ')(?!px)[a-z%]+$', 'i');
            if (!rnumnonpx.test(value)) {
              return parseFloat(value);
            } else {
              style = elem.style;
              left = style.left;
              rs = elem.runtimeStyle;
              rsLeft = rs && rs.left;
              if (rs) {
                rs.left = style.left;
              }
              style.left = value;
              result = style.pixelLeft;
              style.left = left;
              if (rsLeft) {
                rs.left = rsLeft;
              }
              return result;
            }
          };
        }
        getMeasurements = function (elem, measure) {
          var base, borderA, borderB, computedMarginA, computedMarginB, computedStyle, dirA, dirB, marginA, marginB, paddingA, paddingB, _ref;
          if (isWindow(elem)) {
            base = document.documentElement[{
              height: 'clientHeight',
              width: 'clientWidth'
            }[measure]];
            return {
              base: base,
              padding: 0,
              border: 0,
              margin: 0
            };
          }
          _ref = {
            width: [
              elem.offsetWidth,
              'Left',
              'Right'
            ],
            height: [
              elem.offsetHeight,
              'Top',
              'Bottom'
            ]
          }[measure], base = _ref[0], dirA = _ref[1], dirB = _ref[2];
          computedStyle = getStyle(elem);
          paddingA = convertToPx(elem, computedStyle['padding' + dirA]) || 0;
          paddingB = convertToPx(elem, computedStyle['padding' + dirB]) || 0;
          borderA = convertToPx(elem, computedStyle['border' + dirA + 'Width']) || 0;
          borderB = convertToPx(elem, computedStyle['border' + dirB + 'Width']) || 0;
          computedMarginA = computedStyle['margin' + dirA];
          computedMarginB = computedStyle['margin' + dirB];
          marginA = convertToPx(elem, computedMarginA) || 0;
          marginB = convertToPx(elem, computedMarginB) || 0;
          return {
            base: base,
            padding: paddingA + paddingB,
            border: borderA + borderB,
            margin: marginA + marginB
          };
        };
        getWidthHeight = function (elem, direction, measure) {
          var computedStyle, measurements, result;
          measurements = getMeasurements(elem, direction);
          if (measurements.base > 0) {
            return {
              base: measurements.base - measurements.padding - measurements.border,
              outer: measurements.base,
              outerfull: measurements.base + measurements.margin
            }[measure];
          } else {
            computedStyle = getStyle(elem);
            result = computedStyle[direction];
            if (result < 0 || result === null) {
              result = elem.style[direction] || 0;
            }
            result = parseFloat(result) || 0;
            return {
              base: result - measurements.padding - measurements.border,
              outer: result,
              outerfull: result + measurements.padding + measurements.border + measurements.margin
            }[measure];
          }
        };
        return angular.forEach({
          before: function (newElem) {
            var children, elem, i, parent, self, _i, _ref;
            self = this;
            elem = self[0];
            parent = self.parent();
            children = parent.contents();
            if (children[0] === elem) {
              return parent.prepend(newElem);
            } else {
              for (i = _i = 1, _ref = children.length - 1; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
                if (children[i] === elem) {
                  angular.element(children[i - 1]).after(newElem);
                  return;
                }
              }
              throw new Error('invalid DOM structure ' + elem.outerHTML);
            }
          },
          height: function (value) {
            var self;
            self = this;
            if (angular.isDefined(value)) {
              if (angular.isNumber(value)) {
                value = value + 'px';
              }
              return css.call(self, 'height', value);
            } else {
              return getWidthHeight(this[0], 'height', 'base');
            }
          },
          outerHeight: function (option) {
            return getWidthHeight(this[0], 'height', option ? 'outerfull' : 'outer');
          },
          offset: function (value) {
            var box, doc, docElem, elem, self, win;
            self = this;
            if (arguments.length) {
              if (value === void 0) {
                return self;
              } else {
                throw new Error('offset setter method is not implemented');
              }
            }
            box = {
              top: 0,
              left: 0
            };
            elem = self[0];
            doc = elem && elem.ownerDocument;
            if (!doc) {
              return;
            }
            docElem = doc.documentElement;
            if (elem.getBoundingClientRect != null) {
              box = elem.getBoundingClientRect();
            }
            win = doc.defaultView || doc.parentWindow;
            return {
              top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
              left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)
            };
          },
          scrollTop: function (value) {
            return scrollTo(this, 'top', value);
          },
          scrollLeft: function (value) {
            return scrollTo(this, 'left', value);
          }
        }, function (value, key) {
          if (!element.prototype[key]) {
            return element.prototype[key] = value;
          }
        });
      }
    };
  }
]).run([
  '$log',
  '$window',
  'jqLiteExtras',
  function (console, window, jqLiteExtras) {
    'use strict';
    if (!window.jQuery) {
      return jqLiteExtras.registerFor(angular.element);
    }
  }
]);
/*
//# sourceURL=src/scripts/ui-scroll-jqlite.js
*/
/*
globals: angular, window

	List of used element methods available in JQuery but not in JQuery Lite

		element.before(elem)
		element.height()
		element.outerHeight(true)
		element.height(value) = only for Top/Bottom padding elements
		element.scrollTop()
		element.scrollTop(value)
*/
angular.module('ui.scroll', []).directive('uiScrollViewport', [
  '$log',
  function () {
    'use strict';
    return {
      controller: [
        '$scope',
        '$element',
        function (scope, element) {
          this.viewport = element;
          return this;
        }
      ]
    };
  }
]).directive('uiScroll', [
  '$log',
  '$injector',
  '$rootScope',
  '$timeout',
  function (console, $injector, $rootScope, $timeout) {
    'use strict';
    return {
      require: ['?^uiScrollViewport'],
      transclude: 'element',
      priority: 1000,
      terminal: true,
      compile: function (elementTemplate, attr, linker) {
        return function ($scope, element, $attr, controllers) {
          var adapter, adjustBuffer, adjustRowHeight, bof, bottomVisiblePos, buffer, bufferPadding, bufferSize, clipBottom, clipTop, datasource, datasourceName, doAdjustment, enqueueFetch, eof, eventListener, fetch, finalize, first, getValueChain, hideElementBeforeAppend, insert, isDatasource, isLoading, itemName, loading, log, match, next, pending, reload, removeFromBuffer, resizeHandler, ridActual, scrollHandler, scrollHeight, shouldLoadBottom, shouldLoadTop, showElementAfterRender, tempScope, topVisible, topVisibleElement, topVisibleItem, topVisiblePos, topVisibleScope, viewport, viewportScope, wheelHandler;
          log = console.debug || console.log;
          match = $attr.uiScroll.match(/^\s*(\w+)\s+in\s+([\w\.]+)\s*$/);
          if (!match) {
            throw new Error('Expected uiScroll in form of \'_item_ in _datasource_\' but got \'' + $attr.uiScroll + '\'');
          }
          itemName = match[1];
          datasourceName = match[2];
          isDatasource = function (datasource) {
            return angular.isObject(datasource) && datasource.get && angular.isFunction(datasource.get);
          };
          getValueChain = function (targetScope, target) {
            var chain;
            if (!targetScope) {
              return null;
            }
            chain = target.match(/^([\w]+)\.(.+)$/);
            if (!chain || chain.length !== 3) {
              return targetScope[target];
            }
            return getValueChain(targetScope[chain[1]], chain[2]);
          };
          datasource = getValueChain($scope, datasourceName);
          if (!isDatasource(datasource)) {
            datasource = $injector.get(datasourceName);
            if (!isDatasource(datasource)) {
              throw new Error('' + datasourceName + ' is not a valid datasource');
            }
          }
          bufferSize = Math.max(3, +$attr.bufferSize || 10);
          bufferPadding = function () {
            return viewport.outerHeight() * Math.max(0.1, +$attr.padding || 0.1);
          };
          scrollHeight = function (elem) {
            var _ref;
            return (_ref = elem[0].scrollHeight) != null ? _ref : elem[0].document.documentElement.scrollHeight;
          };
          adapter = null;
          linker(tempScope = $scope.$new(), function (template) {
            var bottomPadding, createPadding, padding, repeaterType, topPadding, viewport;
            repeaterType = template[0].localName;
            if (repeaterType === 'dl') {
              throw new Error('ui-scroll directive does not support <' + template[0].localName + '> as a repeating tag: ' + template[0].outerHTML);
            }
            if (repeaterType !== 'li' && repeaterType !== 'tr') {
              repeaterType = 'div';
            }
            viewport = controllers[0] && controllers[0].viewport ? controllers[0].viewport : angular.element(window);
            viewport.css({
              'overflow-y': 'auto',
              'display': 'block'
            });
            padding = function (repeaterType) {
              var div, result, table;
              switch (repeaterType) {
              case 'tr':
                table = angular.element('<table><tr><td><div></div></td></tr></table>');
                div = table.find('div');
                result = table.find('tr');
                result.paddingHeight = function () {
                  return div.height.apply(div, arguments);
                };
                return result;
              default:
                result = angular.element('<' + repeaterType + '></' + repeaterType + '>');
                result.paddingHeight = result.height;
                return result;
              }
            };
            createPadding = function (padding, element, direction) {
              element[{
                top: 'before',
                bottom: 'after'
              }[direction]](padding);
              return {
                paddingHeight: function () {
                  return padding.paddingHeight.apply(padding, arguments);
                },
                insert: function (element) {
                  return padding[{
                    top: 'after',
                    bottom: 'before'
                  }[direction]](element);
                }
              };
            };
            topPadding = createPadding(padding(repeaterType), element, 'top');
            bottomPadding = createPadding(padding(repeaterType), element, 'bottom');
            tempScope.$destroy();
            return adapter = {
              viewport: viewport,
              topPadding: topPadding.paddingHeight,
              bottomPadding: bottomPadding.paddingHeight,
              append: bottomPadding.insert,
              prepend: topPadding.insert,
              bottomDataPos: function () {
                return scrollHeight(viewport) - bottomPadding.paddingHeight();
              },
              topDataPos: function () {
                return topPadding.paddingHeight();
              }
            };
          });
          viewport = adapter.viewport;
          viewportScope = viewport.scope() || $rootScope;
          if (angular.isDefined($attr.topVisible)) {
            topVisibleItem = function (item) {
              return viewportScope[$attr.topVisible] = item;
            };
          }
          if (angular.isDefined($attr.topVisibleElement)) {
            topVisibleElement = function (element) {
              return viewportScope[$attr.topVisibleElement] = element;
            };
          }
          if (angular.isDefined($attr.topVisibleScope)) {
            topVisibleScope = function (scope) {
              return viewportScope[$attr.topVisibleScope] = scope;
            };
          }
          topVisible = function (item) {
            if (topVisibleItem) {
              topVisibleItem(item.scope[itemName]);
            }
            if (topVisibleElement) {
              topVisibleElement(item.element);
            }
            if (topVisibleScope) {
              topVisibleScope(item.scope);
            }
            if (datasource.topVisible) {
              return datasource.topVisible(item);
            }
          };
          if (angular.isDefined($attr.isLoading)) {
            loading = function (value) {
              viewportScope[$attr.isLoading] = value;
              if (datasource.loading) {
                return datasource.loading(value);
              }
            };
          } else {
            loading = function (value) {
              if (datasource.loading) {
                return datasource.loading(value);
              }
            };
          }
          ridActual = 0;
          first = 1;
          next = 1;
          buffer = [];
          pending = [];
          eof = false;
          bof = false;
          isLoading = false;
          removeFromBuffer = function (start, stop) {
            var i, _i;
            for (i = _i = start; start <= stop ? _i < stop : _i > stop; i = start <= stop ? ++_i : --_i) {
              buffer[i].scope.$destroy();
              buffer[i].element.remove();
            }
            return buffer.splice(start, stop - start);
          };
          reload = function () {
            ridActual++;
            first = 1;
            next = 1;
            removeFromBuffer(0, buffer.length);
            adapter.topPadding(0);
            adapter.bottomPadding(0);
            pending = [];
            eof = false;
            bof = false;
            return adjustBuffer(ridActual, false);
          };
          bottomVisiblePos = function () {
            return viewport.scrollTop() + viewport.outerHeight();
          };
          topVisiblePos = function () {
            return viewport.scrollTop();
          };
          shouldLoadBottom = function () {
            return !eof && adapter.bottomDataPos() < bottomVisiblePos() + bufferPadding();
          };
          clipBottom = function () {
            var bottomHeight, i, item, itemHeight, itemTop, newRow, overage, rowTop, _i, _ref;
            bottomHeight = 0;
            overage = 0;
            for (i = _i = _ref = buffer.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {
              item = buffer[i];
              itemTop = item.element.offset().top;
              newRow = rowTop !== itemTop;
              rowTop = itemTop;
              if (newRow) {
                itemHeight = item.element.outerHeight(true);
              }
              if (adapter.bottomDataPos() - bottomHeight - itemHeight > bottomVisiblePos() + bufferPadding()) {
                if (newRow) {
                  bottomHeight += itemHeight;
                }
                overage++;
                eof = false;
              } else {
                if (newRow) {
                  break;
                }
                overage++;
              }
            }
            if (overage > 0) {
              adapter.bottomPadding(adapter.bottomPadding() + bottomHeight);
              removeFromBuffer(buffer.length - overage, buffer.length);
              next -= overage;
              return log('clipped off bottom ' + overage + ' bottom padding ' + adapter.bottomPadding());
            }
          };
          shouldLoadTop = function () {
            return !bof && adapter.topDataPos() > topVisiblePos() - bufferPadding();
          };
          clipTop = function () {
            var item, itemHeight, itemTop, newRow, overage, rowTop, topHeight, _i, _len;
            topHeight = 0;
            overage = 0;
            for (_i = 0, _len = buffer.length; _i < _len; _i++) {
              item = buffer[_i];
              itemTop = item.element.offset().top;
              newRow = rowTop !== itemTop;
              rowTop = itemTop;
              if (newRow) {
                itemHeight = item.element.outerHeight(true);
              }
              if (adapter.topDataPos() + topHeight + itemHeight < topVisiblePos() - bufferPadding()) {
                if (newRow) {
                  topHeight += itemHeight;
                }
                overage++;
                bof = false;
              } else {
                if (newRow) {
                  break;
                }
                overage++;
              }
            }
            if (overage > 0) {
              adapter.topPadding(adapter.topPadding() + topHeight);
              removeFromBuffer(0, overage);
              first += overage;
              return log('clipped off top ' + overage + ' top padding ' + adapter.topPadding());
            }
          };
          enqueueFetch = function (rid, direction, scrolling) {
            if (!isLoading) {
              isLoading = true;
              loading(true);
            }
            if (pending.push(direction) === 1) {
              return fetch(rid, scrolling);
            }
          };
          hideElementBeforeAppend = function (element) {
            element.displayTemp = element.css('display');
            return element.css('display', 'none');
          };
          showElementAfterRender = function (element) {
            if (element.hasOwnProperty('displayTemp')) {
              return element.css('display', element.displayTemp);
            }
          };
          insert = function (index, item) {
            var itemScope, toBeAppended, wrapper;
            itemScope = $scope.$new();
            itemScope[itemName] = item;
            toBeAppended = index > first;
            itemScope.$index = index;
            if (toBeAppended) {
              itemScope.$index--;
            }
            wrapper = { scope: itemScope };
            linker(itemScope, function (clone) {
              wrapper.element = clone;
              if (toBeAppended) {
                if (index === next) {
                  hideElementBeforeAppend(clone);
                  adapter.append(clone);
                  return buffer.push(wrapper);
                } else {
                  buffer[index - first].element.after(clone);
                  return buffer.splice(index - first + 1, 0, wrapper);
                }
              } else {
                hideElementBeforeAppend(clone);
                adapter.prepend(clone);
                return buffer.unshift(wrapper);
              }
            });
            return {
              appended: toBeAppended,
              wrapper: wrapper
            };
          };
          adjustRowHeight = function (appended, wrapper) {
            var newHeight;
            if (appended) {
              return adapter.bottomPadding(Math.max(0, adapter.bottomPadding() - wrapper.element.outerHeight(true)));
            } else {
              newHeight = adapter.topPadding() - wrapper.element.outerHeight(true);
              if (newHeight >= 0) {
                return adapter.topPadding(newHeight);
              } else {
                return viewport.scrollTop(viewport.scrollTop() + wrapper.element.outerHeight(true));
              }
            }
          };
          doAdjustment = function (rid, scrolling, finalize) {
            var item, itemHeight, itemTop, newRow, rowTop, topHeight, _i, _len, _results;
            log('top {actual=' + adapter.topDataPos() + ' visible from=' + topVisiblePos() + ' bottom {visible through=' + bottomVisiblePos() + ' actual=' + adapter.bottomDataPos() + '}');
            if (shouldLoadBottom()) {
              enqueueFetch(rid, true, scrolling);
            } else {
              if (shouldLoadTop()) {
                enqueueFetch(rid, false, scrolling);
              }
            }
            if (finalize) {
              finalize(rid);
            }
            if (pending.length === 0) {
              topHeight = 0;
              _results = [];
              for (_i = 0, _len = buffer.length; _i < _len; _i++) {
                item = buffer[_i];
                itemTop = item.element.offset().top;
                newRow = rowTop !== itemTop;
                rowTop = itemTop;
                if (newRow) {
                  itemHeight = item.element.outerHeight(true);
                }
                if (newRow && adapter.topDataPos() + topHeight + itemHeight < topVisiblePos()) {
                  _results.push(topHeight += itemHeight);
                } else {
                  if (newRow) {
                    topVisible(item);
                  }
                  break;
                }
              }
              return _results;
            }
          };
          adjustBuffer = function (rid, scrolling, newItems, finalize) {
            if (newItems && newItems.length) {
              return $timeout(function () {
                var itemTop, row, rowTop, rows, _i, _j, _len, _len1;
                rows = [];
                for (_i = 0, _len = newItems.length; _i < _len; _i++) {
                  row = newItems[_i];
                  element = row.wrapper.element;
                  showElementAfterRender(element);
                  itemTop = element.offset().top;
                  if (rowTop !== itemTop) {
                    rows.push(row);
                    rowTop = itemTop;
                  }
                }
                for (_j = 0, _len1 = rows.length; _j < _len1; _j++) {
                  row = rows[_j];
                  adjustRowHeight(row.appended, row.wrapper);
                }
                return doAdjustment(rid, scrolling, finalize);
              });
            } else {
              return doAdjustment(rid, scrolling, finalize);
            }
          };
          finalize = function (rid, scrolling, newItems) {
            return adjustBuffer(rid, scrolling, newItems, function () {
              pending.shift();
              if (pending.length === 0) {
                isLoading = false;
                return loading(false);
              } else {
                return fetch(rid, scrolling);
              }
            });
          };
          fetch = function (rid, scrolling) {
            var direction;
            direction = pending[0];
            if (direction) {
              if (buffer.length && !shouldLoadBottom()) {
                return finalize(rid, scrolling);
              } else {
                return datasource.get(next, bufferSize, function (result) {
                  var item, newItems, _i, _len;
                  if (rid && rid !== ridActual) {
                    return;
                  }
                  newItems = [];
                  if (result.length < bufferSize) {
                    eof = true;
                    adapter.bottomPadding(0);
                  }
                  if (result.length > 0) {
                    clipTop();
                    for (_i = 0, _len = result.length; _i < _len; _i++) {
                      item = result[_i];
                      newItems.push(insert(++next, item));
                    }
                  }
                  return finalize(rid, scrolling, newItems);
                });
              }
            } else {
              if (buffer.length && !shouldLoadTop()) {
                return finalize(rid, scrolling);
              } else {
                return datasource.get(first - bufferSize, bufferSize, function (result) {
                  var i, newItems, _i, _ref;
                  if (rid && rid !== ridActual) {
                    return;
                  }
                  newItems = [];
                  if (result.length < bufferSize) {
                    bof = true;
                    adapter.topPadding(0);
                  }
                  if (result.length > 0) {
                    if (buffer.length) {
                      clipBottom();
                    }
                    for (i = _i = _ref = result.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {
                      newItems.unshift(insert(--first, result[i]));
                    }
                  }
                  return finalize(rid, scrolling, newItems);
                });
              }
            }
          };
          resizeHandler = function () {
            if (!$rootScope.$$phase && !isLoading) {
              adjustBuffer(null, false);
              return $scope.$apply();
            }
          };
          viewport.bind('resize', resizeHandler);
          scrollHandler = function () {
            if (!$rootScope.$$phase && !isLoading) {
              adjustBuffer(null, true);
              return $scope.$apply();
            }
          };
          viewport.bind('scroll', scrollHandler);
          wheelHandler = function (event) {
            var scrollTop, yMax;
            scrollTop = viewport[0].scrollTop;
            yMax = viewport[0].scrollHeight - viewport[0].clientHeight;
            if (scrollTop === 0 && !bof || scrollTop === yMax && !eof) {
              return event.preventDefault();
            }
          };
          viewport.bind('mousewheel', wheelHandler);
          $scope.$watch(datasource.revision, function () {
            return reload();
          });
          if (datasource.scope) {
            eventListener = datasource.scope.$new();
          } else {
            eventListener = $scope.$new();
          }
          $scope.$on('$destroy', function () {
            eventListener.$destroy();
            viewport.unbind('resize', resizeHandler);
            viewport.unbind('scroll', scrollHandler);
            return viewport.unbind('mousewheel', wheelHandler);
          });
          eventListener.$on('update.items', function (event, locator, newItem) {
            var wrapper, _fn, _i, _len, _ref;
            if (angular.isFunction(locator)) {
              _fn = function (wrapper) {
                return locator(wrapper.scope);
              };
              for (_i = 0, _len = buffer.length; _i < _len; _i++) {
                wrapper = buffer[_i];
                _fn(wrapper);
              }
            } else {
              if (0 <= (_ref = locator - first - 1) && _ref < buffer.length) {
                buffer[locator - first - 1].scope[itemName] = newItem;
              }
            }
            return null;
          });
          eventListener.$on('delete.items', function (event, locator) {
            var i, item, temp, wrapper, _fn, _i, _j, _k, _len, _len1, _len2, _ref;
            if (angular.isFunction(locator)) {
              temp = [];
              for (_i = 0, _len = buffer.length; _i < _len; _i++) {
                item = buffer[_i];
                temp.unshift(item);
              }
              _fn = function (wrapper) {
                if (locator(wrapper.scope)) {
                  removeFromBuffer(temp.length - 1 - i, temp.length - i);
                  return next--;
                }
              };
              for (i = _j = 0, _len1 = temp.length; _j < _len1; i = ++_j) {
                wrapper = temp[i];
                _fn(wrapper);
              }
            } else {
              if (0 <= (_ref = locator - first - 1) && _ref < buffer.length) {
                removeFromBuffer(locator - first - 1, locator - first);
                next--;
              }
            }
            for (i = _k = 0, _len2 = buffer.length; _k < _len2; i = ++_k) {
              item = buffer[i];
              item.scope.$index = first + i;
            }
            return adjustBuffer(null, false);
          });
          return eventListener.$on('insert.item', function (event, locator, item) {
            var i, inserted, _i, _len, _ref;
            inserted = [];
            if (angular.isFunction(locator)) {
              throw new Error('not implemented - Insert with locator function');
            } else {
              if (0 <= (_ref = locator - first - 1) && _ref < buffer.length) {
                inserted.push(insert(locator, item));
                next++;
              }
            }
            for (i = _i = 0, _len = buffer.length; _i < _len; i = ++_i) {
              item = buffer[i];
              item.scope.$index = first + i;
            }
            return adjustBuffer(null, false, inserted);
          });
        };
      }
    };
  }
]);
/*
//# sourceURL=src/scripts/ui-scroll.js
*/
/**
 * Adds a 'ui-scrollfix' class to the element when the page scrolls past it's position.
 * @param [offset] {int} optional Y-offset to override the detected offset.
 *   Takes 300 (absolute) or -300 or +300 (relative to detected)
 */
angular.module('ui.scrollfix', []).directive('uiScrollfix', [
  '$window',
  function ($window) {
    'use strict';
    function getWindowScrollTop() {
      if (angular.isDefined($window.pageYOffset)) {
        return $window.pageYOffset;
      } else {
        var iebody = document.compatMode && document.compatMode !== 'BackCompat' ? document.documentElement : document.body;
        return iebody.scrollTop;
      }
    }
    return {
      require: '^?uiScrollfixTarget',
      link: function (scope, elm, attrs, uiScrollfixTarget) {
        var top = elm[0].offsetTop, $target = uiScrollfixTarget && uiScrollfixTarget.$element || angular.element($window);
        if (!attrs.uiScrollfix) {
          attrs.uiScrollfix = top;
        } else if (typeof attrs.uiScrollfix === 'string') {
          // charAt is generally faster than indexOf: http://jsperf.com/indexof-vs-charat
          if (attrs.uiScrollfix.charAt(0) === '-') {
            attrs.uiScrollfix = top - parseFloat(attrs.uiScrollfix.substr(1));
          } else if (attrs.uiScrollfix.charAt(0) === '+') {
            attrs.uiScrollfix = top + parseFloat(attrs.uiScrollfix.substr(1));
          }
        }
        function onScroll() {
          // if pageYOffset is defined use it, otherwise use other crap for IE
          var offset = uiScrollfixTarget ? $target[0].scrollTop : getWindowScrollTop();
          if (!elm.hasClass('ui-scrollfix') && offset > attrs.uiScrollfix) {
            elm.addClass('ui-scrollfix');
          } else if (elm.hasClass('ui-scrollfix') && offset < attrs.uiScrollfix) {
            elm.removeClass('ui-scrollfix');
          }
        }
        $target.on('scroll', onScroll);
        // Unbind scroll event handler when directive is removed
        scope.$on('$destroy', function () {
          $target.off('scroll', onScroll);
        });
      }
    };
  }
]).directive('uiScrollfixTarget', [function () {
    'use strict';
    return {
      controller: [
        '$element',
        function ($element) {
          this.$element = $element;
        }
      ]
    };
  }]);
/**
 * uiShow Directive
 *
 * Adds a 'ui-show' class to the element instead of display:block
 * Created to allow tighter control  of CSS without bulkier directives
 *
 * @param expression {boolean} evaluated expression to determine if the class should be added
 */
angular.module('ui.showhide', []).directive('uiShow', [function () {
    'use strict';
    return function (scope, elm, attrs) {
      scope.$watch(attrs.uiShow, function (newVal) {
        if (newVal) {
          elm.addClass('ui-show');
        } else {
          elm.removeClass('ui-show');
        }
      });
    };
  }]).directive('uiHide', [function () {
    'use strict';
    return function (scope, elm, attrs) {
      scope.$watch(attrs.uiHide, function (newVal) {
        if (newVal) {
          elm.addClass('ui-hide');
        } else {
          elm.removeClass('ui-hide');
        }
      });
    };
  }]).directive('uiToggle', [function () {
    'use strict';
    return function (scope, elm, attrs) {
      scope.$watch(attrs.uiToggle, function (newVal) {
        if (newVal) {
          elm.removeClass('ui-hide').addClass('ui-show');
        } else {
          elm.removeClass('ui-show').addClass('ui-hide');
        }
      });
    };
  }]);
/**
 * Filters out all duplicate items from an array by checking the specified key
 * @param [key] {string} the name of the attribute of each object to compare for uniqueness
 if the key is empty, the entire object will be compared
 if the key === false then no filtering will be performed
 * @return {array}
 */
angular.module('ui.unique', []).filter('unique', [
  '$parse',
  function ($parse) {
    'use strict';
    return function (items, filterOn) {
      if (filterOn === false) {
        return items;
      }
      if ((filterOn || angular.isUndefined(filterOn)) && angular.isArray(items)) {
        var newItems = [], get = angular.isString(filterOn) ? $parse(filterOn) : function (item) {
            return item;
          };
        var extractValueToCompare = function (item) {
          return angular.isObject(item) ? get(item) : item;
        };
        angular.forEach(items, function (item) {
          var isDuplicate = false;
          for (var i = 0; i < newItems.length; i++) {
            if (angular.equals(extractValueToCompare(newItems[i]), extractValueToCompare(item))) {
              isDuplicate = true;
              break;
            }
          }
          if (!isDuplicate) {
            newItems.push(item);
          }
        });
        items = newItems;
      }
      return items;
    };
  }
]);
/*
 * Author: Remy Alain Ticona Carbajal http://realtica.org
 * Description: The main objective of ng-uploader is to have a user control,
 * clean, simple, customizable, and above all very easy to implement.
 * Licence: MIT
 */
angular.module('ui.uploader', []).service('uiUploader', uiUploader);
uiUploader.$inject = ['$log'];
function uiUploader($log) {
  'use strict';
  /*jshint validthis: true */
  var self = this;
  self.files = [];
  self.options = {};
  self.activeUploads = 0;
  $log.info('uiUploader loaded');
  function addFiles(files) {
    for (var i = 0; i < files.length; i++) {
      self.files.push(files[i]);
    }
  }
  function getFiles() {
    return self.files;
  }
  function startUpload(options) {
    self.options = options;
    for (var i = 0; i < self.files.length; i++) {
      if (self.activeUploads == self.options.concurrency) {
        break;
      }
      if (self.files[i].active)
        continue;
      ajaxUpload(self.files[i], self.options.url);
    }
  }
  function removeFile(file) {
    self.files.splice(self.files.indexOf(file), 1);
  }
  function removeAll() {
    self.files.splice(0, self.files.length);
  }
  return {
    addFiles: addFiles,
    getFiles: getFiles,
    files: self.files,
    startUpload: startUpload,
    removeFile: removeFile,
    removeAll: removeAll
  };
  function getHumanSize(bytes) {
    var sizes = [
        'n/a',
        'bytes',
        'KiB',
        'MiB',
        'GiB',
        'TB',
        'PB',
        'EiB',
        'ZiB',
        'YiB'
      ];
    var i = +Math.floor(Math.log(bytes) / Math.log(1024));
    return (bytes / Math.pow(1024, i)).toFixed(i ? 1 : 0) + ' ' + sizes[isNaN(bytes) ? 0 : i + 1];
  }
  function ajaxUpload(file, url) {
    var xhr, formData, prop, data = '', key = '' || 'file';
    self.activeUploads += 1;
    file.active = true;
    xhr = new window.XMLHttpRequest();
    formData = new window.FormData();
    xhr.open('POST', url);
    // Triggered when upload starts:
    xhr.upload.onloadstart = function () {
    };
    // Triggered many times during upload:
    xhr.upload.onprogress = function (event) {
      if (!event.lengthComputable) {
        return;
      }
      // Update file size because it might be bigger than reported by
      // the fileSize:
      //$log.info("progres..");
      //console.info(event.loaded);
      file.loaded = event.loaded;
      file.humanSize = getHumanSize(event.loaded);
      self.options.onProgress(file);
    };
    // Triggered when upload is completed:
    xhr.onload = function () {
      self.activeUploads -= 1;
      startUpload(self.options);
      self.options.onCompleted(file);
    };
    // Triggered when upload fails:
    xhr.onerror = function () {
    };
    // Append additional data if provided:
    if (data) {
      for (prop in data) {
        if (data.hasOwnProperty(prop)) {
          formData.append(prop, data[prop]);
        }
      }
    }
    // Append file data:
    formData.append(key, file, file.name);
    // Initiate upload:
    xhr.send(formData);
    return xhr;
  }
}
/**
 * General-purpose validator for ngModel.
 * angular.js comes with several built-in validation mechanism for input fields (ngRequired, ngPattern etc.) but using
 * an arbitrary validation function requires creation of a custom formatters and / or parsers.
 * The ui-validate directive makes it easy to use any function(s) defined in scope as a validator function(s).
 * A validator function will trigger validation on both model and input changes.
 *
 * @example <input ui-validate=" 'myValidatorFunction($value)' ">
 * @example <input ui-validate="{ foo : '$value > anotherModel', bar : 'validateFoo($value)' }">
 * @example <input ui-validate="{ foo : '$value > anotherModel' }" ui-validate-watch=" 'anotherModel' ">
 * @example <input ui-validate="{ foo : '$value > anotherModel', bar : 'validateFoo($value)' }" ui-validate-watch=" { foo : 'anotherModel' } ">
 *
 * @param ui-validate {string|object literal} If strings is passed it should be a scope's function to be used as a validator.
 * If an object literal is passed a key denotes a validation error key while a value should be a validator function.
 * In both cases validator function should take a value to validate as its argument and should return true/false indicating a validation result.
 */
angular.module('ui.validate', []).directive('uiValidate', function () {
  'use strict';
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, elm, attrs, ctrl) {
      var validateFn, validators = {}, validateExpr = scope.$eval(attrs.uiValidate);
      if (!validateExpr) {
        return;
      }
      if (angular.isString(validateExpr)) {
        validateExpr = { validator: validateExpr };
      }
      angular.forEach(validateExpr, function (exprssn, key) {
        validateFn = function (valueToValidate) {
          var expression = scope.$eval(exprssn, { '$value': valueToValidate });
          if (angular.isObject(expression) && angular.isFunction(expression.then)) {
            // expression is a promise
            expression.then(function () {
              ctrl.$setValidity(key, true);
            }, function () {
              ctrl.$setValidity(key, false);
            });
            return valueToValidate;
          } else if (expression) {
            // expression is true
            ctrl.$setValidity(key, true);
            return valueToValidate;
          } else {
            // expression is false
            ctrl.$setValidity(key, false);
            return valueToValidate;
          }
        };
        validators[key] = validateFn;
        ctrl.$formatters.push(validateFn);
        ctrl.$parsers.push(validateFn);
      });
      function apply_watch(watch) {
        //string - update all validators on expression change
        if (angular.isString(watch)) {
          scope.$watch(watch, function () {
            angular.forEach(validators, function (validatorFn) {
              validatorFn(ctrl.$modelValue);
            });
          });
          return;
        }
        //array - update all validators on change of any expression
        if (angular.isArray(watch)) {
          angular.forEach(watch, function (expression) {
            scope.$watch(expression, function () {
              angular.forEach(validators, function (validatorFn) {
                validatorFn(ctrl.$modelValue);
              });
            });
          });
          return;
        }
        //object - update appropriate validator
        if (angular.isObject(watch)) {
          angular.forEach(watch, function (expression, validatorKey) {
            //value is string - look after one expression
            if (angular.isString(expression)) {
              scope.$watch(expression, function () {
                validators[validatorKey](ctrl.$modelValue);
              });
            }
            //value is array - look after all expressions in array
            if (angular.isArray(expression)) {
              angular.forEach(expression, function (intExpression) {
                scope.$watch(intExpression, function () {
                  validators[validatorKey](ctrl.$modelValue);
                });
              });
            }
          });
        }
      }
      // Support for ui-validate-watch
      if (attrs.uiValidateWatch) {
        apply_watch(scope.$eval(attrs.uiValidateWatch));
      }
    }
  };
});
angular.module('ui.utils', [
  'ui.event',
  'ui.format',
  'ui.highlight',
  'ui.include',
  'ui.indeterminate',
  'ui.inflector',
  'ui.jq',
  'ui.keypress',
  'ui.mask',
  'ui.reset',
  'ui.route',
  'ui.scrollfix',
  'ui.scroll',
  'ui.scroll.jqlite',
  'ui.showhide',
  'ui.unique',
  'ui.validate'
]);
/*! 
 * angular-loading-bar v0.6.0
 * https://chieffancypants.github.io/angular-loading-bar
 * Copyright (c) 2014 Wes Cruver
 * License: MIT
 */
!function () {
  'use strict';
  angular.module('angular-loading-bar', ['cfp.loadingBarInterceptor']), angular.module('chieffancypants.loadingBar', ['cfp.loadingBarInterceptor']), angular.module('cfp.loadingBarInterceptor', ['cfp.loadingBar']).config([
    '$httpProvider',
    function (a) {
      var b = [
          '$q',
          '$cacheFactory',
          '$timeout',
          '$rootScope',
          'cfpLoadingBar',
          function (b, c, d, e, f) {
            function g() {
              d.cancel(i), f.complete(), k = 0, j = 0;
            }
            function h(b) {
              var d, e = c.get('$http'), f = a.defaults;
              !b.cache && !f.cache || b.cache === !1 || 'GET' !== b.method && 'JSONP' !== b.method || (d = angular.isObject(b.cache) ? b.cache : angular.isObject(f.cache) ? f.cache : e);
              var g = void 0 !== d ? void 0 !== d.get(b.url) : !1;
              return void 0 !== b.cached && g !== b.cached ? b.cached : (b.cached = g, g);
            }
            var i, j = 0, k = 0, l = f.latencyThreshold;
            return {
              request: function (a) {
                return a.ignoreLoadingBar || h(a) || (e.$broadcast('cfpLoadingBar:loading', { url: a.url }), 0 === j && (i = d(function () {
                  f.start();
                }, l)), j++, f.set(k / j)), a;
              },
              response: function (a) {
                return a.config.ignoreLoadingBar || h(a.config) || (k++, e.$broadcast('cfpLoadingBar:loaded', { url: a.config.url }), k >= j ? g() : f.set(k / j)), a;
              },
              responseError: function (a) {
                return a.config.ignoreLoadingBar || h(a.config) || (k++, e.$broadcast('cfpLoadingBar:loaded', { url: a.config.url }), k >= j ? g() : f.set(k / j)), b.reject(a);
              }
            };
          }
        ];
      a.interceptors.push(b);
    }
  ]), angular.module('cfp.loadingBar', []).provider('cfpLoadingBar', function () {
    this.includeSpinner = !0, this.includeBar = !0, this.latencyThreshold = 100, this.startSize = 0.02, this.parentSelector = 'body', this.spinnerTemplate = '<div id="loading-bar-spinner"><div class="spinner-icon"></div></div>', this.loadingBarTemplate = '<div id="loading-bar"><div class="bar"><div class="peg"></div></div></div>', this.$get = [
      '$injector',
      '$document',
      '$timeout',
      '$rootScope',
      function (a, b, c, d) {
        function e() {
          k || (k = a.get('$animate'));
          var e = b.find(n).eq(0);
          c.cancel(m), r || (d.$broadcast('cfpLoadingBar:started'), r = !0, u && k.enter(o, e), t && k.enter(q, e), f(v));
        }
        function f(a) {
          if (r) {
            var b = 100 * a + '%';
            p.css('width', b), s = a, c.cancel(l), l = c(function () {
              g();
            }, 250);
          }
        }
        function g() {
          if (!(h() >= 1)) {
            var a = 0, b = h();
            a = b >= 0 && 0.25 > b ? (3 * Math.random() + 3) / 100 : b >= 0.25 && 0.65 > b ? 3 * Math.random() / 100 : b >= 0.65 && 0.9 > b ? 2 * Math.random() / 100 : b >= 0.9 && 0.99 > b ? 0.005 : 0;
            var c = h() + a;
            f(c);
          }
        }
        function h() {
          return s;
        }
        function i() {
          s = 0, r = !1;
        }
        function j() {
          k || (k = a.get('$animate')), d.$broadcast('cfpLoadingBar:completed'), f(1), c.cancel(m), m = c(function () {
            var a = k.leave(o, i);
            a && a.then && a.then(i), k.leave(q);
          }, 500);
        }
        var k, l, m, n = this.parentSelector, o = angular.element(this.loadingBarTemplate), p = o.find('div').eq(0), q = angular.element(this.spinnerTemplate), r = !1, s = 0, t = this.includeSpinner, u = this.includeBar, v = this.startSize;
        return {
          start: e,
          set: f,
          status: h,
          inc: g,
          complete: j,
          includeSpinner: this.includeSpinner,
          latencyThreshold: this.latencyThreshold,
          parentSelector: this.parentSelector,
          startSize: this.startSize
        };
      }
    ];
  });
}();
/**
 * Owl carousel
 * @version 2.0.0
 * @author Bartosz Wojciechowski
 * @license The MIT License (MIT)
 * @todo Lazy Load Icon
 * @todo prevent animationend bubling
 * @todo itemsScaleUp
 * @todo Test Zepto
 * @todo stagePadding calculate wrong active classes
 */
;
(function ($, window, document, undefined) {
  /**
	 * Creates a carousel.
	 * @class The Owl Carousel.
	 * @public
	 * @param {HTMLElement|jQuery} element - The element to create the carousel for.
	 * @param {Object} [options] - The options
	 */
  function Owl(element, options) {
    /**
		 * Current settings for the carousel.
		 * @public
		 */
    this.settings = null;
    /**
		 * Current options set by the caller including defaults.
		 * @public
		 */
    this.options = $.extend({}, Owl.Defaults, options);
    /**
		 * Plugin element.
		 * @public
		 */
    this.$element = $(element);
    /**
		 * Proxied event handlers.
		 * @protected
		 */
    this._handlers = {};
    /**
		 * References to the running plugins of this carousel.
		 * @protected
		 */
    this._plugins = {};
    /**
		 * Currently suppressed events to prevent them from beeing retriggered.
		 * @protected
		 */
    this._supress = {};
    /**
		 * Absolute current position.
		 * @protected
		 */
    this._current = null;
    /**
		 * Animation speed in milliseconds.
		 * @protected
		 */
    this._speed = null;
    /**
		 * Coordinates of all items in pixel.
		 * @todo The name of this member is missleading.
		 * @protected
		 */
    this._coordinates = [];
    /**
		 * Current breakpoint.
		 * @todo Real media queries would be nice.
		 * @protected
		 */
    this._breakpoint = null;
    /**
		 * Current width of the plugin element.
		 */
    this._width = null;
    /**
		 * All real items.
		 * @protected
		 */
    this._items = [];
    /**
		 * All cloned items.
		 * @protected
		 */
    this._clones = [];
    /**
		 * Merge values of all items.
		 * @todo Maybe this could be part of a plugin.
		 * @protected
		 */
    this._mergers = [];
    /**
		 * Widths of all items.
		 */
    this._widths = [];
    /**
		 * Invalidated parts within the update process.
		 * @protected
		 */
    this._invalidated = {};
    /**
		 * Ordered list of workers for the update process.
		 * @protected
		 */
    this._pipe = [];
    /**
		 * Current state information for the drag operation.
		 * @todo #261
		 * @protected
		 */
    this._drag = {
      time: null,
      target: null,
      pointer: null,
      stage: {
        start: null,
        current: null
      },
      direction: null
    };
    /**
		 * Current state information and their tags.
		 * @type {Object}
		 * @protected
		 */
    this._states = {
      current: {},
      tags: {
        'initializing': ['busy'],
        'animating': ['busy'],
        'dragging': ['interacting']
      }
    };
    $.each([
      'onResize',
      'onThrottledResize'
    ], $.proxy(function (i, handler) {
      this._handlers[handler] = $.proxy(this[handler], this);
    }, this));
    $.each(Owl.Plugins, $.proxy(function (key, plugin) {
      this._plugins[key.charAt(0).toLowerCase() + key.slice(1)] = new plugin(this);
    }, this));
    $.each(Owl.Workers, $.proxy(function (priority, worker) {
      this._pipe.push({
        'filter': worker.filter,
        'run': $.proxy(worker.run, this)
      });
    }, this));
    this.setup();
    this.initialize();
  }
  /**
	 * Default options for the carousel.
	 * @public
	 */
  Owl.Defaults = {
    items: 3,
    loop: false,
    center: false,
    rewind: false,
    mouseDrag: true,
    touchDrag: true,
    pullDrag: true,
    freeDrag: false,
    margin: 0,
    stagePadding: 0,
    merge: false,
    mergeFit: true,
    autoWidth: false,
    startPosition: 0,
    rtl: false,
    smartSpeed: 250,
    fluidSpeed: false,
    dragEndSpeed: false,
    responsive: {},
    responsiveRefreshRate: 200,
    responsiveBaseElement: window,
    fallbackEasing: 'swing',
    info: false,
    nestedItemSelector: false,
    itemElement: 'div',
    stageElement: 'div',
    refreshClass: 'owl-refresh',
    loadedClass: 'owl-loaded',
    loadingClass: 'owl-loading',
    rtlClass: 'owl-rtl',
    responsiveClass: 'owl-responsive',
    dragClass: 'owl-drag',
    itemClass: 'owl-item',
    stageClass: 'owl-stage',
    stageOuterClass: 'owl-stage-outer',
    grabClass: 'owl-grab'
  };
  /**
	 * Enumeration for width.
	 * @public
	 * @readonly
	 * @enum {String}
	 */
  Owl.Width = {
    Default: 'default',
    Inner: 'inner',
    Outer: 'outer'
  };
  /**
	 * Enumeration for types.
	 * @public
	 * @readonly
	 * @enum {String}
	 */
  Owl.Type = {
    Event: 'event',
    State: 'state'
  };
  /**
	 * Contains all registered plugins.
	 * @public
	 */
  Owl.Plugins = {};
  /**
	 * List of workers involved in the update process.
	 */
  Owl.Workers = [
    {
      filter: [
        'width',
        'settings'
      ],
      run: function () {
        this._width = this.$element.width();
      }
    },
    {
      filter: [
        'width',
        'items',
        'settings'
      ],
      run: function (cache) {
        cache.current = this._items && this._items[this.relative(this._current)];
      }
    },
    {
      filter: [
        'items',
        'settings'
      ],
      run: function () {
        this.$stage.children('.cloned').remove();
      }
    },
    {
      filter: [
        'width',
        'items',
        'settings'
      ],
      run: function (cache) {
        var margin = this.settings.margin || '', grid = !this.settings.autoWidth, rtl = this.settings.rtl, css = {
            'width': 'auto',
            'margin-left': rtl ? margin : '',
            'margin-right': rtl ? '' : margin
          };
        !grid && this.$stage.children().css(css);
        cache.css = css;
      }
    },
    {
      filter: [
        'width',
        'items',
        'settings'
      ],
      run: function (cache) {
        var width = (this.width() / this.settings.items).toFixed(3) - this.settings.margin, merge = null, iterator = this._items.length, grid = !this.settings.autoWidth, widths = [];
        cache.items = {
          merge: false,
          width: width
        };
        while (iterator--) {
          merge = this._mergers[iterator];
          merge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;
          cache.items.merge = merge > 1 || cache.items.merge;
          widths[iterator] = !grid ? this._items[iterator].width() : width * merge;
        }
        this._widths = widths;
      }
    },
    {
      filter: [
        'items',
        'settings'
      ],
      run: function () {
        var clones = [], items = this._items, settings = this.settings, view = Math.max(settings.items * 2, 4), size = Math.ceil(items.length / 2) * 2, repeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0, append = '', prepend = '';
        repeat /= 2;
        while (repeat--) {
          clones.push(this.normalize(clones.length / 2, true));
          append = append + items[clones[clones.length - 1]][0].outerHTML;
          clones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));
          prepend = items[clones[clones.length - 1]][0].outerHTML + prepend;
        }
        this._clones = clones;
        $(append).addClass('cloned').appendTo(this.$stage);
        $(prepend).addClass('cloned').prependTo(this.$stage);
      }
    },
    {
      filter: [
        'width',
        'items',
        'settings'
      ],
      run: function () {
        var rtl = this.settings.rtl ? 1 : -1, size = this._clones.length + this._items.length, iterator = -1, previous = 0, current = 0, coordinates = [];
        while (++iterator < size) {
          previous = coordinates[iterator - 1] || 0;
          current = this._widths[this.relative(iterator)] + this.settings.margin;
          coordinates.push(previous + current * rtl);
        }
        this._coordinates = coordinates;
      }
    },
    {
      filter: [
        'width',
        'items',
        'settings'
      ],
      run: function () {
        var padding = this.settings.stagePadding, coordinates = this._coordinates, css = {
            'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,
            'padding-left': padding || '',
            'padding-right': padding || ''
          };
        this.$stage.css(css);
      }
    },
    {
      filter: [
        'width',
        'items',
        'settings'
      ],
      run: function (cache) {
        var iterator = this._coordinates.length, grid = !this.settings.autoWidth, items = this.$stage.children();
        if (grid && cache.items.merge) {
          while (iterator--) {
            cache.css.width = this._widths[this.relative(iterator)];
            items.eq(iterator).css(cache.css);
          }
        } else if (grid) {
          cache.css.width = cache.items.width;
          items.css(cache.css);
        }
      }
    },
    {
      filter: ['items'],
      run: function () {
        this._coordinates.length < 1 && this.$stage.removeAttr('style');
      }
    },
    {
      filter: [
        'width',
        'items',
        'settings'
      ],
      run: function (cache) {
        cache.current = cache.current ? this.$stage.children().index(cache.current) : 0;
        cache.current = Math.max(this.minimum(), Math.min(this.maximum(), cache.current));
        this.reset(cache.current);
      }
    },
    {
      filter: ['position'],
      run: function () {
        this.animate(this.coordinates(this._current));
      }
    },
    {
      filter: [
        'width',
        'position',
        'items',
        'settings'
      ],
      run: function () {
        var rtl = this.settings.rtl ? 1 : -1, padding = this.settings.stagePadding * 2, begin = this.coordinates(this.current()) + padding, end = begin + this.width() * rtl, inner, outer, matches = [], i, n;
        for (i = 0, n = this._coordinates.length; i < n; i++) {
          inner = this._coordinates[i - 1] || 0;
          outer = Math.abs(this._coordinates[i]) + padding * rtl;
          if (this.op(inner, '<=', begin) && this.op(inner, '>', end) || this.op(outer, '<', begin) && this.op(outer, '>', end)) {
            matches.push(i);
          }
        }
        this.$stage.children('.active').removeClass('active');
        this.$stage.children(':eq(' + matches.join('), :eq(') + ')').addClass('active');
        if (this.settings.center) {
          this.$stage.children('.center').removeClass('center');
          this.$stage.children().eq(this.current()).addClass('center');
        }
      }
    }
  ];
  /**
	 * Initializes the carousel.
	 * @protected
	 */
  Owl.prototype.initialize = function () {
    this.enter('initializing');
    this.trigger('initialize');
    this.$element.toggleClass(this.settings.rtlClass, this.settings.rtl);
    if (this.settings.autoWidth && !this.is('pre-loading')) {
      var imgs, nestedSelector, width;
      imgs = this.$element.find('img');
      nestedSelector = this.settings.nestedItemSelector ? '.' + this.settings.nestedItemSelector : undefined;
      width = this.$element.children(nestedSelector).width();
      if (imgs.length && width <= 0) {
        this.preloadAutoWidthImages(imgs);
      }
    }
    this.$element.addClass(this.options.loadingClass);
    // create stage
    this.$stage = $('<' + this.settings.stageElement + ' class="' + this.settings.stageClass + '"/>').wrap('<div class="' + this.settings.stageOuterClass + '"/>');
    // append stage
    this.$element.append(this.$stage.parent());
    // append content
    this.replace(this.$element.children().not(this.$stage.parent()));
    // check visibility
    if (this.$element.is(':visible')) {
      // update view
      this.refresh();
    } else {
      // invalidate width
      this.invalidate('width');
    }
    this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass);
    // register event handlers
    this.registerEventHandlers();
    this.leave('initializing');
    this.trigger('initialized');
  };
  /**
	 * Setups the current settings.
	 * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?
	 * @todo Support for media queries by using `matchMedia` would be nice.
	 * @public
	 */
  Owl.prototype.setup = function () {
    var viewport = this.viewport(), overwrites = this.options.responsive, match = -1, settings = null;
    if (!overwrites) {
      settings = $.extend({}, this.options);
    } else {
      $.each(overwrites, function (breakpoint) {
        if (breakpoint <= viewport && breakpoint > match) {
          match = Number(breakpoint);
        }
      });
      settings = $.extend({}, this.options, overwrites[match]);
      delete settings.responsive;
      // responsive class
      if (settings.responsiveClass) {
        this.$element.attr('class', this.$element.attr('class').replace(new RegExp('(' + this.options.responsiveClass + '-)\\S+\\s', 'g'), '$1' + match));
      }
    }
    if (this.settings === null || this._breakpoint !== match) {
      this.trigger('change', {
        property: {
          name: 'settings',
          value: settings
        }
      });
      this._breakpoint = match;
      this.settings = settings;
      this.invalidate('settings');
      this.trigger('changed', {
        property: {
          name: 'settings',
          value: this.settings
        }
      });
    }
  };
  /**
	 * Updates option logic if necessery.
	 * @protected
	 */
  Owl.prototype.optionsLogic = function () {
    if (this.settings.autoWidth) {
      this.settings.stagePadding = false;
      this.settings.merge = false;
    }
  };
  /**
	 * Prepares an item before add.
	 * @todo Rename event parameter `content` to `item`.
	 * @protected
	 * @returns {jQuery|HTMLElement} - The item container.
	 */
  Owl.prototype.prepare = function (item) {
    var event = this.trigger('prepare', { content: item });
    if (!event.data) {
      event.data = $('<' + this.settings.itemElement + '/>').addClass(this.options.itemClass).append(item);
    }
    this.trigger('prepared', { content: event.data });
    return event.data;
  };
  /**
	 * Updates the view.
	 * @public
	 */
  Owl.prototype.update = function () {
    var i = 0, n = this._pipe.length, filter = $.proxy(function (p) {
        return this[p];
      }, this._invalidated), cache = {};
    while (i < n) {
      if (this._invalidated.all || $.grep(this._pipe[i].filter, filter).length > 0) {
        this._pipe[i].run(cache);
      }
      i++;
    }
    this._invalidated = {};
    !this.is('valid') && this.enter('valid');
  };
  /**
	 * Gets the width of the view.
	 * @public
	 * @param {Owl.Width} [dimension=Owl.Width.Default] - The dimension to return.
	 * @returns {Number} - The width of the view in pixel.
	 */
  Owl.prototype.width = function (dimension) {
    dimension = dimension || Owl.Width.Default;
    switch (dimension) {
    case Owl.Width.Inner:
    case Owl.Width.Outer:
      return this._width;
    default:
      return this._width - this.settings.stagePadding * 2 + this.settings.margin;
    }
  };
  /**
	 * Refreshes the carousel primarily for adaptive purposes.
	 * @public
	 */
  Owl.prototype.refresh = function () {
    this.enter('refreshing');
    this.trigger('refresh');
    this.setup();
    this.optionsLogic();
    this.$element.addClass(this.options.refreshClass);
    this.update();
    this.$element.removeClass(this.options.refreshClass);
    this.leave('refreshing');
    this.trigger('refreshed');
  };
  /**
	 * Checks window `resize` event.
	 * @protected
	 */
  Owl.prototype.onThrottledResize = function () {
    window.clearTimeout(this.resizeTimer);
    this.resizeTimer = window.setTimeout(this._handlers.onResize, this.settings.responsiveRefreshRate);
  };
  /**
	 * Checks window `resize` event.
	 * @protected
	 */
  Owl.prototype.onResize = function () {
    if (!this._items.length) {
      return false;
    }
    if (this._width === this.$element.width()) {
      return false;
    }
    if (!this.$element.is(':visible')) {
      return false;
    }
    this.enter('resizing');
    if (this.trigger('resize').isDefaultPrevented()) {
      this.leave('resizing');
      return false;
    }
    this.invalidate('width');
    this.refresh();
    this.leave('resizing');
    this.trigger('resized');
  };
  /**
	 * Registers event handlers.
	 * @todo Check `msPointerEnabled`
	 * @todo #261
	 * @protected
	 */
  Owl.prototype.registerEventHandlers = function () {
    if ($.support.transition) {
      this.$stage.on($.support.transition.end + '.owl.core', $.proxy(this.onTransitionEnd, this));
    }
    if (this.settings.responsive !== false) {
      this.on(window, 'resize', this._handlers.onThrottledResize);
    }
    if (this.settings.mouseDrag) {
      this.$element.addClass(this.options.dragClass);
      this.$stage.on('mousedown.owl.core', $.proxy(this.onDragStart, this));
      this.$stage.on('dragstart.owl.core selectstart.owl.core', function () {
        return false;
      });
    }
    if (this.settings.touchDrag) {
      this.$stage.on('touchstart.owl.core', $.proxy(this.onDragStart, this));
      this.$stage.on('touchcancel.owl.core', $.proxy(this.onDragEnd, this));
    }
  };
  /**
	 * Handles `touchstart` and `mousedown` events.
	 * @todo Horizontal swipe threshold as option
	 * @todo #261
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
  Owl.prototype.onDragStart = function (event) {
    var stage = null;
    if (event.which === 3) {
      return;
    }
    if ($.support.transform) {
      stage = this.$stage.css('transform').replace(/.*\(|\)| /g, '').split(',');
      stage = {
        x: stage[stage.length === 16 ? 12 : 4],
        y: stage[stage.length === 16 ? 13 : 5]
      };
    } else {
      stage = this.$stage.position();
      stage = {
        x: this.settings.rtl ? stage.left + this.$stage.width() - this.width() + this.settings.margin : stage.left,
        y: stage.top
      };
    }
    if (this.is('animating')) {
      $.support.transform ? this.animate(stage.x) : this.$stage.stop();
      this.invalidate('position');
    }
    this.$element.toggleClass(this.options.grabClass, event.type === 'mousedown');
    this.speed(0);
    this._drag.time = new Date().getTime();
    this._drag.target = $(event.target);
    this._drag.stage.start = stage;
    this._drag.stage.current = stage;
    this._drag.pointer = this.pointer(event);
    $(document).on('mouseup.owl.core touchend.owl.core', $.proxy(this.onDragEnd, this));
    $(document).one('mousemove.owl.core touchmove.owl.core', $.proxy(function (event) {
      var delta = this.difference(this._drag.pointer, this.pointer(event));
      $(document).on('mousemove.owl.core touchmove.owl.core', $.proxy(this.onDragMove, this));
      if (Math.abs(delta.x) < Math.abs(delta.y) && this.is('valid')) {
        return;
      }
      event.preventDefault();
      this.enter('dragging');
      this.trigger('drag');
    }, this));
  };
  /**
	 * Handles the `touchmove` and `mousemove` events.
	 * @todo #261
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
  Owl.prototype.onDragMove = function (event) {
    var minimum = null, maximum = null, pull = null, delta = this.difference(this._drag.pointer, this.pointer(event)), stage = this.difference(this._drag.stage.start, delta);
    if (!this.is('dragging')) {
      return;
    }
    event.preventDefault();
    if (this.settings.loop) {
      minimum = this.coordinates(this.minimum());
      maximum = this.coordinates(this.maximum() + 1) - minimum;
      stage.x = ((stage.x - minimum) % maximum + maximum) % maximum + minimum;
    } else {
      minimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());
      maximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());
      pull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;
      stage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);
    }
    this._drag.stage.current = stage;
    this.animate(stage.x);
  };
  /**
	 * Handles the `touchend` and `mouseup` events.
	 * @todo #261
	 * @todo Threshold for click event
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
  Owl.prototype.onDragEnd = function (event) {
    var delta = this.difference(this._drag.pointer, this.pointer(event)), stage = this._drag.stage.current, direction = delta.x > 0 ^ this.settings.rtl ? 'left' : 'right';
    $(document).off('.owl.core');
    this.$element.removeClass(this.options.grabClass);
    if (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {
      this.speed(this.settings.dragEndSpeed || this.settings.smartSpeed);
      this.current(this.closest(stage.x, delta.x !== 0 ? direction : this._drag.direction));
      this.invalidate('position');
      this.update();
      this._drag.direction = direction;
      if (Math.abs(delta.x) > 3 || new Date().getTime() - this._drag.time > 300) {
        this._drag.target.one('click.owl.core', function () {
          return false;
        });
      }
    }
    if (!this.is('dragging')) {
      return;
    }
    this.leave('dragging');
    this.trigger('dragged');
  };
  /**
	 * Gets absolute position of the closest item for a coordinate.
	 * @todo Setting `freeDrag` makes `closest` not reusable. See #165.
	 * @protected
	 * @param {Number} coordinate - The coordinate in pixel.
	 * @param {String} direction - The direction to check for the closest item. Ether `left` or `right`.
	 * @return {Number} - The absolute position of the closest item.
	 */
  Owl.prototype.closest = function (coordinate, direction) {
    var position = -1, pull = 30, width = this.width(), coordinates = this.coordinates();
    if (!this.settings.freeDrag) {
      // check closest item
      $.each(coordinates, $.proxy(function (index, value) {
        if (coordinate > value - pull && coordinate < value + pull) {
          position = index;
        } else if (this.op(coordinate, '<', value) && this.op(coordinate, '>', coordinates[index + 1] || value - width)) {
          position = direction === 'left' ? index + 1 : index;
        }
        return position === -1;
      }, this));
    }
    if (!this.settings.loop) {
      // non loop boundries
      if (this.op(coordinate, '>', coordinates[this.minimum()])) {
        position = coordinate = this.minimum();
      } else if (this.op(coordinate, '<', coordinates[this.maximum()])) {
        position = coordinate = this.maximum();
      }
    }
    return position;
  };
  /**
	 * Animates the stage.
	 * @todo #270
	 * @public
	 * @param {Number} coordinate - The coordinate in pixels.
	 */
  Owl.prototype.animate = function (coordinate) {
    var animate = this.speed() > 0;
    this.is('animating') && this.onTransitionEnd();
    if (animate) {
      this.enter('animating');
      this.trigger('translate');
    }
    if ($.support.transform3d && $.support.transition) {
      this.$stage.css({
        transform: 'translate3d(' + coordinate + 'px,0px,0px)',
        transition: this.speed() / 1000 + 's'
      });
    } else if (animate) {
      this.$stage.animate({ left: coordinate + 'px' }, this.speed(), this.settings.fallbackEasing, $.proxy(this.onTransitionEnd, this));
    } else {
      this.$stage.css({ left: coordinate + 'px' });
    }
  };
  /**
	 * Checks whether the carousel is in a specific state or not.
	 * @param {String} state - The state to check.
	 * @returns {Boolean} - The flag which indicates if the carousel is busy.
	 */
  Owl.prototype.is = function (state) {
    return this._states.current[state] && this._states.current[state] > 0;
  };
  /**
	 * Sets the absolute position of the current item.
	 * @public
	 * @param {Number} [position] - The new absolute position or nothing to leave it unchanged.
	 * @returns {Number} - The absolute position of the current item.
	 */
  Owl.prototype.current = function (position) {
    if (position === undefined) {
      return this._current;
    }
    if (this._items.length === 0) {
      return undefined;
    }
    position = this.normalize(position);
    if (this._current !== position) {
      var event = this.trigger('change', {
          property: {
            name: 'position',
            value: position
          }
        });
      if (event.data !== undefined) {
        position = this.normalize(event.data);
      }
      this._current = position;
      this.invalidate('position');
      this.trigger('changed', {
        property: {
          name: 'position',
          value: this._current
        }
      });
    }
    return this._current;
  };
  /**
	 * Invalidates the given part of the update routine.
	 * @param {String} [part] - The part to invalidate.
	 * @returns {Array.<String>} - The invalidated parts.
	 */
  Owl.prototype.invalidate = function (part) {
    if ($.type(part) === 'string') {
      this._invalidated[part] = true;
      this.is('valid') && this.leave('valid');
    }
    return $.map(this._invalidated, function (v, i) {
      return i;
    });
  };
  /**
	 * Resets the absolute position of the current item.
	 * @public
	 * @param {Number} position - The absolute position of the new item.
	 */
  Owl.prototype.reset = function (position) {
    position = this.normalize(position);
    if (position === undefined) {
      return;
    }
    this._speed = 0;
    this._current = position;
    this.suppress([
      'translate',
      'translated'
    ]);
    this.animate(this.coordinates(position));
    this.release([
      'translate',
      'translated'
    ]);
  };
  /**
	 * Normalizes an absolute or a relative position of an item.
	 * @public
	 * @param {Number} position - The absolute or relative position to normalize.
	 * @param {Boolean} [relative=false] - Whether the given position is relative or not.
	 * @returns {Number} - The normalized position.
	 */
  Owl.prototype.normalize = function (position, relative) {
    var n = this._items.length, m = relative ? 0 : this._clones.length;
    if (!$.isNumeric(position) || n < 1) {
      position = undefined;
    } else if (position < 0 || position >= n + m) {
      position = ((position - m / 2) % n + n) % n + m / 2;
    }
    return position;
  };
  /**
	 * Converts an absolute position of an item into a relative one.
	 * @public
	 * @param {Number} position - The absolute position to convert.
	 * @returns {Number} - The converted position.
	 */
  Owl.prototype.relative = function (position) {
    position -= this._clones.length / 2;
    return this.normalize(position, true);
  };
  /**
	 * Gets the maximum position for the current item.
	 * @public
	 * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.
	 * @returns {Number}
	 */
  Owl.prototype.maximum = function (relative) {
    var settings = this.settings, maximum = this._coordinates.length, boundary = Math.abs(this._coordinates[maximum - 1]) - this._width, i = -1, j;
    if (settings.loop) {
      maximum = this._clones.length / 2 + this._items.length - 1;
    } else if (settings.autoWidth || settings.merge) {
      // binary search
      while (maximum - i > 1) {
        Math.abs(this._coordinates[j = maximum + i >> 1]) < boundary ? i = j : maximum = j;
      }
    } else if (settings.center) {
      maximum = this._items.length - 1;
    } else {
      maximum = this._items.length - settings.items;
    }
    if (relative) {
      maximum -= this._clones.length / 2;
    }
    return Math.max(maximum, 0);
  };
  /**
	 * Gets the minimum position for the current item.
	 * @public
	 * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.
	 * @returns {Number}
	 */
  Owl.prototype.minimum = function (relative) {
    return relative ? 0 : this._clones.length / 2;
  };
  /**
	 * Gets an item at the specified relative position.
	 * @public
	 * @param {Number} [position] - The relative position of the item.
	 * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.
	 */
  Owl.prototype.items = function (position) {
    if (position === undefined) {
      return this._items.slice();
    }
    position = this.normalize(position, true);
    return this._items[position];
  };
  /**
	 * Gets an item at the specified relative position.
	 * @public
	 * @param {Number} [position] - The relative position of the item.
	 * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.
	 */
  Owl.prototype.mergers = function (position) {
    if (position === undefined) {
      return this._mergers.slice();
    }
    position = this.normalize(position, true);
    return this._mergers[position];
  };
  /**
	 * Gets the absolute positions of clones for an item.
	 * @public
	 * @param {Number} [position] - The relative position of the item.
	 * @returns {Array.<Number>} - The absolute positions of clones for the item or all if no position was given.
	 */
  Owl.prototype.clones = function (position) {
    var odd = this._clones.length / 2, even = odd + this._items.length, map = function (index) {
        return index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2;
      };
    if (position === undefined) {
      return $.map(this._clones, function (v, i) {
        return map(i);
      });
    }
    return $.map(this._clones, function (v, i) {
      return v === position ? map(i) : null;
    });
  };
  /**
	 * Sets the current animation speed.
	 * @public
	 * @param {Number} [speed] - The animation speed in milliseconds or nothing to leave it unchanged.
	 * @returns {Number} - The current animation speed in milliseconds.
	 */
  Owl.prototype.speed = function (speed) {
    if (speed !== undefined) {
      this._speed = speed;
    }
    return this._speed;
  };
  /**
	 * Gets the coordinate of an item.
	 * @todo The name of this method is missleanding.
	 * @public
	 * @param {Number} position - The absolute position of the item within `minimum()` and `maximum()`.
	 * @returns {Number|Array.<Number>} - The coordinate of the item in pixel or all coordinates.
	 */
  Owl.prototype.coordinates = function (position) {
    var coordinate = null;
    if (position === undefined) {
      return $.map(this._coordinates, $.proxy(function (coordinate, index) {
        return this.coordinates(index);
      }, this));
    }
    if (this.settings.center) {
      coordinate = this._coordinates[position];
      coordinate += (this.width() - coordinate + (this._coordinates[position - 1] || 0)) / 2 * (this.settings.rtl ? -1 : 1);
    } else {
      coordinate = this._coordinates[position - 1] || 0;
    }
    return coordinate;
  };
  /**
	 * Calculates the speed for a translation.
	 * @protected
	 * @param {Number} from - The absolute position of the start item.
	 * @param {Number} to - The absolute position of the target item.
	 * @param {Number} [factor=undefined] - The time factor in milliseconds.
	 * @returns {Number} - The time in milliseconds for the translation.
	 */
  Owl.prototype.duration = function (from, to, factor) {
    return Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs(factor || this.settings.smartSpeed);
  };
  /**
	 * Slides to the specified item.
	 * @public
	 * @param {Number} position - The position of the item.
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 */
  Owl.prototype.to = function (position, speed) {
    var current = this.current(), revert = null, distance = position - this.relative(current), direction = (distance > 0) - (distance < 0), items = this._items.length, minimum = this.minimum(), maximum = this.maximum();
    if (this.settings.loop) {
      if (!this.settings.rewind && Math.abs(distance) > items / 2) {
        distance += direction * -1 * items;
      }
      position = current + distance;
      revert = ((position - minimum) % items + items) % items + minimum;
      if (revert !== position && revert - distance <= maximum && revert - distance > 0) {
        current = revert - distance;
        position = revert;
        this.reset(current);
      }
    } else if (this.settings.rewind) {
      maximum += 1;
      position = (position % maximum + maximum) % maximum;
    } else {
      position = Math.max(minimum, Math.min(maximum, position));
    }
    this.speed(this.duration(current, position, speed));
    this.current(position);
    if (this.$element.is(':visible')) {
      this.update();
    }
  };
  /**
	 * Slides to the next item.
	 * @public
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 */
  Owl.prototype.next = function (speed) {
    speed = speed || false;
    this.to(this.relative(this.current()) + 1, speed);
  };
  /**
	 * Slides to the previous item.
	 * @public
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 */
  Owl.prototype.prev = function (speed) {
    speed = speed || false;
    this.to(this.relative(this.current()) - 1, speed);
  };
  /**
	 * Handles the end of an animation.
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
  Owl.prototype.onTransitionEnd = function (event) {
    // if css2 animation then event object is undefined
    if (event !== undefined) {
      event.stopPropagation();
      // Catch only owl-stage transitionEnd event
      if ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)) {
        return false;
      }
    }
    this.leave('animating');
    this.trigger('translated');
  };
  /**
	 * Gets viewport width.
	 * @protected
	 * @return {Number} - The width in pixel.
	 */
  Owl.prototype.viewport = function () {
    var width;
    if (this.options.responsiveBaseElement !== window) {
      width = $(this.options.responsiveBaseElement).width();
    } else if (window.innerWidth) {
      width = window.innerWidth;
    } else if (document.documentElement && document.documentElement.clientWidth) {
      width = document.documentElement.clientWidth;
    } else {
      throw 'Can not detect viewport width.';
    }
    return width;
  };
  /**
	 * Replaces the current content.
	 * @public
	 * @param {HTMLElement|jQuery|String} content - The new content.
	 */
  Owl.prototype.replace = function (content) {
    this.$stage.empty();
    this._items = [];
    if (content) {
      content = content instanceof jQuery ? content : $(content);
    }
    if (this.settings.nestedItemSelector) {
      content = content.find('.' + this.settings.nestedItemSelector);
    }
    content.filter(function () {
      return this.nodeType === 1;
    }).each($.proxy(function (index, item) {
      item = this.prepare(item);
      this.$stage.append(item);
      this._items.push(item);
      this._mergers.push(item.find('[data-merge]').andSelf('[data-merge]').attr('data-merge') * 1 || 1);
    }, this));
    this.reset($.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0);
    this.invalidate('items');
  };
  /**
	 * Adds an item.
	 * @todo Use `item` instead of `content` for the event arguments.
	 * @public
	 * @param {HTMLElement|jQuery|String} content - The item content to add.
	 * @param {Number} [position] - The relative position at which to insert the item otherwise the item will be added to the end.
	 */
  Owl.prototype.add = function (content, position) {
    var current = this.relative(this._current);
    position = position === undefined ? this._items.length : this.normalize(position, true);
    content = content instanceof jQuery ? content : $(content);
    this.trigger('add', {
      content: content,
      position: position
    });
    content = this.prepare(content);
    if (this._items.length === 0 || position === this._items.length) {
      this._items.length === 0 && this.$stage.append(content);
      this._items.length !== 0 && this._items[position - 1].after(content);
      this._items.push(content);
      this._mergers.push(content.find('[data-merge]').andSelf('[data-merge]').attr('data-merge') * 1 || 1);
    } else {
      this._items[position].before(content);
      this._items.splice(position, 0, content);
      this._mergers.splice(position, 0, content.find('[data-merge]').andSelf('[data-merge]').attr('data-merge') * 1 || 1);
    }
    this._items[current] && this.reset(this._items[current].index());
    this.invalidate('items');
    this.trigger('added', {
      content: content,
      position: position
    });
  };
  /**
	 * Removes an item by its position.
	 * @todo Use `item` instead of `content` for the event arguments.
	 * @public
	 * @param {Number} position - The relative position of the item to remove.
	 */
  Owl.prototype.remove = function (position) {
    position = this.normalize(position, true);
    if (position === undefined) {
      return;
    }
    this.trigger('remove', {
      content: this._items[position],
      position: position
    });
    this._items[position].remove();
    this._items.splice(position, 1);
    this._mergers.splice(position, 1);
    this.invalidate('items');
    this.trigger('removed', {
      content: null,
      position: position
    });
  };
  /**
	 * Preloads images with auto width.
	 * @todo Replace by a more generic approach
	 * @protected
	 */
  Owl.prototype.preloadAutoWidthImages = function (images) {
    images.each($.proxy(function (i, element) {
      this.enter('pre-loading');
      element = $(element);
      $(new Image()).one('load', $.proxy(function (e) {
        element.attr('src', e.target.src);
        element.css('opacity', 1);
        this.leave('pre-loading');
        !this.is('pre-loading') && !this.is('initializing') && this.refresh();
      }, this)).attr('src', element.attr('src') || element.attr('data-src') || element.attr('data-src-retina'));
    }, this));
  };
  /**
	 * Destroys the carousel.
	 * @public
	 */
  Owl.prototype.destroy = function () {
    this.$element.off('.owl.core');
    this.$stage.off('.owl.core');
    $(document).off('.owl.core');
    if (this.settings.responsive !== false) {
      window.clearTimeout(this.resizeTimer);
      this.off(window, 'resize', this._handlers.onThrottledResize);
    }
    for (var i in this._plugins) {
      this._plugins[i].destroy();
    }
    this.$stage.children('.cloned').remove();
    this.$stage.unwrap();
    this.$stage.children().contents().unwrap();
    this.$stage.children().unwrap();
    this.$element.removeClass(this.options.refreshClass).removeClass(this.options.loadingClass).removeClass(this.options.loadedClass).removeClass(this.options.rtlClass).removeClass(this.options.dragClass).removeClass(this.options.grabClass).attr('class', this.$element.attr('class').replace(new RegExp(this.options.responsiveClass + '-\\S+\\s', 'g'), '')).removeData('owl.carousel');
  };
  /**
	 * Operators to calculate right-to-left and left-to-right.
	 * @protected
	 * @param {Number} [a] - The left side operand.
	 * @param {String} [o] - The operator.
	 * @param {Number} [b] - The right side operand.
	 */
  Owl.prototype.op = function (a, o, b) {
    var rtl = this.settings.rtl;
    switch (o) {
    case '<':
      return rtl ? a > b : a < b;
    case '>':
      return rtl ? a < b : a > b;
    case '>=':
      return rtl ? a <= b : a >= b;
    case '<=':
      return rtl ? a >= b : a <= b;
    default:
      break;
    }
  };
  /**
	 * Attaches to an internal event.
	 * @protected
	 * @param {HTMLElement} element - The event source.
	 * @param {String} event - The event name.
	 * @param {Function} listener - The event handler to attach.
	 * @param {Boolean} capture - Wether the event should be handled at the capturing phase or not.
	 */
  Owl.prototype.on = function (element, event, listener, capture) {
    if (element.addEventListener) {
      element.addEventListener(event, listener, capture);
    } else if (element.attachEvent) {
      element.attachEvent('on' + event, listener);
    }
  };
  /**
	 * Detaches from an internal event.
	 * @protected
	 * @param {HTMLElement} element - The event source.
	 * @param {String} event - The event name.
	 * @param {Function} listener - The attached event handler to detach.
	 * @param {Boolean} capture - Wether the attached event handler was registered as a capturing listener or not.
	 */
  Owl.prototype.off = function (element, event, listener, capture) {
    if (element.removeEventListener) {
      element.removeEventListener(event, listener, capture);
    } else if (element.detachEvent) {
      element.detachEvent('on' + event, listener);
    }
  };
  /**
	 * Triggers a public event.
	 * @todo Remove `status`, `relatedTarget` should be used instead.
	 * @protected
	 * @param {String} name - The event name.
	 * @param {*} [data=null] - The event data.
	 * @param {String} [namespace=carousel] - The event namespace.
	 * @param {String} [state] - The state which is associated with the event.
	 * @param {Boolean} [enter=false] - Indicates if the call enters the specified state or not.
	 * @returns {Event} - The event arguments.
	 */
  Owl.prototype.trigger = function (name, data, namespace, state, enter) {
    var status = {
        item: {
          count: this._items.length,
          index: this.current()
        }
      }, handler = $.camelCase($.grep([
        'on',
        name,
        namespace
      ], function (v) {
        return v;
      }).join('-').toLowerCase()), event = $.Event([
        name,
        'owl',
        namespace || 'carousel'
      ].join('.').toLowerCase(), $.extend({ relatedTarget: this }, status, data));
    if (!this._supress[name]) {
      $.each(this._plugins, function (name, plugin) {
        if (plugin.onTrigger) {
          plugin.onTrigger(event);
        }
      });
      this.register({
        type: Owl.Type.Event,
        name: name
      });
      this.$element.trigger(event);
      if (this.settings && typeof this.settings[handler] === 'function') {
        this.settings[handler].call(this, event);
      }
    }
    return event;
  };
  /**
	 * Enters a state.
	 * @param name - The state name.
	 */
  Owl.prototype.enter = function (name) {
    $.each([name].concat(this._states.tags[name] || []), $.proxy(function (i, name) {
      if (this._states.current[name] === undefined) {
        this._states.current[name] = 0;
      }
      this._states.current[name]++;
    }, this));
  };
  /**
	 * Leaves a state.
	 * @param name - The state name.
	 */
  Owl.prototype.leave = function (name) {
    $.each([name].concat(this._states.tags[name] || []), $.proxy(function (i, name) {
      this._states.current[name]--;
    }, this));
  };
  /**
	 * Registers an event or state.
	 * @public
	 * @param {Object} object - The event or state to register.
	 */
  Owl.prototype.register = function (object) {
    if (object.type === Owl.Type.Event) {
      if (!$.event.special[object.name]) {
        $.event.special[object.name] = {};
      }
      if (!$.event.special[object.name].owl) {
        var _default = $.event.special[object.name]._default;
        $.event.special[object.name]._default = function (e) {
          if (_default && _default.apply && (!e.namespace || e.namespace.indexOf('owl') === -1)) {
            return _default.apply(this, arguments);
          }
          return e.namespace && e.namespace.indexOf('owl') > -1;
        };
        $.event.special[object.name].owl = true;
      }
    } else if (object.type === Owl.Type.State) {
      if (!this._states.tags[object.name]) {
        this._states.tags[object.name] = object.tags;
      } else {
        this._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);
      }
      this._states.tags[object.name] = $.grep(this._states.tags[object.name], $.proxy(function (tag, i) {
        return $.inArray(tag, this._states.tags[object.name]) === i;
      }, this));
    }
  };
  /**
	 * Suppresses events.
	 * @protected
	 * @param {Array.<String>} events - The events to suppress.
	 */
  Owl.prototype.suppress = function (events) {
    $.each(events, $.proxy(function (index, event) {
      this._supress[event] = true;
    }, this));
  };
  /**
	 * Releases suppressed events.
	 * @protected
	 * @param {Array.<String>} events - The events to release.
	 */
  Owl.prototype.release = function (events) {
    $.each(events, $.proxy(function (index, event) {
      delete this._supress[event];
    }, this));
  };
  /**
	 * Gets unified pointer coordinates from event.
	 * @todo #261
	 * @protected
	 * @param {Event} - The `mousedown` or `touchstart` event.
	 * @returns {Object} - Contains `x` and `y` coordinates of current pointer position.
	 */
  Owl.prototype.pointer = function (event) {
    var result = {
        x: null,
        y: null
      };
    event = event.originalEvent || event || window.event;
    event = event.touches && event.touches.length ? event.touches[0] : event.changedTouches && event.changedTouches.length ? event.changedTouches[0] : event;
    if (event.pageX) {
      result.x = event.pageX;
      result.y = event.pageY;
    } else {
      result.x = event.clientX;
      result.y = event.clientY;
    }
    return result;
  };
  /**
	 * Gets the difference of two vectors.
	 * @todo #261
	 * @protected
	 * @param {Object} - The first vector.
	 * @param {Object} - The second vector.
	 * @returns {Object} - The difference.
	 */
  Owl.prototype.difference = function (first, second) {
    return {
      x: first.x - second.x,
      y: first.y - second.y
    };
  };
  /**
	 * The jQuery Plugin for the Owl Carousel
	 * @todo Navigation plugin `next` and `prev`
	 * @public
	 */
  $.fn.owlCarousel = function (option) {
    var args = Array.prototype.slice.call(arguments, 1);
    return this.each(function () {
      var $this = $(this), data = $this.data('owl.carousel');
      if (!data) {
        data = new Owl(this, typeof option == 'object' && option);
        $this.data('owl.carousel', data);
        $.each([
          'next',
          'prev',
          'to',
          'destroy',
          'refresh',
          'replace',
          'add',
          'remove'
        ], function (i, event) {
          data.register({
            type: Owl.Type.Event,
            name: event
          });
          data.$element.on(event + '.owl.carousel.core', $.proxy(function (e) {
            if (e.namespace && e.relatedTarget !== this) {
              this.suppress([event]);
              data[event].apply(this, [].slice.call(arguments, 1));
              this.release([event]);
            }
          }, data));
        });
      }
      if (typeof option == 'string' && option.charAt(0) !== '_') {
        data[option].apply(data, args);
      }
    });
  };
  /**
	 * The constructor for the jQuery Plugin
	 * @public
	 */
  $.fn.owlCarousel.Constructor = Owl;
}(window.Zepto || window.jQuery, window, document));
/**
 * AutoRefresh Plugin
 * @version 2.0.0
 * @author Artus Kolanowski
 * @license The MIT License (MIT)
 */
;
(function ($, window, document, undefined) {
  /**
	 * Creates the auto refresh plugin.
	 * @class The Auto Refresh Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
  var AutoRefresh = function (carousel) {
    /**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
    this._core = carousel;
    /**
		 * Refresh interval.
		 * @protected
		 * @type {number}
		 */
    this._interval = null;
    /**
		 * Whether the element is currently visible or not.
		 * @protected
		 * @type {Boolean}
		 */
    this._visible = null;
    /**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
    this._handlers = {
      'initialized.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this._core.settings.autoRefresh) {
          this.watch();
        }
      }, this)
    };
    // set default options
    this._core.options = $.extend({}, AutoRefresh.Defaults, this._core.options);
    // register event handlers
    this._core.$element.on(this._handlers);
  };
  /**
	 * Default options.
	 * @public
	 */
  AutoRefresh.Defaults = {
    autoRefresh: true,
    autoRefreshInterval: 500
  };
  /**
	 * Watches the element.
	 */
  AutoRefresh.prototype.watch = function () {
    if (this._interval) {
      return;
    }
    this._visible = this._core.$element.is(':visible');
    this._interval = window.setInterval($.proxy(this.refresh, this), this._core.settings.autoRefreshInterval);
  };
  /**
	 * Refreshes the element.
	 */
  AutoRefresh.prototype.refresh = function () {
    if (this._core.$element.is(':visible') === this._visible) {
      return;
    }
    this._visible = !this._visible;
    this._core.$element.toggleClass('owl-hidden', !this._visible);
    this._visible && (this._core.invalidate('width') && this._core.refresh());
  };
  /**
	 * Destroys the plugin.
	 */
  AutoRefresh.prototype.destroy = function () {
    var handler, property;
    window.clearInterval(this._interval);
    for (handler in this._handlers) {
      this._core.$element.off(handler, this._handlers[handler]);
    }
    for (property in Object.getOwnPropertyNames(this)) {
      typeof this[property] != 'function' && (this[property] = null);
    }
  };
  $.fn.owlCarousel.Constructor.Plugins.AutoRefresh = AutoRefresh;
}(window.Zepto || window.jQuery, window, document));
/**
 * Lazy Plugin
 * @version 2.0.0
 * @author Bartosz Wojciechowski
 * @license The MIT License (MIT)
 */
;
(function ($, window, document, undefined) {
  /**
	 * Creates the lazy plugin.
	 * @class The Lazy Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
  var Lazy = function (carousel) {
    /**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
    this._core = carousel;
    /**
		 * Already loaded items.
		 * @protected
		 * @type {Array.<jQuery>}
		 */
    this._loaded = [];
    /**
		 * Event handlers.
		 * @protected
		 * @type {Object}
		 */
    this._handlers = {
      'initialized.owl.carousel change.owl.carousel': $.proxy(function (e) {
        if (!e.namespace) {
          return;
        }
        if (!this._core.settings || !this._core.settings.lazyLoad) {
          return;
        }
        if (e.property && e.property.name == 'position' || e.type == 'initialized') {
          var settings = this._core.settings, n = settings.center && Math.ceil(settings.items / 2) || settings.items, i = settings.center && n * -1 || 0, position = (e.property && e.property.value || this._core.current()) + i, clones = this._core.clones().length, load = $.proxy(function (i, v) {
              this.load(v);
            }, this);
          while (i++ < n) {
            this.load(clones / 2 + this._core.relative(position));
            clones && $.each(this._core.clones(this._core.relative(position)), load);
            position++;
          }
        }
      }, this)
    };
    // set the default options
    this._core.options = $.extend({}, Lazy.Defaults, this._core.options);
    // register event handler
    this._core.$element.on(this._handlers);
  };
  /**
	 * Default options.
	 * @public
	 */
  Lazy.Defaults = { lazyLoad: false };
  /**
	 * Loads all resources of an item at the specified position.
	 * @param {Number} position - The absolute position of the item.
	 * @protected
	 */
  Lazy.prototype.load = function (position) {
    var $item = this._core.$stage.children().eq(position), $elements = $item && $item.find('.owl-lazy');
    if (!$elements || $.inArray($item.get(0), this._loaded) > -1) {
      return;
    }
    $elements.each($.proxy(function (index, element) {
      var $element = $(element), image, url = window.devicePixelRatio > 1 && $element.attr('data-src-retina') || $element.attr('data-src');
      this._core.trigger('load', {
        element: $element,
        url: url
      }, 'lazy');
      if ($element.is('img')) {
        $element.one('load.owl.lazy', $.proxy(function () {
          $element.css('opacity', 1);
          this._core.trigger('loaded', {
            element: $element,
            url: url
          }, 'lazy');
        }, this)).attr('src', url);
      } else {
        image = new Image();
        image.onload = $.proxy(function () {
          $element.css({
            'background-image': 'url(' + url + ')',
            'opacity': '1'
          });
          this._core.trigger('loaded', {
            element: $element,
            url: url
          }, 'lazy');
        }, this);
        image.src = url;
      }
    }, this));
    this._loaded.push($item.get(0));
  };
  /**
	 * Destroys the plugin.
	 * @public
	 */
  Lazy.prototype.destroy = function () {
    var handler, property;
    for (handler in this.handlers) {
      this._core.$element.off(handler, this.handlers[handler]);
    }
    for (property in Object.getOwnPropertyNames(this)) {
      typeof this[property] != 'function' && (this[property] = null);
    }
  };
  $.fn.owlCarousel.Constructor.Plugins.Lazy = Lazy;
}(window.Zepto || window.jQuery, window, document));
/**
 * AutoHeight Plugin
 * @version 2.0.0
 * @author Bartosz Wojciechowski
 * @license The MIT License (MIT)
 */
;
(function ($, window, document, undefined) {
  /**
	 * Creates the auto height plugin.
	 * @class The Auto Height Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
  var AutoHeight = function (carousel) {
    /**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
    this._core = carousel;
    /**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
    this._handlers = {
      'initialized.owl.carousel refreshed.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this._core.settings.autoHeight) {
          this.update();
        }
      }, this),
      'changed.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this._core.settings.autoHeight && e.property.name == 'position') {
          this.update();
        }
      }, this),
      'loaded.owl.lazy': $.proxy(function (e) {
        if (e.namespace && this._core.settings.autoHeight && e.element.closest('.' + this._core.settings.itemClass).index() === this._core.current()) {
          this.update();
        }
      }, this)
    };
    // set default options
    this._core.options = $.extend({}, AutoHeight.Defaults, this._core.options);
    // register event handlers
    this._core.$element.on(this._handlers);
  };
  /**
	 * Default options.
	 * @public
	 */
  AutoHeight.Defaults = {
    autoHeight: false,
    autoHeightClass: 'owl-height'
  };
  /**
	 * Updates the view.
	 */
  AutoHeight.prototype.update = function () {
    var start = this._core._current, end = start + this._core.settings.items, visible = this._core.$stage.children().toArray().slice(start, end);
    heights = [], maxheight = 0;
    $.each(visible, function (index, item) {
      heights.push($(item).height());
    });
    maxheight = Math.max.apply(null, heights);
    this._core.$stage.parent().height(maxheight).addClass(this._core.settings.autoHeightClass);
  };
  AutoHeight.prototype.destroy = function () {
    var handler, property;
    for (handler in this._handlers) {
      this._core.$element.off(handler, this._handlers[handler]);
    }
    for (property in Object.getOwnPropertyNames(this)) {
      typeof this[property] != 'function' && (this[property] = null);
    }
  };
  $.fn.owlCarousel.Constructor.Plugins.AutoHeight = AutoHeight;
}(window.Zepto || window.jQuery, window, document));
/**
 * Video Plugin
 * @version 2.0.0
 * @author Bartosz Wojciechowski
 * @license The MIT License (MIT)
 */
;
(function ($, window, document, undefined) {
  /**
	 * Creates the video plugin.
	 * @class The Video Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
  var Video = function (carousel) {
    /**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
    this._core = carousel;
    /**
		 * Cache all video URLs.
		 * @protected
		 * @type {Object}
		 */
    this._videos = {};
    /**
		 * Current playing item.
		 * @protected
		 * @type {jQuery}
		 */
    this._playing = null;
    /**
		 * All event handlers.
		 * @todo The cloned content removale is too late
		 * @protected
		 * @type {Object}
		 */
    this._handlers = {
      'initialized.owl.carousel': $.proxy(function (e) {
        if (e.namespace) {
          this._core.register({
            type: 'state',
            name: 'playing',
            tags: ['interacting']
          });
        }
      }, this),
      'resize.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this._core.settings.video && this.isInFullScreen()) {
          e.preventDefault();
        }
      }, this),
      'refreshed.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this._core.is('resizing')) {
          this._core.$stage.find('.cloned .owl-video-frame').remove();
        }
      }, this),
      'changed.owl.carousel': $.proxy(function (e) {
        if (e.namespace && e.property.name === 'position' && this._playing) {
          this.stop();
        }
      }, this),
      'prepared.owl.carousel': $.proxy(function (e) {
        if (!e.namespace) {
          return;
        }
        var $element = $(e.content).find('.owl-video');
        if ($element.length) {
          $element.css('display', 'none');
          this.fetch($element, $(e.content));
        }
      }, this)
    };
    // set default options
    this._core.options = $.extend({}, Video.Defaults, this._core.options);
    // register event handlers
    this._core.$element.on(this._handlers);
    this._core.$element.on('click.owl.video', '.owl-video-play-icon', $.proxy(function (e) {
      this.play(e);
    }, this));
  };
  /**
	 * Default options.
	 * @public
	 */
  Video.Defaults = {
    video: false,
    videoHeight: false,
    videoWidth: false
  };
  /**
	 * Gets the video ID and the type (YouTube/Vimeo only).
	 * @protected
	 * @param {jQuery} target - The target containing the video data.
	 * @param {jQuery} item - The item containing the video.
	 */
  Video.prototype.fetch = function (target, item) {
    var type = target.attr('data-vimeo-id') ? 'vimeo' : 'youtube', id = target.attr('data-vimeo-id') || target.attr('data-youtube-id'), width = target.attr('data-width') || this._core.settings.videoWidth, height = target.attr('data-height') || this._core.settings.videoHeight, url = target.attr('href');
    if (url) {
      id = url.match(/(http:|https:|)\/\/(player.|www.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com))\/(video\/|embed\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/);
      if (id[3].indexOf('youtu') > -1) {
        type = 'youtube';
      } else if (id[3].indexOf('vimeo') > -1) {
        type = 'vimeo';
      } else {
        throw new Error('Video URL not supported.');
      }
      id = id[6];
    } else {
      throw new Error('Missing video URL.');
    }
    this._videos[url] = {
      type: type,
      id: id,
      width: width,
      height: height
    };
    item.attr('data-video', url);
    this.thumbnail(target, this._videos[url]);
  };
  /**
	 * Creates video thumbnail.
	 * @protected
	 * @param {jQuery} target - The target containing the video data.
	 * @param {Object} info - The video info object.
	 * @see `fetch`
	 */
  Video.prototype.thumbnail = function (target, video) {
    var tnLink, icon, path, dimensions = video.width && video.height ? 'style="width:' + video.width + 'px;height:' + video.height + 'px;"' : '', customTn = target.find('img'), srcType = 'src', lazyClass = '', settings = this._core.settings, create = function (path) {
        icon = '<div class="owl-video-play-icon"></div>';
        if (settings.lazyLoad) {
          tnLink = '<div class="owl-video-tn ' + lazyClass + '" ' + srcType + '="' + path + '"></div>';
        } else {
          tnLink = '<div class="owl-video-tn" style="opacity:1;background-image:url(' + path + ')"></div>';
        }
        target.after(tnLink);
        target.after(icon);
      };
    // wrap video content into owl-video-wrapper div
    target.wrap('<div class="owl-video-wrapper"' + dimensions + '></div>');
    if (this._core.settings.lazyLoad) {
      srcType = 'data-src';
      lazyClass = 'owl-lazy';
    }
    // custom thumbnail
    if (customTn.length) {
      create(customTn.attr(srcType));
      customTn.remove();
      return false;
    }
    if (video.type === 'youtube') {
      path = 'http://img.youtube.com/vi/' + video.id + '/hqdefault.jpg';
      create(path);
    } else if (video.type === 'vimeo') {
      $.ajax({
        type: 'GET',
        url: 'http://vimeo.com/api/v2/video/' + video.id + '.json',
        jsonp: 'callback',
        dataType: 'jsonp',
        success: function (data) {
          path = data[0].thumbnail_large;
          create(path);
        }
      });
    }
  };
  /**
	 * Stops the current video.
	 * @public
	 */
  Video.prototype.stop = function () {
    this._core.trigger('stop', null, 'video');
    this._playing.find('.owl-video-frame').remove();
    this._playing.removeClass('owl-video-playing');
    this._playing = null;
    this._core.leave('playing');
    this._core.trigger('stopped', null, 'video');
  };
  /**
	 * Starts the current video.
	 * @public
	 * @param {Event} event - The event arguments.
	 */
  Video.prototype.play = function (event) {
    var target = $(event.target), item = target.closest('.' + this._core.settings.itemClass), video = this._videos[item.attr('data-video')], width = video.width || '100%', height = video.height || this._core.$stage.height(), html;
    if (this._playing) {
      return;
    }
    this._core.enter('playing');
    this._core.trigger('play', null, 'video');
    item = this._core.items(this._core.relative(item.index()));
    this._core.reset(item.index());
    if (video.type === 'youtube') {
      html = '<iframe width="' + width + '" height="' + height + '" src="http://www.youtube.com/embed/' + video.id + '?autoplay=1&v=' + video.id + '" frameborder="0" allowfullscreen></iframe>';
    } else if (video.type === 'vimeo') {
      html = '<iframe src="http://player.vimeo.com/video/' + video.id + '?autoplay=1" width="' + width + '" height="' + height + '" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>';
    }
    $('<div class="owl-video-frame">' + html + '</div>').insertAfter(item.find('.owl-video'));
    this._playing = item.addClass('owl-video-playing');
  };
  /**
	 * Checks whether an video is currently in full screen mode or not.
	 * @todo Bad style because looks like a readonly method but changes members.
	 * @protected
	 * @returns {Boolean}
	 */
  Video.prototype.isInFullScreen = function () {
    var element = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;
    return element && $(element).parent().hasClass('owl-video-frame');
  };
  /**
	 * Destroys the plugin.
	 */
  Video.prototype.destroy = function () {
    var handler, property;
    this._core.$element.off('click.owl.video');
    for (handler in this._handlers) {
      this._core.$element.off(handler, this._handlers[handler]);
    }
    for (property in Object.getOwnPropertyNames(this)) {
      typeof this[property] != 'function' && (this[property] = null);
    }
  };
  $.fn.owlCarousel.Constructor.Plugins.Video = Video;
}(window.Zepto || window.jQuery, window, document));
/**
 * Animate Plugin
 * @version 2.0.0
 * @author Bartosz Wojciechowski
 * @license The MIT License (MIT)
 */
;
(function ($, window, document, undefined) {
  /**
	 * Creates the animate plugin.
	 * @class The Navigation Plugin
	 * @param {Owl} scope - The Owl Carousel
	 */
  var Animate = function (scope) {
    this.core = scope;
    this.core.options = $.extend({}, Animate.Defaults, this.core.options);
    this.swapping = true;
    this.previous = undefined;
    this.next = undefined;
    this.handlers = {
      'change.owl.carousel': $.proxy(function (e) {
        if (e.namespace && e.property.name == 'position') {
          this.previous = this.core.current();
          this.next = e.property.value;
        }
      }, this),
      'drag.owl.carousel dragged.owl.carousel translated.owl.carousel': $.proxy(function (e) {
        if (e.namespace) {
          this.swapping = e.type == 'translated';
        }
      }, this),
      'translate.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this.swapping && (this.core.options.animateOut || this.core.options.animateIn)) {
          this.swap();
        }
      }, this)
    };
    this.core.$element.on(this.handlers);
  };
  /**
	 * Default options.
	 * @public
	 */
  Animate.Defaults = {
    animateOut: false,
    animateIn: false
  };
  /**
	 * Toggles the animation classes whenever an translations starts.
	 * @protected
	 * @returns {Boolean|undefined}
	 */
  Animate.prototype.swap = function () {
    if (this.core.settings.items !== 1) {
      return;
    }
    if (!$.support.animation || !$.support.transition) {
      return;
    }
    this.core.speed(0);
    var left, clear = $.proxy(this.clear, this), previous = this.core.$stage.children().eq(this.previous), next = this.core.$stage.children().eq(this.next), incoming = this.core.settings.animateIn, outgoing = this.core.settings.animateOut;
    if (this.core.current() === this.previous) {
      return;
    }
    if (outgoing) {
      left = this.core.coordinates(this.previous) - this.core.coordinates(this.next);
      previous.one($.support.animation.end, clear).css({ 'left': left + 'px' }).addClass('animated owl-animated-out').addClass(outgoing);
    }
    if (incoming) {
      next.one($.support.animation.end, clear).addClass('animated owl-animated-in').addClass(incoming);
    }
  };
  Animate.prototype.clear = function (e) {
    $(e.target).css({ 'left': '' }).removeClass('animated owl-animated-out owl-animated-in').removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut);
    this.core.onTransitionEnd();
  };
  /**
	 * Destroys the plugin.
	 * @public
	 */
  Animate.prototype.destroy = function () {
    var handler, property;
    for (handler in this.handlers) {
      this.core.$element.off(handler, this.handlers[handler]);
    }
    for (property in Object.getOwnPropertyNames(this)) {
      typeof this[property] != 'function' && (this[property] = null);
    }
  };
  $.fn.owlCarousel.Constructor.Plugins.Animate = Animate;
}(window.Zepto || window.jQuery, window, document));
/**
 * Autoplay Plugin
 * @version 2.0.0
 * @author Bartosz Wojciechowski
 * @author Artus Kolanowski
 * @license The MIT License (MIT)
 */
;
(function ($, window, document, undefined) {
  /**
	 * Creates the autoplay plugin.
	 * @class The Autoplay Plugin
	 * @param {Owl} scope - The Owl Carousel
	 */
  var Autoplay = function (carousel) {
    /**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
    this._core = carousel;
    /**
		 * The autoplay interval.
		 * @type {Number}
		 */
    this._interval = null;
    /**
		 * Indicates whenever the autoplay is paused.
		 * @type {Boolean}
		 */
    this._paused = false;
    /**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
    this._handlers = {
      'changed.owl.carousel': $.proxy(function (e) {
        if (e.namespace && e.property.name === 'settings') {
          if (this._core.settings.autoplay) {
            this.play();
          } else {
            this.stop();
          }
        }
      }, this),
      'initialized.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this._core.settings.autoplay) {
          this.play();
        }
      }, this),
      'play.owl.autoplay': $.proxy(function (e, t, s) {
        if (e.namespace) {
          this.play(t, s);
        }
      }, this),
      'stop.owl.autoplay': $.proxy(function (e) {
        if (e.namespace) {
          this.stop();
        }
      }, this),
      'mouseover.owl.autoplay': $.proxy(function () {
        if (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {
          this.pause();
        }
      }, this),
      'mouseleave.owl.autoplay': $.proxy(function () {
        if (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {
          this.play();
        }
      }, this)
    };
    // register event handlers
    this._core.$element.on(this._handlers);
    // set default options
    this._core.options = $.extend({}, Autoplay.Defaults, this._core.options);
  };
  /**
	 * Default options.
	 * @public
	 */
  Autoplay.Defaults = {
    autoplay: false,
    autoplayTimeout: 5000,
    autoplayHoverPause: false,
    autoplaySpeed: false
  };
  /**
	 * Starts the autoplay.
	 * @public
	 * @param {Number} [timeout] - The interval before the next animation starts.
	 * @param {Number} [speed] - The animation speed for the animations.
	 */
  Autoplay.prototype.play = function (timeout, speed) {
    this._paused = false;
    if (this._core.is('rotating')) {
      return;
    }
    this._core.enter('rotating');
    this._interval = window.setInterval($.proxy(function () {
      if (this._paused || this._core.is('busy') || this._core.is('interacting') || document.hidden) {
        return;
      }
      this._core.next(speed || this._core.settings.autoplaySpeed);
    }, this), timeout || this._core.settings.autoplayTimeout);
  };
  /**
	 * Stops the autoplay.
	 * @public
	 */
  Autoplay.prototype.stop = function () {
    if (!this._core.is('rotating')) {
      return;
    }
    window.clearInterval(this._interval);
    this._core.leave('rotating');
  };
  /**
	 * Stops the autoplay.
	 * @public
	 */
  Autoplay.prototype.pause = function () {
    if (!this._core.is('rotating')) {
      return;
    }
    this._paused = true;
  };
  /**
	 * Destroys the plugin.
	 */
  Autoplay.prototype.destroy = function () {
    var handler, property;
    this.stop();
    for (handler in this._handlers) {
      this._core.$element.off(handler, this._handlers[handler]);
    }
    for (property in Object.getOwnPropertyNames(this)) {
      typeof this[property] != 'function' && (this[property] = null);
    }
  };
  $.fn.owlCarousel.Constructor.Plugins.autoplay = Autoplay;
}(window.Zepto || window.jQuery, window, document));
/**
 * Navigation Plugin
 * @version 2.0.0
 * @author Artus Kolanowski
 * @license The MIT License (MIT)
 */
;
(function ($, window, document, undefined) {
  'use strict';
  /**
	 * Creates the navigation plugin.
	 * @class The Navigation Plugin
	 * @param {Owl} carousel - The Owl Carousel.
	 */
  var Navigation = function (carousel) {
    /**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
    this._core = carousel;
    /**
		 * Indicates whether the plugin is initialized or not.
		 * @protected
		 * @type {Boolean}
		 */
    this._initialized = false;
    /**
		 * The current paging indexes.
		 * @protected
		 * @type {Array}
		 */
    this._pages = [];
    /**
		 * All DOM elements of the user interface.
		 * @protected
		 * @type {Object}
		 */
    this._controls = {};
    /**
		 * Markup for an indicator.
		 * @protected
		 * @type {Array.<String>}
		 */
    this._templates = [];
    /**
		 * The carousel element.
		 * @type {jQuery}
		 */
    this.$element = this._core.$element;
    /**
		 * Overridden methods of the carousel.
		 * @protected
		 * @type {Object}
		 */
    this._overrides = {
      next: this._core.next,
      prev: this._core.prev,
      to: this._core.to
    };
    /**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
    this._handlers = {
      'prepared.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this._core.settings.dotsData) {
          this._templates.push('<div class="' + this._core.settings.dotClass + '">' + $(e.content).find('[data-dot]').andSelf('[data-dot]').attr('data-dot') + '</div>');
        }
      }, this),
      'added.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this._core.settings.dotsData) {
          this._templates.splice(e.position, 0, this._templates.pop());
        }
      }, this),
      'remove.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this._core.settings.dotsData) {
          this._templates.splice(e.position, 1);
        }
      }, this),
      'changed.owl.carousel': $.proxy(function (e) {
        if (e.namespace && e.property.name == 'position') {
          this.draw();
        }
      }, this),
      'initialized.owl.carousel': $.proxy(function (e) {
        if (e.namespace && !this._initialized) {
          this._core.trigger('initialize', null, 'navigation');
          this.initialize();
          this.update();
          this.draw();
          this._initialized = true;
          this._core.trigger('initialized', null, 'navigation');
        }
      }, this),
      'refreshed.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this._initialized) {
          this._core.trigger('refresh', null, 'navigation');
          this.update();
          this.draw();
          this._core.trigger('refreshed', null, 'navigation');
        }
      }, this)
    };
    // set default options
    this._core.options = $.extend({}, Navigation.Defaults, this._core.options);
    // register event handlers
    this.$element.on(this._handlers);
  };
  /**
	 * Default options.
	 * @public
	 * @todo Rename `slideBy` to `navBy`
	 */
  Navigation.Defaults = {
    nav: false,
    navText: [
      'prev',
      'next'
    ],
    navSpeed: false,
    navElement: 'div',
    navContainer: false,
    navContainerClass: 'owl-nav',
    navClass: [
      'owl-prev',
      'owl-next'
    ],
    slideBy: 1,
    dotClass: 'owl-dot',
    dotsClass: 'owl-dots',
    dots: true,
    dotsEach: false,
    dotsData: false,
    dotsSpeed: false,
    dotsContainer: false
  };
  /**
	 * Initializes the layout of the plugin and extends the carousel.
	 * @protected
	 */
  Navigation.prototype.initialize = function () {
    var override, settings = this._core.settings;
    // create DOM structure for relative navigation
    this._controls.$relative = (settings.navContainer ? $(settings.navContainer) : $('<div>').addClass(settings.navContainerClass).appendTo(this.$element)).addClass('disabled');
    this._controls.$previous = $('<' + settings.navElement + '>').addClass(settings.navClass[0]).html(settings.navText[0]).prependTo(this._controls.$relative).on('click', $.proxy(function (e) {
      this.prev(settings.navSpeed);
    }, this));
    this._controls.$next = $('<' + settings.navElement + '>').addClass(settings.navClass[1]).html(settings.navText[1]).appendTo(this._controls.$relative).on('click', $.proxy(function (e) {
      this.next(settings.navSpeed);
    }, this));
    // create DOM structure for absolute navigation
    if (!settings.dotsData) {
      this._templates = [$('<div>').addClass(settings.dotClass).append($('<span>')).prop('outerHTML')];
    }
    this._controls.$absolute = (settings.dotsContainer ? $(settings.dotsContainer) : $('<div>').addClass(settings.dotsClass).appendTo(this.$element)).addClass('disabled');
    this._controls.$absolute.on('click', 'div', $.proxy(function (e) {
      var index = $(e.target).parent().is(this._controls.$absolute) ? $(e.target).index() : $(e.target).parent().index();
      e.preventDefault();
      this.to(index, settings.dotsSpeed);
    }, this));
    // override public methods of the carousel
    for (override in this._overrides) {
      this._core[override] = $.proxy(this[override], this);
    }
  };
  /**
	 * Destroys the plugin.
	 * @protected
	 */
  Navigation.prototype.destroy = function () {
    var handler, control, property, override;
    for (handler in this._handlers) {
      this.$element.off(handler, this._handlers[handler]);
    }
    for (control in this._controls) {
      this._controls[control].remove();
    }
    for (override in this.overides) {
      this._core[override] = this._overrides[override];
    }
    for (property in Object.getOwnPropertyNames(this)) {
      typeof this[property] != 'function' && (this[property] = null);
    }
  };
  /**
	 * Updates the internal state.
	 * @protected
	 */
  Navigation.prototype.update = function () {
    var i, j, k, lower = this._core.clones().length / 2, upper = lower + this._core.items().length, maximum = this._core.maximum(true), settings = this._core.settings, size = settings.center || settings.autoWidth || settings.dotsData ? 1 : settings.dotsEach || settings.items;
    if (settings.slideBy !== 'page') {
      settings.slideBy = Math.min(settings.slideBy, settings.items);
    }
    if (settings.dots || settings.slideBy == 'page') {
      this._pages = [];
      for (i = lower, j = 0, k = 0; i < upper; i++) {
        if (j >= size || j === 0) {
          this._pages.push({
            start: Math.min(maximum, i - lower),
            end: i - lower + size - 1
          });
          if (Math.min(maximum, i - lower) === maximum) {
            break;
          }
          j = 0, ++k;
        }
        j += this._core.mergers(this._core.relative(i));
      }
    }
  };
  /**
	 * Draws the user interface.
	 * @todo The option `dotsData` wont work.
	 * @protected
	 */
  Navigation.prototype.draw = function () {
    var difference, settings = this._core.settings, disabled = this._core.items().length <= settings.items, index = this._core.relative(this._core.current()), loop = settings.loop || settings.rewind;
    this._controls.$relative.toggleClass('disabled', !settings.nav || disabled);
    if (settings.nav) {
      this._controls.$previous.toggleClass('disabled', !loop && index <= this._core.minimum(true));
      this._controls.$next.toggleClass('disabled', !loop && index >= this._core.maximum(true));
    }
    this._controls.$absolute.toggleClass('disabled', !settings.dots || disabled);
    if (settings.dots) {
      difference = this._pages.length - this._controls.$absolute.children().length;
      if (settings.dotsData && difference !== 0) {
        this._controls.$absolute.html(this._templates.join(''));
      } else if (difference > 0) {
        this._controls.$absolute.append(new Array(difference + 1).join(this._templates[0]));
      } else if (difference < 0) {
        this._controls.$absolute.children().slice(difference).remove();
      }
      this._controls.$absolute.find('.active').removeClass('active');
      this._controls.$absolute.children().eq($.inArray(this.current(), this._pages)).addClass('active');
    }
  };
  /**
	 * Extends event data.
	 * @protected
	 * @param {Event} event - The event object which gets thrown.
	 */
  Navigation.prototype.onTrigger = function (event) {
    var settings = this._core.settings;
    event.page = {
      index: $.inArray(this.current(), this._pages),
      count: this._pages.length,
      size: settings && (settings.center || settings.autoWidth || settings.dotsData ? 1 : settings.dotsEach || settings.items)
    };
  };
  /**
	 * Gets the current page position of the carousel.
	 * @protected
	 * @returns {Number}
	 */
  Navigation.prototype.current = function () {
    var current = this._core.relative(this._core.current());
    return $.grep(this._pages, $.proxy(function (page, index) {
      return page.start <= current && page.end >= current;
    }, this)).pop();
  };
  /**
	 * Gets the current succesor/predecessor position.
	 * @protected
	 * @returns {Number}
	 */
  Navigation.prototype.getPosition = function (successor) {
    var position, length, settings = this._core.settings;
    if (settings.slideBy == 'page') {
      position = $.inArray(this.current(), this._pages);
      length = this._pages.length;
      successor ? ++position : --position;
      position = this._pages[(position % length + length) % length].start;
    } else {
      position = this._core.relative(this._core.current());
      length = this._core.items().length;
      successor ? position += settings.slideBy : position -= settings.slideBy;
    }
    return position;
  };
  /**
	 * Slides to the next item or page.
	 * @public
	 * @param {Number} [speed=false] - The time in milliseconds for the transition.
	 */
  Navigation.prototype.next = function (speed) {
    $.proxy(this._overrides.to, this._core)(this.getPosition(true), speed);
  };
  /**
	 * Slides to the previous item or page.
	 * @public
	 * @param {Number} [speed=false] - The time in milliseconds for the transition.
	 */
  Navigation.prototype.prev = function (speed) {
    $.proxy(this._overrides.to, this._core)(this.getPosition(false), speed);
  };
  /**
	 * Slides to the specified item or page.
	 * @public
	 * @param {Number} position - The position of the item or page.
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 * @param {Boolean} [standard=false] - Whether to use the standard behaviour or not.
	 */
  Navigation.prototype.to = function (position, speed, standard) {
    var length;
    if (!standard) {
      length = this._pages.length;
      $.proxy(this._overrides.to, this._core)(this._pages[(position % length + length) % length].start, speed);
    } else {
      $.proxy(this._overrides.to, this._core)(position, speed);
    }
  };
  $.fn.owlCarousel.Constructor.Plugins.Navigation = Navigation;
}(window.Zepto || window.jQuery, window, document));
/**
 * Hash Plugin
 * @version 2.0.0
 * @author Artus Kolanowski
 * @license The MIT License (MIT)
 */
;
(function ($, window, document, undefined) {
  'use strict';
  /**
	 * Creates the hash plugin.
	 * @class The Hash Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
  var Hash = function (carousel) {
    /**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
    this._core = carousel;
    /**
		 * Hash index for the items.
		 * @protected
		 * @type {Object}
		 */
    this._hashes = {};
    /**
		 * The carousel element.
		 * @type {jQuery}
		 */
    this.$element = this._core.$element;
    /**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
    this._handlers = {
      'initialized.owl.carousel': $.proxy(function (e) {
        if (e.namespace && this._core.settings.startPosition === 'URLHash') {
          $(window).trigger('hashchange.owl.navigation');
        }
      }, this),
      'prepared.owl.carousel': $.proxy(function (e) {
        if (e.namespace) {
          var hash = $(e.content).find('[data-hash]').andSelf('[data-hash]').attr('data-hash');
          if (!hash) {
            return;
          }
          this._hashes[hash] = e.content;
        }
      }, this),
      'changed.owl.carousel': $.proxy(function (e) {
        if (e.namespace && e.property.name === 'position') {
          var current = this._core.items(this._core.relative(this._core.current())), hash = $.map(this._hashes, function (item, hash) {
              return item === current ? hash : null;
            }).join();
          if (!hash || window.location.hash.slice(1) === hash) {
            return;
          }
          window.location.hash = hash;
        }
      }, this)
    };
    // set default options
    this._core.options = $.extend({}, Hash.Defaults, this._core.options);
    // register the event handlers
    this.$element.on(this._handlers);
    // register event listener for hash navigation
    $(window).on('hashchange.owl.navigation', $.proxy(function (e) {
      var hash = window.location.hash.substring(1), items = this._core.$stage.children(), position = this._hashes[hash] && items.index(this._hashes[hash]);
      if (position === undefined || position === this._core.current()) {
        return;
      }
      this._core.to(this._core.relative(position), false, true);
    }, this));
  };
  /**
	 * Default options.
	 * @public
	 */
  Hash.Defaults = { URLhashListener: false };
  /**
	 * Destroys the plugin.
	 * @public
	 */
  Hash.prototype.destroy = function () {
    var handler, property;
    $(window).off('hashchange.owl.navigation');
    for (handler in this._handlers) {
      this._core.$element.off(handler, this._handlers[handler]);
    }
    for (property in Object.getOwnPropertyNames(this)) {
      typeof this[property] != 'function' && (this[property] = null);
    }
  };
  $.fn.owlCarousel.Constructor.Plugins.Hash = Hash;
}(window.Zepto || window.jQuery, window, document));
/**
 * Support Plugin
 *
 * @version 2.0.0
 * @author Vivid Planet Software GmbH
 * @author Artus Kolanowski
 * @license The MIT License (MIT)
 */
;
(function ($, window, document, undefined) {
  var style = $('<support>').get(0).style, prefixes = 'Webkit Moz O ms'.split(' '), events = {
      transition: {
        end: {
          WebkitTransition: 'webkitTransitionEnd',
          MozTransition: 'transitionend',
          OTransition: 'oTransitionEnd',
          transition: 'transitionend'
        }
      },
      animation: {
        end: {
          WebkitAnimation: 'webkitAnimationEnd',
          MozAnimation: 'animationend',
          OAnimation: 'oAnimationEnd',
          animation: 'animationend'
        }
      }
    }, tests = {
      csstransforms: function () {
        return !!test('transform');
      },
      csstransforms3d: function () {
        return !!test('perspective');
      },
      csstransitions: function () {
        return !!test('transition');
      },
      cssanimations: function () {
        return !!test('animation');
      }
    };
  function test(property, prefixed) {
    var result = false, upper = property.charAt(0).toUpperCase() + property.slice(1);
    $.each((property + ' ' + prefixes.join(upper + ' ') + upper).split(' '), function (i, property) {
      if (style[property] !== undefined) {
        result = prefixed ? property : true;
        return false;
      }
    });
    return result;
  }
  function prefixed(property) {
    return test(property, true);
  }
  if (tests.csstransitions()) {
    /* jshint -W053 */
    $.support.transition = new String(prefixed('transition'));
    $.support.transition.end = events.transition.end[$.support.transition];
  }
  if (tests.cssanimations()) {
    /* jshint -W053 */
    $.support.animation = new String(prefixed('animation'));
    $.support.animation.end = events.animation.end[$.support.animation];
  }
  if (tests.csstransforms()) {
    /* jshint -W053 */
    $.support.transform = new String(prefixed('transform'));
    $.support.transform3d = tests.csstransforms3d();
  }
}(window.Zepto || window.jQuery, window, document));
/*! Copyright (c) 2013 Brandon Aaron (http://brandon.aaron.sh)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Version: 3.1.11
 *
 * Requires: jQuery 1.2.2+
 */
!function (a) {
  'function' == typeof define && define.amd ? define(['jquery'], a) : 'object' == typeof exports ? module.exports = a : a(jQuery);
}(function (a) {
  function b(b) {
    var g = b || window.event, h = i.call(arguments, 1), j = 0, l = 0, m = 0, n = 0, o = 0, p = 0;
    if (b = a.event.fix(g), b.type = 'mousewheel', 'detail' in g && (m = -1 * g.detail), 'wheelDelta' in g && (m = g.wheelDelta), 'wheelDeltaY' in g && (m = g.wheelDeltaY), 'wheelDeltaX' in g && (l = -1 * g.wheelDeltaX), 'axis' in g && g.axis === g.HORIZONTAL_AXIS && (l = -1 * m, m = 0), j = 0 === m ? l : m, 'deltaY' in g && (m = -1 * g.deltaY, j = m), 'deltaX' in g && (l = g.deltaX, 0 === m && (j = -1 * l)), 0 !== m || 0 !== l) {
      if (1 === g.deltaMode) {
        var q = a.data(this, 'mousewheel-line-height');
        j *= q, m *= q, l *= q;
      } else if (2 === g.deltaMode) {
        var r = a.data(this, 'mousewheel-page-height');
        j *= r, m *= r, l *= r;
      }
      if (n = Math.max(Math.abs(m), Math.abs(l)), (!f || f > n) && (f = n, d(g, n) && (f /= 40)), d(g, n) && (j /= 40, l /= 40, m /= 40), j = Math[j >= 1 ? 'floor' : 'ceil'](j / f), l = Math[l >= 1 ? 'floor' : 'ceil'](l / f), m = Math[m >= 1 ? 'floor' : 'ceil'](m / f), k.settings.normalizeOffset && this.getBoundingClientRect) {
        var s = this.getBoundingClientRect();
        o = b.clientX - s.left, p = b.clientY - s.top;
      }
      return b.deltaX = l, b.deltaY = m, b.deltaFactor = f, b.offsetX = o, b.offsetY = p, b.deltaMode = 0, h.unshift(b, j, l, m), e && clearTimeout(e), e = setTimeout(c, 200), (a.event.dispatch || a.event.handle).apply(this, h);
    }
  }
  function c() {
    f = null;
  }
  function d(a, b) {
    return k.settings.adjustOldDeltas && 'mousewheel' === a.type && b % 120 === 0;
  }
  var e, f, g = [
      'wheel',
      'mousewheel',
      'DOMMouseScroll',
      'MozMousePixelScroll'
    ], h = 'onwheel' in document || document.documentMode >= 9 ? ['wheel'] : [
      'mousewheel',
      'DomMouseScroll',
      'MozMousePixelScroll'
    ], i = Array.prototype.slice;
  if (a.event.fixHooks)
    for (var j = g.length; j;)
      a.event.fixHooks[g[--j]] = a.event.mouseHooks;
  var k = a.event.special.mousewheel = {
      version: '3.1.11',
      setup: function () {
        if (this.addEventListener)
          for (var c = h.length; c;)
            this.addEventListener(h[--c], b, !1);
        else
          this.onmousewheel = b;
        a.data(this, 'mousewheel-line-height', k.getLineHeight(this)), a.data(this, 'mousewheel-page-height', k.getPageHeight(this));
      },
      teardown: function () {
        if (this.removeEventListener)
          for (var c = h.length; c;)
            this.removeEventListener(h[--c], b, !1);
        else
          this.onmousewheel = null;
        a.removeData(this, 'mousewheel-line-height'), a.removeData(this, 'mousewheel-page-height');
      },
      getLineHeight: function (b) {
        var c = a(b)['offsetParent' in a.fn ? 'offsetParent' : 'parent']();
        return c.length || (c = a('body')), parseInt(c.css('fontSize'), 10);
      },
      getPageHeight: function (b) {
        return a(b).height();
      },
      settings: {
        adjustOldDeltas: !0,
        normalizeOffset: !0
      }
    };
  a.fn.extend({
    mousewheel: function (a) {
      return a ? this.bind('mousewheel', a) : this.trigger('mousewheel');
    },
    unmousewheel: function (a) {
      return this.unbind('mousewheel', a);
    }
  });
});
/*!
 * Jasny Bootstrap v3.1.3 (http://jasny.github.io/bootstrap)
 * Copyright 2012-2014 Arnold Daniels
 * Licensed under Apache-2.0 (https://github.com/jasny/bootstrap/blob/master/LICENSE)
 */
if (typeof jQuery === 'undefined') {
  throw new Error('Jasny Bootstrap\'s JavaScript requires jQuery');
}
/* ========================================================================
 * Bootstrap: transition.js v3.1.3
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */
+function ($) {
  'use strict';
  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================
  function transitionEnd() {
    var el = document.createElement('bootstrap');
    var transEndEventNames = {
        WebkitTransition: 'webkitTransitionEnd',
        MozTransition: 'transitionend',
        OTransition: 'oTransitionEnd otransitionend',
        transition: 'transitionend'
      };
    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] };
      }
    }
    return false;
  }
  if ($.support.transition !== undefined)
    return;
  // Prevent conflict with Twitter Bootstrap
  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false, $el = this;
    $(this).one($.support.transition.end, function () {
      called = true;
    });
    var callback = function () {
      if (!called)
        $($el).trigger($.support.transition.end);
    };
    setTimeout(callback, duration);
    return this;
  };
  $(function () {
    $.support.transition = transitionEnd();
  });
}(window.jQuery);
/* ========================================================================
 * Bootstrap: offcanvas.js v3.1.3
 * http://jasny.github.io/bootstrap/javascript/#offcanvas
 * ========================================================================
 * Copyright 2013-2014 Arnold Daniels
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */
+function ($) {
  'use strict';
  // OFFCANVAS PUBLIC CLASS DEFINITION
  // =================================
  var OffCanvas = function (element, options) {
    this.$element = $(element);
    this.options = $.extend({}, OffCanvas.DEFAULTS, options);
    this.state = null;
    this.placement = null;
    if (this.options.recalc) {
      this.calcClone();
      $(window).on('resize', $.proxy(this.recalc, this));
    }
    if (this.options.autohide)
      $(document).on('click', $.proxy(this.autohide, this));
    if (this.options.toggle)
      this.toggle();
    if (this.options.disablescrolling) {
      this.options.disableScrolling = this.options.disablescrolling;
      delete this.options.disablescrolling;
    }
  };
  OffCanvas.DEFAULTS = {
    toggle: true,
    placement: 'auto',
    autohide: true,
    recalc: true,
    disableScrolling: true
  };
  OffCanvas.prototype.offset = function () {
    switch (this.placement) {
    case 'left':
    case 'right':
      return this.$element.outerWidth();
    case 'top':
    case 'bottom':
      return this.$element.outerHeight();
    }
  };
  OffCanvas.prototype.calcPlacement = function () {
    if (this.options.placement !== 'auto') {
      this.placement = this.options.placement;
      return;
    }
    if (!this.$element.hasClass('in')) {
      this.$element.css('visiblity', 'hidden !important').addClass('in');
    }
    var horizontal = $(window).width() / this.$element.width();
    var vertical = $(window).height() / this.$element.height();
    var element = this.$element;
    function ab(a, b) {
      if (element.css(b) === 'auto')
        return a;
      if (element.css(a) === 'auto')
        return b;
      var size_a = parseInt(element.css(a), 10);
      var size_b = parseInt(element.css(b), 10);
      return size_a > size_b ? b : a;
    }
    this.placement = horizontal >= vertical ? ab('left', 'right') : ab('top', 'bottom');
    if (this.$element.css('visibility') === 'hidden !important') {
      this.$element.removeClass('in').css('visiblity', '');
    }
  };
  OffCanvas.prototype.opposite = function (placement) {
    switch (placement) {
    case 'top':
      return 'bottom';
    case 'left':
      return 'right';
    case 'bottom':
      return 'top';
    case 'right':
      return 'left';
    }
  };
  OffCanvas.prototype.getCanvasElements = function () {
    // Return a set containing the canvas plus all fixed elements
    var canvas = this.options.canvas ? $(this.options.canvas) : this.$element;
    var fixed_elements = canvas.find('*').filter(function () {
        return $(this).css('position') === 'fixed';
      }).not(this.options.exclude);
    return canvas.add(fixed_elements);
  };
  OffCanvas.prototype.slide = function (elements, offset, callback) {
    // Use jQuery animation if CSS transitions aren't supported
    if (!$.support.transition) {
      var anim = {};
      anim[this.placement] = '+=' + offset;
      return elements.animate(anim, 350, callback);
    }
    var placement = this.placement;
    var opposite = this.opposite(placement);
    elements.each(function () {
      if ($(this).css(placement) !== 'auto')
        $(this).css(placement, (parseInt($(this).css(placement), 10) || 0) + offset);
      if ($(this).css(opposite) !== 'auto')
        $(this).css(opposite, (parseInt($(this).css(opposite), 10) || 0) - offset);
    });
    this.$element.one($.support.transition.end, callback).emulateTransitionEnd(350);
  };
  OffCanvas.prototype.disableScrolling = function () {
    var bodyWidth = $('body').width();
    var prop = 'padding-' + this.opposite(this.placement);
    if ($('body').data('offcanvas-style') === undefined) {
      $('body').data('offcanvas-style', $('body').attr('style') || '');
    }
    $('body').css('overflow', 'hidden');
    if ($('body').width() > bodyWidth) {
      var padding = parseInt($('body').css(prop), 10) + $('body').width() - bodyWidth;
      setTimeout(function () {
        $('body').css(prop, padding);
      }, 1);
    }
  };
  OffCanvas.prototype.show = function () {
    if (this.state)
      return;
    var startEvent = $.Event('show.bs.offcanvas');
    this.$element.trigger(startEvent);
    if (startEvent.isDefaultPrevented())
      return;
    this.state = 'slide-in';
    this.calcPlacement();
    var elements = this.getCanvasElements();
    var placement = this.placement;
    var opposite = this.opposite(placement);
    var offset = this.offset();
    if (elements.index(this.$element) !== -1) {
      $(this.$element).data('offcanvas-style', $(this.$element).attr('style') || '');
      this.$element.css(placement, -1 * offset);
      this.$element.css(placement);  // Workaround: Need to get the CSS property for it to be applied before the next line of code
    }
    elements.addClass('canvas-sliding').each(function () {
      if ($(this).data('offcanvas-style') === undefined)
        $(this).data('offcanvas-style', $(this).attr('style') || '');
      if ($(this).css('position') === 'static')
        $(this).css('position', 'relative');
      if (($(this).css(placement) === 'auto' || $(this).css(placement) === '0px') && ($(this).css(opposite) === 'auto' || $(this).css(opposite) === '0px')) {
        $(this).css(placement, 0);
      }
    });
    if (this.options.disableScrolling)
      this.disableScrolling();
    var complete = function () {
      if (this.state != 'slide-in')
        return;
      this.state = 'slid';
      elements.removeClass('canvas-sliding').addClass('canvas-slid');
      this.$element.trigger('shown.bs.offcanvas');
    };
    setTimeout($.proxy(function () {
      this.$element.addClass('in');
      this.slide(elements, offset, $.proxy(complete, this));
    }, this), 1);
  };
  OffCanvas.prototype.hide = function (fast) {
    if (this.state !== 'slid')
      return;
    var startEvent = $.Event('hide.bs.offcanvas');
    this.$element.trigger(startEvent);
    if (startEvent.isDefaultPrevented())
      return;
    this.state = 'slide-out';
    var elements = $('.canvas-slid');
    var placement = this.placement;
    var offset = -1 * this.offset();
    var complete = function () {
      if (this.state != 'slide-out')
        return;
      this.state = null;
      this.placement = null;
      this.$element.removeClass('in');
      elements.removeClass('canvas-sliding');
      elements.add(this.$element).add('body').each(function () {
        $(this).attr('style', $(this).data('offcanvas-style')).removeData('offcanvas-style');
      });
      this.$element.trigger('hidden.bs.offcanvas');
    };
    elements.removeClass('canvas-slid').addClass('canvas-sliding');
    setTimeout($.proxy(function () {
      this.slide(elements, offset, $.proxy(complete, this));
    }, this), 1);
  };
  OffCanvas.prototype.toggle = function () {
    if (this.state === 'slide-in' || this.state === 'slide-out')
      return;
    this[this.state === 'slid' ? 'hide' : 'show']();
  };
  OffCanvas.prototype.calcClone = function () {
    this.$calcClone = this.$element.clone().html('').addClass('offcanvas-clone').removeClass('in').appendTo($('body'));
  };
  OffCanvas.prototype.recalc = function () {
    if (this.$calcClone.css('display') === 'none' || this.state !== 'slid' && this.state !== 'slide-in')
      return;
    this.state = null;
    this.placement = null;
    var elements = this.getCanvasElements();
    this.$element.removeClass('in');
    elements.removeClass('canvas-slid');
    elements.add(this.$element).add('body').each(function () {
      $(this).attr('style', $(this).data('offcanvas-style')).removeData('offcanvas-style');
    });
  };
  OffCanvas.prototype.autohide = function (e) {
    if ($(e.target).closest(this.$element).length === 0)
      this.hide();
  };
  // OFFCANVAS PLUGIN DEFINITION
  // ==========================
  var old = $.fn.offcanvas;
  $.fn.offcanvas = function (option) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.offcanvas');
      var options = $.extend({}, OffCanvas.DEFAULTS, $this.data(), typeof option === 'object' && option);
      if (!data)
        $this.data('bs.offcanvas', data = new OffCanvas(this, options));
      if (typeof option === 'string')
        data[option]();
    });
  };
  $.fn.offcanvas.Constructor = OffCanvas;
  // OFFCANVAS NO CONFLICT
  // ====================
  $.fn.offcanvas.noConflict = function () {
    $.fn.offcanvas = old;
    return this;
  };
  // OFFCANVAS DATA-API
  // =================
  $(document).on('click.bs.offcanvas.data-api', '[data-toggle=offcanvas]', function (e) {
    var $this = $(this), href;
    var target = $this.attr('data-target') || e.preventDefault() || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '');
    //strip for ie7
    var $canvas = $(target);
    var data = $canvas.data('bs.offcanvas');
    var option = data ? 'toggle' : $this.data();
    e.stopPropagation();
    if (data)
      data.toggle();
    else
      $canvas.offcanvas(option);
  });
}(window.jQuery);
/* ============================================================
 * Bootstrap: rowlink.js v3.1.3
 * http://jasny.github.io/bootstrap/javascript/#rowlink
 * ============================================================
 * Copyright 2012-2014 Arnold Daniels
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */
+function ($) {
  'use strict';
  var Rowlink = function (element, options) {
    this.$element = $(element);
    this.options = $.extend({}, Rowlink.DEFAULTS, options);
    this.$element.on('click.bs.rowlink', 'td:not(.rowlink-skip)', $.proxy(this.click, this));
  };
  Rowlink.DEFAULTS = { target: 'a' };
  Rowlink.prototype.click = function (e) {
    var target = $(e.currentTarget).closest('tr').find(this.options.target)[0];
    if ($(e.target)[0] === target)
      return;
    e.preventDefault();
    if (target.click) {
      target.click();
    } else if (document.createEvent) {
      var evt = document.createEvent('MouseEvents');
      evt.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
      target.dispatchEvent(evt);
    }
  };
  // ROWLINK PLUGIN DEFINITION
  // ===========================
  var old = $.fn.rowlink;
  $.fn.rowlink = function (options) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.rowlink');
      if (!data)
        $this.data('bs.rowlink', data = new Rowlink(this, options));
    });
  };
  $.fn.rowlink.Constructor = Rowlink;
  // ROWLINK NO CONFLICT
  // ====================
  $.fn.rowlink.noConflict = function () {
    $.fn.rowlink = old;
    return this;
  };
  // ROWLINK DATA-API
  // ==================
  $(document).on('click.bs.rowlink.data-api', '[data-link="row"]', function (e) {
    if ($(e.target).closest('.rowlink-skip').length !== 0)
      return;
    var $this = $(this);
    if ($this.data('bs.rowlink'))
      return;
    $this.rowlink($this.data());
    $(e.target).trigger('click.bs.rowlink');
  });
}(window.jQuery);
/* ===========================================================
 * Bootstrap: inputmask.js v3.1.0
 * http://jasny.github.io/bootstrap/javascript/#inputmask
 * 
 * Based on Masked Input plugin by Josh Bush (digitalbush.com)
 * ===========================================================
 * Copyright 2012-2014 Arnold Daniels
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */
+function ($) {
  'use strict';
  var isIphone = window.orientation !== undefined;
  var isAndroid = navigator.userAgent.toLowerCase().indexOf('android') > -1;
  var isIE = window.navigator.appName == 'Microsoft Internet Explorer';
  // INPUTMASK PUBLIC CLASS DEFINITION
  // =================================
  var Inputmask = function (element, options) {
    if (isAndroid)
      return;
    // No support because caret positioning doesn't work on Android
    this.$element = $(element);
    this.options = $.extend({}, Inputmask.DEFAULTS, options);
    this.mask = String(this.options.mask);
    this.init();
    this.listen();
    this.checkVal();
  };
  Inputmask.DEFAULTS = {
    mask: '',
    placeholder: '_',
    definitions: {
      '9': '[0-9]',
      'a': '[A-Za-z]',
      'w': '[A-Za-z0-9]',
      '*': '.'
    }
  };
  Inputmask.prototype.init = function () {
    var defs = this.options.definitions;
    var len = this.mask.length;
    this.tests = [];
    this.partialPosition = this.mask.length;
    this.firstNonMaskPos = null;
    $.each(this.mask.split(''), $.proxy(function (i, c) {
      if (c == '?') {
        len--;
        this.partialPosition = i;
      } else if (defs[c]) {
        this.tests.push(new RegExp(defs[c]));
        if (this.firstNonMaskPos === null)
          this.firstNonMaskPos = this.tests.length - 1;
      } else {
        this.tests.push(null);
      }
    }, this));
    this.buffer = $.map(this.mask.split(''), $.proxy(function (c, i) {
      if (c != '?')
        return defs[c] ? this.options.placeholder : c;
    }, this));
    this.focusText = this.$element.val();
    this.$element.data('rawMaskFn', $.proxy(function () {
      return $.map(this.buffer, function (c, i) {
        return this.tests[i] && c != this.options.placeholder ? c : null;
      }).join('');
    }, this));
  };
  Inputmask.prototype.listen = function () {
    if (this.$element.attr('readonly'))
      return;
    var pasteEventName = (isIE ? 'paste' : 'input') + '.mask';
    this.$element.on('unmask.bs.inputmask', $.proxy(this.unmask, this)).on('focus.bs.inputmask', $.proxy(this.focusEvent, this)).on('blur.bs.inputmask', $.proxy(this.blurEvent, this)).on('keydown.bs.inputmask', $.proxy(this.keydownEvent, this)).on('keypress.bs.inputmask', $.proxy(this.keypressEvent, this)).on(pasteEventName, $.proxy(this.pasteEvent, this));
  };
  //Helper Function for Caret positioning
  Inputmask.prototype.caret = function (begin, end) {
    if (this.$element.length === 0)
      return;
    if (typeof begin == 'number') {
      end = typeof end == 'number' ? end : begin;
      return this.$element.each(function () {
        if (this.setSelectionRange) {
          this.setSelectionRange(begin, end);
        } else if (this.createTextRange) {
          var range = this.createTextRange();
          range.collapse(true);
          range.moveEnd('character', end);
          range.moveStart('character', begin);
          range.select();
        }
      });
    } else {
      if (this.$element[0].setSelectionRange) {
        begin = this.$element[0].selectionStart;
        end = this.$element[0].selectionEnd;
      } else if (document.selection && document.selection.createRange) {
        var range = document.selection.createRange();
        begin = 0 - range.duplicate().moveStart('character', -100000);
        end = begin + range.text.length;
      }
      return {
        begin: begin,
        end: end
      };
    }
  };
  Inputmask.prototype.seekNext = function (pos) {
    var len = this.mask.length;
    while (++pos <= len && !this.tests[pos]);
    return pos;
  };
  Inputmask.prototype.seekPrev = function (pos) {
    while (--pos >= 0 && !this.tests[pos]);
    return pos;
  };
  Inputmask.prototype.shiftL = function (begin, end) {
    var len = this.mask.length;
    if (begin < 0)
      return;
    for (var i = begin, j = this.seekNext(end); i < len; i++) {
      if (this.tests[i]) {
        if (j < len && this.tests[i].test(this.buffer[j])) {
          this.buffer[i] = this.buffer[j];
          this.buffer[j] = this.options.placeholder;
        } else
          break;
        j = this.seekNext(j);
      }
    }
    this.writeBuffer();
    this.caret(Math.max(this.firstNonMaskPos, begin));
  };
  Inputmask.prototype.shiftR = function (pos) {
    var len = this.mask.length;
    for (var i = pos, c = this.options.placeholder; i < len; i++) {
      if (this.tests[i]) {
        var j = this.seekNext(i);
        var t = this.buffer[i];
        this.buffer[i] = c;
        if (j < len && this.tests[j].test(t))
          c = t;
        else
          break;
      }
    }
  }, Inputmask.prototype.unmask = function () {
    this.$element.unbind('.mask').removeData('inputmask');
  };
  Inputmask.prototype.focusEvent = function () {
    this.focusText = this.$element.val();
    var len = this.mask.length;
    var pos = this.checkVal();
    this.writeBuffer();
    var that = this;
    var moveCaret = function () {
      if (pos == len)
        that.caret(0, pos);
      else
        that.caret(pos);
    };
    moveCaret();
    setTimeout(moveCaret, 50);
  };
  Inputmask.prototype.blurEvent = function () {
    this.checkVal();
    if (this.$element.val() !== this.focusText)
      this.$element.trigger('change');
  };
  Inputmask.prototype.keydownEvent = function (e) {
    var k = e.which;
    //backspace, delete, and escape get special treatment
    if (k == 8 || k == 46 || isIphone && k == 127) {
      var pos = this.caret(), begin = pos.begin, end = pos.end;
      if (end - begin === 0) {
        begin = k != 46 ? this.seekPrev(begin) : end = this.seekNext(begin - 1);
        end = k == 46 ? this.seekNext(end) : end;
      }
      this.clearBuffer(begin, end);
      this.shiftL(begin, end - 1);
      return false;
    } else if (k == 27) {
      //escape
      this.$element.val(this.focusText);
      this.caret(0, this.checkVal());
      return false;
    }
  };
  Inputmask.prototype.keypressEvent = function (e) {
    var len = this.mask.length;
    var k = e.which, pos = this.caret();
    if (e.ctrlKey || e.altKey || e.metaKey || k < 32) {
      //Ignore
      return true;
    } else if (k) {
      if (pos.end - pos.begin !== 0) {
        this.clearBuffer(pos.begin, pos.end);
        this.shiftL(pos.begin, pos.end - 1);
      }
      var p = this.seekNext(pos.begin - 1);
      if (p < len) {
        var c = String.fromCharCode(k);
        if (this.tests[p].test(c)) {
          this.shiftR(p);
          this.buffer[p] = c;
          this.writeBuffer();
          var next = this.seekNext(p);
          this.caret(next);
        }
      }
      return false;
    }
  };
  Inputmask.prototype.pasteEvent = function () {
    var that = this;
    setTimeout(function () {
      that.caret(that.checkVal(true));
    }, 0);
  };
  Inputmask.prototype.clearBuffer = function (start, end) {
    var len = this.mask.length;
    for (var i = start; i < end && i < len; i++) {
      if (this.tests[i])
        this.buffer[i] = this.options.placeholder;
    }
  };
  Inputmask.prototype.writeBuffer = function () {
    return this.$element.val(this.buffer.join('')).val();
  };
  Inputmask.prototype.checkVal = function (allow) {
    var len = this.mask.length;
    //try to place characters where they belong
    var test = this.$element.val();
    var lastMatch = -1;
    for (var i = 0, pos = 0; i < len; i++) {
      if (this.tests[i]) {
        this.buffer[i] = this.options.placeholder;
        while (pos++ < test.length) {
          var c = test.charAt(pos - 1);
          if (this.tests[i].test(c)) {
            this.buffer[i] = c;
            lastMatch = i;
            break;
          }
        }
        if (pos > test.length)
          break;
      } else if (this.buffer[i] == test.charAt(pos) && i != this.partialPosition) {
        pos++;
        lastMatch = i;
      }
    }
    if (!allow && lastMatch + 1 < this.partialPosition) {
      this.$element.val('');
      this.clearBuffer(0, len);
    } else if (allow || lastMatch + 1 >= this.partialPosition) {
      this.writeBuffer();
      if (!allow)
        this.$element.val(this.$element.val().substring(0, lastMatch + 1));
    }
    return this.partialPosition ? i : this.firstNonMaskPos;
  };
  // INPUTMASK PLUGIN DEFINITION
  // ===========================
  var old = $.fn.inputmask;
  $.fn.inputmask = function (options) {
    return this.each(function () {
      var $this = $(this);
      var data = $this.data('bs.inputmask');
      if (!data)
        $this.data('bs.inputmask', data = new Inputmask(this, options));
    });
  };
  $.fn.inputmask.Constructor = Inputmask;
  // INPUTMASK NO CONFLICT
  // ====================
  $.fn.inputmask.noConflict = function () {
    $.fn.inputmask = old;
    return this;
  };
  // INPUTMASK DATA-API
  // ==================
  $(document).on('focus.bs.inputmask.data-api', '[data-mask]', function (e) {
    var $this = $(this);
    if ($this.data('bs.inputmask'))
      return;
    $this.inputmask($this.data());
  });
}(window.jQuery);
/* ===========================================================
 * Bootstrap: fileinput.js v3.1.3
 * http://jasny.github.com/bootstrap/javascript/#fileinput
 * ===========================================================
 * Copyright 2012-2014 Arnold Daniels
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */
+function ($) {
  'use strict';
  var isIE = window.navigator.appName == 'Microsoft Internet Explorer';
  // FILEUPLOAD PUBLIC CLASS DEFINITION
  // =================================
  var Fileinput = function (element, options) {
    this.$element = $(element);
    this.$input = this.$element.find(':file');
    if (this.$input.length === 0)
      return;
    this.name = this.$input.attr('name') || options.name;
    this.$hidden = this.$element.find('input[type=hidden][name="' + this.name + '"]');
    if (this.$hidden.length === 0) {
      this.$hidden = $('<input type="hidden">').insertBefore(this.$input);
    }
    this.$preview = this.$element.find('.fileinput-preview');
    var height = this.$preview.css('height');
    if (this.$preview.css('display') !== 'inline' && height !== '0px' && height !== 'none') {
      this.$preview.css('line-height', height);
    }
    this.original = {
      exists: this.$element.hasClass('fileinput-exists'),
      preview: this.$preview.html(),
      hiddenVal: this.$hidden.val()
    };
    this.listen();
  };
  Fileinput.prototype.listen = function () {
    this.$input.on('change.bs.fileinput', $.proxy(this.change, this));
    $(this.$input[0].form).on('reset.bs.fileinput', $.proxy(this.reset, this));
    this.$element.find('[data-trigger="fileinput"]').on('click.bs.fileinput', $.proxy(this.trigger, this));
    this.$element.find('[data-dismiss="fileinput"]').on('click.bs.fileinput', $.proxy(this.clear, this));
  }, Fileinput.prototype.change = function (e) {
    var files = e.target.files === undefined ? e.target && e.target.value ? [{ name: e.target.value.replace(/^.+\\/, '') }] : [] : e.target.files;
    e.stopPropagation();
    if (files.length === 0) {
      this.clear();
      return;
    }
    this.$hidden.val('');
    this.$hidden.attr('name', '');
    this.$input.attr('name', this.name);
    var file = files[0];
    if (this.$preview.length > 0 && (typeof file.type !== 'undefined' ? file.type.match(/^image\/(gif|png|jpeg)$/) : file.name.match(/\.(gif|png|jpe?g)$/i)) && typeof FileReader !== 'undefined') {
      var reader = new FileReader();
      var preview = this.$preview;
      var element = this.$element;
      reader.onload = function (re) {
        var $img = $('<img>');
        $img[0].src = re.target.result;
        files[0].result = re.target.result;
        element.find('.fileinput-filename').text(file.name);
        // if parent has max-height, using `(max-)height: 100%` on child doesn't take padding and border into account
        if (preview.css('max-height') != 'none')
          $img.css('max-height', parseInt(preview.css('max-height'), 10) - parseInt(preview.css('padding-top'), 10) - parseInt(preview.css('padding-bottom'), 10) - parseInt(preview.css('border-top'), 10) - parseInt(preview.css('border-bottom'), 10));
        preview.html($img);
        element.addClass('fileinput-exists').removeClass('fileinput-new');
        element.trigger('change.bs.fileinput', files);
      };
      reader.readAsDataURL(file);
    } else {
      this.$element.find('.fileinput-filename').text(file.name);
      this.$preview.text(file.name);
      this.$element.addClass('fileinput-exists').removeClass('fileinput-new');
      this.$element.trigger('change.bs.fileinput');
    }
  }, Fileinput.prototype.clear = function (e) {
    if (e)
      e.preventDefault();
    this.$hidden.val('');
    this.$hidden.attr('name', this.name);
    this.$input.attr('name', '');
    //ie8+ doesn't support changing the value of input with type=file so clone instead
    if (isIE) {
      var inputClone = this.$input.clone(true);
      this.$input.after(inputClone);
      this.$input.remove();
      this.$input = inputClone;
    } else {
      this.$input.val('');
    }
    this.$preview.html('');
    this.$element.find('.fileinput-filename').text('');
    this.$element.addClass('fileinput-new').removeClass('fileinput-exists');
    if (e !== undefined) {
      this.$input.trigger('change');
      this.$element.trigger('clear.bs.fileinput');
    }
  }, Fileinput.prototype.reset = function () {
    this.clear();
    this.$hidden.val(this.original.hiddenVal);
    this.$preview.html(this.original.preview);
    this.$element.find('.fileinput-filename').text('');
    if (this.original.exists)
      this.$element.addClass('fileinput-exists').removeClass('fileinput-new');
    else
      this.$element.addClass('fileinput-new').removeClass('fileinput-exists');
    this.$element.trigger('reset.bs.fileinput');
  }, Fileinput.prototype.trigger = function (e) {
    this.$input.trigger('click');
    e.preventDefault();
  };
  // FILEUPLOAD PLUGIN DEFINITION
  // ===========================
  var old = $.fn.fileinput;
  $.fn.fileinput = function (options) {
    return this.each(function () {
      var $this = $(this), data = $this.data('bs.fileinput');
      if (!data)
        $this.data('bs.fileinput', data = new Fileinput(this, options));
      if (typeof options == 'string')
        data[options]();
    });
  };
  $.fn.fileinput.Constructor = Fileinput;
  // FILEINPUT NO CONFLICT
  // ====================
  $.fn.fileinput.noConflict = function () {
    $.fn.fileinput = old;
    return this;
  };
  // FILEUPLOAD DATA-API
  // ==================
  $(document).on('click.fileinput.data-api', '[data-provides="fileinput"]', function (e) {
    var $this = $(this);
    if ($this.data('bs.fileinput'))
      return;
    $this.fileinput($this.data());
    var $target = $(e.target).closest('[data-dismiss="fileinput"],[data-trigger="fileinput"]');
    if ($target.length > 0) {
      e.preventDefault();
      $target.trigger('click.bs.fileinput');
    }
  });
}(window.jQuery);
//! moment.js
//! version : 2.9.0
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
(function (undefined) {
  /************************************
        Constants
    ************************************/
  var moment, VERSION = '2.9.0',
    // the global-scope this is NOT the global object in Node.js
    globalScope = typeof global !== 'undefined' && (typeof window === 'undefined' || window === global.window) ? global : this, oldGlobalMoment, round = Math.round, hasOwnProperty = Object.prototype.hasOwnProperty, i, YEAR = 0, MONTH = 1, DATE = 2, HOUR = 3, MINUTE = 4, SECOND = 5, MILLISECOND = 6,
    // internal storage for locale config files
    locales = {},
    // extra moment internal properties (plugins register props here)
    momentProperties = [],
    // check for nodeJS
    hasModule = typeof module !== 'undefined' && module && module.exports,
    // ASP.NET json date format regex
    aspNetJsonRegex = /^\/?Date\((\-?\d+)/i, aspNetTimeSpanJsonRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,
    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,
    // format tokens
    formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g, localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
    // parsing token regexes
    parseTokenOneOrTwoDigits = /\d\d?/,
    // 0 - 99
    parseTokenOneToThreeDigits = /\d{1,3}/,
    // 0 - 999
    parseTokenOneToFourDigits = /\d{1,4}/,
    // 0 - 9999
    parseTokenOneToSixDigits = /[+\-]?\d{1,6}/,
    // -999,999 - 999,999
    parseTokenDigits = /\d+/,
    // nonzero number of digits
    parseTokenWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
    // any word (or two) characters or numbers including two/three word month in arabic.
    parseTokenTimezone = /Z|[\+\-]\d\d:?\d\d/gi,
    // +00:00 -00:00 +0000 -0000 or Z
    parseTokenT = /T/i,
    // T (ISO separator)
    parseTokenOffsetMs = /[\+\-]?\d+/,
    // 1234567890123
    parseTokenTimestampMs = /[\+\-]?\d+(\.\d{1,3})?/,
    // 123456789 123456789.123
    //strict parsing regexes
    parseTokenOneDigit = /\d/,
    // 0 - 9
    parseTokenTwoDigits = /\d\d/,
    // 00 - 99
    parseTokenThreeDigits = /\d{3}/,
    // 000 - 999
    parseTokenFourDigits = /\d{4}/,
    // 0000 - 9999
    parseTokenSixDigits = /[+-]?\d{6}/,
    // -999,999 - 999,999
    parseTokenSignedNumber = /[+-]?\d+/,
    // -inf - inf
    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/, isoFormat = 'YYYY-MM-DDTHH:mm:ssZ', isoDates = [
      [
        'YYYYYY-MM-DD',
        /[+-]\d{6}-\d{2}-\d{2}/
      ],
      [
        'YYYY-MM-DD',
        /\d{4}-\d{2}-\d{2}/
      ],
      [
        'GGGG-[W]WW-E',
        /\d{4}-W\d{2}-\d/
      ],
      [
        'GGGG-[W]WW',
        /\d{4}-W\d{2}/
      ],
      [
        'YYYY-DDD',
        /\d{4}-\d{3}/
      ]
    ],
    // iso time formats and regexes
    isoTimes = [
      [
        'HH:mm:ss.SSSS',
        /(T| )\d\d:\d\d:\d\d\.\d+/
      ],
      [
        'HH:mm:ss',
        /(T| )\d\d:\d\d:\d\d/
      ],
      [
        'HH:mm',
        /(T| )\d\d:\d\d/
      ],
      [
        'HH',
        /(T| )\d\d/
      ]
    ],
    // timezone chunker '+10:00' > ['10', '00'] or '-1530' > ['-', '15', '30']
    parseTimezoneChunker = /([\+\-]|\d\d)/gi,
    // getter and setter names
    proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'), unitMillisecondFactors = {
      'Milliseconds': 1,
      'Seconds': 1000,
      'Minutes': 60000,
      'Hours': 3600000,
      'Days': 86400000,
      'Months': 2592000000,
      'Years': 31536000000
    }, unitAliases = {
      ms: 'millisecond',
      s: 'second',
      m: 'minute',
      h: 'hour',
      d: 'day',
      D: 'date',
      w: 'week',
      W: 'isoWeek',
      M: 'month',
      Q: 'quarter',
      y: 'year',
      DDD: 'dayOfYear',
      e: 'weekday',
      E: 'isoWeekday',
      gg: 'weekYear',
      GG: 'isoWeekYear'
    }, camelFunctions = {
      dayofyear: 'dayOfYear',
      isoweekday: 'isoWeekday',
      isoweek: 'isoWeek',
      weekyear: 'weekYear',
      isoweekyear: 'isoWeekYear'
    },
    // format function strings
    formatFunctions = {},
    // default relative time thresholds
    relativeTimeThresholds = {
      s: 45,
      m: 45,
      h: 22,
      d: 26,
      M: 11
    },
    // tokens to ordinalize and pad
    ordinalizeTokens = 'DDD w W M D d'.split(' '), paddedTokens = 'M D H h m s w W'.split(' '), formatTokenFunctions = {
      M: function () {
        return this.month() + 1;
      },
      MMM: function (format) {
        return this.localeData().monthsShort(this, format);
      },
      MMMM: function (format) {
        return this.localeData().months(this, format);
      },
      D: function () {
        return this.date();
      },
      DDD: function () {
        return this.dayOfYear();
      },
      d: function () {
        return this.day();
      },
      dd: function (format) {
        return this.localeData().weekdaysMin(this, format);
      },
      ddd: function (format) {
        return this.localeData().weekdaysShort(this, format);
      },
      dddd: function (format) {
        return this.localeData().weekdays(this, format);
      },
      w: function () {
        return this.week();
      },
      W: function () {
        return this.isoWeek();
      },
      YY: function () {
        return leftZeroFill(this.year() % 100, 2);
      },
      YYYY: function () {
        return leftZeroFill(this.year(), 4);
      },
      YYYYY: function () {
        return leftZeroFill(this.year(), 5);
      },
      YYYYYY: function () {
        var y = this.year(), sign = y >= 0 ? '+' : '-';
        return sign + leftZeroFill(Math.abs(y), 6);
      },
      gg: function () {
        return leftZeroFill(this.weekYear() % 100, 2);
      },
      gggg: function () {
        return leftZeroFill(this.weekYear(), 4);
      },
      ggggg: function () {
        return leftZeroFill(this.weekYear(), 5);
      },
      GG: function () {
        return leftZeroFill(this.isoWeekYear() % 100, 2);
      },
      GGGG: function () {
        return leftZeroFill(this.isoWeekYear(), 4);
      },
      GGGGG: function () {
        return leftZeroFill(this.isoWeekYear(), 5);
      },
      e: function () {
        return this.weekday();
      },
      E: function () {
        return this.isoWeekday();
      },
      a: function () {
        return this.localeData().meridiem(this.hours(), this.minutes(), true);
      },
      A: function () {
        return this.localeData().meridiem(this.hours(), this.minutes(), false);
      },
      H: function () {
        return this.hours();
      },
      h: function () {
        return this.hours() % 12 || 12;
      },
      m: function () {
        return this.minutes();
      },
      s: function () {
        return this.seconds();
      },
      S: function () {
        return toInt(this.milliseconds() / 100);
      },
      SS: function () {
        return leftZeroFill(toInt(this.milliseconds() / 10), 2);
      },
      SSS: function () {
        return leftZeroFill(this.milliseconds(), 3);
      },
      SSSS: function () {
        return leftZeroFill(this.milliseconds(), 3);
      },
      Z: function () {
        var a = this.utcOffset(), b = '+';
        if (a < 0) {
          a = -a;
          b = '-';
        }
        return b + leftZeroFill(toInt(a / 60), 2) + ':' + leftZeroFill(toInt(a) % 60, 2);
      },
      ZZ: function () {
        var a = this.utcOffset(), b = '+';
        if (a < 0) {
          a = -a;
          b = '-';
        }
        return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);
      },
      z: function () {
        return this.zoneAbbr();
      },
      zz: function () {
        return this.zoneName();
      },
      x: function () {
        return this.valueOf();
      },
      X: function () {
        return this.unix();
      },
      Q: function () {
        return this.quarter();
      }
    }, deprecations = {}, lists = [
      'months',
      'monthsShort',
      'weekdays',
      'weekdaysShort',
      'weekdaysMin'
    ], updateInProgress = false;
  // Pick the first defined of two or three arguments. dfl comes from
  // default.
  function dfl(a, b, c) {
    switch (arguments.length) {
    case 2:
      return a != null ? a : b;
    case 3:
      return a != null ? a : b != null ? b : c;
    default:
      throw new Error('Implement me');
    }
  }
  function hasOwnProp(a, b) {
    return hasOwnProperty.call(a, b);
  }
  function defaultParsingFlags() {
    // We need to deep clone this object, and es5 standard is not very
    // helpful.
    return {
      empty: false,
      unusedTokens: [],
      unusedInput: [],
      overflow: -2,
      charsLeftOver: 0,
      nullInput: false,
      invalidMonth: null,
      invalidFormat: false,
      userInvalidated: false,
      iso: false
    };
  }
  function printMsg(msg) {
    if (moment.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
      console.warn('Deprecation warning: ' + msg);
    }
  }
  function deprecate(msg, fn) {
    var firstTime = true;
    return extend(function () {
      if (firstTime) {
        printMsg(msg);
        firstTime = false;
      }
      return fn.apply(this, arguments);
    }, fn);
  }
  function deprecateSimple(name, msg) {
    if (!deprecations[name]) {
      printMsg(msg);
      deprecations[name] = true;
    }
  }
  function padToken(func, count) {
    return function (a) {
      return leftZeroFill(func.call(this, a), count);
    };
  }
  function ordinalizeToken(func, period) {
    return function (a) {
      return this.localeData().ordinal(func.call(this, a), period);
    };
  }
  function monthDiff(a, b) {
    // difference in months
    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
      // b is in (anchor - 1 month, anchor + 1 month)
      anchor = a.clone().add(wholeMonthDiff, 'months'), anchor2, adjust;
    if (b - anchor < 0) {
      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
      // linear across the month
      adjust = (b - anchor) / (anchor - anchor2);
    } else {
      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
      // linear across the month
      adjust = (b - anchor) / (anchor2 - anchor);
    }
    return -(wholeMonthDiff + adjust);
  }
  while (ordinalizeTokens.length) {
    i = ordinalizeTokens.pop();
    formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);
  }
  while (paddedTokens.length) {
    i = paddedTokens.pop();
    formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);
  }
  formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);
  function meridiemFixWrap(locale, hour, meridiem) {
    var isPm;
    if (meridiem == null) {
      // nothing to do
      return hour;
    }
    if (locale.meridiemHour != null) {
      return locale.meridiemHour(hour, meridiem);
    } else if (locale.isPM != null) {
      // Fallback
      isPm = locale.isPM(meridiem);
      if (isPm && hour < 12) {
        hour += 12;
      }
      if (!isPm && hour === 12) {
        hour = 0;
      }
      return hour;
    } else {
      // thie is not supposed to happen
      return hour;
    }
  }
  /************************************
        Constructors
    ************************************/
  function Locale() {
  }
  // Moment prototype object
  function Moment(config, skipOverflow) {
    if (skipOverflow !== false) {
      checkOverflow(config);
    }
    copyConfig(this, config);
    this._d = new Date(+config._d);
    // Prevent infinite loop in case updateOffset creates new moment
    // objects.
    if (updateInProgress === false) {
      updateInProgress = true;
      moment.updateOffset(this);
      updateInProgress = false;
    }
  }
  // Duration Constructor
  function Duration(duration) {
    var normalizedInput = normalizeObjectUnits(duration), years = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months = normalizedInput.month || 0, weeks = normalizedInput.week || 0, days = normalizedInput.day || 0, hours = normalizedInput.hour || 0, minutes = normalizedInput.minute || 0, seconds = normalizedInput.second || 0, milliseconds = normalizedInput.millisecond || 0;
    // representation for dateAddRemove
    this._milliseconds = +milliseconds + seconds * 1000 + minutes * 60000 + hours * 3600000;
    // 1000 * 60 * 60
    // Because of dateAddRemove treats 24 hours as different from a
    // day when working around DST, we need to store them separately
    this._days = +days + weeks * 7;
    // It is impossible translate months into days without knowing
    // which months you are are talking about, so we have to store
    // it separately.
    this._months = +months + quarters * 3 + years * 12;
    this._data = {};
    this._locale = moment.localeData();
    this._bubble();
  }
  /************************************
        Helpers
    ************************************/
  function extend(a, b) {
    for (var i in b) {
      if (hasOwnProp(b, i)) {
        a[i] = b[i];
      }
    }
    if (hasOwnProp(b, 'toString')) {
      a.toString = b.toString;
    }
    if (hasOwnProp(b, 'valueOf')) {
      a.valueOf = b.valueOf;
    }
    return a;
  }
  function copyConfig(to, from) {
    var i, prop, val;
    if (typeof from._isAMomentObject !== 'undefined') {
      to._isAMomentObject = from._isAMomentObject;
    }
    if (typeof from._i !== 'undefined') {
      to._i = from._i;
    }
    if (typeof from._f !== 'undefined') {
      to._f = from._f;
    }
    if (typeof from._l !== 'undefined') {
      to._l = from._l;
    }
    if (typeof from._strict !== 'undefined') {
      to._strict = from._strict;
    }
    if (typeof from._tzm !== 'undefined') {
      to._tzm = from._tzm;
    }
    if (typeof from._isUTC !== 'undefined') {
      to._isUTC = from._isUTC;
    }
    if (typeof from._offset !== 'undefined') {
      to._offset = from._offset;
    }
    if (typeof from._pf !== 'undefined') {
      to._pf = from._pf;
    }
    if (typeof from._locale !== 'undefined') {
      to._locale = from._locale;
    }
    if (momentProperties.length > 0) {
      for (i in momentProperties) {
        prop = momentProperties[i];
        val = from[prop];
        if (typeof val !== 'undefined') {
          to[prop] = val;
        }
      }
    }
    return to;
  }
  function absRound(number) {
    if (number < 0) {
      return Math.ceil(number);
    } else {
      return Math.floor(number);
    }
  }
  // left zero fill a number
  // see http://jsperf.com/left-zero-filling for performance comparison
  function leftZeroFill(number, targetLength, forceSign) {
    var output = '' + Math.abs(number), sign = number >= 0;
    while (output.length < targetLength) {
      output = '0' + output;
    }
    return (sign ? forceSign ? '+' : '' : '-') + output;
  }
  function positiveMomentsDifference(base, other) {
    var res = {
        milliseconds: 0,
        months: 0
      };
    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
    if (base.clone().add(res.months, 'M').isAfter(other)) {
      --res.months;
    }
    res.milliseconds = +other - +base.clone().add(res.months, 'M');
    return res;
  }
  function momentsDifference(base, other) {
    var res;
    other = makeAs(other, base);
    if (base.isBefore(other)) {
      res = positiveMomentsDifference(base, other);
    } else {
      res = positiveMomentsDifference(other, base);
      res.milliseconds = -res.milliseconds;
      res.months = -res.months;
    }
    return res;
  }
  // TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction, name) {
    return function (val, period) {
      var dur, tmp;
      //invert the arguments, but complain about it
      if (period !== null && !isNaN(+period)) {
        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
        tmp = val;
        val = period;
        period = tmp;
      }
      val = typeof val === 'string' ? +val : val;
      dur = moment.duration(val, period);
      addOrSubtractDurationFromMoment(this, dur, direction);
      return this;
    };
  }
  function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds, days = duration._days, months = duration._months;
    updateOffset = updateOffset == null ? true : updateOffset;
    if (milliseconds) {
      mom._d.setTime(+mom._d + milliseconds * isAdding);
    }
    if (days) {
      rawSetter(mom, 'Date', rawGetter(mom, 'Date') + days * isAdding);
    }
    if (months) {
      rawMonthSetter(mom, rawGetter(mom, 'Month') + months * isAdding);
    }
    if (updateOffset) {
      moment.updateOffset(mom, days || months);
    }
  }
  // check if is an array
  function isArray(input) {
    return Object.prototype.toString.call(input) === '[object Array]';
  }
  function isDate(input) {
    return Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;
  }
  // compare two arrays, return the number of differences
  function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i;
    for (i = 0; i < len; i++) {
      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {
        diffs++;
      }
    }
    return diffs + lengthDiff;
  }
  function normalizeUnits(units) {
    if (units) {
      var lowered = units.toLowerCase().replace(/(.)s$/, '$1');
      units = unitAliases[units] || camelFunctions[lowered] || lowered;
    }
    return units;
  }
  function normalizeObjectUnits(inputObject) {
    var normalizedInput = {}, normalizedProp, prop;
    for (prop in inputObject) {
      if (hasOwnProp(inputObject, prop)) {
        normalizedProp = normalizeUnits(prop);
        if (normalizedProp) {
          normalizedInput[normalizedProp] = inputObject[prop];
        }
      }
    }
    return normalizedInput;
  }
  function makeList(field) {
    var count, setter;
    if (field.indexOf('week') === 0) {
      count = 7;
      setter = 'day';
    } else if (field.indexOf('month') === 0) {
      count = 12;
      setter = 'month';
    } else {
      return;
    }
    moment[field] = function (format, index) {
      var i, getter, method = moment._locale[field], results = [];
      if (typeof format === 'number') {
        index = format;
        format = undefined;
      }
      getter = function (i) {
        var m = moment().utc().set(setter, i);
        return method.call(moment._locale, m, format || '');
      };
      if (index != null) {
        return getter(index);
      } else {
        for (i = 0; i < count; i++) {
          results.push(getter(i));
        }
        return results;
      }
    };
  }
  function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion, value = 0;
    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
      if (coercedNumber >= 0) {
        value = Math.floor(coercedNumber);
      } else {
        value = Math.ceil(coercedNumber);
      }
    }
    return value;
  }
  function daysInMonth(year, month) {
    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
  }
  function weeksInYear(year, dow, doy) {
    return weekOfYear(moment([
      year,
      11,
      31 + dow - doy
    ]), dow, doy).week;
  }
  function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
  }
  function isLeapYear(year) {
    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
  }
  function checkOverflow(m) {
    var overflow;
    if (m._a && m._pf.overflow === -2) {
      overflow = m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH : m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE : m._a[HOUR] < 0 || m._a[HOUR] > 24 || m._a[HOUR] === 24 && (m._a[MINUTE] !== 0 || m._a[SECOND] !== 0 || m._a[MILLISECOND] !== 0) ? HOUR : m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE : m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND : m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND : -1;
      if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
        overflow = DATE;
      }
      m._pf.overflow = overflow;
    }
  }
  function isValid(m) {
    if (m._isValid == null) {
      m._isValid = !isNaN(m._d.getTime()) && m._pf.overflow < 0 && !m._pf.empty && !m._pf.invalidMonth && !m._pf.nullInput && !m._pf.invalidFormat && !m._pf.userInvalidated;
      if (m._strict) {
        m._isValid = m._isValid && m._pf.charsLeftOver === 0 && m._pf.unusedTokens.length === 0 && m._pf.bigHour === undefined;
      }
    }
    return m._isValid;
  }
  function normalizeLocale(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
  }
  // pick the locale from the array
  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
  function chooseLocale(names) {
    var i = 0, j, next, locale, split;
    while (i < names.length) {
      split = normalizeLocale(names[i]).split('-');
      j = split.length;
      next = normalizeLocale(names[i + 1]);
      next = next ? next.split('-') : null;
      while (j > 0) {
        locale = loadLocale(split.slice(0, j).join('-'));
        if (locale) {
          return locale;
        }
        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
          //the next array item is better than a shallower substring of this one
          break;
        }
        j--;
      }
      i++;
    }
    return null;
  }
  function loadLocale(name) {
    var oldLocale = null;
    if (!locales[name] && hasModule) {
      try {
        oldLocale = moment.locale();
        require('./locale/' + name);
        // because defineLocale currently also sets the global locale, we want to undo that for lazy loaded locales
        moment.locale(oldLocale);
      } catch (e) {
      }
    }
    return locales[name];
  }
  // Return a moment from input, that is local/utc/utcOffset equivalent to
  // model.
  function makeAs(input, model) {
    var res, diff;
    if (model._isUTC) {
      res = model.clone();
      diff = (moment.isMoment(input) || isDate(input) ? +input : +moment(input)) - +res;
      // Use low-level api, because this fn is low-level api.
      res._d.setTime(+res._d + diff);
      moment.updateOffset(res, false);
      return res;
    } else {
      return moment(input).local();
    }
  }
  /************************************
        Locale
    ************************************/
  extend(Locale.prototype, {
    set: function (config) {
      var prop, i;
      for (i in config) {
        prop = config[i];
        if (typeof prop === 'function') {
          this[i] = prop;
        } else {
          this['_' + i] = prop;
        }
      }
      // Lenient ordinal parsing accepts just a number in addition to
      // number + (possibly) stuff coming from _ordinalParseLenient.
      this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\d{1,2}/.source);
    },
    _months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    months: function (m) {
      return this._months[m.month()];
    },
    _monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    monthsShort: function (m) {
      return this._monthsShort[m.month()];
    },
    monthsParse: function (monthName, format, strict) {
      var i, mom, regex;
      if (!this._monthsParse) {
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = [];
      }
      for (i = 0; i < 12; i++) {
        // make the regex if we don't have it already
        mom = moment.utc([
          2000,
          i
        ]);
        if (strict && !this._longMonthsParse[i]) {
          this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
          this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
        }
        if (!strict && !this._monthsParse[i]) {
          regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
          this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
          return i;
        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
          return i;
        } else if (!strict && this._monthsParse[i].test(monthName)) {
          return i;
        }
      }
    },
    _weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdays: function (m) {
      return this._weekdays[m.day()];
    },
    _weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysShort: function (m) {
      return this._weekdaysShort[m.day()];
    },
    _weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    weekdaysMin: function (m) {
      return this._weekdaysMin[m.day()];
    },
    weekdaysParse: function (weekdayName) {
      var i, mom, regex;
      if (!this._weekdaysParse) {
        this._weekdaysParse = [];
      }
      for (i = 0; i < 7; i++) {
        // make the regex if we don't have it already
        if (!this._weekdaysParse[i]) {
          mom = moment([
            2000,
            1
          ]).day(i);
          regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
          this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (this._weekdaysParse[i].test(weekdayName)) {
          return i;
        }
      }
    },
    _longDateFormat: {
      LTS: 'h:mm:ss A',
      LT: 'h:mm A',
      L: 'MM/DD/YYYY',
      LL: 'MMMM D, YYYY',
      LLL: 'MMMM D, YYYY LT',
      LLLL: 'dddd, MMMM D, YYYY LT'
    },
    longDateFormat: function (key) {
      var output = this._longDateFormat[key];
      if (!output && this._longDateFormat[key.toUpperCase()]) {
        output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {
          return val.slice(1);
        });
        this._longDateFormat[key] = output;
      }
      return output;
    },
    isPM: function (input) {
      // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
      // Using charAt should be more compatible.
      return (input + '').toLowerCase().charAt(0) === 'p';
    },
    _meridiemParse: /[ap]\.?m?\.?/i,
    meridiem: function (hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? 'pm' : 'PM';
      } else {
        return isLower ? 'am' : 'AM';
      }
    },
    _calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L'
    },
    calendar: function (key, mom, now) {
      var output = this._calendar[key];
      return typeof output === 'function' ? output.apply(mom, [now]) : output;
    },
    _relativeTime: {
      future: 'in %s',
      past: '%s ago',
      s: 'a few seconds',
      m: 'a minute',
      mm: '%d minutes',
      h: 'an hour',
      hh: '%d hours',
      d: 'a day',
      dd: '%d days',
      M: 'a month',
      MM: '%d months',
      y: 'a year',
      yy: '%d years'
    },
    relativeTime: function (number, withoutSuffix, string, isFuture) {
      var output = this._relativeTime[string];
      return typeof output === 'function' ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
    },
    pastFuture: function (diff, output) {
      var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
      return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
    },
    ordinal: function (number) {
      return this._ordinal.replace('%d', number);
    },
    _ordinal: '%d',
    _ordinalParse: /\d{1,2}/,
    preparse: function (string) {
      return string;
    },
    postformat: function (string) {
      return string;
    },
    week: function (mom) {
      return weekOfYear(mom, this._week.dow, this._week.doy).week;
    },
    _week: {
      dow: 0,
      doy: 6
    },
    firstDayOfWeek: function () {
      return this._week.dow;
    },
    firstDayOfYear: function () {
      return this._week.doy;
    },
    _invalidDate: 'Invalid date',
    invalidDate: function () {
      return this._invalidDate;
    }
  });
  /************************************
        Formatting
    ************************************/
  function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
      return input.replace(/^\[|\]$/g, '');
    }
    return input.replace(/\\/g, '');
  }
  function makeFormatFunction(format) {
    var array = format.match(formattingTokens), i, length;
    for (i = 0, length = array.length; i < length; i++) {
      if (formatTokenFunctions[array[i]]) {
        array[i] = formatTokenFunctions[array[i]];
      } else {
        array[i] = removeFormattingTokens(array[i]);
      }
    }
    return function (mom) {
      var output = '';
      for (i = 0; i < length; i++) {
        output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
      }
      return output;
    };
  }
  // format date using native date object
  function formatMoment(m, format) {
    if (!m.isValid()) {
      return m.localeData().invalidDate();
    }
    format = expandFormat(format, m.localeData());
    if (!formatFunctions[format]) {
      formatFunctions[format] = makeFormatFunction(format);
    }
    return formatFunctions[format](m);
  }
  function expandFormat(format, locale) {
    var i = 5;
    function replaceLongDateFormatTokens(input) {
      return locale.longDateFormat(input) || input;
    }
    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
      localFormattingTokens.lastIndex = 0;
      i -= 1;
    }
    return format;
  }
  /************************************
        Parsing
    ************************************/
  // get the regex to find the next token
  function getParseRegexForToken(token, config) {
    var a, strict = config._strict;
    switch (token) {
    case 'Q':
      return parseTokenOneDigit;
    case 'DDDD':
      return parseTokenThreeDigits;
    case 'YYYY':
    case 'GGGG':
    case 'gggg':
      return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;
    case 'Y':
    case 'G':
    case 'g':
      return parseTokenSignedNumber;
    case 'YYYYYY':
    case 'YYYYY':
    case 'GGGGG':
    case 'ggggg':
      return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;
    case 'S':
      if (strict) {
        return parseTokenOneDigit;
      }
    /* falls through */
    case 'SS':
      if (strict) {
        return parseTokenTwoDigits;
      }
    /* falls through */
    case 'SSS':
      if (strict) {
        return parseTokenThreeDigits;
      }
    /* falls through */
    case 'DDD':
      return parseTokenOneToThreeDigits;
    case 'MMM':
    case 'MMMM':
    case 'dd':
    case 'ddd':
    case 'dddd':
      return parseTokenWord;
    case 'a':
    case 'A':
      return config._locale._meridiemParse;
    case 'x':
      return parseTokenOffsetMs;
    case 'X':
      return parseTokenTimestampMs;
    case 'Z':
    case 'ZZ':
      return parseTokenTimezone;
    case 'T':
      return parseTokenT;
    case 'SSSS':
      return parseTokenDigits;
    case 'MM':
    case 'DD':
    case 'YY':
    case 'GG':
    case 'gg':
    case 'HH':
    case 'hh':
    case 'mm':
    case 'ss':
    case 'ww':
    case 'WW':
      return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;
    case 'M':
    case 'D':
    case 'd':
    case 'H':
    case 'h':
    case 'm':
    case 's':
    case 'w':
    case 'W':
    case 'e':
    case 'E':
      return parseTokenOneOrTwoDigits;
    case 'Do':
      return strict ? config._locale._ordinalParse : config._locale._ordinalParseLenient;
    default:
      a = new RegExp(regexpEscape(unescapeFormat(token.replace('\\', '')), 'i'));
      return a;
    }
  }
  function utcOffsetFromString(string) {
    string = string || '';
    var possibleTzMatches = string.match(parseTokenTimezone) || [], tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [], parts = (tzChunk + '').match(parseTimezoneChunker) || [
        '-',
        0,
        0
      ], minutes = +(parts[1] * 60) + toInt(parts[2]);
    return parts[0] === '+' ? minutes : -minutes;
  }
  // function to convert string input to date
  function addTimeToArrayFromToken(token, input, config) {
    var a, datePartArray = config._a;
    switch (token) {
    // QUARTER
    case 'Q':
      if (input != null) {
        datePartArray[MONTH] = (toInt(input) - 1) * 3;
      }
      break;
    // MONTH
    case 'M':
    // fall through to MM
    case 'MM':
      if (input != null) {
        datePartArray[MONTH] = toInt(input) - 1;
      }
      break;
    case 'MMM':
    // fall through to MMMM
    case 'MMMM':
      a = config._locale.monthsParse(input, token, config._strict);
      // if we didn't find a month name, mark the date as invalid.
      if (a != null) {
        datePartArray[MONTH] = a;
      } else {
        config._pf.invalidMonth = input;
      }
      break;
    // DAY OF MONTH
    case 'D':
    // fall through to DD
    case 'DD':
      if (input != null) {
        datePartArray[DATE] = toInt(input);
      }
      break;
    case 'Do':
      if (input != null) {
        datePartArray[DATE] = toInt(parseInt(input.match(/\d{1,2}/)[0], 10));
      }
      break;
    // DAY OF YEAR
    case 'DDD':
    // fall through to DDDD
    case 'DDDD':
      if (input != null) {
        config._dayOfYear = toInt(input);
      }
      break;
    // YEAR
    case 'YY':
      datePartArray[YEAR] = moment.parseTwoDigitYear(input);
      break;
    case 'YYYY':
    case 'YYYYY':
    case 'YYYYYY':
      datePartArray[YEAR] = toInt(input);
      break;
    // AM / PM
    case 'a':
    // fall through to A
    case 'A':
      config._meridiem = input;
      // config._isPm = config._locale.isPM(input);
      break;
    // HOUR
    case 'h':
    // fall through to hh
    case 'hh':
      config._pf.bigHour = true;
    /* falls through */
    case 'H':
    // fall through to HH
    case 'HH':
      datePartArray[HOUR] = toInt(input);
      break;
    // MINUTE
    case 'm':
    // fall through to mm
    case 'mm':
      datePartArray[MINUTE] = toInt(input);
      break;
    // SECOND
    case 's':
    // fall through to ss
    case 'ss':
      datePartArray[SECOND] = toInt(input);
      break;
    // MILLISECOND
    case 'S':
    case 'SS':
    case 'SSS':
    case 'SSSS':
      datePartArray[MILLISECOND] = toInt(('0.' + input) * 1000);
      break;
    // UNIX OFFSET (MILLISECONDS)
    case 'x':
      config._d = new Date(toInt(input));
      break;
    // UNIX TIMESTAMP WITH MS
    case 'X':
      config._d = new Date(parseFloat(input) * 1000);
      break;
    // TIMEZONE
    case 'Z':
    // fall through to ZZ
    case 'ZZ':
      config._useUTC = true;
      config._tzm = utcOffsetFromString(input);
      break;
    // WEEKDAY - human
    case 'dd':
    case 'ddd':
    case 'dddd':
      a = config._locale.weekdaysParse(input);
      // if we didn't get a weekday name, mark the date as invalid
      if (a != null) {
        config._w = config._w || {};
        config._w['d'] = a;
      } else {
        config._pf.invalidWeekday = input;
      }
      break;
    // WEEK, WEEK DAY - numeric
    case 'w':
    case 'ww':
    case 'W':
    case 'WW':
    case 'd':
    case 'e':
    case 'E':
      token = token.substr(0, 1);
    /* falls through */
    case 'gggg':
    case 'GGGG':
    case 'GGGGG':
      token = token.substr(0, 2);
      if (input) {
        config._w = config._w || {};
        config._w[token] = toInt(input);
      }
      break;
    case 'gg':
    case 'GG':
      config._w = config._w || {};
      config._w[token] = moment.parseTwoDigitYear(input);
    }
  }
  function dayOfYearFromWeekInfo(config) {
    var w, weekYear, week, weekday, dow, doy, temp;
    w = config._w;
    if (w.GG != null || w.W != null || w.E != null) {
      dow = 1;
      doy = 4;
      // TODO: We need to take the current isoWeekYear, but that depends on
      // how we interpret now (local, utc, fixed offset). So create
      // a now version of current config (take local/utc/offset flags, and
      // create now).
      weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);
      week = dfl(w.W, 1);
      weekday = dfl(w.E, 1);
    } else {
      dow = config._locale._week.dow;
      doy = config._locale._week.doy;
      weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);
      week = dfl(w.w, 1);
      if (w.d != null) {
        // weekday -- low day numbers are considered next week
        weekday = w.d;
        if (weekday < dow) {
          ++week;
        }
      } else if (w.e != null) {
        // local weekday -- counting starts from begining of week
        weekday = w.e + dow;
      } else {
        // default to begining of week
        weekday = dow;
      }
    }
    temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);
    config._a[YEAR] = temp.year;
    config._dayOfYear = temp.dayOfYear;
  }
  // convert an array to a date.
  // the array should mirror the parameters below
  // note: all values past the year are optional and will default to the lowest possible value.
  // [year, month, day , hour, minute, second, millisecond]
  function dateFromConfig(config) {
    var i, date, input = [], currentDate, yearToUse;
    if (config._d) {
      return;
    }
    currentDate = currentDateArray(config);
    //compute day of the year from weeks and weekdays
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
      dayOfYearFromWeekInfo(config);
    }
    //if the day of the year is set, figure out what it is
    if (config._dayOfYear) {
      yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);
      if (config._dayOfYear > daysInYear(yearToUse)) {
        config._pf._overflowDayOfYear = true;
      }
      date = makeUTCDate(yearToUse, 0, config._dayOfYear);
      config._a[MONTH] = date.getUTCMonth();
      config._a[DATE] = date.getUTCDate();
    }
    // Default to current date.
    // * if no year, month, day of month are given, default to today
    // * if day of month is given, default month and year
    // * if month is given, default only year
    // * if year is given, don't default anything
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
      config._a[i] = input[i] = currentDate[i];
    }
    // Zero out whatever was not defaulted, including time
    for (; i < 7; i++) {
      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];
    }
    // Check for 24:00:00.000
    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
      config._nextDay = true;
      config._a[HOUR] = 0;
    }
    config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);
    // Apply timezone offset from input. The actual utcOffset can be changed
    // with parseZone.
    if (config._tzm != null) {
      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    }
    if (config._nextDay) {
      config._a[HOUR] = 24;
    }
  }
  function dateFromObject(config) {
    var normalizedInput;
    if (config._d) {
      return;
    }
    normalizedInput = normalizeObjectUnits(config._i);
    config._a = [
      normalizedInput.year,
      normalizedInput.month,
      normalizedInput.day || normalizedInput.date,
      normalizedInput.hour,
      normalizedInput.minute,
      normalizedInput.second,
      normalizedInput.millisecond
    ];
    dateFromConfig(config);
  }
  function currentDateArray(config) {
    var now = new Date();
    if (config._useUTC) {
      return [
        now.getUTCFullYear(),
        now.getUTCMonth(),
        now.getUTCDate()
      ];
    } else {
      return [
        now.getFullYear(),
        now.getMonth(),
        now.getDate()
      ];
    }
  }
  // date from string and format string
  function makeDateFromStringAndFormat(config) {
    if (config._f === moment.ISO_8601) {
      parseISO(config);
      return;
    }
    config._a = [];
    config._pf.empty = true;
    // This array is used to make a Date, either with `new Date` or `Date.UTC`
    var string = '' + config._i, i, parsedInput, tokens, token, skipped, stringLength = string.length, totalParsedInputLength = 0;
    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];
    for (i = 0; i < tokens.length; i++) {
      token = tokens[i];
      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
      if (parsedInput) {
        skipped = string.substr(0, string.indexOf(parsedInput));
        if (skipped.length > 0) {
          config._pf.unusedInput.push(skipped);
        }
        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
        totalParsedInputLength += parsedInput.length;
      }
      // don't parse if it's not a known token
      if (formatTokenFunctions[token]) {
        if (parsedInput) {
          config._pf.empty = false;
        } else {
          config._pf.unusedTokens.push(token);
        }
        addTimeToArrayFromToken(token, parsedInput, config);
      } else if (config._strict && !parsedInput) {
        config._pf.unusedTokens.push(token);
      }
    }
    // add remaining unparsed input length to the string
    config._pf.charsLeftOver = stringLength - totalParsedInputLength;
    if (string.length > 0) {
      config._pf.unusedInput.push(string);
    }
    // clear _12h flag if hour is <= 12
    if (config._pf.bigHour === true && config._a[HOUR] <= 12) {
      config._pf.bigHour = undefined;
    }
    // handle meridiem
    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
    dateFromConfig(config);
    checkOverflow(config);
  }
  function unescapeFormat(s) {
    return s.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
      return p1 || p2 || p3 || p4;
    });
  }
  // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
  function regexpEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
  }
  // date from string and array of format strings
  function makeDateFromStringAndArray(config) {
    var tempConfig, bestMoment, scoreToBeat, i, currentScore;
    if (config._f.length === 0) {
      config._pf.invalidFormat = true;
      config._d = new Date(NaN);
      return;
    }
    for (i = 0; i < config._f.length; i++) {
      currentScore = 0;
      tempConfig = copyConfig({}, config);
      if (config._useUTC != null) {
        tempConfig._useUTC = config._useUTC;
      }
      tempConfig._pf = defaultParsingFlags();
      tempConfig._f = config._f[i];
      makeDateFromStringAndFormat(tempConfig);
      if (!isValid(tempConfig)) {
        continue;
      }
      // if there is any input that was not parsed add a penalty for that format
      currentScore += tempConfig._pf.charsLeftOver;
      //or tokens
      currentScore += tempConfig._pf.unusedTokens.length * 10;
      tempConfig._pf.score = currentScore;
      if (scoreToBeat == null || currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
      }
    }
    extend(config, bestMoment || tempConfig);
  }
  // date from iso format
  function parseISO(config) {
    var i, l, string = config._i, match = isoRegex.exec(string);
    if (match) {
      config._pf.iso = true;
      for (i = 0, l = isoDates.length; i < l; i++) {
        if (isoDates[i][1].exec(string)) {
          // match[5] should be 'T' or undefined
          config._f = isoDates[i][0] + (match[6] || ' ');
          break;
        }
      }
      for (i = 0, l = isoTimes.length; i < l; i++) {
        if (isoTimes[i][1].exec(string)) {
          config._f += isoTimes[i][0];
          break;
        }
      }
      if (string.match(parseTokenTimezone)) {
        config._f += 'Z';
      }
      makeDateFromStringAndFormat(config);
    } else {
      config._isValid = false;
    }
  }
  // date from iso format or fallback
  function makeDateFromString(config) {
    parseISO(config);
    if (config._isValid === false) {
      delete config._isValid;
      moment.createFromInputFallback(config);
    }
  }
  function map(arr, fn) {
    var res = [], i;
    for (i = 0; i < arr.length; ++i) {
      res.push(fn(arr[i], i));
    }
    return res;
  }
  function makeDateFromInput(config) {
    var input = config._i, matched;
    if (input === undefined) {
      config._d = new Date();
    } else if (isDate(input)) {
      config._d = new Date(+input);
    } else if ((matched = aspNetJsonRegex.exec(input)) !== null) {
      config._d = new Date(+matched[1]);
    } else if (typeof input === 'string') {
      makeDateFromString(config);
    } else if (isArray(input)) {
      config._a = map(input.slice(0), function (obj) {
        return parseInt(obj, 10);
      });
      dateFromConfig(config);
    } else if (typeof input === 'object') {
      dateFromObject(config);
    } else if (typeof input === 'number') {
      // from milliseconds
      config._d = new Date(input);
    } else {
      moment.createFromInputFallback(config);
    }
  }
  function makeDate(y, m, d, h, M, s, ms) {
    //can't just apply() to create a date:
    //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
    var date = new Date(y, m, d, h, M, s, ms);
    //the date constructor doesn't accept years < 1970
    if (y < 1970) {
      date.setFullYear(y);
    }
    return date;
  }
  function makeUTCDate(y) {
    var date = new Date(Date.UTC.apply(null, arguments));
    if (y < 1970) {
      date.setUTCFullYear(y);
    }
    return date;
  }
  function parseWeekday(input, locale) {
    if (typeof input === 'string') {
      if (!isNaN(input)) {
        input = parseInt(input, 10);
      } else {
        input = locale.weekdaysParse(input);
        if (typeof input !== 'number') {
          return null;
        }
      }
    }
    return input;
  }
  /************************************
        Relative Time
    ************************************/
  // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
  }
  function relativeTime(posNegDuration, withoutSuffix, locale) {
    var duration = moment.duration(posNegDuration).abs(), seconds = round(duration.as('s')), minutes = round(duration.as('m')), hours = round(duration.as('h')), days = round(duration.as('d')), months = round(duration.as('M')), years = round(duration.as('y')), args = seconds < relativeTimeThresholds.s && [
        's',
        seconds
      ] || minutes === 1 && ['m'] || minutes < relativeTimeThresholds.m && [
        'mm',
        minutes
      ] || hours === 1 && ['h'] || hours < relativeTimeThresholds.h && [
        'hh',
        hours
      ] || days === 1 && ['d'] || days < relativeTimeThresholds.d && [
        'dd',
        days
      ] || months === 1 && ['M'] || months < relativeTimeThresholds.M && [
        'MM',
        months
      ] || years === 1 && ['y'] || [
        'yy',
        years
      ];
    args[2] = withoutSuffix;
    args[3] = +posNegDuration > 0;
    args[4] = locale;
    return substituteTimeAgo.apply({}, args);
  }
  /************************************
        Week of Year
    ************************************/
  // firstDayOfWeek       0 = sun, 6 = sat
  //                      the day of the week that starts the week
  //                      (usually sunday or monday)
  // firstDayOfWeekOfYear 0 = sun, 6 = sat
  //                      the first week is the week that contains the first
  //                      of this day of the week
  //                      (eg. ISO weeks use thursday (4))
  function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
    var end = firstDayOfWeekOfYear - firstDayOfWeek, daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(), adjustedMoment;
    if (daysToDayOfWeek > end) {
      daysToDayOfWeek -= 7;
    }
    if (daysToDayOfWeek < end - 7) {
      daysToDayOfWeek += 7;
    }
    adjustedMoment = moment(mom).add(daysToDayOfWeek, 'd');
    return {
      week: Math.ceil(adjustedMoment.dayOfYear() / 7),
      year: adjustedMoment.year()
    };
  }
  //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
  function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
    var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;
    d = d === 0 ? 7 : d;
    weekday = weekday != null ? weekday : firstDayOfWeek;
    daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);
    dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;
    return {
      year: dayOfYear > 0 ? year : year - 1,
      dayOfYear: dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear
    };
  }
  /************************************
        Top Level Functions
    ************************************/
  function makeMoment(config) {
    var input = config._i, format = config._f, res;
    config._locale = config._locale || moment.localeData(config._l);
    if (input === null || format === undefined && input === '') {
      return moment.invalid({ nullInput: true });
    }
    if (typeof input === 'string') {
      config._i = input = config._locale.preparse(input);
    }
    if (moment.isMoment(input)) {
      return new Moment(input, true);
    } else if (format) {
      if (isArray(format)) {
        makeDateFromStringAndArray(config);
      } else {
        makeDateFromStringAndFormat(config);
      }
    } else {
      makeDateFromInput(config);
    }
    res = new Moment(config);
    if (res._nextDay) {
      // Adding is smart enough around DST
      res.add(1, 'd');
      res._nextDay = undefined;
    }
    return res;
  }
  moment = function (input, format, locale, strict) {
    var c;
    if (typeof locale === 'boolean') {
      strict = locale;
      locale = undefined;
    }
    // object construction must be done this way.
    // https://github.com/moment/moment/issues/1423
    c = {};
    c._isAMomentObject = true;
    c._i = input;
    c._f = format;
    c._l = locale;
    c._strict = strict;
    c._isUTC = false;
    c._pf = defaultParsingFlags();
    return makeMoment(c);
  };
  moment.suppressDeprecationWarnings = false;
  moment.createFromInputFallback = deprecate('moment construction falls back to js Date. This is ' + 'discouraged and will be removed in upcoming major ' + 'release. Please refer to ' + 'https://github.com/moment/moment/issues/1407 for more info.', function (config) {
    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
  });
  // Pick a moment m from moments so that m[fn](other) is true for all
  // other. This relies on the function fn to be transitive.
  //
  // moments should either be an array of moment objects or an array, whose
  // first element is an array of moment objects.
  function pickBy(fn, moments) {
    var res, i;
    if (moments.length === 1 && isArray(moments[0])) {
      moments = moments[0];
    }
    if (!moments.length) {
      return moment();
    }
    res = moments[0];
    for (i = 1; i < moments.length; ++i) {
      if (moments[i][fn](res)) {
        res = moments[i];
      }
    }
    return res;
  }
  moment.min = function () {
    var args = [].slice.call(arguments, 0);
    return pickBy('isBefore', args);
  };
  moment.max = function () {
    var args = [].slice.call(arguments, 0);
    return pickBy('isAfter', args);
  };
  // creating with utc
  moment.utc = function (input, format, locale, strict) {
    var c;
    if (typeof locale === 'boolean') {
      strict = locale;
      locale = undefined;
    }
    // object construction must be done this way.
    // https://github.com/moment/moment/issues/1423
    c = {};
    c._isAMomentObject = true;
    c._useUTC = true;
    c._isUTC = true;
    c._l = locale;
    c._i = input;
    c._f = format;
    c._strict = strict;
    c._pf = defaultParsingFlags();
    return makeMoment(c).utc();
  };
  // creating with unix timestamp (in seconds)
  moment.unix = function (input) {
    return moment(input * 1000);
  };
  // duration
  moment.duration = function (input, key) {
    var duration = input,
      // matching against regexp is expensive, do it on demand
      match = null, sign, ret, parseIso, diffRes;
    if (moment.isDuration(input)) {
      duration = {
        ms: input._milliseconds,
        d: input._days,
        M: input._months
      };
    } else if (typeof input === 'number') {
      duration = {};
      if (key) {
        duration[key] = input;
      } else {
        duration.milliseconds = input;
      }
    } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {
      sign = match[1] === '-' ? -1 : 1;
      duration = {
        y: 0,
        d: toInt(match[DATE]) * sign,
        h: toInt(match[HOUR]) * sign,
        m: toInt(match[MINUTE]) * sign,
        s: toInt(match[SECOND]) * sign,
        ms: toInt(match[MILLISECOND]) * sign
      };
    } else if (!!(match = isoDurationRegex.exec(input))) {
      sign = match[1] === '-' ? -1 : 1;
      parseIso = function (inp) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
      };
      duration = {
        y: parseIso(match[2]),
        M: parseIso(match[3]),
        d: parseIso(match[4]),
        h: parseIso(match[5]),
        m: parseIso(match[6]),
        s: parseIso(match[7]),
        w: parseIso(match[8])
      };
    } else if (duration == null) {
      // checks for null or undefined
      duration = {};
    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
      diffRes = momentsDifference(moment(duration.from), moment(duration.to));
      duration = {};
      duration.ms = diffRes.milliseconds;
      duration.M = diffRes.months;
    }
    ret = new Duration(duration);
    if (moment.isDuration(input) && hasOwnProp(input, '_locale')) {
      ret._locale = input._locale;
    }
    return ret;
  };
  // version number
  moment.version = VERSION;
  // default format
  moment.defaultFormat = isoFormat;
  // constant that refers to the ISO standard
  moment.ISO_8601 = function () {
  };
  // Plugins that add properties should also add the key here (null value),
  // so we can properly clone ourselves.
  moment.momentProperties = momentProperties;
  // This function will be called whenever a moment is mutated.
  // It is intended to keep the offset in sync with the timezone.
  moment.updateOffset = function () {
  };
  // This function allows you to set a threshold for relative time strings
  moment.relativeTimeThreshold = function (threshold, limit) {
    if (relativeTimeThresholds[threshold] === undefined) {
      return false;
    }
    if (limit === undefined) {
      return relativeTimeThresholds[threshold];
    }
    relativeTimeThresholds[threshold] = limit;
    return true;
  };
  moment.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', function (key, value) {
    return moment.locale(key, value);
  });
  // This function will load locale and then set the global locale.  If
  // no arguments are passed in, it will simply return the current global
  // locale key.
  moment.locale = function (key, values) {
    var data;
    if (key) {
      if (typeof values !== 'undefined') {
        data = moment.defineLocale(key, values);
      } else {
        data = moment.localeData(key);
      }
      if (data) {
        moment.duration._locale = moment._locale = data;
      }
    }
    return moment._locale._abbr;
  };
  moment.defineLocale = function (name, values) {
    if (values !== null) {
      values.abbr = name;
      if (!locales[name]) {
        locales[name] = new Locale();
      }
      locales[name].set(values);
      // backwards compat for now: also set the locale
      moment.locale(name);
      return locales[name];
    } else {
      // useful for testing
      delete locales[name];
      return null;
    }
  };
  moment.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', function (key) {
    return moment.localeData(key);
  });
  // returns locale data
  moment.localeData = function (key) {
    var locale;
    if (key && key._locale && key._locale._abbr) {
      key = key._locale._abbr;
    }
    if (!key) {
      return moment._locale;
    }
    if (!isArray(key)) {
      //short-circuit everything else
      locale = loadLocale(key);
      if (locale) {
        return locale;
      }
      key = [key];
    }
    return chooseLocale(key);
  };
  // compare moment object
  moment.isMoment = function (obj) {
    return obj instanceof Moment || obj != null && hasOwnProp(obj, '_isAMomentObject');
  };
  // for typechecking Duration objects
  moment.isDuration = function (obj) {
    return obj instanceof Duration;
  };
  for (i = lists.length - 1; i >= 0; --i) {
    makeList(lists[i]);
  }
  moment.normalizeUnits = function (units) {
    return normalizeUnits(units);
  };
  moment.invalid = function (flags) {
    var m = moment.utc(NaN);
    if (flags != null) {
      extend(m._pf, flags);
    } else {
      m._pf.userInvalidated = true;
    }
    return m;
  };
  moment.parseZone = function () {
    return moment.apply(null, arguments).parseZone();
  };
  moment.parseTwoDigitYear = function (input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
  };
  moment.isDate = isDate;
  /************************************
        Moment Prototype
    ************************************/
  extend(moment.fn = Moment.prototype, {
    clone: function () {
      return moment(this);
    },
    valueOf: function () {
      return +this._d - (this._offset || 0) * 60000;
    },
    unix: function () {
      return Math.floor(+this / 1000);
    },
    toString: function () {
      return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    },
    toDate: function () {
      return this._offset ? new Date(+this) : this._d;
    },
    toISOString: function () {
      var m = moment(this).utc();
      if (0 < m.year() && m.year() <= 9999) {
        if ('function' === typeof Date.prototype.toISOString) {
          // native implementation is ~50x faster, use it when we can
          return this.toDate().toISOString();
        } else {
          return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
        }
      } else {
        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
      }
    },
    toArray: function () {
      var m = this;
      return [
        m.year(),
        m.month(),
        m.date(),
        m.hours(),
        m.minutes(),
        m.seconds(),
        m.milliseconds()
      ];
    },
    isValid: function () {
      return isValid(this);
    },
    isDSTShifted: function () {
      if (this._a) {
        return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;
      }
      return false;
    },
    parsingFlags: function () {
      return extend({}, this._pf);
    },
    invalidAt: function () {
      return this._pf.overflow;
    },
    utc: function (keepLocalTime) {
      return this.utcOffset(0, keepLocalTime);
    },
    local: function (keepLocalTime) {
      if (this._isUTC) {
        this.utcOffset(0, keepLocalTime);
        this._isUTC = false;
        if (keepLocalTime) {
          this.subtract(this._dateUtcOffset(), 'm');
        }
      }
      return this;
    },
    format: function (inputString) {
      var output = formatMoment(this, inputString || moment.defaultFormat);
      return this.localeData().postformat(output);
    },
    add: createAdder(1, 'add'),
    subtract: createAdder(-1, 'subtract'),
    diff: function (input, units, asFloat) {
      var that = makeAs(input, this), zoneDiff = (that.utcOffset() - this.utcOffset()) * 60000, anchor, diff, output, daysAdjust;
      units = normalizeUnits(units);
      if (units === 'year' || units === 'month' || units === 'quarter') {
        output = monthDiff(this, that);
        if (units === 'quarter') {
          output = output / 3;
        } else if (units === 'year') {
          output = output / 12;
        }
      } else {
        diff = this - that;
        output = units === 'second' ? diff / 1000 : units === 'minute' ? diff / 60000 : units === 'hour' ? diff / 3600000 : units === 'day' ? (diff - zoneDiff) / 86400000 : units === 'week' ? (diff - zoneDiff) / 604800000 : diff;
      }
      return asFloat ? output : absRound(output);
    },
    from: function (time, withoutSuffix) {
      return moment.duration({
        to: this,
        from: time
      }).locale(this.locale()).humanize(!withoutSuffix);
    },
    fromNow: function (withoutSuffix) {
      return this.from(moment(), withoutSuffix);
    },
    calendar: function (time) {
      // We want to compare the start of today, vs this.
      // Getting start-of-today depends on whether we're locat/utc/offset
      // or not.
      var now = time || moment(), sod = makeAs(now, this).startOf('day'), diff = this.diff(sod, 'days', true), format = diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
      return this.format(this.localeData().calendar(format, this, moment(now)));
    },
    isLeapYear: function () {
      return isLeapYear(this.year());
    },
    isDST: function () {
      return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
    },
    day: function (input) {
      var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
      if (input != null) {
        input = parseWeekday(input, this.localeData());
        return this.add(input - day, 'd');
      } else {
        return day;
      }
    },
    month: makeAccessor('Month', true),
    startOf: function (units) {
      units = normalizeUnits(units);
      // the following switch intentionally omits break keywords
      // to utilize falling through the cases.
      switch (units) {
      case 'year':
        this.month(0);
      /* falls through */
      case 'quarter':
      case 'month':
        this.date(1);
      /* falls through */
      case 'week':
      case 'isoWeek':
      case 'day':
        this.hours(0);
      /* falls through */
      case 'hour':
        this.minutes(0);
      /* falls through */
      case 'minute':
        this.seconds(0);
      /* falls through */
      case 'second':
        this.milliseconds(0);  /* falls through */
      }
      // weeks are a special case
      if (units === 'week') {
        this.weekday(0);
      } else if (units === 'isoWeek') {
        this.isoWeekday(1);
      }
      // quarters are also special
      if (units === 'quarter') {
        this.month(Math.floor(this.month() / 3) * 3);
      }
      return this;
    },
    endOf: function (units) {
      units = normalizeUnits(units);
      if (units === undefined || units === 'millisecond') {
        return this;
      }
      return this.startOf(units).add(1, units === 'isoWeek' ? 'week' : units).subtract(1, 'ms');
    },
    isAfter: function (input, units) {
      var inputMs;
      units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
      if (units === 'millisecond') {
        input = moment.isMoment(input) ? input : moment(input);
        return +this > +input;
      } else {
        inputMs = moment.isMoment(input) ? +input : +moment(input);
        return inputMs < +this.clone().startOf(units);
      }
    },
    isBefore: function (input, units) {
      var inputMs;
      units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
      if (units === 'millisecond') {
        input = moment.isMoment(input) ? input : moment(input);
        return +this < +input;
      } else {
        inputMs = moment.isMoment(input) ? +input : +moment(input);
        return +this.clone().endOf(units) < inputMs;
      }
    },
    isBetween: function (from, to, units) {
      return this.isAfter(from, units) && this.isBefore(to, units);
    },
    isSame: function (input, units) {
      var inputMs;
      units = normalizeUnits(units || 'millisecond');
      if (units === 'millisecond') {
        input = moment.isMoment(input) ? input : moment(input);
        return +this === +input;
      } else {
        inputMs = +moment(input);
        return +this.clone().startOf(units) <= inputMs && inputMs <= +this.clone().endOf(units);
      }
    },
    min: deprecate('moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548', function (other) {
      other = moment.apply(null, arguments);
      return other < this ? this : other;
    }),
    max: deprecate('moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548', function (other) {
      other = moment.apply(null, arguments);
      return other > this ? this : other;
    }),
    zone: deprecate('moment().zone is deprecated, use moment().utcOffset instead. ' + 'https://github.com/moment/moment/issues/1779', function (input, keepLocalTime) {
      if (input != null) {
        if (typeof input !== 'string') {
          input = -input;
        }
        this.utcOffset(input, keepLocalTime);
        return this;
      } else {
        return -this.utcOffset();
      }
    }),
    utcOffset: function (input, keepLocalTime) {
      var offset = this._offset || 0, localAdjust;
      if (input != null) {
        if (typeof input === 'string') {
          input = utcOffsetFromString(input);
        }
        if (Math.abs(input) < 16) {
          input = input * 60;
        }
        if (!this._isUTC && keepLocalTime) {
          localAdjust = this._dateUtcOffset();
        }
        this._offset = input;
        this._isUTC = true;
        if (localAdjust != null) {
          this.add(localAdjust, 'm');
        }
        if (offset !== input) {
          if (!keepLocalTime || this._changeInProgress) {
            addOrSubtractDurationFromMoment(this, moment.duration(input - offset, 'm'), 1, false);
          } else if (!this._changeInProgress) {
            this._changeInProgress = true;
            moment.updateOffset(this, true);
            this._changeInProgress = null;
          }
        }
        return this;
      } else {
        return this._isUTC ? offset : this._dateUtcOffset();
      }
    },
    isLocal: function () {
      return !this._isUTC;
    },
    isUtcOffset: function () {
      return this._isUTC;
    },
    isUtc: function () {
      return this._isUTC && this._offset === 0;
    },
    zoneAbbr: function () {
      return this._isUTC ? 'UTC' : '';
    },
    zoneName: function () {
      return this._isUTC ? 'Coordinated Universal Time' : '';
    },
    parseZone: function () {
      if (this._tzm) {
        this.utcOffset(this._tzm);
      } else if (typeof this._i === 'string') {
        this.utcOffset(utcOffsetFromString(this._i));
      }
      return this;
    },
    hasAlignedHourOffset: function (input) {
      if (!input) {
        input = 0;
      } else {
        input = moment(input).utcOffset();
      }
      return (this.utcOffset() - input) % 60 === 0;
    },
    daysInMonth: function () {
      return daysInMonth(this.year(), this.month());
    },
    dayOfYear: function (input) {
      var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 86400000) + 1;
      return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    },
    quarter: function (input) {
      return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    },
    weekYear: function (input) {
      var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
      return input == null ? year : this.add(input - year, 'y');
    },
    isoWeekYear: function (input) {
      var year = weekOfYear(this, 1, 4).year;
      return input == null ? year : this.add(input - year, 'y');
    },
    week: function (input) {
      var week = this.localeData().week(this);
      return input == null ? week : this.add((input - week) * 7, 'd');
    },
    isoWeek: function (input) {
      var week = weekOfYear(this, 1, 4).week;
      return input == null ? week : this.add((input - week) * 7, 'd');
    },
    weekday: function (input) {
      var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
      return input == null ? weekday : this.add(input - weekday, 'd');
    },
    isoWeekday: function (input) {
      // behaves the same as moment#day except
      // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
      // as a setter, sunday should belong to the previous week.
      return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
    },
    isoWeeksInYear: function () {
      return weeksInYear(this.year(), 1, 4);
    },
    weeksInYear: function () {
      var weekInfo = this.localeData()._week;
      return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    },
    get: function (units) {
      units = normalizeUnits(units);
      return this[units]();
    },
    set: function (units, value) {
      var unit;
      if (typeof units === 'object') {
        for (unit in units) {
          this.set(unit, units[unit]);
        }
      } else {
        units = normalizeUnits(units);
        if (typeof this[units] === 'function') {
          this[units](value);
        }
      }
      return this;
    },
    locale: function (key) {
      var newLocaleData;
      if (key === undefined) {
        return this._locale._abbr;
      } else {
        newLocaleData = moment.localeData(key);
        if (newLocaleData != null) {
          this._locale = newLocaleData;
        }
        return this;
      }
    },
    lang: deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {
      if (key === undefined) {
        return this.localeData();
      } else {
        return this.locale(key);
      }
    }),
    localeData: function () {
      return this._locale;
    },
    _dateUtcOffset: function () {
      // On Firefox.24 Date#getTimezoneOffset returns a floating point.
      // https://github.com/moment/moment/pull/1871
      return -Math.round(this._d.getTimezoneOffset() / 15) * 15;
    }
  });
  function rawMonthSetter(mom, value) {
    var dayOfMonth;
    // TODO: Move this out of here!
    if (typeof value === 'string') {
      value = mom.localeData().monthsParse(value);
      // TODO: Another silent failure?
      if (typeof value !== 'number') {
        return mom;
      }
    }
    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
  }
  function rawGetter(mom, unit) {
    return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
  }
  function rawSetter(mom, unit, value) {
    if (unit === 'Month') {
      return rawMonthSetter(mom, value);
    } else {
      return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
    }
  }
  function makeAccessor(unit, keepTime) {
    return function (value) {
      if (value != null) {
        rawSetter(this, unit, value);
        moment.updateOffset(this, keepTime);
        return this;
      } else {
        return rawGetter(this, unit);
      }
    };
  }
  moment.fn.millisecond = moment.fn.milliseconds = makeAccessor('Milliseconds', false);
  moment.fn.second = moment.fn.seconds = makeAccessor('Seconds', false);
  moment.fn.minute = moment.fn.minutes = makeAccessor('Minutes', false);
  // Setting the hour should keep the time, because the user explicitly
  // specified which hour he wants. So trying to maintain the same hour (in
  // a new timezone) makes sense. Adding/subtracting hours does not follow
  // this rule.
  moment.fn.hour = moment.fn.hours = makeAccessor('Hours', true);
  // moment.fn.month is defined separately
  moment.fn.date = makeAccessor('Date', true);
  moment.fn.dates = deprecate('dates accessor is deprecated. Use date instead.', makeAccessor('Date', true));
  moment.fn.year = makeAccessor('FullYear', true);
  moment.fn.years = deprecate('years accessor is deprecated. Use year instead.', makeAccessor('FullYear', true));
  // add plural methods
  moment.fn.days = moment.fn.day;
  moment.fn.months = moment.fn.month;
  moment.fn.weeks = moment.fn.week;
  moment.fn.isoWeeks = moment.fn.isoWeek;
  moment.fn.quarters = moment.fn.quarter;
  // add aliased format methods
  moment.fn.toJSON = moment.fn.toISOString;
  // alias isUtc for dev-friendliness
  moment.fn.isUTC = moment.fn.isUtc;
  /************************************
        Duration Prototype
    ************************************/
  function daysToYears(days) {
    // 400 years have 146097 days (taking into account leap year rules)
    return days * 400 / 146097;
  }
  function yearsToDays(years) {
    // years * 365 + absRound(years / 4) -
    //     absRound(years / 100) + absRound(years / 400);
    return years * 146097 / 400;
  }
  extend(moment.duration.fn = Duration.prototype, {
    _bubble: function () {
      var milliseconds = this._milliseconds, days = this._days, months = this._months, data = this._data, seconds, minutes, hours, years = 0;
      // The following code bubbles up values, see the tests for
      // examples of what that means.
      data.milliseconds = milliseconds % 1000;
      seconds = absRound(milliseconds / 1000);
      data.seconds = seconds % 60;
      minutes = absRound(seconds / 60);
      data.minutes = minutes % 60;
      hours = absRound(minutes / 60);
      data.hours = hours % 24;
      days += absRound(hours / 24);
      // Accurately convert days to years, assume start from year 0.
      years = absRound(daysToYears(days));
      days -= absRound(yearsToDays(years));
      // 30 days to a month
      // TODO (iskren): Use anchor date (like 1st Jan) to compute this.
      months += absRound(days / 30);
      days %= 30;
      // 12 months -> 1 year
      years += absRound(months / 12);
      months %= 12;
      data.days = days;
      data.months = months;
      data.years = years;
    },
    abs: function () {
      this._milliseconds = Math.abs(this._milliseconds);
      this._days = Math.abs(this._days);
      this._months = Math.abs(this._months);
      this._data.milliseconds = Math.abs(this._data.milliseconds);
      this._data.seconds = Math.abs(this._data.seconds);
      this._data.minutes = Math.abs(this._data.minutes);
      this._data.hours = Math.abs(this._data.hours);
      this._data.months = Math.abs(this._data.months);
      this._data.years = Math.abs(this._data.years);
      return this;
    },
    weeks: function () {
      return absRound(this.days() / 7);
    },
    valueOf: function () {
      return this._milliseconds + this._days * 86400000 + this._months % 12 * 2592000000 + toInt(this._months / 12) * 31536000000;
    },
    humanize: function (withSuffix) {
      var output = relativeTime(this, !withSuffix, this.localeData());
      if (withSuffix) {
        output = this.localeData().pastFuture(+this, output);
      }
      return this.localeData().postformat(output);
    },
    add: function (input, val) {
      // supports only 2.0-style add(1, 's') or add(moment)
      var dur = moment.duration(input, val);
      this._milliseconds += dur._milliseconds;
      this._days += dur._days;
      this._months += dur._months;
      this._bubble();
      return this;
    },
    subtract: function (input, val) {
      var dur = moment.duration(input, val);
      this._milliseconds -= dur._milliseconds;
      this._days -= dur._days;
      this._months -= dur._months;
      this._bubble();
      return this;
    },
    get: function (units) {
      units = normalizeUnits(units);
      return this[units.toLowerCase() + 's']();
    },
    as: function (units) {
      var days, months;
      units = normalizeUnits(units);
      if (units === 'month' || units === 'year') {
        days = this._days + this._milliseconds / 86400000;
        months = this._months + daysToYears(days) * 12;
        return units === 'month' ? months : months / 12;
      } else {
        // handle milliseconds separately because of floating point math errors (issue #1867)
        days = this._days + Math.round(yearsToDays(this._months / 12));
        switch (units) {
        case 'week':
          return days / 7 + this._milliseconds / 604800000;
        case 'day':
          return days + this._milliseconds / 86400000;
        case 'hour':
          return days * 24 + this._milliseconds / 3600000;
        case 'minute':
          return days * 24 * 60 + this._milliseconds / 60000;
        case 'second':
          return days * 24 * 60 * 60 + this._milliseconds / 1000;
        // Math.floor prevents floating point math errors here
        case 'millisecond':
          return Math.floor(days * 24 * 60 * 60 * 1000) + this._milliseconds;
        default:
          throw new Error('Unknown unit ' + units);
        }
      }
    },
    lang: moment.fn.lang,
    locale: moment.fn.locale,
    toIsoString: deprecate('toIsoString() is deprecated. Please use toISOString() instead ' + '(notice the capitals)', function () {
      return this.toISOString();
    }),
    toISOString: function () {
      // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
      var years = Math.abs(this.years()), months = Math.abs(this.months()), days = Math.abs(this.days()), hours = Math.abs(this.hours()), minutes = Math.abs(this.minutes()), seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);
      if (!this.asSeconds()) {
        // this is the same as C#'s (Noda) and python (isodate)...
        // but not other JS (goog.date)
        return 'P0D';
      }
      return (this.asSeconds() < 0 ? '-' : '') + 'P' + (years ? years + 'Y' : '') + (months ? months + 'M' : '') + (days ? days + 'D' : '') + (hours || minutes || seconds ? 'T' : '') + (hours ? hours + 'H' : '') + (minutes ? minutes + 'M' : '') + (seconds ? seconds + 'S' : '');
    },
    localeData: function () {
      return this._locale;
    },
    toJSON: function () {
      return this.toISOString();
    }
  });
  moment.duration.fn.toString = moment.duration.fn.toISOString;
  function makeDurationGetter(name) {
    moment.duration.fn[name] = function () {
      return this._data[name];
    };
  }
  for (i in unitMillisecondFactors) {
    if (hasOwnProp(unitMillisecondFactors, i)) {
      makeDurationGetter(i.toLowerCase());
    }
  }
  moment.duration.fn.asMilliseconds = function () {
    return this.as('ms');
  };
  moment.duration.fn.asSeconds = function () {
    return this.as('s');
  };
  moment.duration.fn.asMinutes = function () {
    return this.as('m');
  };
  moment.duration.fn.asHours = function () {
    return this.as('h');
  };
  moment.duration.fn.asDays = function () {
    return this.as('d');
  };
  moment.duration.fn.asWeeks = function () {
    return this.as('weeks');
  };
  moment.duration.fn.asMonths = function () {
    return this.as('M');
  };
  moment.duration.fn.asYears = function () {
    return this.as('y');
  };
  /************************************
        Default Locale
    ************************************/
  // Set default locale, other locale will inherit from English.
  moment.locale('en', {
    ordinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal: function (number) {
      var b = number % 10, output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';
      return number + output;
    }
  });
  /* EMBED_LOCALES */
  /************************************
        Exposing Moment
    ************************************/
  function makeGlobal(shouldDeprecate) {
    /*global ender:false */
    if (typeof ender !== 'undefined') {
      return;
    }
    oldGlobalMoment = globalScope.moment;
    if (shouldDeprecate) {
      globalScope.moment = deprecate('Accessing Moment through the global scope is ' + 'deprecated, and will be removed in an upcoming ' + 'release.', moment);
    } else {
      globalScope.moment = moment;
    }
  }
  // CommonJS module is defined
  if (hasModule) {
    module.exports = moment;
  } else if (typeof define === 'function' && define.amd) {
    define(function (require, exports, module) {
      if (module.config && module.config() && module.config().noGlobal === true) {
        // release the global variable
        globalScope.moment = oldGlobalMoment;
      }
      return moment;
    });
    makeGlobal(true);
  } else {
    makeGlobal();
  }
}.call(this));
// moment.js locale configuration
// locale : chinese (zh-cn)
// author : suupic : https://github.com/suupic
// author : Zeno Zeng : https://github.com/zenozeng
(function (factory) {
  if (typeof define === 'function' && define.amd) {
    define(['moment'], factory);  // AMD
  } else if (typeof exports === 'object') {
    module.exports = factory(require('../moment'));  // Node
  } else {
    factory((typeof global !== 'undefined' ? global : this).moment);  // node or other global
  }
}(function (moment) {
  return moment.defineLocale('zh-cn', {
    months: '\u4e00\u6708_\u4e8c\u6708_\u4e09\u6708_\u56db\u6708_\u4e94\u6708_\u516d\u6708_\u4e03\u6708_\u516b\u6708_\u4e5d\u6708_\u5341\u6708_\u5341\u4e00\u6708_\u5341\u4e8c\u6708'.split('_'),
    monthsShort: '1\u6708_2\u6708_3\u6708_4\u6708_5\u6708_6\u6708_7\u6708_8\u6708_9\u6708_10\u6708_11\u6708_12\u6708'.split('_'),
    weekdays: '\u661f\u671f\u65e5_\u661f\u671f\u4e00_\u661f\u671f\u4e8c_\u661f\u671f\u4e09_\u661f\u671f\u56db_\u661f\u671f\u4e94_\u661f\u671f\u516d'.split('_'),
    weekdaysShort: '\u5468\u65e5_\u5468\u4e00_\u5468\u4e8c_\u5468\u4e09_\u5468\u56db_\u5468\u4e94_\u5468\u516d'.split('_'),
    weekdaysMin: '\u65e5_\u4e00_\u4e8c_\u4e09_\u56db_\u4e94_\u516d'.split('_'),
    longDateFormat: {
      LT: 'Ah\u70b9mm',
      LTS: 'Ah\u70b9m\u5206s\u79d2',
      L: 'YYYY-MM-DD',
      LL: 'YYYY\u5e74MMMD\u65e5',
      LLL: 'YYYY\u5e74MMMD\u65e5LT',
      LLLL: 'YYYY\u5e74MMMD\u65e5ddddLT',
      l: 'YYYY-MM-DD',
      ll: 'YYYY\u5e74MMMD\u65e5',
      lll: 'YYYY\u5e74MMMD\u65e5LT',
      llll: 'YYYY\u5e74MMMD\u65e5ddddLT'
    },
    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function (hour, meridiem) {
      if (hour === 12) {
        hour = 0;
      }
      if (meridiem === '\u51cc\u6668' || meridiem === '\u65e9\u4e0a' || meridiem === '\u4e0a\u5348') {
        return hour;
      } else if (meridiem === '\u4e0b\u5348' || meridiem === '\u665a\u4e0a') {
        return hour + 12;
      } else {
        // '中午'
        return hour >= 11 ? hour : hour + 12;
      }
    },
    meridiem: function (hour, minute, isLower) {
      var hm = hour * 100 + minute;
      if (hm < 600) {
        return '\u51cc\u6668';
      } else if (hm < 900) {
        return '\u65e9\u4e0a';
      } else if (hm < 1130) {
        return '\u4e0a\u5348';
      } else if (hm < 1230) {
        return '\u4e2d\u5348';
      } else if (hm < 1800) {
        return '\u4e0b\u5348';
      } else {
        return '\u665a\u4e0a';
      }
    },
    calendar: {
      sameDay: function () {
        return this.minutes() === 0 ? '[\u4eca\u5929]Ah[\u70b9\u6574]' : '[\u4eca\u5929]LT';
      },
      nextDay: function () {
        return this.minutes() === 0 ? '[\u660e\u5929]Ah[\u70b9\u6574]' : '[\u660e\u5929]LT';
      },
      lastDay: function () {
        return this.minutes() === 0 ? '[\u6628\u5929]Ah[\u70b9\u6574]' : '[\u6628\u5929]LT';
      },
      nextWeek: function () {
        var startOfWeek, prefix;
        startOfWeek = moment().startOf('week');
        prefix = this.unix() - startOfWeek.unix() >= 7 * 24 * 3600 ? '[\u4e0b]' : '[\u672c]';
        return this.minutes() === 0 ? prefix + 'dddAh\u70b9\u6574' : prefix + 'dddAh\u70b9mm';
      },
      lastWeek: function () {
        var startOfWeek, prefix;
        startOfWeek = moment().startOf('week');
        prefix = this.unix() < startOfWeek.unix() ? '[\u4e0a]' : '[\u672c]';
        return this.minutes() === 0 ? prefix + 'dddAh\u70b9\u6574' : prefix + 'dddAh\u70b9mm';
      },
      sameElse: 'LL'
    },
    ordinalParse: /\d{1,2}(日|月|周)/,
    ordinal: function (number, period) {
      switch (period) {
      case 'd':
      case 'D':
      case 'DDD':
        return number + '\u65e5';
      case 'M':
        return number + '\u6708';
      case 'w':
      case 'W':
        return number + '\u5468';
      default:
        return number;
      }
    },
    relativeTime: {
      future: '%s\u5185',
      past: '%s\u524d',
      s: '\u51e0\u79d2',
      m: '1\u5206\u949f',
      mm: '%d\u5206\u949f',
      h: '1\u5c0f\u65f6',
      hh: '%d\u5c0f\u65f6',
      d: '1\u5929',
      dd: '%d\u5929',
      M: '1\u4e2a\u6708',
      MM: '%d\u4e2a\u6708',
      y: '1\u5e74',
      yy: '%d\u5e74'
    },
    week: {
      dow: 1,
      doy: 4
    }
  });
}));
!function (a, b) {
  'use strict';
  if ('function' == typeof define && define.amd)
    define([
      'jquery',
      'moment'
    ], b);
  else if ('object' == typeof exports)
    b(require('jquery'), require('moment'));
  else {
    if (!jQuery)
      throw new Error('bootstrap-datetimepicker requires jQuery to be loaded first');
    if (!moment)
      throw new Error('bootstrap-datetimepicker requires moment.js to be loaded first');
    b(a.jQuery, moment);
  }
}(this, function (a, b) {
  'use strict';
  if ('undefined' == typeof b)
    throw new Error('momentjs is required');
  var c = 0, d = function (d, e) {
      var f, g = a.fn.datetimepicker.defaults, h = {
          time: 'glyphicon glyphicon-time',
          date: 'glyphicon glyphicon-calendar',
          up: 'glyphicon glyphicon-chevron-up',
          down: 'glyphicon glyphicon-chevron-down'
        }, i = this, j = !1, k = function () {
          var f, j, k = !1;
          if (i.options = a.extend({}, g, e), i.options.icons = a.extend({}, h, i.options.icons), i.element = a(d), m(), !i.options.pickTime && !i.options.pickDate)
            throw new Error('Must choose at least one picker');
          if (i.id = c++, b.locale(i.options.language), i.date = b(), i.unset = !1, i.isInput = i.element.is('input'), i.component = !1, i.element.hasClass('input-group') && (i.component = i.element.find(0 === i.element.find('.datepickerbutton').size() ? '[class^="input-group-"]' : '.datepickerbutton')), i.format = i.options.format, f = b().localeData(), i.format || (i.format = i.options.pickDate ? f.longDateFormat('L') : '', i.options.pickDate && i.options.pickTime && (i.format += ' '), i.format += i.options.pickTime ? f.longDateFormat('LT') : '', i.options.useSeconds && (-1 !== f.longDateFormat('LT').indexOf(' A') ? i.format = i.format.split(' A')[0] + ':ss A' : i.format += ':ss')), i.use24hours = i.format.toLowerCase().indexOf('a') < 0 && i.format.indexOf('h') < 0, i.component && (k = i.component.find('span')), i.options.pickTime && k && k.addClass(i.options.icons.time), i.options.pickDate && k && (k.removeClass(i.options.icons.time), k.addClass(i.options.icons.date)), i.options.widgetParent = 'string' == typeof i.options.widgetParent && i.options.widgetParent || i.element.parents().filter(function () {
              return 'scroll' === a(this).css('overflow-y');
            }).get(0) || 'body', i.widget = a(Q()).appendTo(i.options.widgetParent), i.minViewMode = i.options.minViewMode || 0, 'string' == typeof i.minViewMode)
            switch (i.minViewMode) {
            case 'months':
              i.minViewMode = 1;
              break;
            case 'years':
              i.minViewMode = 2;
              break;
            default:
              i.minViewMode = 0;
            }
          if (i.viewMode = i.options.viewMode || 0, 'string' == typeof i.viewMode)
            switch (i.viewMode) {
            case 'months':
              i.viewMode = 1;
              break;
            case 'years':
              i.viewMode = 2;
              break;
            default:
              i.viewMode = 0;
            }
          i.viewMode = Math.max(i.viewMode, i.minViewMode), i.options.disabledDates = O(i.options.disabledDates), i.options.enabledDates = O(i.options.enabledDates), i.startViewMode = i.viewMode, i.setMinDate(i.options.minDate), i.setMaxDate(i.options.maxDate), r(), s(), u(), v(), w(), q(), E(), l().prop('disabled') || F(), '' !== i.options.defaultDate && '' === l().val() && i.setValue(i.options.defaultDate), 1 !== i.options.minuteStepping && (j = i.options.minuteStepping, i.date.minutes(Math.round(i.date.minutes() / j) * j % 60).seconds(0));
        }, l = function () {
          var a;
          if (i.isInput)
            return i.element;
          if (a = i.element.find('.datepickerinput'), 0 === a.size())
            a = i.element.find('input');
          else if (!a.is('input'))
            throw new Error('CSS class "datepickerinput" cannot be applied to non input element');
          return a;
        }, m = function () {
          var a;
          a = i.element.is('input') ? i.element.data() : i.element.find('input').data(), void 0 !== a.dateFormat && (i.options.format = a.dateFormat), void 0 !== a.datePickdate && (i.options.pickDate = a.datePickdate), void 0 !== a.datePicktime && (i.options.pickTime = a.datePicktime), void 0 !== a.dateUseminutes && (i.options.useMinutes = a.dateUseminutes), void 0 !== a.dateUseseconds && (i.options.useSeconds = a.dateUseseconds), void 0 !== a.dateUsecurrent && (i.options.useCurrent = a.dateUsecurrent), void 0 !== a.calendarWeeks && (i.options.calendarWeeks = a.calendarWeeks), void 0 !== a.dateMinutestepping && (i.options.minuteStepping = a.dateMinutestepping), void 0 !== a.dateMindate && (i.options.minDate = a.dateMindate), void 0 !== a.dateMaxdate && (i.options.maxDate = a.dateMaxdate), void 0 !== a.dateShowtoday && (i.options.showToday = a.dateShowtoday), void 0 !== a.dateCollapse && (i.options.collapse = a.dateCollapse), void 0 !== a.dateLanguage && (i.options.language = a.dateLanguage), void 0 !== a.dateDefaultdate && (i.options.defaultDate = a.dateDefaultdate), void 0 !== a.dateDisableddates && (i.options.disabledDates = a.dateDisableddates), void 0 !== a.dateEnableddates && (i.options.enabledDates = a.dateEnableddates), void 0 !== a.dateIcons && (i.options.icons = a.dateIcons), void 0 !== a.dateUsestrict && (i.options.useStrict = a.dateUsestrict), void 0 !== a.dateDirection && (i.options.direction = a.dateDirection), void 0 !== a.dateSidebyside && (i.options.sideBySide = a.dateSidebyside), void 0 !== a.dateDaysofweekdisabled && (i.options.daysOfWeekDisabled = a.dateDaysofweekdisabled);
        }, n = function () {
          var b, c = 'absolute', d = i.component ? i.component.offset() : i.element.offset(), e = a(window);
          i.width = i.component ? i.component.outerWidth() : i.element.outerWidth(), d.top = d.top + i.element.outerHeight(), 'up' === i.options.direction ? b = 'top' : 'bottom' === i.options.direction ? b = 'bottom' : 'auto' === i.options.direction && (b = d.top + i.widget.height() > e.height() + e.scrollTop() && i.widget.height() + i.element.outerHeight() < d.top ? 'top' : 'bottom'), 'top' === b ? (d.bottom = e.height() - d.top + i.element.outerHeight() + 3, i.widget.addClass('top').removeClass('bottom')) : (d.top += 1, i.widget.addClass('bottom').removeClass('top')), void 0 !== i.options.width && i.widget.width(i.options.width), 'left' === i.options.orientation && (i.widget.addClass('left-oriented'), d.left = d.left - i.widget.width() + 20), J() && (c = 'fixed', d.top -= e.scrollTop(), d.left -= e.scrollLeft()), e.width() < d.left + i.widget.outerWidth() ? (d.right = e.width() - d.left - i.width, d.left = 'auto', i.widget.addClass('pull-right')) : (d.right = 'auto', i.widget.removeClass('pull-right')), i.widget.css('top' === b ? {
            position: c,
            bottom: d.bottom,
            top: 'auto',
            left: d.left,
            right: d.right
          } : {
            position: c,
            top: d.top,
            bottom: 'auto',
            left: d.left,
            right: d.right
          });
        }, o = function (a, c) {
          (!b(i.date).isSame(b(a)) || j) && (j = !1, i.element.trigger({
            type: 'dp.change',
            date: b(i.date),
            oldDate: b(a)
          }), 'change' !== c && i.element.change());
        }, p = function (a) {
          j = !0, i.element.trigger({
            type: 'dp.error',
            date: b(a, i.format, i.options.useStrict)
          });
        }, q = function (a) {
          b.locale(i.options.language);
          var c = a;
          c || (c = l().val(), c && (i.date = b(c, i.format, i.options.useStrict)), i.date || (i.date = b())), i.viewDate = b(i.date).startOf('month'), t(), x();
        }, r = function () {
          b.locale(i.options.language);
          var c, d = a('<tr>'), e = b.weekdaysMin();
          if (i.options.calendarWeeks === !0 && d.append('<th class="cw">#</th>'), 0 === b().localeData()._week.dow)
            for (c = 0; 7 > c; c++)
              d.append('<th class="dow">' + e[c] + '</th>');
          else
            for (c = 1; 8 > c; c++)
              d.append(7 === c ? '<th class="dow">' + e[0] + '</th>' : '<th class="dow">' + e[c] + '</th>');
          i.widget.find('.datepicker-days thead').append(d);
        }, s = function () {
          b.locale(i.options.language);
          var a, c = '', d = b.monthsShort();
          for (a = 0; 12 > a; a++)
            c += '<span class="month">' + d[a] + '</span>';
          i.widget.find('.datepicker-months td').append(c);
        }, t = function () {
          if (i.options.pickDate) {
            b.locale(i.options.language);
            var c, d, e, f, g, h, j, k, l, m = i.viewDate.year(), n = i.viewDate.month(), o = i.options.minDate.year(), p = i.options.minDate.month(), q = i.options.maxDate.year(), r = i.options.maxDate.month(), s = [], t = b.months();
            for (i.widget.find('.datepicker-days').find('.disabled').removeClass('disabled'), i.widget.find('.datepicker-months').find('.disabled').removeClass('disabled'), i.widget.find('.datepicker-years').find('.disabled').removeClass('disabled'), i.widget.find('.datepicker-days th:eq(1)').text(t[n] + ' ' + m), d = b(i.viewDate, i.format, i.options.useStrict).subtract(1, 'months'), j = d.daysInMonth(), d.date(j).startOf('week'), (m === o && p >= n || o > m) && i.widget.find('.datepicker-days th:eq(0)').addClass('disabled'), (m === q && n >= r || m > q) && i.widget.find('.datepicker-days th:eq(2)').addClass('disabled'), e = b(d).add(42, 'd'); d.isBefore(e);) {
              if (d.weekday() === b().startOf('week').weekday() && (f = a('<tr>'), s.push(f), i.options.calendarWeeks === !0 && f.append('<td class="cw">' + d.week() + '</td>')), g = '', d.year() < m || d.year() === m && d.month() < n ? g += ' old' : (d.year() > m || d.year() === m && d.month() > n) && (g += ' new'), d.isSame(b({
                  y: i.date.year(),
                  M: i.date.month(),
                  d: i.date.date()
                })) && (g += ' active'), (M(d, 'day') || !N(d)) && (g += ' disabled'), i.options.showToday === !0 && d.isSame(b(), 'day') && (g += ' today'), i.options.daysOfWeekDisabled)
                for (h = 0; h < i.options.daysOfWeekDisabled.length; h++)
                  if (d.day() === i.options.daysOfWeekDisabled[h]) {
                    g += ' disabled';
                    break;
                  }
              f.append('<td class="day' + g + '">' + d.date() + '</td>'), c = d.date(), d.add(1, 'd'), c === d.date() && d.add(1, 'd');
            }
            for (i.widget.find('.datepicker-days tbody').empty().append(s), l = i.date.year(), t = i.widget.find('.datepicker-months').find('th:eq(1)').text(m).end().find('span').removeClass('active'), l === m && t.eq(i.date.month()).addClass('active'), o > m - 1 && i.widget.find('.datepicker-months th:eq(0)').addClass('disabled'), m + 1 > q && i.widget.find('.datepicker-months th:eq(2)').addClass('disabled'), h = 0; 12 > h; h++)
              m === o && p > h || o > m ? a(t[h]).addClass('disabled') : (m === q && h > r || m > q) && a(t[h]).addClass('disabled');
            for (s = '', m = 10 * parseInt(m / 10, 10), k = i.widget.find('.datepicker-years').find('th:eq(1)').text(m + '-' + (m + 9)).parents('table').find('td'), i.widget.find('.datepicker-years').find('th').removeClass('disabled'), o > m && i.widget.find('.datepicker-years').find('th:eq(0)').addClass('disabled'), m + 9 > q && i.widget.find('.datepicker-years').find('th:eq(2)').addClass('disabled'), m -= 1, h = -1; 11 > h; h++)
              s += '<span class="year' + (-1 === h || 10 === h ? ' old' : '') + (l === m ? ' active' : '') + (o > m || m > q ? ' disabled' : '') + '">' + m + '</span>', m += 1;
            k.html(s);
          }
        }, u = function () {
          b.locale(i.options.language);
          var a, c, d, e = i.widget.find('.timepicker .timepicker-hours table'), f = '';
          if (e.parent().hide(), i.use24hours)
            for (a = 0, c = 0; 6 > c; c += 1) {
              for (f += '<tr>', d = 0; 4 > d; d += 1)
                f += '<td class="hour">' + P(a.toString()) + '</td>', a++;
              f += '</tr>';
            }
          else
            for (a = 1, c = 0; 3 > c; c += 1) {
              for (f += '<tr>', d = 0; 4 > d; d += 1)
                f += '<td class="hour">' + P(a.toString()) + '</td>', a++;
              f += '</tr>';
            }
          e.html(f);
        }, v = function () {
          var a, b, c = i.widget.find('.timepicker .timepicker-minutes table'), d = '', e = 0, f = i.options.minuteStepping;
          for (c.parent().hide(), 1 === f && (f = 5), a = 0; a < Math.ceil(60 / f / 4); a++) {
            for (d += '<tr>', b = 0; 4 > b; b += 1)
              60 > e ? (d += '<td class="minute">' + P(e.toString()) + '</td>', e += f) : d += '<td></td>';
            d += '</tr>';
          }
          c.html(d);
        }, w = function () {
          var a, b, c = i.widget.find('.timepicker .timepicker-seconds table'), d = '', e = 0;
          for (c.parent().hide(), a = 0; 3 > a; a++) {
            for (d += '<tr>', b = 0; 4 > b; b += 1)
              d += '<td class="second">' + P(e.toString()) + '</td>', e += 5;
            d += '</tr>';
          }
          c.html(d);
        }, x = function () {
          if (i.date) {
            var a = i.widget.find('.timepicker span[data-time-component]'), b = i.date.hours(), c = i.date.format('A');
            i.use24hours || (0 === b ? b = 12 : 12 !== b && (b %= 12), i.widget.find('.timepicker [data-action=togglePeriod]').text(c)), a.filter('[data-time-component=hours]').text(P(b)), a.filter('[data-time-component=minutes]').text(P(i.date.minutes())), a.filter('[data-time-component=seconds]').text(P(i.date.second()));
          }
        }, y = function (c) {
          c.stopPropagation(), c.preventDefault(), i.unset = !1;
          var d, e, f, g, h = a(c.target).closest('span, td, th'), j = b(i.date);
          if (1 === h.length && !h.is('.disabled'))
            switch (h[0].nodeName.toLowerCase()) {
            case 'th':
              switch (h[0].className) {
              case 'picker-switch':
                E(1);
                break;
              case 'prev':
              case 'next':
                f = R.modes[i.viewMode].navStep, 'prev' === h[0].className && (f = -1 * f), i.viewDate.add(f, R.modes[i.viewMode].navFnc), t();
              }
              break;
            case 'span':
              h.is('.month') ? (d = h.parent().find('span').index(h), i.viewDate.month(d)) : (e = parseInt(h.text(), 10) || 0, i.viewDate.year(e)), i.viewMode === i.minViewMode && (i.date = b({
                y: i.viewDate.year(),
                M: i.viewDate.month(),
                d: i.viewDate.date(),
                h: i.date.hours(),
                m: i.date.minutes(),
                s: i.date.seconds()
              }), K(), o(j, c.type)), E(-1), t();
              break;
            case 'td':
              h.is('.day') && (g = parseInt(h.text(), 10) || 1, d = i.viewDate.month(), e = i.viewDate.year(), h.is('.old') ? 0 === d ? (d = 11, e -= 1) : d -= 1 : h.is('.new') && (11 === d ? (d = 0, e += 1) : d += 1), i.date = b({
                y: e,
                M: d,
                d: g,
                h: i.date.hours(),
                m: i.date.minutes(),
                s: i.date.seconds()
              }), i.viewDate = b({
                y: e,
                M: d,
                d: Math.min(28, g)
              }), t(), K(), o(j, c.type));
            }
        }, z = {
          incrementHours: function () {
            L('add', 'hours', 1);
          },
          incrementMinutes: function () {
            L('add', 'minutes', i.options.minuteStepping);
          },
          incrementSeconds: function () {
            L('add', 'seconds', 1);
          },
          decrementHours: function () {
            L('subtract', 'hours', 1);
          },
          decrementMinutes: function () {
            L('subtract', 'minutes', i.options.minuteStepping);
          },
          decrementSeconds: function () {
            L('subtract', 'seconds', 1);
          },
          togglePeriod: function () {
            var a = i.date.hours();
            a >= 12 ? a -= 12 : a += 12, i.date.hours(a);
          },
          showPicker: function () {
            i.widget.find('.timepicker > div:not(.timepicker-picker)').hide(), i.widget.find('.timepicker .timepicker-picker').show();
          },
          showHours: function () {
            i.widget.find('.timepicker .timepicker-picker').hide(), i.widget.find('.timepicker .timepicker-hours').show();
          },
          showMinutes: function () {
            i.widget.find('.timepicker .timepicker-picker').hide(), i.widget.find('.timepicker .timepicker-minutes').show();
          },
          showSeconds: function () {
            i.widget.find('.timepicker .timepicker-picker').hide(), i.widget.find('.timepicker .timepicker-seconds').show();
          },
          selectHour: function (b) {
            var c = parseInt(a(b.target).text(), 10);
            i.use24hours || (i.date.hours() >= 12 ? 12 !== c && (c += 12) : 12 === c && (c = 0)), i.date.hours(c), z.showPicker.call(i);
          },
          selectMinute: function (b) {
            i.date.minutes(parseInt(a(b.target).text(), 10)), z.showPicker.call(i);
          },
          selectSecond: function (b) {
            i.date.seconds(parseInt(a(b.target).text(), 10)), z.showPicker.call(i);
          }
        }, A = function (c) {
          var d = b(i.date), e = a(c.currentTarget).data('action'), f = z[e].apply(i, arguments);
          return B(c), i.date || (i.date = b({ y: 1970 })), K(), x(), o(d, c.type), f;
        }, B = function (a) {
          a.stopPropagation(), a.preventDefault();
        }, C = function (a) {
          27 === a.keyCode && i.hide();
        }, D = function (c) {
          b.locale(i.options.language);
          var d = a(c.target), e = b(i.date), f = b(d.val(), i.format, i.options.useStrict);
          f.isValid() && !M(f) && N(f) ? (q(), i.setValue(f), o(e, c.type), K()) : (i.viewDate = e, i.unset = !0, o(e, c.type), p(f));
        }, E = function (a) {
          a && (i.viewMode = Math.max(i.minViewMode, Math.min(2, i.viewMode + a))), i.widget.find('.datepicker > div').hide().filter('.datepicker-' + R.modes[i.viewMode].clsName).show();
        }, F = function () {
          var b, c, d, e, f;
          i.widget.on('click', '.datepicker *', a.proxy(y, this)), i.widget.on('click', '[data-action]', a.proxy(A, this)), i.widget.on('mousedown', a.proxy(B, this)), i.element.on('keydown', a.proxy(C, this)), i.options.pickDate && i.options.pickTime && i.widget.on('click.togglePicker', '.accordion-toggle', function (g) {
            if (g.stopPropagation(), b = a(this), c = b.closest('ul'), d = c.find('.in'), e = c.find('.collapse:not(.in)'), d && d.length) {
              if (f = d.data('collapse'), f && f.transitioning)
                return;
              d.collapse('hide'), e.collapse('show'), b.find('span').toggleClass(i.options.icons.time + ' ' + i.options.icons.date), i.component && i.component.find('span').toggleClass(i.options.icons.time + ' ' + i.options.icons.date);
            }
          }), i.isInput ? i.element.on({
            click: a.proxy(i.show, this),
            focus: a.proxy(i.show, this),
            change: a.proxy(D, this),
            blur: a.proxy(i.hide, this)
          }) : (i.element.on({ change: a.proxy(D, this) }, 'input'), i.component ? (i.component.on('click', a.proxy(i.show, this)), i.component.on('mousedown', a.proxy(B, this))) : i.element.on('click', a.proxy(i.show, this)));
        }, G = function () {
          a(window).on('resize.datetimepicker' + i.id, a.proxy(n, this)), i.isInput || a(document).on('mousedown.datetimepicker' + i.id, a.proxy(i.hide, this));
        }, H = function () {
          i.widget.off('click', '.datepicker *', i.click), i.widget.off('click', '[data-action]'), i.widget.off('mousedown', i.stopEvent), i.options.pickDate && i.options.pickTime && i.widget.off('click.togglePicker'), i.isInput ? i.element.off({
            focus: i.show,
            change: D,
            click: i.show,
            blur: i.hide
          }) : (i.element.off({ change: D }, 'input'), i.component ? (i.component.off('click', i.show), i.component.off('mousedown', i.stopEvent)) : i.element.off('click', i.show));
        }, I = function () {
          a(window).off('resize.datetimepicker' + i.id), i.isInput || a(document).off('mousedown.datetimepicker' + i.id);
        }, J = function () {
          if (i.element) {
            var b, c = i.element.parents(), d = !1;
            for (b = 0; b < c.length; b++)
              if ('fixed' === a(c[b]).css('position')) {
                d = !0;
                break;
              }
            return d;
          }
          return !1;
        }, K = function () {
          b.locale(i.options.language);
          var a = '';
          i.unset || (a = b(i.date).format(i.format)), l().val(a), i.element.data('date', a), i.options.pickTime || i.hide();
        }, L = function (a, c, d) {
          b.locale(i.options.language);
          var e;
          return 'add' === a ? (e = b(i.date), 23 === e.hours() && e.add(d, c), e.add(d, c)) : e = b(i.date).subtract(d, c), M(b(e.subtract(d, c))) || M(e) ? void p(e.format(i.format)) : ('add' === a ? i.date.add(d, c) : i.date.subtract(d, c), void (i.unset = !1));
        }, M = function (a, c) {
          b.locale(i.options.language);
          var d = b(i.options.maxDate, i.format, i.options.useStrict), e = b(i.options.minDate, i.format, i.options.useStrict);
          return c && (d = d.endOf(c), e = e.startOf(c)), a.isAfter(d) || a.isBefore(e) ? !0 : i.options.disabledDates === !1 ? !1 : i.options.disabledDates[a.format('YYYY-MM-DD')] === !0;
        }, N = function (a) {
          return b.locale(i.options.language), i.options.enabledDates === !1 ? !0 : i.options.enabledDates[a.format('YYYY-MM-DD')] === !0;
        }, O = function (a) {
          var c, d = {}, e = 0;
          for (c = 0; c < a.length; c++)
            f = b.isMoment(a[c]) || a[c] instanceof Date ? b(a[c]) : b(a[c], i.format, i.options.useStrict), f.isValid() && (d[f.format('YYYY-MM-DD')] = !0, e++);
          return e > 0 ? d : !1;
        }, P = function (a) {
          return a = a.toString(), a.length >= 2 ? a : '0' + a;
        }, Q = function () {
          var a = '<thead><tr><th class="prev">&lsaquo;</th><th colspan="' + (i.options.calendarWeeks ? '6' : '5') + '" class="picker-switch"></th><th class="next">&rsaquo;</th></tr></thead>', b = '<tbody><tr><td colspan="' + (i.options.calendarWeeks ? '8' : '7') + '"></td></tr></tbody>', c = '<div class="datepicker-days"><table class="table-condensed">' + a + '<tbody></tbody></table></div><div class="datepicker-months"><table class="table-condensed">' + a + b + '</table></div><div class="datepicker-years"><table class="table-condensed">' + a + b + '</table></div>', d = '';
          return i.options.pickDate && i.options.pickTime ? (d = '<div class="bootstrap-datetimepicker-widget' + (i.options.sideBySide ? ' timepicker-sbs' : '') + (i.use24hours ? ' usetwentyfour' : '') + ' dropdown-menu" style="z-index:9999 !important;">', d += i.options.sideBySide ? '<div class="row"><div class="col-sm-6 datepicker">' + c + '</div><div class="col-sm-6 timepicker">' + S.getTemplate() + '</div></div>' : '<ul class="list-unstyled"><li' + (i.options.collapse ? ' class="collapse in"' : '') + '><div class="datepicker">' + c + '</div></li><li class="picker-switch accordion-toggle"><a class="btn" style="width:100%"><span class="' + i.options.icons.time + '"></span></a></li><li' + (i.options.collapse ? ' class="collapse"' : '') + '><div class="timepicker">' + S.getTemplate() + '</div></li></ul>', d += '</div>') : i.options.pickTime ? '<div class="bootstrap-datetimepicker-widget dropdown-menu"><div class="timepicker">' + S.getTemplate() + '</div></div>' : '<div class="bootstrap-datetimepicker-widget dropdown-menu"><div class="datepicker">' + c + '</div></div>';
        }, R = {
          modes: [
            {
              clsName: 'days',
              navFnc: 'month',
              navStep: 1
            },
            {
              clsName: 'months',
              navFnc: 'year',
              navStep: 1
            },
            {
              clsName: 'years',
              navFnc: 'year',
              navStep: 10
            }
          ]
        }, S = {
          hourTemplate: '<span data-action="showHours"   data-time-component="hours"   class="timepicker-hour"></span>',
          minuteTemplate: '<span data-action="showMinutes" data-time-component="minutes" class="timepicker-minute"></span>',
          secondTemplate: '<span data-action="showSeconds"  data-time-component="seconds" class="timepicker-second"></span>'
        };
      S.getTemplate = function () {
        return '<div class="timepicker-picker"><table class="table-condensed"><tr><td><a href="#" class="btn" data-action="incrementHours"><span class="' + i.options.icons.up + '"></span></a></td><td class="separator"></td><td>' + (i.options.useMinutes ? '<a href="#" class="btn" data-action="incrementMinutes"><span class="' + i.options.icons.up + '"></span></a>' : '') + '</td>' + (i.options.useSeconds ? '<td class="separator"></td><td><a href="#" class="btn" data-action="incrementSeconds"><span class="' + i.options.icons.up + '"></span></a></td>' : '') + (i.use24hours ? '' : '<td class="separator"></td>') + '</tr><tr><td>' + S.hourTemplate + '</td> <td class="separator">:</td><td>' + (i.options.useMinutes ? S.minuteTemplate : '<span class="timepicker-minute">00</span>') + '</td> ' + (i.options.useSeconds ? '<td class="separator">:</td><td>' + S.secondTemplate + '</td>' : '') + (i.use24hours ? '' : '<td class="separator"></td><td><button type="button" class="btn btn-primary" data-action="togglePeriod"></button></td>') + '</tr><tr><td><a href="#" class="btn" data-action="decrementHours"><span class="' + i.options.icons.down + '"></span></a></td><td class="separator"></td><td>' + (i.options.useMinutes ? '<a href="#" class="btn" data-action="decrementMinutes"><span class="' + i.options.icons.down + '"></span></a>' : '') + '</td>' + (i.options.useSeconds ? '<td class="separator"></td><td><a href="#" class="btn" data-action="decrementSeconds"><span class="' + i.options.icons.down + '"></span></a></td>' : '') + (i.use24hours ? '' : '<td class="separator"></td>') + '</tr></table></div><div class="timepicker-hours" data-action="selectHour"><table class="table-condensed"></table></div><div class="timepicker-minutes" data-action="selectMinute"><table class="table-condensed"></table></div>' + (i.options.useSeconds ? '<div class="timepicker-seconds" data-action="selectSecond"><table class="table-condensed"></table></div>' : '');
      }, i.destroy = function () {
        H(), I(), i.widget.remove(), i.element.removeData('DateTimePicker'), i.component && i.component.removeData('DateTimePicker');
      }, i.show = function (a) {
        if (!l().prop('disabled')) {
          if (i.options.useCurrent && '' === l().val()) {
            if (1 !== i.options.minuteStepping) {
              var c = b(), d = i.options.minuteStepping;
              c.minutes(Math.round(c.minutes() / d) * d % 60).seconds(0), i.setValue(c.format(i.format));
            } else
              i.setValue(b().format(i.format));
            o('', a.type);
          }
          a && 'click' === a.type && i.isInput && i.widget.hasClass('picker-open') || (i.widget.hasClass('picker-open') ? (i.widget.hide(), i.widget.removeClass('picker-open')) : (i.widget.show(), i.widget.addClass('picker-open')), i.height = i.component ? i.component.outerHeight() : i.element.outerHeight(), n(), i.element.trigger({
            type: 'dp.show',
            date: b(i.date)
          }), G(), a && B(a));
        }
      }, i.disable = function () {
        var a = l();
        a.prop('disabled') || (a.prop('disabled', !0), H());
      }, i.enable = function () {
        var a = l();
        a.prop('disabled') && (a.prop('disabled', !1), F());
      }, i.hide = function () {
        var a, c, d = i.widget.find('.collapse');
        for (a = 0; a < d.length; a++)
          if (c = d.eq(a).data('collapse'), c && c.transitioning)
            return;
        i.widget.hide(), i.widget.removeClass('picker-open'), i.viewMode = i.startViewMode, E(), i.element.trigger({
          type: 'dp.hide',
          date: b(i.date)
        }), I();
      }, i.setValue = function (a) {
        b.locale(i.options.language), a ? i.unset = !1 : (i.unset = !0, K()), a = b.isMoment(a) ? a.locale(i.options.language) : a instanceof Date ? b(a) : b(a, i.format, i.options.useStrict), a.isValid() ? (i.date = a, K(), i.viewDate = b({
          y: i.date.year(),
          M: i.date.month()
        }), t(), x()) : p(a);
      }, i.getDate = function () {
        return i.unset ? null : b(i.date);
      }, i.setDate = function (a) {
        var c = b(i.date);
        i.setValue(a ? a : null), o(c, 'function');
      }, i.setDisabledDates = function (a) {
        i.options.disabledDates = O(a), i.viewDate && q();
      }, i.setEnabledDates = function (a) {
        i.options.enabledDates = O(a), i.viewDate && q();
      }, i.setMaxDate = function (a) {
        void 0 !== a && (i.options.maxDate = b.isMoment(a) || a instanceof Date ? b(a) : b(a, i.format, i.options.useStrict), i.viewDate && q());
      }, i.setMinDate = function (a) {
        void 0 !== a && (i.options.minDate = b.isMoment(a) || a instanceof Date ? b(a) : b(a, i.format, i.options.useStrict), i.viewDate && q());
      }, k();
    };
  a.fn.datetimepicker = function (b) {
    return this.each(function () {
      var c = a(this), e = c.data('DateTimePicker');
      e || c.data('DateTimePicker', new d(this, b));
    });
  }, a.fn.datetimepicker.defaults = {
    format: !1,
    pickDate: !0,
    pickTime: !0,
    useMinutes: !0,
    useSeconds: !1,
    useCurrent: !0,
    calendarWeeks: !1,
    minuteStepping: 1,
    minDate: b({ y: 1900 }),
    maxDate: b().add(100, 'y'),
    showToday: !0,
    collapse: !0,
    language: b.locale(),
    defaultDate: '',
    disabledDates: !1,
    enabledDates: !1,
    icons: {},
    useStrict: !1,
    direction: 'auto',
    sideBySide: !1,
    daysOfWeekDisabled: [],
    widgetParent: !1
  };
});
(function (angular, factory) {
  'use strict';
  if (typeof define === 'function' && define.amd) {
    define(['angular'], function (angular) {
      return factory(angular);
    });
  } else {
    return factory(angular);
  }
}(angular || null, function (angular) {
  'use strict';
  /**
 * ngTable: Table + Angular JS
 *
 * @author Vitalii Savchuk <esvit666@gmail.com>
 * @url https://github.com/esvit/ng-table/
 * @license New BSD License <http://creativecommons.org/licenses/BSD/>
 */
  /**
 * @ngdoc module
 * @name ngTable
 * @description ngTable: Table + Angular JS
 * @example
 <doc:example>
 <doc:source>
 <script>
 var app = angular.module('myApp', ['ngTable']);
 app.controller('MyCtrl', function($scope) {
                    $scope.users = [
                        {name: "Moroni", age: 50},
                        {name: "Tiancum", age: 43},
                        {name: "Jacob", age: 27},
                        {name: "Nephi", age: 29},
                        {name: "Enos", age: 34}
                    ];
                });
 </script>
 <table ng-table class="table">
 <tr ng-repeat="user in users">
 <td data-title="'Name'">{{user.name}}</td>
 <td data-title="'Age'">{{user.age}}</td>
 </tr>
 </table>
 </doc:source>
 </doc:example>
 */
  var app = angular.module('ngTable', []);
  /**
 * ngTable: Table + Angular JS
 *
 * @author Vitalii Savchuk <esvit666@gmail.com>
 * @url https://github.com/esvit/ng-table/
 * @license New BSD License <http://creativecommons.org/licenses/BSD/>
 */
  /**
 * @ngdoc value
 * @name ngTable.value:ngTableDefaultParams
 * @description Default Parameters for ngTable
 */
  app.value('ngTableDefaults', {
    params: {},
    settings: {}
  });
  /**
 * @ngdoc service
 * @name ngTable.factory:ngTableParams
 * @description Parameters manager for ngTable
 */
  app.factory('ngTableParams', [
    '$q',
    '$log',
    'ngTableDefaults',
    function ($q, $log, ngTableDefaults) {
      var isNumber = function (n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
      };
      var ngTableParams = function (baseParameters, baseSettings) {
        var self = this, log = function () {
            if (settings.debugMode && $log.debug) {
              $log.debug.apply(this, arguments);
            }
          };
        this.data = [];
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#parameters
         * @methodOf ngTable.factory:ngTableParams
         * @description Set new parameters or get current parameters
         *
         * @param {string} newParameters      New parameters
         * @param {string} parseParamsFromUrl Flag if parse parameters like in url
         * @returns {Object} Current parameters or `this`
         */
        this.parameters = function (newParameters, parseParamsFromUrl) {
          parseParamsFromUrl = parseParamsFromUrl || false;
          if (angular.isDefined(newParameters)) {
            for (var key in newParameters) {
              var value = newParameters[key];
              if (parseParamsFromUrl && key.indexOf('[') >= 0) {
                var keys = key.split(/\[(.*)\]/).reverse();
                var lastKey = '';
                for (var i = 0, len = keys.length; i < len; i++) {
                  var name = keys[i];
                  if (name !== '') {
                    var v = value;
                    value = {};
                    value[lastKey = name] = isNumber(v) ? parseFloat(v) : v;
                  }
                }
                if (lastKey === 'sorting') {
                  params[lastKey] = {};
                }
                params[lastKey] = angular.extend(params[lastKey] || {}, value[lastKey]);
              } else {
                params[key] = isNumber(newParameters[key]) ? parseFloat(newParameters[key]) : newParameters[key];
              }
            }
            log('ngTable: set parameters', params);
            return this;
          }
          return params;
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#settings
         * @methodOf ngTable.factory:ngTableParams
         * @description Set new settings for table
         *
         * @param {string} newSettings New settings or undefined
         * @returns {Object} Current settings or `this`
         */
        this.settings = function (newSettings) {
          if (angular.isDefined(newSettings)) {
            if (angular.isArray(newSettings.data)) {
              //auto-set the total from passed in data
              newSettings.total = newSettings.data.length;
            }
            settings = angular.extend(settings, newSettings);
            log('ngTable: set settings', settings);
            return this;
          }
          return settings;
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#page
         * @methodOf ngTable.factory:ngTableParams
         * @description If parameter page not set return current page else set current page
         *
         * @param {string} page Page number
         * @returns {Object|Number} Current page or `this`
         */
        this.page = function (page) {
          return angular.isDefined(page) ? this.parameters({ 'page': page }) : params.page;
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#total
         * @methodOf ngTable.factory:ngTableParams
         * @description If parameter total not set return current quantity else set quantity
         *
         * @param {string} total Total quantity of items
         * @returns {Object|Number} Current page or `this`
         */
        this.total = function (total) {
          return angular.isDefined(total) ? this.settings({ 'total': total }) : settings.total;
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#count
         * @methodOf ngTable.factory:ngTableParams
         * @description If parameter count not set return current count per page else set count per page
         *
         * @param {string} count Count per number
         * @returns {Object|Number} Count per page or `this`
         */
        this.count = function (count) {
          // reset to first page because can be blank page
          return angular.isDefined(count) ? this.parameters({
            'count': count,
            'page': 1
          }) : params.count;
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#filter
         * @methodOf ngTable.factory:ngTableParams
         * @description If parameter page not set return current filter else set current filter
         *
         * @param {string} filter New filter
         * @returns {Object} Current filter or `this`
         */
        this.filter = function (filter) {
          return angular.isDefined(filter) ? this.parameters({
            'filter': filter,
            'page': 1
          }) : params.filter;
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#sorting
         * @methodOf ngTable.factory:ngTableParams
         * @description If 'sorting' parameter is not set, return current sorting. Otherwise set current sorting.
         *
         * @param {string} sorting New sorting
         * @returns {Object} Current sorting or `this`
         */
        this.sorting = function (sorting) {
          if (arguments.length == 2) {
            var sortArray = {};
            sortArray[sorting] = arguments[1];
            this.parameters({ 'sorting': sortArray });
            return this;
          }
          return angular.isDefined(sorting) ? this.parameters({ 'sorting': sorting }) : params.sorting;
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#isSortBy
         * @methodOf ngTable.factory:ngTableParams
         * @description Checks sort field
         *
         * @param {string} field     Field name
         * @param {string} direction Direction of sorting 'asc' or 'desc'
         * @returns {Array} Return true if field sorted by direction
         */
        this.isSortBy = function (field, direction) {
          return angular.isDefined(params.sorting[field]) && angular.equals(params.sorting[field], direction);
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#orderBy
         * @methodOf ngTable.factory:ngTableParams
         * @description Return object of sorting parameters for angular filter
         *
         * @returns {Array} Array like: [ '-name', '+age' ]
         */
        this.orderBy = function () {
          var sorting = [];
          for (var column in params.sorting) {
            sorting.push((params.sorting[column] === 'asc' ? '+' : '-') + column);
          }
          return sorting;
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#getData
         * @methodOf ngTable.factory:ngTableParams
         * @description Called when updated some of parameters for get new data
         *
         * @param {Object} $defer promise object
         * @param {Object} params New parameters
         */
        this.getData = function ($defer, params) {
          if (angular.isArray(this.data) && angular.isObject(params)) {
            $defer.resolve(this.data.slice((params.page() - 1) * params.count(), params.page() * params.count()));
          } else {
            $defer.resolve([]);
          }
          return $defer.promise;
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#getGroups
         * @methodOf ngTable.factory:ngTableParams
         * @description Return groups for table grouping
         */
        this.getGroups = function ($defer, column) {
          var defer = $q.defer();
          defer.promise.then(function (data) {
            var groups = {};
            angular.forEach(data, function (item) {
              var groupName = angular.isFunction(column) ? column(item) : item[column];
              groups[groupName] = groups[groupName] || { data: [] };
              groups[groupName]['value'] = groupName;
              groups[groupName].data.push(item);
            });
            var result = [];
            for (var i in groups) {
              result.push(groups[i]);
            }
            log('ngTable: refresh groups', result);
            $defer.resolve(result);
          });
          return this.getData(defer, self);
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#generatePagesArray
         * @methodOf ngTable.factory:ngTableParams
         * @description Generate array of pages
         *
         * @param {boolean} currentPage which page must be active
         * @param {boolean} totalItems  Total quantity of items
         * @param {boolean} pageSize    Quantity of items on page
         * @returns {Array} Array of pages
         */
        this.generatePagesArray = function (currentPage, totalItems, pageSize) {
          var maxBlocks, maxPage, maxPivotPages, minPage, numPages, pages;
          maxBlocks = 11;
          pages = [];
          numPages = Math.ceil(totalItems / pageSize);
          if (numPages > 1) {
            pages.push({
              type: 'prev',
              number: Math.max(1, currentPage - 1),
              active: currentPage > 1
            });
            pages.push({
              type: 'first',
              number: 1,
              active: currentPage > 1,
              current: currentPage === 1
            });
            maxPivotPages = Math.round((maxBlocks - 5) / 2);
            minPage = Math.max(2, currentPage - maxPivotPages);
            maxPage = Math.min(numPages - 1, currentPage + maxPivotPages * 2 - (currentPage - minPage));
            minPage = Math.max(2, minPage - (maxPivotPages * 2 - (maxPage - minPage)));
            var i = minPage;
            while (i <= maxPage) {
              if (i === minPage && i !== 2 || i === maxPage && i !== numPages - 1) {
                pages.push({
                  type: 'more',
                  active: false
                });
              } else {
                pages.push({
                  type: 'page',
                  number: i,
                  active: currentPage !== i,
                  current: currentPage === i
                });
              }
              i++;
            }
            pages.push({
              type: 'last',
              number: numPages,
              active: currentPage !== numPages,
              current: currentPage === numPages
            });
            pages.push({
              type: 'next',
              number: Math.min(numPages, currentPage + 1),
              active: currentPage < numPages
            });
          }
          return pages;
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#url
         * @methodOf ngTable.factory:ngTableParams
         * @description Return groups for table grouping
         *
         * @param {boolean} asString flag indicates return array of string or object
         * @returns {Array} If asString = true will be return array of url string parameters else key-value object
         */
        this.url = function (asString) {
          asString = asString || false;
          var pairs = asString ? [] : {};
          for (var key in params) {
            if (params.hasOwnProperty(key)) {
              var item = params[key], name = encodeURIComponent(key);
              if (typeof item === 'object') {
                for (var subkey in item) {
                  if (!angular.isUndefined(item[subkey]) && item[subkey] !== '') {
                    var pname = name + '[' + encodeURIComponent(subkey) + ']';
                    if (asString) {
                      pairs.push(pname + '=' + item[subkey]);
                    } else {
                      pairs[pname] = item[subkey];
                    }
                  }
                }
              } else if (!angular.isFunction(item) && !angular.isUndefined(item) && item !== '') {
                if (asString) {
                  pairs.push(name + '=' + encodeURIComponent(item));
                } else {
                  pairs[name] = encodeURIComponent(item);
                }
              }
            }
          }
          return pairs;
        };
        /**
         * @ngdoc method
         * @name ngTable.factory:ngTableParams#reload
         * @methodOf ngTable.factory:ngTableParams
         * @description Reload table data
         */
        this.reload = function () {
          var $defer = $q.defer(), self = this, pData = null;
          if (!settings.$scope) {
            return;
          }
          settings.$loading = true;
          if (settings.groupBy) {
            pData = settings.getGroups($defer, settings.groupBy, this);
          } else {
            pData = settings.getData($defer, this);
          }
          log('ngTable: reload data');
          if (!pData) {
            // If getData resolved the $defer, and didn't promise us data,
            //   create a promise from the $defer. We need to return a promise.
            pData = $defer.promise;
          }
          return pData.then(function (data) {
            settings.$loading = false;
            log('ngTable: current scope', settings.$scope);
            if (settings.groupBy) {
              self.data = data;
              if (settings.$scope)
                settings.$scope.$groups = data;
            } else {
              self.data = data;
              if (settings.$scope)
                settings.$scope.$data = data;
            }
            if (settings.$scope)
              settings.$scope.pages = self.generatePagesArray(self.page(), self.total(), self.count());
            settings.$scope.$emit('ngTableAfterReloadData');
            return data;
          });
        };
        this.reloadPages = function () {
          var self = this;
          settings.$scope.pages = self.generatePagesArray(self.page(), self.total(), self.count());
        };
        var params = this.$params = {
            page: 1,
            count: 1,
            filter: {},
            sorting: {},
            group: {},
            groupBy: null
          };
        angular.extend(params, ngTableDefaults.params);
        var settings = {
            $scope: null,
            $loading: false,
            data: null,
            total: 0,
            defaultSort: 'desc',
            filterDelay: 750,
            counts: [
              10,
              25,
              50,
              100
            ],
            getGroups: this.getGroups,
            getData: this.getData
          };
        angular.extend(settings, ngTableDefaults.settings);
        this.settings(baseSettings);
        this.parameters(baseParameters, true);
        return this;
      };
      return ngTableParams;
    }
  ]);
  /**
 * ngTable: Table + Angular JS
 *
 * @author Vitalii Savchuk <esvit666@gmail.com>
 * @url https://github.com/esvit/ng-table/
 * @license New BSD License <http://creativecommons.org/licenses/BSD/>
 */
  /**
 * @ngdoc object
 * @name ngTable.directive:ngTable.ngTableController
 *
 * @description
 * Each {@link ngTable.directive:ngTable ngTable} directive creates an instance of `ngTableController`
 */
  var ngTableController = [
      '$scope',
      'ngTableParams',
      '$timeout',
      function ($scope, ngTableParams, $timeout) {
        var isFirstTimeLoad = true;
        $scope.$loading = false;
        if (!$scope.hasOwnProperty('params')) {
          $scope.params = new ngTableParams();
          $scope.params.isNullInstance = true;
        }
        $scope.params.settings().$scope = $scope;
        var delayFilter = function () {
            var timer = 0;
            return function (callback, ms) {
              $timeout.cancel(timer);
              timer = $timeout(callback, ms);
            };
          }();
        function resetPage() {
          $scope.params.$params.page = 1;
        }
        $scope.$watch('params.$params', function (newParams, oldParams) {
          if (newParams === oldParams) {
            return;
          }
          $scope.params.settings().$scope = $scope;
          if (!angular.equals(newParams.filter, oldParams.filter)) {
            var maybeResetPage = isFirstTimeLoad ? angular.noop : resetPage;
            delayFilter(function () {
              maybeResetPage();
              $scope.params.reload();
            }, $scope.params.settings().filterDelay);
          } else {
            $scope.params.reload();
          }
          if (!$scope.params.isNullInstance) {
            isFirstTimeLoad = false;
          }
        }, true);
        $scope.sortBy = function (column, event) {
          var parsedSortable = $scope.parse(column.sortable);
          if (!parsedSortable) {
            return;
          }
          var defaultSort = $scope.params.settings().defaultSort;
          var inverseSort = defaultSort === 'asc' ? 'desc' : 'asc';
          var sorting = $scope.params.sorting() && $scope.params.sorting()[parsedSortable] && $scope.params.sorting()[parsedSortable] === defaultSort;
          var sortingParams = event.ctrlKey || event.metaKey ? $scope.params.sorting() : {};
          sortingParams[parsedSortable] = sorting ? inverseSort : defaultSort;
          $scope.params.parameters({ sorting: sortingParams });
        };
      }
    ];
  /**
 * ngTable: Table + Angular JS
 *
 * @author Vitalii Savchuk <esvit666@gmail.com>
 * @url https://github.com/esvit/ng-table/
 * @license New BSD License <http://creativecommons.org/licenses/BSD/>
 */
  /**
 * @ngdoc directive
 * @name ngTable.directive:ngTable
 * @restrict A
 *
 * @description
 * Directive that instantiates {@link ngTable.directive:ngTable.ngTableController ngTableController}.
 */
  app.directive('ngTable', [
    '$compile',
    '$q',
    '$parse',
    function ($compile, $q, $parse) {
      'use strict';
      return {
        restrict: 'A',
        priority: 1001,
        scope: true,
        controller: ngTableController,
        compile: function (element) {
          var columns = [], i = 0, row = null;
          // custom header
          var thead = element.find('thead');
          // IE 8 fix :not(.ng-table-group) selector
          angular.forEach(angular.element(element.find('tr')), function (tr) {
            tr = angular.element(tr);
            if (!tr.hasClass('ng-table-group') && !row) {
              row = tr;
            }
          });
          if (!row) {
            return;
          }
          angular.forEach(row.find('td'), function (item) {
            var el = angular.element(item);
            if (el.attr('ignore-cell') && 'true' === el.attr('ignore-cell')) {
              return;
            }
            var parsedAttribute = function (attr, defaultValue) {
              return function (scope) {
                return $parse(el.attr('x-data-' + attr) || el.attr('data-' + attr) || el.attr(attr))(scope, { $columns: columns }) || defaultValue;
              };
            };
            var parsedTitle = parsedAttribute('title', ' '), headerTemplateURL = parsedAttribute('header', false), filter = parsedAttribute('filter', false)(), filterTemplateURL = false, filterName = false;
            if (filter && filter.$$name) {
              filterName = filter.$$name;
              delete filter.$$name;
            }
            if (filter && filter.templateURL) {
              filterTemplateURL = filter.templateURL;
              delete filter.templateURL;
            }
            el.attr('data-title-text', parsedTitle());
            // this used in responsive table
            columns.push({
              id: i++,
              title: parsedTitle,
              sortable: parsedAttribute('sortable', false),
              'class': el.attr('x-data-header-class') || el.attr('data-header-class') || el.attr('header-class'),
              filter: filter,
              filterTemplateURL: filterTemplateURL,
              filterName: filterName,
              headerTemplateURL: headerTemplateURL,
              filterData: el.attr('filter-data') ? el.attr('filter-data') : null,
              show: el.attr('ng-show') ? function (scope) {
                return $parse(el.attr('ng-show'))(scope);
              } : function () {
                return true;
              }
            });
          });
          return function (scope, element, attrs) {
            scope.$loading = false;
            scope.$columns = columns;
            scope.$filterRow = {};
            scope.$watch(attrs.ngTable, function (params) {
              if (angular.isUndefined(params)) {
                return;
              }
              scope.paramsModel = $parse(attrs.ngTable);
              scope.params = params;
            }, true);
            scope.parse = function (text) {
              return angular.isDefined(text) ? text(scope) : '';
            };
            if (attrs.showFilter) {
              scope.$parent.$watch(attrs.showFilter, function (value) {
                scope.show_filter = value;
              });
            }
            if (attrs.disableFilter) {
              scope.$parent.$watch(attrs.disableFilter, function (value) {
                scope.$filterRow.disabled = value;
              });
            }
            angular.forEach(columns, function (column) {
              var def;
              if (!column.filterData) {
                return;
              }
              def = $parse(column.filterData)(scope, { $column: column });
              // if we're working with a deferred object, let's wait for the promise
              if (angular.isObject(def) && angular.isObject(def.promise)) {
                delete column.filterData;
                return def.promise.then(function (data) {
                  // our deferred can eventually return arrays, functions and objects
                  if (!angular.isArray(data) && !angular.isFunction(data) && !angular.isObject(data)) {
                    // if none of the above was found - we just want an empty array
                    data = [];
                  } else if (angular.isArray(data)) {
                    data.unshift({
                      title: '-',
                      id: ''
                    });
                  }
                  column.data = data;
                });
              }  // otherwise, we just return what the user gave us. It could be a function, array, object, whatever
              else {
                return column.data = def;
              }
            });
            if (!element.hasClass('ng-table')) {
              scope.templates = {
                header: attrs.templateHeader ? attrs.templateHeader : 'ng-table/header.html',
                pagination: attrs.templatePagination ? attrs.templatePagination : 'ng-table/pager.html'
              };
              var headerTemplate = thead.length > 0 ? thead : angular.element(document.createElement('thead')).attr('ng-include', 'templates.header');
              var paginationTemplate = angular.element(document.createElement('div')).attr({
                  'ng-table-pagination': 'params',
                  'template-url': 'templates.pagination'
                });
              element.find('thead').remove();
              element.addClass('ng-table').prepend(headerTemplate).after(paginationTemplate);
              $compile(headerTemplate)(scope);
              $compile(paginationTemplate)(scope);
            }
          };
        }
      };
    }
  ]);
  /**
 * ngTable: Table + Angular JS
 *
 * @author Vitalii Savchuk <esvit666@gmail.com>
 * @url https://github.com/esvit/ng-table/
 * @license New BSD License <http://creativecommons.org/licenses/BSD/>
 */
  /**
 * @ngdoc directive
 * @name ngTable.directive:ngTablePagination
 * @restrict A
 */
  app.directive('ngTablePagination', [
    '$compile',
    function ($compile) {
      'use strict';
      return {
        restrict: 'A',
        scope: {
          'params': '=ngTablePagination',
          'templateUrl': '='
        },
        replace: false,
        link: function (scope, element, attrs) {
          scope.params.settings().$scope.$on('ngTableAfterReloadData', function () {
            scope.pages = scope.params.generatePagesArray(scope.params.page(), scope.params.total(), scope.params.count());
          }, true);
          scope.$watch('templateUrl', function (templateUrl) {
            if (angular.isUndefined(templateUrl)) {
              return;
            }
            var template = angular.element(document.createElement('div'));
            template.attr({ 'ng-include': 'templateUrl' });
            element.append(template);
            $compile(template)(scope);
          });
        }
      };
    }
  ]);
  angular.module('ngTable').run([
    '$templateCache',
    function ($templateCache) {
      $templateCache.put('ng-table/filters/select-multiple.html', '<select ng-options="data.id as data.title for data in column.data" ng-disabled="$filterRow.disabled" multiple ng-multiple="true" ng-model="params.filter()[name]" ng-show="filter==\'select-multiple\'" class="filter filter-select-multiple form-control" name="{{column.filterName}}"> </select>');
      $templateCache.put('ng-table/filters/select.html', '<select ng-options="data.id as data.title for data in column.data" ng-disabled="$filterRow.disabled" ng-model="params.filter()[name]" ng-show="filter==\'select\'" class="filter filter-select form-control" name="{{column.filterName}}"> </select>');
      $templateCache.put('ng-table/filters/text.html', '<input type="text" name="{{column.filterName}}" ng-disabled="$filterRow.disabled" ng-model="params.filter()[name]" ng-if="filter==\'text\'" class="input-filter form-control"/>');
      $templateCache.put('ng-table/header.html', '<tr> <th ng-repeat="column in $columns" ng-class="{ \'sortable\': parse(column.sortable), \'sort-asc\': params.sorting()[parse(column.sortable)]==\'asc\', \'sort-desc\': params.sorting()[parse(column.sortable)]==\'desc\' }" ng-click="sortBy(column, $event)" ng-show="column.show(this)" ng-init="template=column.headerTemplateURL(this)" class="header {{column.class}}"> <div ng-if="!template" ng-show="!template" ng-bind="parse(column.title)"></div> <div ng-if="template" ng-show="template" ng-include="template"></div> </th> </tr> <tr ng-show="show_filter" class="ng-table-filters"> <th ng-repeat="column in $columns" ng-show="column.show(this)" class="filter"> <div ng-repeat="(name, filter) in column.filter"> <div ng-if="column.filterTemplateURL" ng-show="column.filterTemplateURL"> <div ng-include="column.filterTemplateURL"></div> </div> <div ng-if="!column.filterTemplateURL" ng-show="!column.filterTemplateURL"> <div ng-include="\'ng-table/filters/\' + filter + \'.html\'"></div> </div> </div> </th> </tr> ');
      $templateCache.put('ng-table/pager.html', '<div class="ng-cloak ng-table-pager"> <div ng-if="params.settings().counts.length" class="ng-table-counts btn-group pull-right"> <button ng-repeat="count in params.settings().counts" type="button" ng-class="{\'active\':params.count()==count}" ng-click="params.count(count)" class="btn btn-default"> <span ng-bind="count"></span> </button> </div> <ul class="pagination ng-table-pagination"> <li ng-class="{\'disabled\': !page.active && !page.current, \'active\': page.current}" ng-repeat="page in pages" ng-switch="page.type"> <a ng-switch-when="prev" ng-click="params.page(page.number)" href="">&laquo;</a> <a ng-switch-when="first" ng-click="params.page(page.number)" href=""><span ng-bind="page.number"></span></a> <a ng-switch-when="page" ng-click="params.page(page.number)" href=""><span ng-bind="page.number"></span></a> <a ng-switch-when="more" ng-click="params.page(page.number)" href="">&#8230;</a> <a ng-switch-when="last" ng-click="params.page(page.number)" href=""><span ng-bind="page.number"></span></a> <a ng-switch-when="next" ng-click="params.page(page.number)" href="">&raquo;</a> </li> </ul> </div> ');
    }
  ]);
  return app;
}));
//---------------------------------------------------------------------
//
// QR Code Generator for JavaScript
//
// Copyright (c) 2009 Kazuhiko Arase
//
// URL: http://www.d-project.com/
//
// Licensed under the MIT license:
//  http://www.opensource.org/licenses/mit-license.php
//
// The word 'QR Code' is registered trademark of
// DENSO WAVE INCORPORATED
//  http://www.denso-wave.com/qrcode/faqpatent-e.html
//
//---------------------------------------------------------------------
var qrcode = function () {
    //---------------------------------------------------------------------
    // qrcode
    //---------------------------------------------------------------------
    /**
   * qrcode
   * @param typeNumber 1 to 10
   * @param errorCorrectLevel 'L','M','Q','H'
   */
    var qrcode = function (typeNumber, errorCorrectLevel) {
      var PAD0 = 236;
      var PAD1 = 17;
      var _typeNumber = typeNumber;
      var _errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel];
      var _modules = null;
      var _moduleCount = 0;
      var _dataCache = null;
      var _dataList = new Array();
      var _this = {};
      var makeImpl = function (test, maskPattern) {
        _moduleCount = _typeNumber * 4 + 17;
        _modules = function (moduleCount) {
          var modules = new Array(moduleCount);
          for (var row = 0; row < moduleCount; row += 1) {
            modules[row] = new Array(moduleCount);
            for (var col = 0; col < moduleCount; col += 1) {
              modules[row][col] = null;
            }
          }
          return modules;
        }(_moduleCount);
        setupPositionProbePattern(0, 0);
        setupPositionProbePattern(_moduleCount - 7, 0);
        setupPositionProbePattern(0, _moduleCount - 7);
        setupPositionAdjustPattern();
        setupTimingPattern();
        setupTypeInfo(test, maskPattern);
        if (_typeNumber >= 7) {
          setupTypeNumber(test);
        }
        if (_dataCache == null) {
          _dataCache = createData(_typeNumber, _errorCorrectLevel, _dataList);
        }
        mapData(_dataCache, maskPattern);
      };
      var setupPositionProbePattern = function (row, col) {
        for (var r = -1; r <= 7; r += 1) {
          if (row + r <= -1 || _moduleCount <= row + r)
            continue;
          for (var c = -1; c <= 7; c += 1) {
            if (col + c <= -1 || _moduleCount <= col + c)
              continue;
            if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {
              _modules[row + r][col + c] = true;
            } else {
              _modules[row + r][col + c] = false;
            }
          }
        }
      };
      var getBestMaskPattern = function () {
        var minLostPoint = 0;
        var pattern = 0;
        for (var i = 0; i < 8; i += 1) {
          makeImpl(true, i);
          var lostPoint = QRUtil.getLostPoint(_this);
          if (i == 0 || minLostPoint > lostPoint) {
            minLostPoint = lostPoint;
            pattern = i;
          }
        }
        return pattern;
      };
      var setupTimingPattern = function () {
        for (var r = 8; r < _moduleCount - 8; r += 1) {
          if (_modules[r][6] != null) {
            continue;
          }
          _modules[r][6] = r % 2 == 0;
        }
        for (var c = 8; c < _moduleCount - 8; c += 1) {
          if (_modules[6][c] != null) {
            continue;
          }
          _modules[6][c] = c % 2 == 0;
        }
      };
      var setupPositionAdjustPattern = function () {
        var pos = QRUtil.getPatternPosition(_typeNumber);
        for (var i = 0; i < pos.length; i += 1) {
          for (var j = 0; j < pos.length; j += 1) {
            var row = pos[i];
            var col = pos[j];
            if (_modules[row][col] != null) {
              continue;
            }
            for (var r = -2; r <= 2; r += 1) {
              for (var c = -2; c <= 2; c += 1) {
                if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {
                  _modules[row + r][col + c] = true;
                } else {
                  _modules[row + r][col + c] = false;
                }
              }
            }
          }
        }
      };
      var setupTypeNumber = function (test) {
        var bits = QRUtil.getBCHTypeNumber(_typeNumber);
        for (var i = 0; i < 18; i += 1) {
          var mod = !test && (bits >> i & 1) == 1;
          _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;
        }
        for (var i = 0; i < 18; i += 1) {
          var mod = !test && (bits >> i & 1) == 1;
          _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
        }
      };
      var setupTypeInfo = function (test, maskPattern) {
        var data = _errorCorrectLevel << 3 | maskPattern;
        var bits = QRUtil.getBCHTypeInfo(data);
        // vertical
        for (var i = 0; i < 15; i += 1) {
          var mod = !test && (bits >> i & 1) == 1;
          if (i < 6) {
            _modules[i][8] = mod;
          } else if (i < 8) {
            _modules[i + 1][8] = mod;
          } else {
            _modules[_moduleCount - 15 + i][8] = mod;
          }
        }
        // horizontal
        for (var i = 0; i < 15; i += 1) {
          var mod = !test && (bits >> i & 1) == 1;
          if (i < 8) {
            _modules[8][_moduleCount - i - 1] = mod;
          } else if (i < 9) {
            _modules[8][15 - i - 1 + 1] = mod;
          } else {
            _modules[8][15 - i - 1] = mod;
          }
        }
        // fixed module
        _modules[_moduleCount - 8][8] = !test;
      };
      var mapData = function (data, maskPattern) {
        var inc = -1;
        var row = _moduleCount - 1;
        var bitIndex = 7;
        var byteIndex = 0;
        var maskFunc = QRUtil.getMaskFunction(maskPattern);
        for (var col = _moduleCount - 1; col > 0; col -= 2) {
          if (col == 6)
            col -= 1;
          while (true) {
            for (var c = 0; c < 2; c += 1) {
              if (_modules[row][col - c] == null) {
                var dark = false;
                if (byteIndex < data.length) {
                  dark = (data[byteIndex] >>> bitIndex & 1) == 1;
                }
                var mask = maskFunc(row, col - c);
                if (mask) {
                  dark = !dark;
                }
                _modules[row][col - c] = dark;
                bitIndex -= 1;
                if (bitIndex == -1) {
                  byteIndex += 1;
                  bitIndex = 7;
                }
              }
            }
            row += inc;
            if (row < 0 || _moduleCount <= row) {
              row -= inc;
              inc = -inc;
              break;
            }
          }
        }
      };
      var createBytes = function (buffer, rsBlocks) {
        var offset = 0;
        var maxDcCount = 0;
        var maxEcCount = 0;
        var dcdata = new Array(rsBlocks.length);
        var ecdata = new Array(rsBlocks.length);
        for (var r = 0; r < rsBlocks.length; r += 1) {
          var dcCount = rsBlocks[r].dataCount;
          var ecCount = rsBlocks[r].totalCount - dcCount;
          maxDcCount = Math.max(maxDcCount, dcCount);
          maxEcCount = Math.max(maxEcCount, ecCount);
          dcdata[r] = new Array(dcCount);
          for (var i = 0; i < dcdata[r].length; i += 1) {
            dcdata[r][i] = 255 & buffer.getBuffer()[i + offset];
          }
          offset += dcCount;
          var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
          var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);
          var modPoly = rawPoly.mod(rsPoly);
          ecdata[r] = new Array(rsPoly.getLength() - 1);
          for (var i = 0; i < ecdata[r].length; i += 1) {
            var modIndex = i + modPoly.getLength() - ecdata[r].length;
            ecdata[r][i] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;
          }
        }
        var totalCodeCount = 0;
        for (var i = 0; i < rsBlocks.length; i += 1) {
          totalCodeCount += rsBlocks[i].totalCount;
        }
        var data = new Array(totalCodeCount);
        var index = 0;
        for (var i = 0; i < maxDcCount; i += 1) {
          for (var r = 0; r < rsBlocks.length; r += 1) {
            if (i < dcdata[r].length) {
              data[index] = dcdata[r][i];
              index += 1;
            }
          }
        }
        for (var i = 0; i < maxEcCount; i += 1) {
          for (var r = 0; r < rsBlocks.length; r += 1) {
            if (i < ecdata[r].length) {
              data[index] = ecdata[r][i];
              index += 1;
            }
          }
        }
        return data;
      };
      var createData = function (typeNumber, errorCorrectLevel, dataList) {
        var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);
        var buffer = qrBitBuffer();
        for (var i = 0; i < dataList.length; i += 1) {
          var data = dataList[i];
          buffer.put(data.getMode(), 4);
          buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber));
          data.write(buffer);
        }
        // calc num max data.
        var totalDataCount = 0;
        for (var i = 0; i < rsBlocks.length; i += 1) {
          totalDataCount += rsBlocks[i].dataCount;
        }
        if (buffer.getLengthInBits() > totalDataCount * 8) {
          throw new Error('code length overflow. (' + buffer.getLengthInBits() + '>' + totalDataCount * 8 + ')');
        }
        // end code
        if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {
          buffer.put(0, 4);
        }
        // padding
        while (buffer.getLengthInBits() % 8 != 0) {
          buffer.putBit(false);
        }
        // padding
        while (true) {
          if (buffer.getLengthInBits() >= totalDataCount * 8) {
            break;
          }
          buffer.put(PAD0, 8);
          if (buffer.getLengthInBits() >= totalDataCount * 8) {
            break;
          }
          buffer.put(PAD1, 8);
        }
        return createBytes(buffer, rsBlocks);
      };
      _this.addData = function (data) {
        var newData = qr8BitByte(data);
        _dataList.push(newData);
        _dataCache = null;
      };
      _this.isDark = function (row, col) {
        if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {
          throw new Error(row + ',' + col);
        }
        return _modules[row][col];
      };
      _this.getModuleCount = function () {
        return _moduleCount;
      };
      _this.make = function () {
        makeImpl(false, getBestMaskPattern());
      };
      _this.createTableTag = function (cellSize, margin) {
        cellSize = cellSize || 2;
        margin = typeof margin == 'undefined' ? cellSize * 4 : margin;
        var qrHtml = '';
        qrHtml += '<table style="';
        qrHtml += ' border-width: 0px; border-style: none;';
        qrHtml += ' border-collapse: collapse;';
        qrHtml += ' padding: 0px; margin: ' + margin + 'px;';
        qrHtml += '">';
        qrHtml += '<tbody>';
        for (var r = 0; r < _this.getModuleCount(); r += 1) {
          qrHtml += '<tr>';
          for (var c = 0; c < _this.getModuleCount(); c += 1) {
            qrHtml += '<td style="';
            qrHtml += ' border-width: 0px; border-style: none;';
            qrHtml += ' border-collapse: collapse;';
            qrHtml += ' padding: 0px; margin: 0px;';
            qrHtml += ' width: ' + cellSize + 'px;';
            qrHtml += ' height: ' + cellSize + 'px;';
            qrHtml += ' background-color: ';
            qrHtml += _this.isDark(r, c) ? '#000000' : '#ffffff';
            qrHtml += ';';
            qrHtml += '"/>';
          }
          qrHtml += '</tr>';
        }
        qrHtml += '</tbody>';
        qrHtml += '</table>';
        return qrHtml;
      };
      _this.createImgTag = function (cellSize, margin) {
        cellSize = cellSize || 2;
        margin = typeof margin == 'undefined' ? cellSize * 4 : margin;
        var size = _this.getModuleCount() * cellSize + margin * 2;
        var min = margin;
        var max = size - margin;
        return createImgTag(size, size, function (x, y) {
          if (min <= x && x < max && min <= y && y < max) {
            var c = Math.floor((x - min) / cellSize);
            var r = Math.floor((y - min) / cellSize);
            return _this.isDark(r, c) ? 0 : 1;
          } else {
            return 1;
          }
        });
      };
      return _this;
    };
    //---------------------------------------------------------------------
    // qrcode.stringToBytes
    //---------------------------------------------------------------------
    qrcode.stringToBytes = function (s) {
      var bytes = new Array();
      for (var i = 0; i < s.length; i += 1) {
        var c = s.charCodeAt(i);
        bytes.push(c & 255);
      }
      return bytes;
    };
    //---------------------------------------------------------------------
    // qrcode.createStringToBytes
    //---------------------------------------------------------------------
    /**
   * @param unicodeData base64 string of byte array.
   * [16bit Unicode],[16bit Bytes], ...
   * @param numChars
   */
    qrcode.createStringToBytes = function (unicodeData, numChars) {
      // create conversion map.
      var unicodeMap = function () {
          var bin = base64DecodeInputStream(unicodeData);
          var read = function () {
            var b = bin.read();
            if (b == -1)
              throw new Error();
            return b;
          };
          var count = 0;
          var unicodeMap = {};
          while (true) {
            var b0 = bin.read();
            if (b0 == -1)
              break;
            var b1 = read();
            var b2 = read();
            var b3 = read();
            var k = String.fromCharCode(b0 << 8 | b1);
            var v = b2 << 8 | b3;
            unicodeMap[k] = v;
            count += 1;
          }
          if (count != numChars) {
            throw new Error(count + ' != ' + numChars);
          }
          return unicodeMap;
        }();
      var unknownChar = '?'.charCodeAt(0);
      return function (s) {
        var bytes = new Array();
        for (var i = 0; i < s.length; i += 1) {
          var c = s.charCodeAt(i);
          if (c < 128) {
            bytes.push(c);
          } else {
            var b = unicodeMap[s.charAt(i)];
            if (typeof b == 'number') {
              if ((b & 255) == b) {
                // 1byte
                bytes.push(b);
              } else {
                // 2bytes
                bytes.push(b >>> 8);
                bytes.push(b & 255);
              }
            } else {
              bytes.push(unknownChar);
            }
          }
        }
        return bytes;
      };
    };
    //---------------------------------------------------------------------
    // QRMode
    //---------------------------------------------------------------------
    var QRMode = {
        MODE_NUMBER: 1 << 0,
        MODE_ALPHA_NUM: 1 << 1,
        MODE_8BIT_BYTE: 1 << 2,
        MODE_KANJI: 1 << 3
      };
    //---------------------------------------------------------------------
    // QRErrorCorrectLevel
    //---------------------------------------------------------------------
    var QRErrorCorrectLevel = {
        L: 1,
        M: 0,
        Q: 3,
        H: 2
      };
    //---------------------------------------------------------------------
    // QRMaskPattern
    //---------------------------------------------------------------------
    var QRMaskPattern = {
        PATTERN000: 0,
        PATTERN001: 1,
        PATTERN010: 2,
        PATTERN011: 3,
        PATTERN100: 4,
        PATTERN101: 5,
        PATTERN110: 6,
        PATTERN111: 7
      };
    //---------------------------------------------------------------------
    // QRUtil
    //---------------------------------------------------------------------
    var QRUtil = function () {
        var PATTERN_POSITION_TABLE = [
            [],
            [
              6,
              18
            ],
            [
              6,
              22
            ],
            [
              6,
              26
            ],
            [
              6,
              30
            ],
            [
              6,
              34
            ],
            [
              6,
              22,
              38
            ],
            [
              6,
              24,
              42
            ],
            [
              6,
              26,
              46
            ],
            [
              6,
              28,
              50
            ],
            [
              6,
              30,
              54
            ],
            [
              6,
              32,
              58
            ],
            [
              6,
              34,
              62
            ],
            [
              6,
              26,
              46,
              66
            ],
            [
              6,
              26,
              48,
              70
            ],
            [
              6,
              26,
              50,
              74
            ],
            [
              6,
              30,
              54,
              78
            ],
            [
              6,
              30,
              56,
              82
            ],
            [
              6,
              30,
              58,
              86
            ],
            [
              6,
              34,
              62,
              90
            ],
            [
              6,
              28,
              50,
              72,
              94
            ],
            [
              6,
              26,
              50,
              74,
              98
            ],
            [
              6,
              30,
              54,
              78,
              102
            ],
            [
              6,
              28,
              54,
              80,
              106
            ],
            [
              6,
              32,
              58,
              84,
              110
            ],
            [
              6,
              30,
              58,
              86,
              114
            ],
            [
              6,
              34,
              62,
              90,
              118
            ],
            [
              6,
              26,
              50,
              74,
              98,
              122
            ],
            [
              6,
              30,
              54,
              78,
              102,
              126
            ],
            [
              6,
              26,
              52,
              78,
              104,
              130
            ],
            [
              6,
              30,
              56,
              82,
              108,
              134
            ],
            [
              6,
              34,
              60,
              86,
              112,
              138
            ],
            [
              6,
              30,
              58,
              86,
              114,
              142
            ],
            [
              6,
              34,
              62,
              90,
              118,
              146
            ],
            [
              6,
              30,
              54,
              78,
              102,
              126,
              150
            ],
            [
              6,
              24,
              50,
              76,
              102,
              128,
              154
            ],
            [
              6,
              28,
              54,
              80,
              106,
              132,
              158
            ],
            [
              6,
              32,
              58,
              84,
              110,
              136,
              162
            ],
            [
              6,
              26,
              54,
              82,
              110,
              138,
              166
            ],
            [
              6,
              30,
              58,
              86,
              114,
              142,
              170
            ]
          ];
        var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;
        var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;
        var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;
        var _this = {};
        var getBCHDigit = function (data) {
          var digit = 0;
          while (data != 0) {
            digit += 1;
            data >>>= 1;
          }
          return digit;
        };
        _this.getBCHTypeInfo = function (data) {
          var d = data << 10;
          while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {
            d ^= G15 << getBCHDigit(d) - getBCHDigit(G15);
          }
          return (data << 10 | d) ^ G15_MASK;
        };
        _this.getBCHTypeNumber = function (data) {
          var d = data << 12;
          while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {
            d ^= G18 << getBCHDigit(d) - getBCHDigit(G18);
          }
          return data << 12 | d;
        };
        _this.getPatternPosition = function (typeNumber) {
          return PATTERN_POSITION_TABLE[typeNumber - 1];
        };
        _this.getMaskFunction = function (maskPattern) {
          switch (maskPattern) {
          case QRMaskPattern.PATTERN000:
            return function (i, j) {
              return (i + j) % 2 == 0;
            };
          case QRMaskPattern.PATTERN001:
            return function (i, j) {
              return i % 2 == 0;
            };
          case QRMaskPattern.PATTERN010:
            return function (i, j) {
              return j % 3 == 0;
            };
          case QRMaskPattern.PATTERN011:
            return function (i, j) {
              return (i + j) % 3 == 0;
            };
          case QRMaskPattern.PATTERN100:
            return function (i, j) {
              return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;
            };
          case QRMaskPattern.PATTERN101:
            return function (i, j) {
              return i * j % 2 + i * j % 3 == 0;
            };
          case QRMaskPattern.PATTERN110:
            return function (i, j) {
              return (i * j % 2 + i * j % 3) % 2 == 0;
            };
          case QRMaskPattern.PATTERN111:
            return function (i, j) {
              return (i * j % 3 + (i + j) % 2) % 2 == 0;
            };
          default:
            throw new Error('bad maskPattern:' + maskPattern);
          }
        };
        _this.getErrorCorrectPolynomial = function (errorCorrectLength) {
          var a = qrPolynomial([1], 0);
          for (var i = 0; i < errorCorrectLength; i += 1) {
            a = a.multiply(qrPolynomial([
              1,
              QRMath.gexp(i)
            ], 0));
          }
          return a;
        };
        _this.getLengthInBits = function (mode, type) {
          if (1 <= type && type < 10) {
            // 1 - 9
            switch (mode) {
            case QRMode.MODE_NUMBER:
              return 10;
            case QRMode.MODE_ALPHA_NUM:
              return 9;
            case QRMode.MODE_8BIT_BYTE:
              return 8;
            case QRMode.MODE_KANJI:
              return 8;
            default:
              throw new Error('mode:' + mode);
            }
          } else if (type < 27) {
            // 10 - 26
            switch (mode) {
            case QRMode.MODE_NUMBER:
              return 12;
            case QRMode.MODE_ALPHA_NUM:
              return 11;
            case QRMode.MODE_8BIT_BYTE:
              return 16;
            case QRMode.MODE_KANJI:
              return 10;
            default:
              throw new Error('mode:' + mode);
            }
          } else if (type < 41) {
            // 27 - 40
            switch (mode) {
            case QRMode.MODE_NUMBER:
              return 14;
            case QRMode.MODE_ALPHA_NUM:
              return 13;
            case QRMode.MODE_8BIT_BYTE:
              return 16;
            case QRMode.MODE_KANJI:
              return 12;
            default:
              throw new Error('mode:' + mode);
            }
          } else {
            throw new Error('type:' + type);
          }
        };
        _this.getLostPoint = function (qrcode) {
          var moduleCount = qrcode.getModuleCount();
          var lostPoint = 0;
          // LEVEL1
          for (var row = 0; row < moduleCount; row += 1) {
            for (var col = 0; col < moduleCount; col += 1) {
              var sameCount = 0;
              var dark = qrcode.isDark(row, col);
              for (var r = -1; r <= 1; r += 1) {
                if (row + r < 0 || moduleCount <= row + r) {
                  continue;
                }
                for (var c = -1; c <= 1; c += 1) {
                  if (col + c < 0 || moduleCount <= col + c) {
                    continue;
                  }
                  if (r == 0 && c == 0) {
                    continue;
                  }
                  if (dark == qrcode.isDark(row + r, col + c)) {
                    sameCount += 1;
                  }
                }
              }
              if (sameCount > 5) {
                lostPoint += 3 + sameCount - 5;
              }
            }
          }
          ;
          // LEVEL2
          for (var row = 0; row < moduleCount - 1; row += 1) {
            for (var col = 0; col < moduleCount - 1; col += 1) {
              var count = 0;
              if (qrcode.isDark(row, col))
                count += 1;
              if (qrcode.isDark(row + 1, col))
                count += 1;
              if (qrcode.isDark(row, col + 1))
                count += 1;
              if (qrcode.isDark(row + 1, col + 1))
                count += 1;
              if (count == 0 || count == 4) {
                lostPoint += 3;
              }
            }
          }
          // LEVEL3
          for (var row = 0; row < moduleCount; row += 1) {
            for (var col = 0; col < moduleCount - 6; col += 1) {
              if (qrcode.isDark(row, col) && !qrcode.isDark(row, col + 1) && qrcode.isDark(row, col + 2) && qrcode.isDark(row, col + 3) && qrcode.isDark(row, col + 4) && !qrcode.isDark(row, col + 5) && qrcode.isDark(row, col + 6)) {
                lostPoint += 40;
              }
            }
          }
          for (var col = 0; col < moduleCount; col += 1) {
            for (var row = 0; row < moduleCount - 6; row += 1) {
              if (qrcode.isDark(row, col) && !qrcode.isDark(row + 1, col) && qrcode.isDark(row + 2, col) && qrcode.isDark(row + 3, col) && qrcode.isDark(row + 4, col) && !qrcode.isDark(row + 5, col) && qrcode.isDark(row + 6, col)) {
                lostPoint += 40;
              }
            }
          }
          // LEVEL4
          var darkCount = 0;
          for (var col = 0; col < moduleCount; col += 1) {
            for (var row = 0; row < moduleCount; row += 1) {
              if (qrcode.isDark(row, col)) {
                darkCount += 1;
              }
            }
          }
          var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
          lostPoint += ratio * 10;
          return lostPoint;
        };
        return _this;
      }();
    //---------------------------------------------------------------------
    // QRMath
    //---------------------------------------------------------------------
    var QRMath = function () {
        var EXP_TABLE = new Array(256);
        var LOG_TABLE = new Array(256);
        // initialize tables
        for (var i = 0; i < 8; i += 1) {
          EXP_TABLE[i] = 1 << i;
        }
        for (var i = 8; i < 256; i += 1) {
          EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];
        }
        for (var i = 0; i < 255; i += 1) {
          LOG_TABLE[EXP_TABLE[i]] = i;
        }
        var _this = {};
        _this.glog = function (n) {
          if (n < 1) {
            throw new Error('glog(' + n + ')');
          }
          return LOG_TABLE[n];
        };
        _this.gexp = function (n) {
          while (n < 0) {
            n += 255;
          }
          while (n >= 256) {
            n -= 255;
          }
          return EXP_TABLE[n];
        };
        return _this;
      }();
    //---------------------------------------------------------------------
    // qrPolynomial
    //---------------------------------------------------------------------
    function qrPolynomial(num, shift) {
      if (typeof num.length == 'undefined') {
        throw new Error(num.length + '/' + shift);
      }
      var _num = function () {
          var offset = 0;
          while (offset < num.length && num[offset] == 0) {
            offset += 1;
          }
          var _num = new Array(num.length - offset + shift);
          for (var i = 0; i < num.length - offset; i += 1) {
            _num[i] = num[i + offset];
          }
          return _num;
        }();
      var _this = {};
      _this.getAt = function (index) {
        return _num[index];
      };
      _this.getLength = function () {
        return _num.length;
      };
      _this.multiply = function (e) {
        var num = new Array(_this.getLength() + e.getLength() - 1);
        for (var i = 0; i < _this.getLength(); i += 1) {
          for (var j = 0; j < e.getLength(); j += 1) {
            num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i)) + QRMath.glog(e.getAt(j)));
          }
        }
        return qrPolynomial(num, 0);
      };
      _this.mod = function (e) {
        if (_this.getLength() - e.getLength() < 0) {
          return _this;
        }
        var ratio = QRMath.glog(_this.getAt(0)) - QRMath.glog(e.getAt(0));
        var num = new Array(_this.getLength());
        for (var i = 0; i < _this.getLength(); i += 1) {
          num[i] = _this.getAt(i);
        }
        for (var i = 0; i < e.getLength(); i += 1) {
          num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i)) + ratio);
        }
        // recursive call
        return qrPolynomial(num, 0).mod(e);
      };
      return _this;
    }
    ;
    //---------------------------------------------------------------------
    // QRRSBlock
    //---------------------------------------------------------------------
    var QRRSBlock = function () {
        var RS_BLOCK_TABLE = [
            [
              1,
              26,
              19
            ],
            [
              1,
              26,
              16
            ],
            [
              1,
              26,
              13
            ],
            [
              1,
              26,
              9
            ],
            [
              1,
              44,
              34
            ],
            [
              1,
              44,
              28
            ],
            [
              1,
              44,
              22
            ],
            [
              1,
              44,
              16
            ],
            [
              1,
              70,
              55
            ],
            [
              1,
              70,
              44
            ],
            [
              2,
              35,
              17
            ],
            [
              2,
              35,
              13
            ],
            [
              1,
              100,
              80
            ],
            [
              2,
              50,
              32
            ],
            [
              2,
              50,
              24
            ],
            [
              4,
              25,
              9
            ],
            [
              1,
              134,
              108
            ],
            [
              2,
              67,
              43
            ],
            [
              2,
              33,
              15,
              2,
              34,
              16
            ],
            [
              2,
              33,
              11,
              2,
              34,
              12
            ],
            [
              2,
              86,
              68
            ],
            [
              4,
              43,
              27
            ],
            [
              4,
              43,
              19
            ],
            [
              4,
              43,
              15
            ],
            [
              2,
              98,
              78
            ],
            [
              4,
              49,
              31
            ],
            [
              2,
              32,
              14,
              4,
              33,
              15
            ],
            [
              4,
              39,
              13,
              1,
              40,
              14
            ],
            [
              2,
              121,
              97
            ],
            [
              2,
              60,
              38,
              2,
              61,
              39
            ],
            [
              4,
              40,
              18,
              2,
              41,
              19
            ],
            [
              4,
              40,
              14,
              2,
              41,
              15
            ],
            [
              2,
              146,
              116
            ],
            [
              3,
              58,
              36,
              2,
              59,
              37
            ],
            [
              4,
              36,
              16,
              4,
              37,
              17
            ],
            [
              4,
              36,
              12,
              4,
              37,
              13
            ],
            [
              2,
              86,
              68,
              2,
              87,
              69
            ],
            [
              4,
              69,
              43,
              1,
              70,
              44
            ],
            [
              6,
              43,
              19,
              2,
              44,
              20
            ],
            [
              6,
              43,
              15,
              2,
              44,
              16
            ]
          ];
        var qrRSBlock = function (totalCount, dataCount) {
          var _this = {};
          _this.totalCount = totalCount;
          _this.dataCount = dataCount;
          return _this;
        };
        var _this = {};
        var getRsBlockTable = function (typeNumber, errorCorrectLevel) {
          switch (errorCorrectLevel) {
          case QRErrorCorrectLevel.L:
            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];
          case QRErrorCorrectLevel.M:
            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];
          case QRErrorCorrectLevel.Q:
            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];
          case QRErrorCorrectLevel.H:
            return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];
          default:
            return undefined;
          }
        };
        _this.getRSBlocks = function (typeNumber, errorCorrectLevel) {
          var rsBlock = getRsBlockTable(typeNumber, errorCorrectLevel);
          if (typeof rsBlock == 'undefined') {
            throw new Error('bad rs block @ typeNumber:' + typeNumber + '/errorCorrectLevel:' + errorCorrectLevel);
          }
          var length = rsBlock.length / 3;
          var list = new Array();
          for (var i = 0; i < length; i += 1) {
            var count = rsBlock[i * 3 + 0];
            var totalCount = rsBlock[i * 3 + 1];
            var dataCount = rsBlock[i * 3 + 2];
            for (var j = 0; j < count; j += 1) {
              list.push(qrRSBlock(totalCount, dataCount));
            }
          }
          return list;
        };
        return _this;
      }();
    //---------------------------------------------------------------------
    // qrBitBuffer
    //---------------------------------------------------------------------
    var qrBitBuffer = function () {
      var _buffer = new Array();
      var _length = 0;
      var _this = {};
      _this.getBuffer = function () {
        return _buffer;
      };
      _this.getAt = function (index) {
        var bufIndex = Math.floor(index / 8);
        return (_buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;
      };
      _this.put = function (num, length) {
        for (var i = 0; i < length; i += 1) {
          _this.putBit((num >>> length - i - 1 & 1) == 1);
        }
      };
      _this.getLengthInBits = function () {
        return _length;
      };
      _this.putBit = function (bit) {
        var bufIndex = Math.floor(_length / 8);
        if (_buffer.length <= bufIndex) {
          _buffer.push(0);
        }
        if (bit) {
          _buffer[bufIndex] |= 128 >>> _length % 8;
        }
        _length += 1;
      };
      return _this;
    };
    //---------------------------------------------------------------------
    // qr8BitByte
    //---------------------------------------------------------------------
    var qr8BitByte = function (data) {
      var _mode = QRMode.MODE_8BIT_BYTE;
      var _data = data;
      var _bytes = qrcode.stringToBytes(data);
      var _this = {};
      _this.getMode = function () {
        return _mode;
      };
      _this.getLength = function (buffer) {
        return _bytes.length;
      };
      _this.write = function (buffer) {
        for (var i = 0; i < _bytes.length; i += 1) {
          buffer.put(_bytes[i], 8);
        }
      };
      return _this;
    };
    //=====================================================================
    // GIF Support etc.
    //
    //---------------------------------------------------------------------
    // byteArrayOutputStream
    //---------------------------------------------------------------------
    var byteArrayOutputStream = function () {
      var _bytes = new Array();
      var _this = {};
      _this.writeByte = function (b) {
        _bytes.push(b & 255);
      };
      _this.writeShort = function (i) {
        _this.writeByte(i);
        _this.writeByte(i >>> 8);
      };
      _this.writeBytes = function (b, off, len) {
        off = off || 0;
        len = len || b.length;
        for (var i = 0; i < len; i += 1) {
          _this.writeByte(b[i + off]);
        }
      };
      _this.writeString = function (s) {
        for (var i = 0; i < s.length; i += 1) {
          _this.writeByte(s.charCodeAt(i));
        }
      };
      _this.toByteArray = function () {
        return _bytes;
      };
      _this.toString = function () {
        var s = '';
        s += '[';
        for (var i = 0; i < _bytes.length; i += 1) {
          if (i > 0) {
            s += ',';
          }
          s += _bytes[i];
        }
        s += ']';
        return s;
      };
      return _this;
    };
    //---------------------------------------------------------------------
    // base64EncodeOutputStream
    //---------------------------------------------------------------------
    var base64EncodeOutputStream = function () {
      var _buffer = 0;
      var _buflen = 0;
      var _length = 0;
      var _base64 = '';
      var _this = {};
      var writeEncoded = function (b) {
        _base64 += String.fromCharCode(encode(b & 63));
      };
      var encode = function (n) {
        if (n < 0) {
        } else if (n < 26) {
          return 65 + n;
        } else if (n < 52) {
          return 97 + (n - 26);
        } else if (n < 62) {
          return 48 + (n - 52);
        } else if (n == 62) {
          return 43;
        } else if (n == 63) {
          return 47;
        }
        throw new Error('n:' + n);
      };
      _this.writeByte = function (n) {
        _buffer = _buffer << 8 | n & 255;
        _buflen += 8;
        _length += 1;
        while (_buflen >= 6) {
          writeEncoded(_buffer >>> _buflen - 6);
          _buflen -= 6;
        }
      };
      _this.flush = function () {
        if (_buflen > 0) {
          writeEncoded(_buffer << 6 - _buflen);
          _buffer = 0;
          _buflen = 0;
        }
        if (_length % 3 != 0) {
          // padding
          var padlen = 3 - _length % 3;
          for (var i = 0; i < padlen; i += 1) {
            _base64 += '=';
          }
        }
      };
      _this.toString = function () {
        return _base64;
      };
      return _this;
    };
    //---------------------------------------------------------------------
    // base64DecodeInputStream
    //---------------------------------------------------------------------
    var base64DecodeInputStream = function (str) {
      var _str = str;
      var _pos = 0;
      var _buffer = 0;
      var _buflen = 0;
      var _this = {};
      _this.read = function () {
        while (_buflen < 8) {
          if (_pos >= _str.length) {
            if (_buflen == 0) {
              return -1;
            }
            throw new Error('unexpected end of file./' + _buflen);
          }
          var c = _str.charAt(_pos);
          _pos += 1;
          if (c == '=') {
            _buflen = 0;
            return -1;
          } else if (c.match(/^\s$/)) {
            // ignore if whitespace.
            continue;
          }
          _buffer = _buffer << 6 | decode(c.charCodeAt(0));
          _buflen += 6;
        }
        var n = _buffer >>> _buflen - 8 & 255;
        _buflen -= 8;
        return n;
      };
      var decode = function (c) {
        if (65 <= c && c <= 90) {
          return c - 65;
        } else if (97 <= c && c <= 122) {
          return c - 97 + 26;
        } else if (48 <= c && c <= 57) {
          return c - 48 + 52;
        } else if (c == 43) {
          return 62;
        } else if (c == 47) {
          return 63;
        } else {
          throw new Error('c:' + c);
        }
      };
      return _this;
    };
    //---------------------------------------------------------------------
    // gifImage (B/W)
    //---------------------------------------------------------------------
    var gifImage = function (width, height) {
      var _width = width;
      var _height = height;
      var _data = new Array(width * height);
      var _this = {};
      _this.setPixel = function (x, y, pixel) {
        _data[y * _width + x] = pixel;
      };
      _this.write = function (out) {
        //---------------------------------
        // GIF Signature
        out.writeString('GIF87a');
        //---------------------------------
        // Screen Descriptor
        out.writeShort(_width);
        out.writeShort(_height);
        out.writeByte(128);
        // 2bit
        out.writeByte(0);
        out.writeByte(0);
        //---------------------------------
        // Global Color Map
        // black
        out.writeByte(0);
        out.writeByte(0);
        out.writeByte(0);
        // white
        out.writeByte(255);
        out.writeByte(255);
        out.writeByte(255);
        //---------------------------------
        // Image Descriptor
        out.writeString(',');
        out.writeShort(0);
        out.writeShort(0);
        out.writeShort(_width);
        out.writeShort(_height);
        out.writeByte(0);
        //---------------------------------
        // Local Color Map
        //---------------------------------
        // Raster Data
        var lzwMinCodeSize = 2;
        var raster = getLZWRaster(lzwMinCodeSize);
        out.writeByte(lzwMinCodeSize);
        var offset = 0;
        while (raster.length - offset > 255) {
          out.writeByte(255);
          out.writeBytes(raster, offset, 255);
          offset += 255;
        }
        out.writeByte(raster.length - offset);
        out.writeBytes(raster, offset, raster.length - offset);
        out.writeByte(0);
        //---------------------------------
        // GIF Terminator
        out.writeString(';');
      };
      var bitOutputStream = function (out) {
        var _out = out;
        var _bitLength = 0;
        var _bitBuffer = 0;
        var _this = {};
        _this.write = function (data, length) {
          if (data >>> length != 0) {
            throw new Error('length over');
          }
          while (_bitLength + length >= 8) {
            _out.writeByte(255 & (data << _bitLength | _bitBuffer));
            length -= 8 - _bitLength;
            data >>>= 8 - _bitLength;
            _bitBuffer = 0;
            _bitLength = 0;
          }
          _bitBuffer = data << _bitLength | _bitBuffer;
          _bitLength = _bitLength + length;
        };
        _this.flush = function () {
          if (_bitLength > 0) {
            _out.writeByte(_bitBuffer);
          }
        };
        return _this;
      };
      var getLZWRaster = function (lzwMinCodeSize) {
        var clearCode = 1 << lzwMinCodeSize;
        var endCode = (1 << lzwMinCodeSize) + 1;
        var bitLength = lzwMinCodeSize + 1;
        // Setup LZWTable
        var table = lzwTable();
        for (var i = 0; i < clearCode; i += 1) {
          table.add(String.fromCharCode(i));
        }
        table.add(String.fromCharCode(clearCode));
        table.add(String.fromCharCode(endCode));
        var byteOut = byteArrayOutputStream();
        var bitOut = bitOutputStream(byteOut);
        // clear code
        bitOut.write(clearCode, bitLength);
        var dataIndex = 0;
        var s = String.fromCharCode(_data[dataIndex]);
        dataIndex += 1;
        while (dataIndex < _data.length) {
          var c = String.fromCharCode(_data[dataIndex]);
          dataIndex += 1;
          if (table.contains(s + c)) {
            s = s + c;
          } else {
            bitOut.write(table.indexOf(s), bitLength);
            if (table.size() < 4095) {
              if (table.size() == 1 << bitLength) {
                bitLength += 1;
              }
              table.add(s + c);
            }
            s = c;
          }
        }
        bitOut.write(table.indexOf(s), bitLength);
        // end code
        bitOut.write(endCode, bitLength);
        bitOut.flush();
        return byteOut.toByteArray();
      };
      var lzwTable = function () {
        var _map = {};
        var _size = 0;
        var _this = {};
        _this.add = function (key) {
          if (_this.contains(key)) {
            throw new Error('dup key:' + key);
          }
          _map[key] = _size;
          _size += 1;
        };
        _this.size = function () {
          return _size;
        };
        _this.indexOf = function (key) {
          return _map[key];
        };
        _this.contains = function (key) {
          return typeof _map[key] != 'undefined';
        };
        return _this;
      };
      return _this;
    };
    var createImgTag = function (width, height, getPixel, alt) {
      var gif = gifImage(width, height);
      for (var y = 0; y < height; y += 1) {
        for (var x = 0; x < width; x += 1) {
          gif.setPixel(x, y, getPixel(x, y));
        }
      }
      var b = byteArrayOutputStream();
      gif.write(b);
      var base64 = base64EncodeOutputStream();
      var bytes = b.toByteArray();
      for (var i = 0; i < bytes.length; i += 1) {
        base64.writeByte(bytes[i]);
      }
      base64.flush();
      var img = '';
      img += '<img';
      img += ' src="';
      img += 'data:image/gif;base64,';
      img += base64;
      img += '"';
      img += ' width="';
      img += width;
      img += '"';
      img += ' height="';
      img += height;
      img += '"';
      if (alt) {
        img += ' alt="';
        img += alt;
        img += '"';
      }
      img += '/>';
      return img;
    };
    //---------------------------------------------------------------------
    // returns qrcode function.
    return qrcode;
  }();
//---------------------------------------------------------------------
//
// QR Code Generator for JavaScript UTF8 Support (optional)
//
// Copyright (c) 2011 Kazuhiko Arase
//
// URL: http://www.d-project.com/
//
// Licensed under the MIT license:
//  http://www.opensource.org/licenses/mit-license.php
//
// The word 'QR Code' is registered trademark of
// DENSO WAVE INCORPORATED
//  http://www.denso-wave.com/qrcode/faqpatent-e.html
//
//---------------------------------------------------------------------
!function (qrcode) {
  //---------------------------------------------------------------------
  // overwrite qrcode.stringToBytes
  //---------------------------------------------------------------------
  qrcode.stringToBytes = function (s) {
    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array
    function toUTF8Array(str) {
      var utf8 = [];
      for (var i = 0; i < str.length; i++) {
        var charcode = str.charCodeAt(i);
        if (charcode < 128)
          utf8.push(charcode);
        else if (charcode < 2048) {
          utf8.push(192 | charcode >> 6, 128 | charcode & 63);
        } else if (charcode < 55296 || charcode >= 57344) {
          utf8.push(224 | charcode >> 12, 128 | charcode >> 6 & 63, 128 | charcode & 63);
        }  // surrogate pair
        else {
          i++;
          // UTF-16 encodes 0x10000-0x10FFFF by
          // subtracting 0x10000 and splitting the
          // 20 bits of 0x0-0xFFFFF into two halves
          charcode = 65536 + ((charcode & 1023) << 10 | str.charCodeAt(i) & 1023);
          utf8.push(240 | charcode >> 18, 128 | charcode >> 12 & 63, 128 | charcode >> 6 & 63, 128 | charcode & 63);
        }
      }
      return utf8;
    }
    return toUTF8Array(s);
  };
}(qrcode);
/*!
 * Chart.js
 * http://chartjs.org/
 * Version: 1.0.2
 *
 * Copyright 2015 Nick Downie
 * Released under the MIT license
 * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md
 */
(function () {
  'use strict';
  var t = this, i = t.Chart, e = function (t) {
      this.canvas = t.canvas, this.ctx = t;
      var i = function (t, i) {
          return t['offset' + i] ? t['offset' + i] : document.defaultView.getComputedStyle(t).getPropertyValue(i);
        }, e = this.width = i(t.canvas, 'Width'), n = this.height = i(t.canvas, 'Height');
      t.canvas.width = e, t.canvas.height = n;
      var e = this.width = t.canvas.width, n = this.height = t.canvas.height;
      return this.aspectRatio = this.width / this.height, s.retinaScale(this), this;
    };
  e.defaults = {
    global: {
      animation: !0,
      animationSteps: 60,
      animationEasing: 'easeOutQuart',
      showScale: !0,
      scaleOverride: !1,
      scaleSteps: null,
      scaleStepWidth: null,
      scaleStartValue: null,
      scaleLineColor: 'rgba(0,0,0,.1)',
      scaleLineWidth: 1,
      scaleShowLabels: !0,
      scaleLabel: '<%=value%>',
      scaleIntegersOnly: !0,
      scaleBeginAtZero: !1,
      scaleFontFamily: '\'Helvetica Neue\', \'Helvetica\', \'Arial\', sans-serif',
      scaleFontSize: 12,
      scaleFontStyle: 'normal',
      scaleFontColor: '#666',
      responsive: !1,
      maintainAspectRatio: !0,
      showTooltips: !0,
      customTooltips: !1,
      tooltipEvents: [
        'mousemove',
        'touchstart',
        'touchmove',
        'mouseout'
      ],
      tooltipFillColor: 'rgba(0,0,0,0.8)',
      tooltipFontFamily: '\'Helvetica Neue\', \'Helvetica\', \'Arial\', sans-serif',
      tooltipFontSize: 14,
      tooltipFontStyle: 'normal',
      tooltipFontColor: '#fff',
      tooltipTitleFontFamily: '\'Helvetica Neue\', \'Helvetica\', \'Arial\', sans-serif',
      tooltipTitleFontSize: 14,
      tooltipTitleFontStyle: 'bold',
      tooltipTitleFontColor: '#fff',
      tooltipYPadding: 6,
      tooltipXPadding: 6,
      tooltipCaretSize: 8,
      tooltipCornerRadius: 6,
      tooltipXOffset: 10,
      tooltipTemplate: '<%if (label){%><%=label%>: <%}%><%= value %>',
      multiTooltipTemplate: '<%= value %>',
      multiTooltipKeyBackground: '#fff',
      onAnimationProgress: function () {
      },
      onAnimationComplete: function () {
      }
    }
  }, e.types = {};
  var s = e.helpers = {}, n = s.each = function (t, i, e) {
      var s = Array.prototype.slice.call(arguments, 3);
      if (t)
        if (t.length === +t.length) {
          var n;
          for (n = 0; n < t.length; n++)
            i.apply(e, [
              t[n],
              n
            ].concat(s));
        } else
          for (var o in t)
            i.apply(e, [
              t[o],
              o
            ].concat(s));
    }, o = s.clone = function (t) {
      var i = {};
      return n(t, function (e, s) {
        t.hasOwnProperty(s) && (i[s] = e);
      }), i;
    }, a = s.extend = function (t) {
      return n(Array.prototype.slice.call(arguments, 1), function (i) {
        n(i, function (e, s) {
          i.hasOwnProperty(s) && (t[s] = e);
        });
      }), t;
    }, h = s.merge = function () {
      var t = Array.prototype.slice.call(arguments, 0);
      return t.unshift({}), a.apply(null, t);
    }, l = s.indexOf = function (t, i) {
      if (Array.prototype.indexOf)
        return t.indexOf(i);
      for (var e = 0; e < t.length; e++)
        if (t[e] === i)
          return e;
      return -1;
    }, r = (s.where = function (t, i) {
      var e = [];
      return s.each(t, function (t) {
        i(t) && e.push(t);
      }), e;
    }, s.findNextWhere = function (t, i, e) {
      e || (e = -1);
      for (var s = e + 1; s < t.length; s++) {
        var n = t[s];
        if (i(n))
          return n;
      }
    }, s.findPreviousWhere = function (t, i, e) {
      e || (e = t.length);
      for (var s = e - 1; s >= 0; s--) {
        var n = t[s];
        if (i(n))
          return n;
      }
    }, s.inherits = function (t) {
      var i = this, e = t && t.hasOwnProperty('constructor') ? t.constructor : function () {
          return i.apply(this, arguments);
        }, s = function () {
          this.constructor = e;
        };
      return s.prototype = i.prototype, e.prototype = new s(), e.extend = r, t && a(e.prototype, t), e.__super__ = i.prototype, e;
    }), c = s.noop = function () {
    }, u = s.uid = function () {
      var t = 0;
      return function () {
        return 'chart-' + t++;
      };
    }(), d = s.warn = function (t) {
      window.console && 'function' == typeof window.console.warn && console.warn(t);
    }, p = s.amd = 'function' == typeof define && define.amd, f = s.isNumber = function (t) {
      return !isNaN(parseFloat(t)) && isFinite(t);
    }, g = s.max = function (t) {
      return Math.max.apply(Math, t);
    }, m = s.min = function (t) {
      return Math.min.apply(Math, t);
    }, v = (s.cap = function (t, i, e) {
      if (f(i)) {
        if (t > i)
          return i;
      } else if (f(e) && e > t)
        return e;
      return t;
    }, s.getDecimalPlaces = function (t) {
      return t % 1 !== 0 && f(t) ? t.toString().split('.')[1].length : 0;
    }), S = s.radians = function (t) {
      return t * (Math.PI / 180);
    }, x = (s.getAngleFromPoint = function (t, i) {
      var e = i.x - t.x, s = i.y - t.y, n = Math.sqrt(e * e + s * s), o = 2 * Math.PI + Math.atan2(s, e);
      return 0 > e && 0 > s && (o += 2 * Math.PI), {
        angle: o,
        distance: n
      };
    }, s.aliasPixel = function (t) {
      return t % 2 === 0 ? 0 : 0.5;
    }), y = (s.splineCurve = function (t, i, e, s) {
      var n = Math.sqrt(Math.pow(i.x - t.x, 2) + Math.pow(i.y - t.y, 2)), o = Math.sqrt(Math.pow(e.x - i.x, 2) + Math.pow(e.y - i.y, 2)), a = s * n / (n + o), h = s * o / (n + o);
      return {
        inner: {
          x: i.x - a * (e.x - t.x),
          y: i.y - a * (e.y - t.y)
        },
        outer: {
          x: i.x + h * (e.x - t.x),
          y: i.y + h * (e.y - t.y)
        }
      };
    }, s.calculateOrderOfMagnitude = function (t) {
      return Math.floor(Math.log(t) / Math.LN10);
    }), C = (s.calculateScaleRange = function (t, i, e, s, n) {
      var o = 2, a = Math.floor(i / (1.5 * e)), h = o >= a, l = g(t), r = m(t);
      l === r && (l += 0.5, r >= 0.5 && !s ? r -= 0.5 : l += 0.5);
      for (var c = Math.abs(l - r), u = y(c), d = Math.ceil(l / (1 * Math.pow(10, u))) * Math.pow(10, u), p = s ? 0 : Math.floor(r / (1 * Math.pow(10, u))) * Math.pow(10, u), f = d - p, v = Math.pow(10, u), S = Math.round(f / v); (S > a || a > 2 * S) && !h;)
        if (S > a)
          v *= 2, S = Math.round(f / v), S % 1 !== 0 && (h = !0);
        else if (n && u >= 0) {
          if (v / 2 % 1 !== 0)
            break;
          v /= 2, S = Math.round(f / v);
        } else
          v /= 2, S = Math.round(f / v);
      return h && (S = o, v = f / S), {
        steps: S,
        stepValue: v,
        min: p,
        max: p + S * v
      };
    }, s.template = function (t, i) {
      function e(t, i) {
        var e = /\W/.test(t) ? new Function('obj', 'var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push(\'' + t.replace(/[\r\t\n]/g, ' ').split('<%').join('\t').replace(/((^|%>)[^\t]*)'/g, '$1\r').replace(/\t=(.*?)%>/g, '\',$1,\'').split('\t').join('\');').split('%>').join('p.push(\'').split('\r').join('\\\'') + '\');}return p.join(\'\');') : s[t] = s[t];
        return i ? e(i) : e;
      }
      if (t instanceof Function)
        return t(i);
      var s = {};
      return e(t, i);
    }), w = (s.generateLabels = function (t, i, e, s) {
      var o = new Array(i);
      return labelTemplateString && n(o, function (i, n) {
        o[n] = C(t, { value: e + s * (n + 1) });
      }), o;
    }, s.easingEffects = {
      linear: function (t) {
        return t;
      },
      easeInQuad: function (t) {
        return t * t;
      },
      easeOutQuad: function (t) {
        return -1 * t * (t - 2);
      },
      easeInOutQuad: function (t) {
        return (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1);
      },
      easeInCubic: function (t) {
        return t * t * t;
      },
      easeOutCubic: function (t) {
        return 1 * ((t = t / 1 - 1) * t * t + 1);
      },
      easeInOutCubic: function (t) {
        return (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2);
      },
      easeInQuart: function (t) {
        return t * t * t * t;
      },
      easeOutQuart: function (t) {
        return -1 * ((t = t / 1 - 1) * t * t * t - 1);
      },
      easeInOutQuart: function (t) {
        return (t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2);
      },
      easeInQuint: function (t) {
        return 1 * (t /= 1) * t * t * t * t;
      },
      easeOutQuint: function (t) {
        return 1 * ((t = t / 1 - 1) * t * t * t * t + 1);
      },
      easeInOutQuint: function (t) {
        return (t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2);
      },
      easeInSine: function (t) {
        return -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;
      },
      easeOutSine: function (t) {
        return 1 * Math.sin(t / 1 * (Math.PI / 2));
      },
      easeInOutSine: function (t) {
        return -0.5 * (Math.cos(Math.PI * t / 1) - 1);
      },
      easeInExpo: function (t) {
        return 0 === t ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));
      },
      easeOutExpo: function (t) {
        return 1 === t ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);
      },
      easeInOutExpo: function (t) {
        return 0 === t ? 0 : 1 === t ? 1 : (t /= 0.5) < 1 ? 0.5 * Math.pow(2, 10 * (t - 1)) : 0.5 * (-Math.pow(2, -10 * --t) + 2);
      },
      easeInCirc: function (t) {
        return t >= 1 ? t : -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);
      },
      easeOutCirc: function (t) {
        return 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);
      },
      easeInOutCirc: function (t) {
        return (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
      },
      easeInElastic: function (t) {
        var i = 1.70158, e = 0, s = 1;
        return 0 === t ? 0 : 1 == (t /= 1) ? 1 : (e || (e = 0.3), s < Math.abs(1) ? (s = 1, i = e / 4) : i = e / (2 * Math.PI) * Math.asin(1 / s), -(s * Math.pow(2, 10 * (t -= 1)) * Math.sin(2 * (1 * t - i) * Math.PI / e)));
      },
      easeOutElastic: function (t) {
        var i = 1.70158, e = 0, s = 1;
        return 0 === t ? 0 : 1 == (t /= 1) ? 1 : (e || (e = 0.3), s < Math.abs(1) ? (s = 1, i = e / 4) : i = e / (2 * Math.PI) * Math.asin(1 / s), s * Math.pow(2, -10 * t) * Math.sin(2 * (1 * t - i) * Math.PI / e) + 1);
      },
      easeInOutElastic: function (t) {
        var i = 1.70158, e = 0, s = 1;
        return 0 === t ? 0 : 2 == (t /= 0.5) ? 1 : (e || (e = 0.3 * 1.5), s < Math.abs(1) ? (s = 1, i = e / 4) : i = e / (2 * Math.PI) * Math.asin(1 / s), 1 > t ? -0.5 * s * Math.pow(2, 10 * (t -= 1)) * Math.sin(2 * (1 * t - i) * Math.PI / e) : s * Math.pow(2, -10 * (t -= 1)) * Math.sin(2 * (1 * t - i) * Math.PI / e) * 0.5 + 1);
      },
      easeInBack: function (t) {
        var i = 1.70158;
        return 1 * (t /= 1) * t * ((i + 1) * t - i);
      },
      easeOutBack: function (t) {
        var i = 1.70158;
        return 1 * ((t = t / 1 - 1) * t * ((i + 1) * t + i) + 1);
      },
      easeInOutBack: function (t) {
        var i = 1.70158;
        return (t /= 0.5) < 1 ? 0.5 * t * t * (((i *= 1.525) + 1) * t - i) : 0.5 * ((t -= 2) * t * (((i *= 1.525) + 1) * t + i) + 2);
      },
      easeInBounce: function (t) {
        return 1 - w.easeOutBounce(1 - t);
      },
      easeOutBounce: function (t) {
        return (t /= 1) < 1 / 2.75 ? 7.5625 * t * t : 2 / 2.75 > t ? 1 * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) : 2.5 / 2.75 > t ? 1 * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) : 1 * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375);
      },
      easeInOutBounce: function (t) {
        return 0.5 > t ? 0.5 * w.easeInBounce(2 * t) : 0.5 * w.easeOutBounce(2 * t - 1) + 0.5;
      }
    }), b = s.requestAnimFrame = function () {
      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (t) {
        return window.setTimeout(t, 1000 / 60);
      };
    }(), P = s.cancelAnimFrame = function () {
      return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame || function (t) {
        return window.clearTimeout(t, 1000 / 60);
      };
    }(), L = (s.animationLoop = function (t, i, e, s, n, o) {
      var a = 0, h = w[e] || w.linear, l = function () {
          a++;
          var e = a / i, r = h(e);
          t.call(o, r, e, a), s.call(o, r, e), i > a ? o.animationFrame = b(l) : n.apply(o);
        };
      b(l);
    }, s.getRelativePosition = function (t) {
      var i, e, s = t.originalEvent || t, n = t.currentTarget || t.srcElement, o = n.getBoundingClientRect();
      return s.touches ? (i = s.touches[0].clientX - o.left, e = s.touches[0].clientY - o.top) : (i = s.clientX - o.left, e = s.clientY - o.top), {
        x: i,
        y: e
      };
    }, s.addEvent = function (t, i, e) {
      t.addEventListener ? t.addEventListener(i, e) : t.attachEvent ? t.attachEvent('on' + i, e) : t['on' + i] = e;
    }), k = s.removeEvent = function (t, i, e) {
      t.removeEventListener ? t.removeEventListener(i, e, !1) : t.detachEvent ? t.detachEvent('on' + i, e) : t['on' + i] = c;
    }, F = (s.bindEvents = function (t, i, e) {
      t.events || (t.events = {}), n(i, function (i) {
        t.events[i] = function () {
          e.apply(t, arguments);
        }, L(t.chart.canvas, i, t.events[i]);
      });
    }, s.unbindEvents = function (t, i) {
      n(i, function (i, e) {
        k(t.chart.canvas, e, i);
      });
    }), R = s.getMaximumWidth = function (t) {
      var i = t.parentNode;
      return i.clientWidth;
    }, T = s.getMaximumHeight = function (t) {
      var i = t.parentNode;
      return i.clientHeight;
    }, A = (s.getMaximumSize = s.getMaximumWidth, s.retinaScale = function (t) {
      var i = t.ctx, e = t.canvas.width, s = t.canvas.height;
      window.devicePixelRatio && (i.canvas.style.width = e + 'px', i.canvas.style.height = s + 'px', i.canvas.height = s * window.devicePixelRatio, i.canvas.width = e * window.devicePixelRatio, i.scale(window.devicePixelRatio, window.devicePixelRatio));
    }), M = s.clear = function (t) {
      t.ctx.clearRect(0, 0, t.width, t.height);
    }, W = s.fontString = function (t, i, e) {
      return i + ' ' + t + 'px ' + e;
    }, z = s.longestText = function (t, i, e) {
      t.font = i;
      var s = 0;
      return n(e, function (i) {
        var e = t.measureText(i).width;
        s = e > s ? e : s;
      }), s;
    }, B = s.drawRoundedRectangle = function (t, i, e, s, n, o) {
      t.beginPath(), t.moveTo(i + o, e), t.lineTo(i + s - o, e), t.quadraticCurveTo(i + s, e, i + s, e + o), t.lineTo(i + s, e + n - o), t.quadraticCurveTo(i + s, e + n, i + s - o, e + n), t.lineTo(i + o, e + n), t.quadraticCurveTo(i, e + n, i, e + n - o), t.lineTo(i, e + o), t.quadraticCurveTo(i, e, i + o, e), t.closePath();
    };
  e.instances = {}, e.Type = function (t, i, s) {
    this.options = i, this.chart = s, this.id = u(), e.instances[this.id] = this, i.responsive && this.resize(), this.initialize.call(this, t);
  }, a(e.Type.prototype, {
    initialize: function () {
      return this;
    },
    clear: function () {
      return M(this.chart), this;
    },
    stop: function () {
      return P(this.animationFrame), this;
    },
    resize: function (t) {
      this.stop();
      var i = this.chart.canvas, e = R(this.chart.canvas), s = this.options.maintainAspectRatio ? e / this.chart.aspectRatio : T(this.chart.canvas);
      return i.width = this.chart.width = e, i.height = this.chart.height = s, A(this.chart), 'function' == typeof t && t.apply(this, Array.prototype.slice.call(arguments, 1)), this;
    },
    reflow: c,
    render: function (t) {
      return t && this.reflow(), this.options.animation && !t ? s.animationLoop(this.draw, this.options.animationSteps, this.options.animationEasing, this.options.onAnimationProgress, this.options.onAnimationComplete, this) : (this.draw(), this.options.onAnimationComplete.call(this)), this;
    },
    generateLegend: function () {
      return C(this.options.legendTemplate, this);
    },
    destroy: function () {
      this.clear(), F(this, this.events);
      var t = this.chart.canvas;
      t.width = this.chart.width, t.height = this.chart.height, t.style.removeProperty ? (t.style.removeProperty('width'), t.style.removeProperty('height')) : (t.style.removeAttribute('width'), t.style.removeAttribute('height')), delete e.instances[this.id];
    },
    showTooltip: function (t, i) {
      'undefined' == typeof this.activeElements && (this.activeElements = []);
      var o = function (t) {
          var i = !1;
          return t.length !== this.activeElements.length ? i = !0 : (n(t, function (t, e) {
            t !== this.activeElements[e] && (i = !0);
          }, this), i);
        }.call(this, t);
      if (o || i) {
        if (this.activeElements = t, this.draw(), this.options.customTooltips && this.options.customTooltips(!1), t.length > 0)
          if (this.datasets && this.datasets.length > 1) {
            for (var a, h, r = this.datasets.length - 1; r >= 0 && (a = this.datasets[r].points || this.datasets[r].bars || this.datasets[r].segments, h = l(a, t[0]), -1 === h); r--);
            var c = [], u = [], d = function () {
                var t, i, e, n, o, a = [], l = [], r = [];
                return s.each(this.datasets, function (i) {
                  t = i.points || i.bars || i.segments, t[h] && t[h].hasValue() && a.push(t[h]);
                }), s.each(a, function (t) {
                  l.push(t.x), r.push(t.y), c.push(s.template(this.options.multiTooltipTemplate, t)), u.push({
                    fill: t._saved.fillColor || t.fillColor,
                    stroke: t._saved.strokeColor || t.strokeColor
                  });
                }, this), o = m(r), e = g(r), n = m(l), i = g(l), {
                  x: n > this.chart.width / 2 ? n : i,
                  y: (o + e) / 2
                };
              }.call(this, h);
            new e.MultiTooltip({
              x: d.x,
              y: d.y,
              xPadding: this.options.tooltipXPadding,
              yPadding: this.options.tooltipYPadding,
              xOffset: this.options.tooltipXOffset,
              fillColor: this.options.tooltipFillColor,
              textColor: this.options.tooltipFontColor,
              fontFamily: this.options.tooltipFontFamily,
              fontStyle: this.options.tooltipFontStyle,
              fontSize: this.options.tooltipFontSize,
              titleTextColor: this.options.tooltipTitleFontColor,
              titleFontFamily: this.options.tooltipTitleFontFamily,
              titleFontStyle: this.options.tooltipTitleFontStyle,
              titleFontSize: this.options.tooltipTitleFontSize,
              cornerRadius: this.options.tooltipCornerRadius,
              labels: c,
              legendColors: u,
              legendColorBackground: this.options.multiTooltipKeyBackground,
              title: t[0].label,
              chart: this.chart,
              ctx: this.chart.ctx,
              custom: this.options.customTooltips
            }).draw();
          } else
            n(t, function (t) {
              var i = t.tooltipPosition();
              new e.Tooltip({
                x: Math.round(i.x),
                y: Math.round(i.y),
                xPadding: this.options.tooltipXPadding,
                yPadding: this.options.tooltipYPadding,
                fillColor: this.options.tooltipFillColor,
                textColor: this.options.tooltipFontColor,
                fontFamily: this.options.tooltipFontFamily,
                fontStyle: this.options.tooltipFontStyle,
                fontSize: this.options.tooltipFontSize,
                caretHeight: this.options.tooltipCaretSize,
                cornerRadius: this.options.tooltipCornerRadius,
                text: C(this.options.tooltipTemplate, t),
                chart: this.chart,
                custom: this.options.customTooltips
              }).draw();
            }, this);
        return this;
      }
    },
    toBase64Image: function () {
      return this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);
    }
  }), e.Type.extend = function (t) {
    var i = this, s = function () {
        return i.apply(this, arguments);
      };
    if (s.prototype = o(i.prototype), a(s.prototype, t), s.extend = e.Type.extend, t.name || i.prototype.name) {
      var n = t.name || i.prototype.name, l = e.defaults[i.prototype.name] ? o(e.defaults[i.prototype.name]) : {};
      e.defaults[n] = a(l, t.defaults), e.types[n] = s, e.prototype[n] = function (t, i) {
        var o = h(e.defaults.global, e.defaults[n], i || {});
        return new s(t, o, this);
      };
    } else
      d('Name not provided for this chart, so it hasn\'t been registered');
    return i;
  }, e.Element = function (t) {
    a(this, t), this.initialize.apply(this, arguments), this.save();
  }, a(e.Element.prototype, {
    initialize: function () {
    },
    restore: function (t) {
      return t ? n(t, function (t) {
        this[t] = this._saved[t];
      }, this) : a(this, this._saved), this;
    },
    save: function () {
      return this._saved = o(this), delete this._saved._saved, this;
    },
    update: function (t) {
      return n(t, function (t, i) {
        this._saved[i] = this[i], this[i] = t;
      }, this), this;
    },
    transition: function (t, i) {
      return n(t, function (t, e) {
        this[e] = (t - this._saved[e]) * i + this._saved[e];
      }, this), this;
    },
    tooltipPosition: function () {
      return {
        x: this.x,
        y: this.y
      };
    },
    hasValue: function () {
      return f(this.value);
    }
  }), e.Element.extend = r, e.Point = e.Element.extend({
    display: !0,
    inRange: function (t, i) {
      var e = this.hitDetectionRadius + this.radius;
      return Math.pow(t - this.x, 2) + Math.pow(i - this.y, 2) < Math.pow(e, 2);
    },
    draw: function () {
      if (this.display) {
        var t = this.ctx;
        t.beginPath(), t.arc(this.x, this.y, this.radius, 0, 2 * Math.PI), t.closePath(), t.strokeStyle = this.strokeColor, t.lineWidth = this.strokeWidth, t.fillStyle = this.fillColor, t.fill(), t.stroke();
      }
    }
  }), e.Arc = e.Element.extend({
    inRange: function (t, i) {
      var e = s.getAngleFromPoint(this, {
          x: t,
          y: i
        }), n = e.angle >= this.startAngle && e.angle <= this.endAngle, o = e.distance >= this.innerRadius && e.distance <= this.outerRadius;
      return n && o;
    },
    tooltipPosition: function () {
      var t = this.startAngle + (this.endAngle - this.startAngle) / 2, i = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;
      return {
        x: this.x + Math.cos(t) * i,
        y: this.y + Math.sin(t) * i
      };
    },
    draw: function (t) {
      var i = this.ctx;
      i.beginPath(), i.arc(this.x, this.y, this.outerRadius, this.startAngle, this.endAngle), i.arc(this.x, this.y, this.innerRadius, this.endAngle, this.startAngle, !0), i.closePath(), i.strokeStyle = this.strokeColor, i.lineWidth = this.strokeWidth, i.fillStyle = this.fillColor, i.fill(), i.lineJoin = 'bevel', this.showStroke && i.stroke();
    }
  }), e.Rectangle = e.Element.extend({
    draw: function () {
      var t = this.ctx, i = this.width / 2, e = this.x - i, s = this.x + i, n = this.base - (this.base - this.y), o = this.strokeWidth / 2;
      this.showStroke && (e += o, s -= o, n += o), t.beginPath(), t.fillStyle = this.fillColor, t.strokeStyle = this.strokeColor, t.lineWidth = this.strokeWidth, t.moveTo(e, this.base), t.lineTo(e, n), t.lineTo(s, n), t.lineTo(s, this.base), t.fill(), this.showStroke && t.stroke();
    },
    height: function () {
      return this.base - this.y;
    },
    inRange: function (t, i) {
      return t >= this.x - this.width / 2 && t <= this.x + this.width / 2 && i >= this.y && i <= this.base;
    }
  }), e.Tooltip = e.Element.extend({
    draw: function () {
      var t = this.chart.ctx;
      t.font = W(this.fontSize, this.fontStyle, this.fontFamily), this.xAlign = 'center', this.yAlign = 'above';
      var i = this.caretPadding = 2, e = t.measureText(this.text).width + 2 * this.xPadding, s = this.fontSize + 2 * this.yPadding, n = s + this.caretHeight + i;
      this.x + e / 2 > this.chart.width ? this.xAlign = 'left' : this.x - e / 2 < 0 && (this.xAlign = 'right'), this.y - n < 0 && (this.yAlign = 'below');
      var o = this.x - e / 2, a = this.y - n;
      if (t.fillStyle = this.fillColor, this.custom)
        this.custom(this);
      else {
        switch (this.yAlign) {
        case 'above':
          t.beginPath(), t.moveTo(this.x, this.y - i), t.lineTo(this.x + this.caretHeight, this.y - (i + this.caretHeight)), t.lineTo(this.x - this.caretHeight, this.y - (i + this.caretHeight)), t.closePath(), t.fill();
          break;
        case 'below':
          a = this.y + i + this.caretHeight, t.beginPath(), t.moveTo(this.x, this.y + i), t.lineTo(this.x + this.caretHeight, this.y + i + this.caretHeight), t.lineTo(this.x - this.caretHeight, this.y + i + this.caretHeight), t.closePath(), t.fill();
        }
        switch (this.xAlign) {
        case 'left':
          o = this.x - e + (this.cornerRadius + this.caretHeight);
          break;
        case 'right':
          o = this.x - (this.cornerRadius + this.caretHeight);
        }
        B(t, o, a, e, s, this.cornerRadius), t.fill(), t.fillStyle = this.textColor, t.textAlign = 'center', t.textBaseline = 'middle', t.fillText(this.text, o + e / 2, a + s / 2);
      }
    }
  }), e.MultiTooltip = e.Element.extend({
    initialize: function () {
      this.font = W(this.fontSize, this.fontStyle, this.fontFamily), this.titleFont = W(this.titleFontSize, this.titleFontStyle, this.titleFontFamily), this.height = this.labels.length * this.fontSize + (this.labels.length - 1) * (this.fontSize / 2) + 2 * this.yPadding + 1.5 * this.titleFontSize, this.ctx.font = this.titleFont;
      var t = this.ctx.measureText(this.title).width, i = z(this.ctx, this.font, this.labels) + this.fontSize + 3, e = g([
          i,
          t
        ]);
      this.width = e + 2 * this.xPadding;
      var s = this.height / 2;
      this.y - s < 0 ? this.y = s : this.y + s > this.chart.height && (this.y = this.chart.height - s), this.x > this.chart.width / 2 ? this.x -= this.xOffset + this.width : this.x += this.xOffset;
    },
    getLineHeight: function (t) {
      var i = this.y - this.height / 2 + this.yPadding, e = t - 1;
      return 0 === t ? i + this.titleFontSize / 2 : i + (1.5 * this.fontSize * e + this.fontSize / 2) + 1.5 * this.titleFontSize;
    },
    draw: function () {
      if (this.custom)
        this.custom(this);
      else {
        B(this.ctx, this.x, this.y - this.height / 2, this.width, this.height, this.cornerRadius);
        var t = this.ctx;
        t.fillStyle = this.fillColor, t.fill(), t.closePath(), t.textAlign = 'left', t.textBaseline = 'middle', t.fillStyle = this.titleTextColor, t.font = this.titleFont, t.fillText(this.title, this.x + this.xPadding, this.getLineHeight(0)), t.font = this.font, s.each(this.labels, function (i, e) {
          t.fillStyle = this.textColor, t.fillText(i, this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(e + 1)), t.fillStyle = this.legendColorBackground, t.fillRect(this.x + this.xPadding, this.getLineHeight(e + 1) - this.fontSize / 2, this.fontSize, this.fontSize), t.fillStyle = this.legendColors[e].fill, t.fillRect(this.x + this.xPadding, this.getLineHeight(e + 1) - this.fontSize / 2, this.fontSize, this.fontSize);
        }, this);
      }
    }
  }), e.Scale = e.Element.extend({
    initialize: function () {
      this.fit();
    },
    buildYLabels: function () {
      this.yLabels = [];
      for (var t = v(this.stepValue), i = 0; i <= this.steps; i++)
        this.yLabels.push(C(this.templateString, { value: (this.min + i * this.stepValue).toFixed(t) }));
      this.yLabelWidth = this.display && this.showLabels ? z(this.ctx, this.font, this.yLabels) : 0;
    },
    addXLabel: function (t) {
      this.xLabels.push(t), this.valuesCount++, this.fit();
    },
    removeXLabel: function () {
      this.xLabels.shift(), this.valuesCount--, this.fit();
    },
    fit: function () {
      this.startPoint = this.display ? this.fontSize : 0, this.endPoint = this.display ? this.height - 1.5 * this.fontSize - 5 : this.height, this.startPoint += this.padding, this.endPoint -= this.padding;
      var t, i = this.endPoint - this.startPoint;
      for (this.calculateYRange(i), this.buildYLabels(), this.calculateXLabelRotation(); i > this.endPoint - this.startPoint;)
        i = this.endPoint - this.startPoint, t = this.yLabelWidth, this.calculateYRange(i), this.buildYLabels(), t < this.yLabelWidth && this.calculateXLabelRotation();
    },
    calculateXLabelRotation: function () {
      this.ctx.font = this.font;
      var t, i, e = this.ctx.measureText(this.xLabels[0]).width, s = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width;
      if (this.xScalePaddingRight = s / 2 + 3, this.xScalePaddingLeft = e / 2 > this.yLabelWidth + 10 ? e / 2 : this.yLabelWidth + 10, this.xLabelRotation = 0, this.display) {
        var n, o = z(this.ctx, this.font, this.xLabels);
        this.xLabelWidth = o;
        for (var a = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6; this.xLabelWidth > a && 0 === this.xLabelRotation || this.xLabelWidth > a && this.xLabelRotation <= 90 && this.xLabelRotation > 0;)
          n = Math.cos(S(this.xLabelRotation)), t = n * e, i = n * s, t + this.fontSize / 2 > this.yLabelWidth + 8 && (this.xScalePaddingLeft = t + this.fontSize / 2), this.xScalePaddingRight = this.fontSize / 2, this.xLabelRotation++, this.xLabelWidth = n * o;
        this.xLabelRotation > 0 && (this.endPoint -= Math.sin(S(this.xLabelRotation)) * o + 3);
      } else
        this.xLabelWidth = 0, this.xScalePaddingRight = this.padding, this.xScalePaddingLeft = this.padding;
    },
    calculateYRange: c,
    drawingArea: function () {
      return this.startPoint - this.endPoint;
    },
    calculateY: function (t) {
      var i = this.drawingArea() / (this.min - this.max);
      return this.endPoint - i * (t - this.min);
    },
    calculateX: function (t) {
      var i = (this.xLabelRotation > 0, this.width - (this.xScalePaddingLeft + this.xScalePaddingRight)), e = i / Math.max(this.valuesCount - (this.offsetGridLines ? 0 : 1), 1), s = e * t + this.xScalePaddingLeft;
      return this.offsetGridLines && (s += e / 2), Math.round(s);
    },
    update: function (t) {
      s.extend(this, t), this.fit();
    },
    draw: function () {
      var t = this.ctx, i = (this.endPoint - this.startPoint) / this.steps, e = Math.round(this.xScalePaddingLeft);
      this.display && (t.fillStyle = this.textColor, t.font = this.font, n(this.yLabels, function (n, o) {
        var a = this.endPoint - i * o, h = Math.round(a), l = this.showHorizontalLines;
        t.textAlign = 'right', t.textBaseline = 'middle', this.showLabels && t.fillText(n, e - 10, a), 0 !== o || l || (l = !0), l && t.beginPath(), o > 0 ? (t.lineWidth = this.gridLineWidth, t.strokeStyle = this.gridLineColor) : (t.lineWidth = this.lineWidth, t.strokeStyle = this.lineColor), h += s.aliasPixel(t.lineWidth), l && (t.moveTo(e, h), t.lineTo(this.width, h), t.stroke(), t.closePath()), t.lineWidth = this.lineWidth, t.strokeStyle = this.lineColor, t.beginPath(), t.moveTo(e - 5, h), t.lineTo(e, h), t.stroke(), t.closePath();
      }, this), n(this.xLabels, function (i, e) {
        var s = this.calculateX(e) + x(this.lineWidth), n = this.calculateX(e - (this.offsetGridLines ? 0.5 : 0)) + x(this.lineWidth), o = this.xLabelRotation > 0, a = this.showVerticalLines;
        0 !== e || a || (a = !0), a && t.beginPath(), e > 0 ? (t.lineWidth = this.gridLineWidth, t.strokeStyle = this.gridLineColor) : (t.lineWidth = this.lineWidth, t.strokeStyle = this.lineColor), a && (t.moveTo(n, this.endPoint), t.lineTo(n, this.startPoint - 3), t.stroke(), t.closePath()), t.lineWidth = this.lineWidth, t.strokeStyle = this.lineColor, t.beginPath(), t.moveTo(n, this.endPoint), t.lineTo(n, this.endPoint + 5), t.stroke(), t.closePath(), t.save(), t.translate(s, o ? this.endPoint + 12 : this.endPoint + 8), t.rotate(-1 * S(this.xLabelRotation)), t.font = this.font, t.textAlign = o ? 'right' : 'center', t.textBaseline = o ? 'middle' : 'top', t.fillText(i, 0, 0), t.restore();
      }, this));
    }
  }), e.RadialScale = e.Element.extend({
    initialize: function () {
      this.size = m([
        this.height,
        this.width
      ]), this.drawingArea = this.display ? this.size / 2 - (this.fontSize / 2 + this.backdropPaddingY) : this.size / 2;
    },
    calculateCenterOffset: function (t) {
      var i = this.drawingArea / (this.max - this.min);
      return (t - this.min) * i;
    },
    update: function () {
      this.lineArc ? this.drawingArea = this.display ? this.size / 2 - (this.fontSize / 2 + this.backdropPaddingY) : this.size / 2 : this.setScaleSize(), this.buildYLabels();
    },
    buildYLabels: function () {
      this.yLabels = [];
      for (var t = v(this.stepValue), i = 0; i <= this.steps; i++)
        this.yLabels.push(C(this.templateString, { value: (this.min + i * this.stepValue).toFixed(t) }));
    },
    getCircumference: function () {
      return 2 * Math.PI / this.valuesCount;
    },
    setScaleSize: function () {
      var t, i, e, s, n, o, a, h, l, r, c, u, d = m([
          this.height / 2 - this.pointLabelFontSize - 5,
          this.width / 2
        ]), p = this.width, g = 0;
      for (this.ctx.font = W(this.pointLabelFontSize, this.pointLabelFontStyle, this.pointLabelFontFamily), i = 0; i < this.valuesCount; i++)
        t = this.getPointPosition(i, d), e = this.ctx.measureText(C(this.templateString, { value: this.labels[i] })).width + 5, 0 === i || i === this.valuesCount / 2 ? (s = e / 2, t.x + s > p && (p = t.x + s, n = i), t.x - s < g && (g = t.x - s, a = i)) : i < this.valuesCount / 2 ? t.x + e > p && (p = t.x + e, n = i) : i > this.valuesCount / 2 && t.x - e < g && (g = t.x - e, a = i);
      l = g, r = Math.ceil(p - this.width), o = this.getIndexAngle(n), h = this.getIndexAngle(a), c = r / Math.sin(o + Math.PI / 2), u = l / Math.sin(h + Math.PI / 2), c = f(c) ? c : 0, u = f(u) ? u : 0, this.drawingArea = d - (u + c) / 2, this.setCenterPoint(u, c);
    },
    setCenterPoint: function (t, i) {
      var e = this.width - i - this.drawingArea, s = t + this.drawingArea;
      this.xCenter = (s + e) / 2, this.yCenter = this.height / 2;
    },
    getIndexAngle: function (t) {
      var i = 2 * Math.PI / this.valuesCount;
      return t * i - Math.PI / 2;
    },
    getPointPosition: function (t, i) {
      var e = this.getIndexAngle(t);
      return {
        x: Math.cos(e) * i + this.xCenter,
        y: Math.sin(e) * i + this.yCenter
      };
    },
    draw: function () {
      if (this.display) {
        var t = this.ctx;
        if (n(this.yLabels, function (i, e) {
            if (e > 0) {
              var s, n = e * (this.drawingArea / this.steps), o = this.yCenter - n;
              if (this.lineWidth > 0)
                if (t.strokeStyle = this.lineColor, t.lineWidth = this.lineWidth, this.lineArc)
                  t.beginPath(), t.arc(this.xCenter, this.yCenter, n, 0, 2 * Math.PI), t.closePath(), t.stroke();
                else {
                  t.beginPath();
                  for (var a = 0; a < this.valuesCount; a++)
                    s = this.getPointPosition(a, this.calculateCenterOffset(this.min + e * this.stepValue)), 0 === a ? t.moveTo(s.x, s.y) : t.lineTo(s.x, s.y);
                  t.closePath(), t.stroke();
                }
              if (this.showLabels) {
                if (t.font = W(this.fontSize, this.fontStyle, this.fontFamily), this.showLabelBackdrop) {
                  var h = t.measureText(i).width;
                  t.fillStyle = this.backdropColor, t.fillRect(this.xCenter - h / 2 - this.backdropPaddingX, o - this.fontSize / 2 - this.backdropPaddingY, h + 2 * this.backdropPaddingX, this.fontSize + 2 * this.backdropPaddingY);
                }
                t.textAlign = 'center', t.textBaseline = 'middle', t.fillStyle = this.fontColor, t.fillText(i, this.xCenter, o);
              }
            }
          }, this), !this.lineArc) {
          t.lineWidth = this.angleLineWidth, t.strokeStyle = this.angleLineColor;
          for (var i = this.valuesCount - 1; i >= 0; i--) {
            if (this.angleLineWidth > 0) {
              var e = this.getPointPosition(i, this.calculateCenterOffset(this.max));
              t.beginPath(), t.moveTo(this.xCenter, this.yCenter), t.lineTo(e.x, e.y), t.stroke(), t.closePath();
            }
            var s = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);
            t.font = W(this.pointLabelFontSize, this.pointLabelFontStyle, this.pointLabelFontFamily), t.fillStyle = this.pointLabelFontColor;
            var o = this.labels.length, a = this.labels.length / 2, h = a / 2, l = h > i || i > o - h, r = i === h || i === o - h;
            t.textAlign = 0 === i ? 'center' : i === a ? 'center' : a > i ? 'left' : 'right', t.textBaseline = r ? 'middle' : l ? 'bottom' : 'top', t.fillText(this.labels[i], s.x, s.y);
          }
        }
      }
    }
  }), s.addEvent(window, 'resize', function () {
    var t;
    return function () {
      clearTimeout(t), t = setTimeout(function () {
        n(e.instances, function (t) {
          t.options.responsive && t.resize(t.render, !0);
        });
      }, 50);
    };
  }()), p ? define(function () {
    return e;
  }) : 'object' == typeof module && module.exports && (module.exports = e), t.Chart = e, e.noConflict = function () {
    return t.Chart = i, e;
  };
}.call(this), function () {
  'use strict';
  var t = this, i = t.Chart, e = i.helpers, s = {
      scaleBeginAtZero: !0,
      scaleShowGridLines: !0,
      scaleGridLineColor: 'rgba(0,0,0,.05)',
      scaleGridLineWidth: 1,
      scaleShowHorizontalLines: !0,
      scaleShowVerticalLines: !0,
      barShowStroke: !0,
      barStrokeWidth: 2,
      barValueSpacing: 5,
      barDatasetSpacing: 1,
      legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'
    };
  i.Type.extend({
    name: 'Bar',
    defaults: s,
    initialize: function (t) {
      var s = this.options;
      this.ScaleClass = i.Scale.extend({
        offsetGridLines: !0,
        calculateBarX: function (t, i, e) {
          var n = this.calculateBaseWidth(), o = this.calculateX(e) - n / 2, a = this.calculateBarWidth(t);
          return o + a * i + i * s.barDatasetSpacing + a / 2;
        },
        calculateBaseWidth: function () {
          return this.calculateX(1) - this.calculateX(0) - 2 * s.barValueSpacing;
        },
        calculateBarWidth: function (t) {
          var i = this.calculateBaseWidth() - (t - 1) * s.barDatasetSpacing;
          return i / t;
        }
      }), this.datasets = [], this.options.showTooltips && e.bindEvents(this, this.options.tooltipEvents, function (t) {
        var i = 'mouseout' !== t.type ? this.getBarsAtEvent(t) : [];
        this.eachBars(function (t) {
          t.restore([
            'fillColor',
            'strokeColor'
          ]);
        }), e.each(i, function (t) {
          t.fillColor = t.highlightFill, t.strokeColor = t.highlightStroke;
        }), this.showTooltip(i);
      }), this.BarClass = i.Rectangle.extend({
        strokeWidth: this.options.barStrokeWidth,
        showStroke: this.options.barShowStroke,
        ctx: this.chart.ctx
      }), e.each(t.datasets, function (i) {
        var s = {
            label: i.label || null,
            fillColor: i.fillColor,
            strokeColor: i.strokeColor,
            bars: []
          };
        this.datasets.push(s), e.each(i.data, function (e, n) {
          s.bars.push(new this.BarClass({
            value: e,
            label: t.labels[n],
            datasetLabel: i.label,
            strokeColor: i.strokeColor,
            fillColor: i.fillColor,
            highlightFill: i.highlightFill || i.fillColor,
            highlightStroke: i.highlightStroke || i.strokeColor
          }));
        }, this);
      }, this), this.buildScale(t.labels), this.BarClass.prototype.base = this.scale.endPoint, this.eachBars(function (t, i, s) {
        e.extend(t, {
          width: this.scale.calculateBarWidth(this.datasets.length),
          x: this.scale.calculateBarX(this.datasets.length, s, i),
          y: this.scale.endPoint
        }), t.save();
      }, this), this.render();
    },
    update: function () {
      this.scale.update(), e.each(this.activeElements, function (t) {
        t.restore([
          'fillColor',
          'strokeColor'
        ]);
      }), this.eachBars(function (t) {
        t.save();
      }), this.render();
    },
    eachBars: function (t) {
      e.each(this.datasets, function (i, s) {
        e.each(i.bars, t, this, s);
      }, this);
    },
    getBarsAtEvent: function (t) {
      for (var i, s = [], n = e.getRelativePosition(t), o = function (t) {
            s.push(t.bars[i]);
          }, a = 0; a < this.datasets.length; a++)
        for (i = 0; i < this.datasets[a].bars.length; i++)
          if (this.datasets[a].bars[i].inRange(n.x, n.y))
            return e.each(this.datasets, o), s;
      return s;
    },
    buildScale: function (t) {
      var i = this, s = function () {
          var t = [];
          return i.eachBars(function (i) {
            t.push(i.value);
          }), t;
        }, n = {
          templateString: this.options.scaleLabel,
          height: this.chart.height,
          width: this.chart.width,
          ctx: this.chart.ctx,
          textColor: this.options.scaleFontColor,
          fontSize: this.options.scaleFontSize,
          fontStyle: this.options.scaleFontStyle,
          fontFamily: this.options.scaleFontFamily,
          valuesCount: t.length,
          beginAtZero: this.options.scaleBeginAtZero,
          integersOnly: this.options.scaleIntegersOnly,
          calculateYRange: function (t) {
            var i = e.calculateScaleRange(s(), t, this.fontSize, this.beginAtZero, this.integersOnly);
            e.extend(this, i);
          },
          xLabels: t,
          font: e.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),
          lineWidth: this.options.scaleLineWidth,
          lineColor: this.options.scaleLineColor,
          showHorizontalLines: this.options.scaleShowHorizontalLines,
          showVerticalLines: this.options.scaleShowVerticalLines,
          gridLineWidth: this.options.scaleShowGridLines ? this.options.scaleGridLineWidth : 0,
          gridLineColor: this.options.scaleShowGridLines ? this.options.scaleGridLineColor : 'rgba(0,0,0,0)',
          padding: this.options.showScale ? 0 : this.options.barShowStroke ? this.options.barStrokeWidth : 0,
          showLabels: this.options.scaleShowLabels,
          display: this.options.showScale
        };
      this.options.scaleOverride && e.extend(n, {
        calculateYRange: e.noop,
        steps: this.options.scaleSteps,
        stepValue: this.options.scaleStepWidth,
        min: this.options.scaleStartValue,
        max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth
      }), this.scale = new this.ScaleClass(n);
    },
    addData: function (t, i) {
      e.each(t, function (t, e) {
        this.datasets[e].bars.push(new this.BarClass({
          value: t,
          label: i,
          x: this.scale.calculateBarX(this.datasets.length, e, this.scale.valuesCount + 1),
          y: this.scale.endPoint,
          width: this.scale.calculateBarWidth(this.datasets.length),
          base: this.scale.endPoint,
          strokeColor: this.datasets[e].strokeColor,
          fillColor: this.datasets[e].fillColor
        }));
      }, this), this.scale.addXLabel(i), this.update();
    },
    removeData: function () {
      this.scale.removeXLabel(), e.each(this.datasets, function (t) {
        t.bars.shift();
      }, this), this.update();
    },
    reflow: function () {
      e.extend(this.BarClass.prototype, {
        y: this.scale.endPoint,
        base: this.scale.endPoint
      });
      var t = e.extend({
          height: this.chart.height,
          width: this.chart.width
        });
      this.scale.update(t);
    },
    draw: function (t) {
      var i = t || 1;
      this.clear();
      this.chart.ctx;
      this.scale.draw(i), e.each(this.datasets, function (t, s) {
        e.each(t.bars, function (t, e) {
          t.hasValue() && (t.base = this.scale.endPoint, t.transition({
            x: this.scale.calculateBarX(this.datasets.length, s, e),
            y: this.scale.calculateY(t.value),
            width: this.scale.calculateBarWidth(this.datasets.length)
          }, i).draw());
        }, this);
      }, this);
    }
  });
}.call(this), function () {
  'use strict';
  var t = this, i = t.Chart, e = i.helpers, s = {
      segmentShowStroke: !0,
      segmentStrokeColor: '#fff',
      segmentStrokeWidth: 2,
      percentageInnerCutout: 50,
      animationSteps: 100,
      animationEasing: 'easeOutBounce',
      animateRotate: !0,
      animateScale: !1,
      legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'
    };
  i.Type.extend({
    name: 'Doughnut',
    defaults: s,
    initialize: function (t) {
      this.segments = [], this.outerRadius = (e.min([
        this.chart.width,
        this.chart.height
      ]) - this.options.segmentStrokeWidth / 2) / 2, this.SegmentArc = i.Arc.extend({
        ctx: this.chart.ctx,
        x: this.chart.width / 2,
        y: this.chart.height / 2
      }), this.options.showTooltips && e.bindEvents(this, this.options.tooltipEvents, function (t) {
        var i = 'mouseout' !== t.type ? this.getSegmentsAtEvent(t) : [];
        e.each(this.segments, function (t) {
          t.restore(['fillColor']);
        }), e.each(i, function (t) {
          t.fillColor = t.highlightColor;
        }), this.showTooltip(i);
      }), this.calculateTotal(t), e.each(t, function (t, i) {
        this.addData(t, i, !0);
      }, this), this.render();
    },
    getSegmentsAtEvent: function (t) {
      var i = [], s = e.getRelativePosition(t);
      return e.each(this.segments, function (t) {
        t.inRange(s.x, s.y) && i.push(t);
      }, this), i;
    },
    addData: function (t, i, e) {
      var s = i || this.segments.length;
      this.segments.splice(s, 0, new this.SegmentArc({
        value: t.value,
        outerRadius: this.options.animateScale ? 0 : this.outerRadius,
        innerRadius: this.options.animateScale ? 0 : this.outerRadius / 100 * this.options.percentageInnerCutout,
        fillColor: t.color,
        highlightColor: t.highlight || t.color,
        showStroke: this.options.segmentShowStroke,
        strokeWidth: this.options.segmentStrokeWidth,
        strokeColor: this.options.segmentStrokeColor,
        startAngle: 1.5 * Math.PI,
        circumference: this.options.animateRotate ? 0 : this.calculateCircumference(t.value),
        label: t.label
      })), e || (this.reflow(), this.update());
    },
    calculateCircumference: function (t) {
      return 2 * Math.PI * (Math.abs(t) / this.total);
    },
    calculateTotal: function (t) {
      this.total = 0, e.each(t, function (t) {
        this.total += Math.abs(t.value);
      }, this);
    },
    update: function () {
      this.calculateTotal(this.segments), e.each(this.activeElements, function (t) {
        t.restore(['fillColor']);
      }), e.each(this.segments, function (t) {
        t.save();
      }), this.render();
    },
    removeData: function (t) {
      var i = e.isNumber(t) ? t : this.segments.length - 1;
      this.segments.splice(i, 1), this.reflow(), this.update();
    },
    reflow: function () {
      e.extend(this.SegmentArc.prototype, {
        x: this.chart.width / 2,
        y: this.chart.height / 2
      }), this.outerRadius = (e.min([
        this.chart.width,
        this.chart.height
      ]) - this.options.segmentStrokeWidth / 2) / 2, e.each(this.segments, function (t) {
        t.update({
          outerRadius: this.outerRadius,
          innerRadius: this.outerRadius / 100 * this.options.percentageInnerCutout
        });
      }, this);
    },
    draw: function (t) {
      var i = t ? t : 1;
      this.clear(), e.each(this.segments, function (t, e) {
        t.transition({
          circumference: this.calculateCircumference(t.value),
          outerRadius: this.outerRadius,
          innerRadius: this.outerRadius / 100 * this.options.percentageInnerCutout
        }, i), t.endAngle = t.startAngle + t.circumference, t.draw(), 0 === e && (t.startAngle = 1.5 * Math.PI), e < this.segments.length - 1 && (this.segments[e + 1].startAngle = t.endAngle);
      }, this);
    }
  }), i.types.Doughnut.extend({
    name: 'Pie',
    defaults: e.merge(s, { percentageInnerCutout: 0 })
  });
}.call(this), function () {
  'use strict';
  var t = this, i = t.Chart, e = i.helpers, s = {
      scaleShowGridLines: !0,
      scaleGridLineColor: 'rgba(0,0,0,.05)',
      scaleGridLineWidth: 1,
      scaleShowHorizontalLines: !0,
      scaleShowVerticalLines: !0,
      bezierCurve: !0,
      bezierCurveTension: 0.4,
      pointDot: !0,
      pointDotRadius: 4,
      pointDotStrokeWidth: 1,
      pointHitDetectionRadius: 20,
      datasetStroke: !0,
      datasetStrokeWidth: 2,
      datasetFill: !0,
      legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].strokeColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'
    };
  i.Type.extend({
    name: 'Line',
    defaults: s,
    initialize: function (t) {
      this.PointClass = i.Point.extend({
        strokeWidth: this.options.pointDotStrokeWidth,
        radius: this.options.pointDotRadius,
        display: this.options.pointDot,
        hitDetectionRadius: this.options.pointHitDetectionRadius,
        ctx: this.chart.ctx,
        inRange: function (t) {
          return Math.pow(t - this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius, 2);
        }
      }), this.datasets = [], this.options.showTooltips && e.bindEvents(this, this.options.tooltipEvents, function (t) {
        var i = 'mouseout' !== t.type ? this.getPointsAtEvent(t) : [];
        this.eachPoints(function (t) {
          t.restore([
            'fillColor',
            'strokeColor'
          ]);
        }), e.each(i, function (t) {
          t.fillColor = t.highlightFill, t.strokeColor = t.highlightStroke;
        }), this.showTooltip(i);
      }), e.each(t.datasets, function (i) {
        var s = {
            label: i.label || null,
            fillColor: i.fillColor,
            strokeColor: i.strokeColor,
            pointColor: i.pointColor,
            pointStrokeColor: i.pointStrokeColor,
            points: []
          };
        this.datasets.push(s), e.each(i.data, function (e, n) {
          s.points.push(new this.PointClass({
            value: e,
            label: t.labels[n],
            datasetLabel: i.label,
            strokeColor: i.pointStrokeColor,
            fillColor: i.pointColor,
            highlightFill: i.pointHighlightFill || i.pointColor,
            highlightStroke: i.pointHighlightStroke || i.pointStrokeColor
          }));
        }, this), this.buildScale(t.labels), this.eachPoints(function (t, i) {
          e.extend(t, {
            x: this.scale.calculateX(i),
            y: this.scale.endPoint
          }), t.save();
        }, this);
      }, this), this.render();
    },
    update: function () {
      this.scale.update(), e.each(this.activeElements, function (t) {
        t.restore([
          'fillColor',
          'strokeColor'
        ]);
      }), this.eachPoints(function (t) {
        t.save();
      }), this.render();
    },
    eachPoints: function (t) {
      e.each(this.datasets, function (i) {
        e.each(i.points, t, this);
      }, this);
    },
    getPointsAtEvent: function (t) {
      var i = [], s = e.getRelativePosition(t);
      return e.each(this.datasets, function (t) {
        e.each(t.points, function (t) {
          t.inRange(s.x, s.y) && i.push(t);
        });
      }, this), i;
    },
    buildScale: function (t) {
      var s = this, n = function () {
          var t = [];
          return s.eachPoints(function (i) {
            t.push(i.value);
          }), t;
        }, o = {
          templateString: this.options.scaleLabel,
          height: this.chart.height,
          width: this.chart.width,
          ctx: this.chart.ctx,
          textColor: this.options.scaleFontColor,
          fontSize: this.options.scaleFontSize,
          fontStyle: this.options.scaleFontStyle,
          fontFamily: this.options.scaleFontFamily,
          valuesCount: t.length,
          beginAtZero: this.options.scaleBeginAtZero,
          integersOnly: this.options.scaleIntegersOnly,
          calculateYRange: function (t) {
            var i = e.calculateScaleRange(n(), t, this.fontSize, this.beginAtZero, this.integersOnly);
            e.extend(this, i);
          },
          xLabels: t,
          font: e.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),
          lineWidth: this.options.scaleLineWidth,
          lineColor: this.options.scaleLineColor,
          showHorizontalLines: this.options.scaleShowHorizontalLines,
          showVerticalLines: this.options.scaleShowVerticalLines,
          gridLineWidth: this.options.scaleShowGridLines ? this.options.scaleGridLineWidth : 0,
          gridLineColor: this.options.scaleShowGridLines ? this.options.scaleGridLineColor : 'rgba(0,0,0,0)',
          padding: this.options.showScale ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,
          showLabels: this.options.scaleShowLabels,
          display: this.options.showScale
        };
      this.options.scaleOverride && e.extend(o, {
        calculateYRange: e.noop,
        steps: this.options.scaleSteps,
        stepValue: this.options.scaleStepWidth,
        min: this.options.scaleStartValue,
        max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth
      }), this.scale = new i.Scale(o);
    },
    addData: function (t, i) {
      e.each(t, function (t, e) {
        this.datasets[e].points.push(new this.PointClass({
          value: t,
          label: i,
          x: this.scale.calculateX(this.scale.valuesCount + 1),
          y: this.scale.endPoint,
          strokeColor: this.datasets[e].pointStrokeColor,
          fillColor: this.datasets[e].pointColor
        }));
      }, this), this.scale.addXLabel(i), this.update();
    },
    removeData: function () {
      this.scale.removeXLabel(), e.each(this.datasets, function (t) {
        t.points.shift();
      }, this), this.update();
    },
    reflow: function () {
      var t = e.extend({
          height: this.chart.height,
          width: this.chart.width
        });
      this.scale.update(t);
    },
    draw: function (t) {
      var i = t || 1;
      this.clear();
      var s = this.chart.ctx, n = function (t) {
          return null !== t.value;
        }, o = function (t, i, s) {
          return e.findNextWhere(i, n, s) || t;
        }, a = function (t, i, s) {
          return e.findPreviousWhere(i, n, s) || t;
        };
      this.scale.draw(i), e.each(this.datasets, function (t) {
        var h = e.where(t.points, n);
        e.each(t.points, function (t, e) {
          t.hasValue() && t.transition({
            y: this.scale.calculateY(t.value),
            x: this.scale.calculateX(e)
          }, i);
        }, this), this.options.bezierCurve && e.each(h, function (t, i) {
          var s = i > 0 && i < h.length - 1 ? this.options.bezierCurveTension : 0;
          t.controlPoints = e.splineCurve(a(t, h, i), t, o(t, h, i), s), t.controlPoints.outer.y > this.scale.endPoint ? t.controlPoints.outer.y = this.scale.endPoint : t.controlPoints.outer.y < this.scale.startPoint && (t.controlPoints.outer.y = this.scale.startPoint), t.controlPoints.inner.y > this.scale.endPoint ? t.controlPoints.inner.y = this.scale.endPoint : t.controlPoints.inner.y < this.scale.startPoint && (t.controlPoints.inner.y = this.scale.startPoint);
        }, this), s.lineWidth = this.options.datasetStrokeWidth, s.strokeStyle = t.strokeColor, s.beginPath(), e.each(h, function (t, i) {
          if (0 === i)
            s.moveTo(t.x, t.y);
          else if (this.options.bezierCurve) {
            var e = a(t, h, i);
            s.bezierCurveTo(e.controlPoints.outer.x, e.controlPoints.outer.y, t.controlPoints.inner.x, t.controlPoints.inner.y, t.x, t.y);
          } else
            s.lineTo(t.x, t.y);
        }, this), s.stroke(), this.options.datasetFill && h.length > 0 && (s.lineTo(h[h.length - 1].x, this.scale.endPoint), s.lineTo(h[0].x, this.scale.endPoint), s.fillStyle = t.fillColor, s.closePath(), s.fill()), e.each(h, function (t) {
          t.draw();
        });
      }, this);
    }
  });
}.call(this), function () {
  'use strict';
  var t = this, i = t.Chart, e = i.helpers, s = {
      scaleShowLabelBackdrop: !0,
      scaleBackdropColor: 'rgba(255,255,255,0.75)',
      scaleBeginAtZero: !0,
      scaleBackdropPaddingY: 2,
      scaleBackdropPaddingX: 2,
      scaleShowLine: !0,
      segmentShowStroke: !0,
      segmentStrokeColor: '#fff',
      segmentStrokeWidth: 2,
      animationSteps: 100,
      animationEasing: 'easeOutBounce',
      animateRotate: !0,
      animateScale: !1,
      legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<segments.length; i++){%><li><span style="background-color:<%=segments[i].fillColor%>"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>'
    };
  i.Type.extend({
    name: 'PolarArea',
    defaults: s,
    initialize: function (t) {
      this.segments = [], this.SegmentArc = i.Arc.extend({
        showStroke: this.options.segmentShowStroke,
        strokeWidth: this.options.segmentStrokeWidth,
        strokeColor: this.options.segmentStrokeColor,
        ctx: this.chart.ctx,
        innerRadius: 0,
        x: this.chart.width / 2,
        y: this.chart.height / 2
      }), this.scale = new i.RadialScale({
        display: this.options.showScale,
        fontStyle: this.options.scaleFontStyle,
        fontSize: this.options.scaleFontSize,
        fontFamily: this.options.scaleFontFamily,
        fontColor: this.options.scaleFontColor,
        showLabels: this.options.scaleShowLabels,
        showLabelBackdrop: this.options.scaleShowLabelBackdrop,
        backdropColor: this.options.scaleBackdropColor,
        backdropPaddingY: this.options.scaleBackdropPaddingY,
        backdropPaddingX: this.options.scaleBackdropPaddingX,
        lineWidth: this.options.scaleShowLine ? this.options.scaleLineWidth : 0,
        lineColor: this.options.scaleLineColor,
        lineArc: !0,
        width: this.chart.width,
        height: this.chart.height,
        xCenter: this.chart.width / 2,
        yCenter: this.chart.height / 2,
        ctx: this.chart.ctx,
        templateString: this.options.scaleLabel,
        valuesCount: t.length
      }), this.updateScaleRange(t), this.scale.update(), e.each(t, function (t, i) {
        this.addData(t, i, !0);
      }, this), this.options.showTooltips && e.bindEvents(this, this.options.tooltipEvents, function (t) {
        var i = 'mouseout' !== t.type ? this.getSegmentsAtEvent(t) : [];
        e.each(this.segments, function (t) {
          t.restore(['fillColor']);
        }), e.each(i, function (t) {
          t.fillColor = t.highlightColor;
        }), this.showTooltip(i);
      }), this.render();
    },
    getSegmentsAtEvent: function (t) {
      var i = [], s = e.getRelativePosition(t);
      return e.each(this.segments, function (t) {
        t.inRange(s.x, s.y) && i.push(t);
      }, this), i;
    },
    addData: function (t, i, e) {
      var s = i || this.segments.length;
      this.segments.splice(s, 0, new this.SegmentArc({
        fillColor: t.color,
        highlightColor: t.highlight || t.color,
        label: t.label,
        value: t.value,
        outerRadius: this.options.animateScale ? 0 : this.scale.calculateCenterOffset(t.value),
        circumference: this.options.animateRotate ? 0 : this.scale.getCircumference(),
        startAngle: 1.5 * Math.PI
      })), e || (this.reflow(), this.update());
    },
    removeData: function (t) {
      var i = e.isNumber(t) ? t : this.segments.length - 1;
      this.segments.splice(i, 1), this.reflow(), this.update();
    },
    calculateTotal: function (t) {
      this.total = 0, e.each(t, function (t) {
        this.total += t.value;
      }, this), this.scale.valuesCount = this.segments.length;
    },
    updateScaleRange: function (t) {
      var i = [];
      e.each(t, function (t) {
        i.push(t.value);
      });
      var s = this.options.scaleOverride ? {
          steps: this.options.scaleSteps,
          stepValue: this.options.scaleStepWidth,
          min: this.options.scaleStartValue,
          max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth
        } : e.calculateScaleRange(i, e.min([
          this.chart.width,
          this.chart.height
        ]) / 2, this.options.scaleFontSize, this.options.scaleBeginAtZero, this.options.scaleIntegersOnly);
      e.extend(this.scale, s, {
        size: e.min([
          this.chart.width,
          this.chart.height
        ]),
        xCenter: this.chart.width / 2,
        yCenter: this.chart.height / 2
      });
    },
    update: function () {
      this.calculateTotal(this.segments), e.each(this.segments, function (t) {
        t.save();
      }), this.reflow(), this.render();
    },
    reflow: function () {
      e.extend(this.SegmentArc.prototype, {
        x: this.chart.width / 2,
        y: this.chart.height / 2
      }), this.updateScaleRange(this.segments), this.scale.update(), e.extend(this.scale, {
        xCenter: this.chart.width / 2,
        yCenter: this.chart.height / 2
      }), e.each(this.segments, function (t) {
        t.update({ outerRadius: this.scale.calculateCenterOffset(t.value) });
      }, this);
    },
    draw: function (t) {
      var i = t || 1;
      this.clear(), e.each(this.segments, function (t, e) {
        t.transition({
          circumference: this.scale.getCircumference(),
          outerRadius: this.scale.calculateCenterOffset(t.value)
        }, i), t.endAngle = t.startAngle + t.circumference, 0 === e && (t.startAngle = 1.5 * Math.PI), e < this.segments.length - 1 && (this.segments[e + 1].startAngle = t.endAngle), t.draw();
      }, this), this.scale.draw();
    }
  });
}.call(this), function () {
  'use strict';
  var t = this, i = t.Chart, e = i.helpers;
  i.Type.extend({
    name: 'Radar',
    defaults: {
      scaleShowLine: !0,
      angleShowLineOut: !0,
      scaleShowLabels: !1,
      scaleBeginAtZero: !0,
      angleLineColor: 'rgba(0,0,0,.1)',
      angleLineWidth: 1,
      pointLabelFontFamily: '\'Arial\'',
      pointLabelFontStyle: 'normal',
      pointLabelFontSize: 10,
      pointLabelFontColor: '#666',
      pointDot: !0,
      pointDotRadius: 3,
      pointDotStrokeWidth: 1,
      pointHitDetectionRadius: 20,
      datasetStroke: !0,
      datasetStrokeWidth: 2,
      datasetFill: !0,
      legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].strokeColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'
    },
    initialize: function (t) {
      this.PointClass = i.Point.extend({
        strokeWidth: this.options.pointDotStrokeWidth,
        radius: this.options.pointDotRadius,
        display: this.options.pointDot,
        hitDetectionRadius: this.options.pointHitDetectionRadius,
        ctx: this.chart.ctx
      }), this.datasets = [], this.buildScale(t), this.options.showTooltips && e.bindEvents(this, this.options.tooltipEvents, function (t) {
        var i = 'mouseout' !== t.type ? this.getPointsAtEvent(t) : [];
        this.eachPoints(function (t) {
          t.restore([
            'fillColor',
            'strokeColor'
          ]);
        }), e.each(i, function (t) {
          t.fillColor = t.highlightFill, t.strokeColor = t.highlightStroke;
        }), this.showTooltip(i);
      }), e.each(t.datasets, function (i) {
        var s = {
            label: i.label || null,
            fillColor: i.fillColor,
            strokeColor: i.strokeColor,
            pointColor: i.pointColor,
            pointStrokeColor: i.pointStrokeColor,
            points: []
          };
        this.datasets.push(s), e.each(i.data, function (e, n) {
          var o;
          this.scale.animation || (o = this.scale.getPointPosition(n, this.scale.calculateCenterOffset(e))), s.points.push(new this.PointClass({
            value: e,
            label: t.labels[n],
            datasetLabel: i.label,
            x: this.options.animation ? this.scale.xCenter : o.x,
            y: this.options.animation ? this.scale.yCenter : o.y,
            strokeColor: i.pointStrokeColor,
            fillColor: i.pointColor,
            highlightFill: i.pointHighlightFill || i.pointColor,
            highlightStroke: i.pointHighlightStroke || i.pointStrokeColor
          }));
        }, this);
      }, this), this.render();
    },
    eachPoints: function (t) {
      e.each(this.datasets, function (i) {
        e.each(i.points, t, this);
      }, this);
    },
    getPointsAtEvent: function (t) {
      var i = e.getRelativePosition(t), s = e.getAngleFromPoint({
          x: this.scale.xCenter,
          y: this.scale.yCenter
        }, i), n = 2 * Math.PI / this.scale.valuesCount, o = Math.round((s.angle - 1.5 * Math.PI) / n), a = [];
      return (o >= this.scale.valuesCount || 0 > o) && (o = 0), s.distance <= this.scale.drawingArea && e.each(this.datasets, function (t) {
        a.push(t.points[o]);
      }), a;
    },
    buildScale: function (t) {
      this.scale = new i.RadialScale({
        display: this.options.showScale,
        fontStyle: this.options.scaleFontStyle,
        fontSize: this.options.scaleFontSize,
        fontFamily: this.options.scaleFontFamily,
        fontColor: this.options.scaleFontColor,
        showLabels: this.options.scaleShowLabels,
        showLabelBackdrop: this.options.scaleShowLabelBackdrop,
        backdropColor: this.options.scaleBackdropColor,
        backdropPaddingY: this.options.scaleBackdropPaddingY,
        backdropPaddingX: this.options.scaleBackdropPaddingX,
        lineWidth: this.options.scaleShowLine ? this.options.scaleLineWidth : 0,
        lineColor: this.options.scaleLineColor,
        angleLineColor: this.options.angleLineColor,
        angleLineWidth: this.options.angleShowLineOut ? this.options.angleLineWidth : 0,
        pointLabelFontColor: this.options.pointLabelFontColor,
        pointLabelFontSize: this.options.pointLabelFontSize,
        pointLabelFontFamily: this.options.pointLabelFontFamily,
        pointLabelFontStyle: this.options.pointLabelFontStyle,
        height: this.chart.height,
        width: this.chart.width,
        xCenter: this.chart.width / 2,
        yCenter: this.chart.height / 2,
        ctx: this.chart.ctx,
        templateString: this.options.scaleLabel,
        labels: t.labels,
        valuesCount: t.datasets[0].data.length
      }), this.scale.setScaleSize(), this.updateScaleRange(t.datasets), this.scale.buildYLabels();
    },
    updateScaleRange: function (t) {
      var i = function () {
          var i = [];
          return e.each(t, function (t) {
            t.data ? i = i.concat(t.data) : e.each(t.points, function (t) {
              i.push(t.value);
            });
          }), i;
        }(), s = this.options.scaleOverride ? {
          steps: this.options.scaleSteps,
          stepValue: this.options.scaleStepWidth,
          min: this.options.scaleStartValue,
          max: this.options.scaleStartValue + this.options.scaleSteps * this.options.scaleStepWidth
        } : e.calculateScaleRange(i, e.min([
          this.chart.width,
          this.chart.height
        ]) / 2, this.options.scaleFontSize, this.options.scaleBeginAtZero, this.options.scaleIntegersOnly);
      e.extend(this.scale, s);
    },
    addData: function (t, i) {
      this.scale.valuesCount++, e.each(t, function (t, e) {
        var s = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(t));
        this.datasets[e].points.push(new this.PointClass({
          value: t,
          label: i,
          x: s.x,
          y: s.y,
          strokeColor: this.datasets[e].pointStrokeColor,
          fillColor: this.datasets[e].pointColor
        }));
      }, this), this.scale.labels.push(i), this.reflow(), this.update();
    },
    removeData: function () {
      this.scale.valuesCount--, this.scale.labels.shift(), e.each(this.datasets, function (t) {
        t.points.shift();
      }, this), this.reflow(), this.update();
    },
    update: function () {
      this.eachPoints(function (t) {
        t.save();
      }), this.reflow(), this.render();
    },
    reflow: function () {
      e.extend(this.scale, {
        width: this.chart.width,
        height: this.chart.height,
        size: e.min([
          this.chart.width,
          this.chart.height
        ]),
        xCenter: this.chart.width / 2,
        yCenter: this.chart.height / 2
      }), this.updateScaleRange(this.datasets), this.scale.setScaleSize(), this.scale.buildYLabels();
    },
    draw: function (t) {
      var i = t || 1, s = this.chart.ctx;
      this.clear(), this.scale.draw(), e.each(this.datasets, function (t) {
        e.each(t.points, function (t, e) {
          t.hasValue() && t.transition(this.scale.getPointPosition(e, this.scale.calculateCenterOffset(t.value)), i);
        }, this), s.lineWidth = this.options.datasetStrokeWidth, s.strokeStyle = t.strokeColor, s.beginPath(), e.each(t.points, function (t, i) {
          0 === i ? s.moveTo(t.x, t.y) : s.lineTo(t.x, t.y);
        }, this), s.closePath(), s.stroke(), s.fillStyle = t.fillColor, s.fill(), e.each(t.points, function (t) {
          t.hasValue() && t.draw();
        });
      }, this);
    }
  });
}.call(this));
!function () {
  'use strict';
  function t(t) {
    return {
      restrict: 'CA',
      scope: {
        data: '=',
        labels: '=',
        options: '=',
        series: '=',
        colours: '=?',
        getColour: '=?',
        chartType: '=',
        legend: '@',
        click: '='
      },
      link: function (n, a) {
        function o(e, o) {
          if (!p(e) && !angular.equals(e, o)) {
            var i = t || n.chartType;
            i && (l && l.destroy(), l = r(i, n, a));
          }
        }
        var l, i = document.createElement('div');
        i.className = 'chart-container', a.replaceWith(i), i.appendChild(a[0]), 'object' == typeof window.G_vmlCanvasManager && null !== window.G_vmlCanvasManager && 'function' == typeof window.G_vmlCanvasManager.initElement && window.G_vmlCanvasManager.initElement(a[0]), n.$watch('data', function (o, i) {
          if (o && o.length && (!Array.isArray(o[0]) || o[0].length)) {
            var c = t || n.chartType;
            if (c) {
              if (l) {
                if (e(o, i))
                  return d(l, o, n);
                l.destroy();
              }
              l = r(c, n, a);
            }
          }
        }, !0), n.$watch('series', o, !0), n.$watch('labels', o, !0), n.$watch('options', o, !0), n.$watch('colours', o, !0), n.$watch('chartType', function (t, e) {
          p(t) || angular.equals(t, e) || (l && l.destroy(), l = r(t, n, a));
        }), n.$on('$destroy', function () {
          l && l.destroy();
        });
      }
    };
  }
  function e(t, e) {
    return t && e && t.length && e.length ? Array.isArray(t[0]) ? t.length === e.length && t[0].length === e[0].length : e.reduce(n, 0) > 0 ? t.length === e.length : !1 : !1;
  }
  function n(t, e) {
    return t + e;
  }
  function r(t, e, n) {
    if (e.data && e.data.length) {
      e.getColour = 'function' == typeof e.getColour ? e.getColour : l, e.colours = a(e);
      var r = n[0], o = r.getContext('2d'), i = Array.isArray(e.data[0]) ? f(e.labels, e.data, e.series || [], e.colours) : h(e.labels, e.data, e.colours), c = new Chart(o)[t](i, e.options || {});
      return e.$emit('create', c), e.click && (r.onclick = function (t) {
        var n = c.getPointsAtEvent || c.getBarsAtEvent || c.getSegmentsAtEvent;
        if (n) {
          var r = n.call(c, t);
          e.click(r, t), e.$apply();
        }
      }), e.legend && 'false' !== e.legend && g(n, c), c;
    }
  }
  function a(t) {
    for (var e = angular.copy(t.colours) || angular.copy(Chart.defaults.global.colours); e.length < t.data.length;)
      e.push(t.getColour());
    return e.map(o);
  }
  function o(t) {
    return 'object' == typeof t && null !== t ? t : 'string' == typeof t && '#' === t[0] ? i(s(t.substr(1))) : l();
  }
  function l() {
    var t = [
        c(0, 255),
        c(0, 255),
        c(0, 255)
      ];
    return i(t);
  }
  function i(t) {
    return {
      fillColor: u(t, 0.2),
      strokeColor: u(t, 1),
      pointColor: u(t, 1),
      pointStrokeColor: '#fff',
      pointHighlightFill: '#fff',
      pointHighlightStroke: u(t, 0.8)
    };
  }
  function c(t, e) {
    return Math.floor(Math.random() * (e - t + 1)) + t;
  }
  function u(t, e) {
    return 'rgba(' + t.concat(e).join(',') + ')';
  }
  function s(t) {
    var e = parseInt(t, 16), n = e >> 16 & 255, r = e >> 8 & 255, a = 255 & e;
    return [
      n,
      r,
      a
    ];
  }
  function f(t, e, n, r) {
    return {
      labels: t,
      datasets: e.map(function (t, e) {
        var a = angular.copy(r[e]);
        return a.label = n[e], a.data = t, a;
      })
    };
  }
  function h(t, e, n) {
    return t.map(function (t, r) {
      return {
        label: t,
        value: e[r],
        color: n[r].strokeColor,
        highlight: n[r].pointHighlightStroke
      };
    });
  }
  function g(t, e) {
    var n = t.parent(), r = n.find('chart-legend'), a = '<chart-legend>' + e.generateLegend() + '</chart-legend>';
    r.length ? r.replaceWith(a) : n.append(a);
  }
  function d(t, e, n) {
    Array.isArray(n.data[0]) ? t.datasets.forEach(function (t, n) {
      (t.points || t.bars).forEach(function (t, r) {
        t.value = e[n][r];
      });
    }) : t.segments.forEach(function (t, n) {
      t.value = e[n];
    }), t.update(), n.$emit('update', t);
  }
  function p(t) {
    return !t || Array.isArray(t) && !t.length || 'object' == typeof t && !Object.keys(t).length;
  }
  Chart.defaults.global.responsive = !0, Chart.defaults.global.multiTooltipTemplate = '<%if (datasetLabel){%><%=datasetLabel%>: <%}%><%= value %>', Chart.defaults.global.colours = [
    '#97BBCD',
    '#DCDCDC',
    '#F7464A',
    '#46BFBD',
    '#FDB45C',
    '#949FB1',
    '#4D5360'
  ], angular.module('chart.js', []).directive('chartBase', function () {
    return t();
  }).directive('chartLine', function () {
    return t('Line');
  }).directive('chartBar', function () {
    return t('Bar');
  }).directive('chartRadar', function () {
    return t('Radar');
  }).directive('chartDoughnut', function () {
    return t('Doughnut');
  }).directive('chartPie', function () {
    return t('Pie');
  }).directive('chartPolarArea', function () {
    return t('PolarArea');
  });
}();
//# sourceMappingURL=angular-chart.min.js.map
/* commonjs package manager support (eg componentjs) */
if (typeof module !== 'undefined' && typeof exports !== 'undefined' && module.exports === exports) {
  module.exports = 'treeControl';
}
(function (angular) {
  'use strict';
  angular.module('treeControl', []).constant('treeConfig', { templateUrl: null }).directive('treecontrol', [
    '$compile',
    function ($compile) {
      /**
             * @param cssClass - the css class
             * @param addClassProperty - should we wrap the class name with class=""
             */
      function classIfDefined(cssClass, addClassProperty) {
        if (cssClass) {
          if (addClassProperty)
            return 'class="' + cssClass + '"';
          else
            return cssClass;
        } else
          return '';
      }
      function ensureDefault(obj, prop, value) {
        if (!obj.hasOwnProperty(prop))
          obj[prop] = value;
      }
      return {
        restrict: 'EA',
        require: 'treecontrol',
        transclude: true,
        scope: {
          treeModel: '=',
          selectedNode: '=?',
          selectedNodes: '=?',
          expandedNodes: '=?',
          onSelection: '&',
          onNodeToggle: '&',
          options: '=?',
          orderBy: '@',
          reverseOrder: '@',
          filterExpression: '=?',
          filterComparator: '=?'
        },
        controller: [
          '$scope',
          '$templateCache',
          '$interpolate',
          'treeConfig',
          function ($scope, $templateCache, $interpolate, treeConfig) {
            function defaultIsLeaf(node) {
              return !node[$scope.options.nodeChildren] || node[$scope.options.nodeChildren].length === 0;
            }
            function shallowCopy(src, dst) {
              if (angular.isArray(src)) {
                dst = dst || [];
                for (var i = 0; i < src.length; i++) {
                  dst[i] = src[i];
                }
              } else if (angular.isObject(src)) {
                dst = dst || {};
                for (var key in src) {
                  if (hasOwnProperty.call(src, key) && !(key.charAt(0) === '$' && key.charAt(1) === '$')) {
                    dst[key] = src[key];
                  }
                }
              }
              return dst || src;
            }
            function defaultEquality(a, b) {
              if (a === undefined || b === undefined)
                return false;
              a = shallowCopy(a);
              a[$scope.options.nodeChildren] = [];
              b = shallowCopy(b);
              b[$scope.options.nodeChildren] = [];
              return angular.equals(a, b);
            }
            function defaultIsSelectable() {
              return true;
            }
            $scope.options = $scope.options || {};
            ensureDefault($scope.options, 'multiSelection', false);
            ensureDefault($scope.options, 'nodeChildren', 'children');
            ensureDefault($scope.options, 'dirSelectable', 'true');
            ensureDefault($scope.options, 'injectClasses', {});
            ensureDefault($scope.options.injectClasses, 'ul', '');
            ensureDefault($scope.options.injectClasses, 'li', '');
            ensureDefault($scope.options.injectClasses, 'liSelected', '');
            ensureDefault($scope.options.injectClasses, 'iExpanded', '');
            ensureDefault($scope.options.injectClasses, 'iCollapsed', '');
            ensureDefault($scope.options.injectClasses, 'iLeaf', '');
            ensureDefault($scope.options.injectClasses, 'label', '');
            ensureDefault($scope.options.injectClasses, 'labelSelected', '');
            ensureDefault($scope.options, 'equality', defaultEquality);
            ensureDefault($scope.options, 'isLeaf', defaultIsLeaf);
            ensureDefault($scope.options, 'allowDeselect', true);
            ensureDefault($scope.options, 'isSelectable', defaultIsSelectable);
            $scope.selectedNodes = $scope.selectedNodes || [];
            $scope.expandedNodes = $scope.expandedNodes || [];
            $scope.expandedNodesMap = {};
            for (var i = 0; i < $scope.expandedNodes.length; i++) {
              $scope.expandedNodesMap['' + i] = $scope.expandedNodes[i];
            }
            $scope.parentScopeOfTree = $scope.$parent;
            function isSelectedNode(node) {
              if (!$scope.options.multiSelection && $scope.options.equality(node, $scope.selectedNode))
                return true;
              else if ($scope.options.multiSelection && $scope.selectedNodes) {
                for (var i = 0; i < $scope.selectedNodes.length; i++) {
                  if ($scope.options.equality(node, $scope.selectedNodes[i])) {
                    return true;
                  }
                }
                return false;
              }
            }
            $scope.headClass = function (node) {
              var liSelectionClass = classIfDefined($scope.options.injectClasses.liSelected, false);
              var injectSelectionClass = '';
              if (liSelectionClass && isSelectedNode(node))
                injectSelectionClass = ' ' + liSelectionClass;
              if ($scope.options.isLeaf(node))
                return 'tree-leaf' + injectSelectionClass;
              if ($scope.expandedNodesMap[this.$id])
                return 'tree-expanded' + injectSelectionClass;
              else
                return 'tree-collapsed' + injectSelectionClass;
            };
            $scope.iBranchClass = function () {
              if ($scope.expandedNodesMap[this.$id])
                return classIfDefined($scope.options.injectClasses.iExpanded);
              else
                return classIfDefined($scope.options.injectClasses.iCollapsed);
            };
            $scope.nodeExpanded = function () {
              return !!$scope.expandedNodesMap[this.$id];
            };
            $scope.selectNodeHead = function () {
              var transcludedScope = this;
              var expanding = $scope.expandedNodesMap[transcludedScope.$id] === undefined;
              $scope.expandedNodesMap[transcludedScope.$id] = expanding ? transcludedScope.node : undefined;
              if (expanding) {
                $scope.expandedNodes.push(transcludedScope.node);
              } else {
                var index;
                for (var i = 0; i < $scope.expandedNodes.length && !index; i++) {
                  if ($scope.options.equality($scope.expandedNodes[i], transcludedScope.node)) {
                    index = i;
                  }
                }
                if (index !== undefined)
                  $scope.expandedNodes.splice(index, 1);
              }
              if ($scope.onNodeToggle) {
                var parentNode = transcludedScope.$parent.node === transcludedScope.synteticRoot ? null : transcludedScope.$parent.node;
                $scope.onNodeToggle({
                  node: transcludedScope.node,
                  $parentNode: parentNode,
                  $index: transcludedScope.$index,
                  $first: transcludedScope.$first,
                  $middle: transcludedScope.$middle,
                  $last: transcludedScope.$last,
                  $odd: transcludedScope.$odd,
                  $even: transcludedScope.$even,
                  expanded: expanding
                });
              }
            };
            $scope.selectNodeLabel = function (selectedNode) {
              var transcludedScope = this;
              if (!$scope.options.isLeaf(selectedNode) && (!$scope.options.dirSelectable || !$scope.options.isSelectable(selectedNode))) {
                // Branch node is not selectable, expand
                this.selectNodeHead();
              } else if ($scope.options.isLeaf(selectedNode) && !$scope.options.isSelectable(selectedNode)) {
                // Leaf node is not selectable
                return;
              } else {
                var selected = false;
                if ($scope.options.multiSelection) {
                  var pos = -1;
                  for (var i = 0; i < $scope.selectedNodes.length; i++) {
                    if ($scope.options.equality(selectedNode, $scope.selectedNodes[i])) {
                      pos = i;
                      break;
                    }
                  }
                  if (pos === -1) {
                    $scope.selectedNodes.push(selectedNode);
                    selected = true;
                  } else {
                    $scope.selectedNodes.splice(pos, 1);
                  }
                } else {
                  if (!$scope.options.equality(selectedNode, $scope.selectedNode)) {
                    $scope.selectedNode = selectedNode;
                    selected = true;
                  } else {
                    if ($scope.options.allowDeselect) {
                      $scope.selectedNode = undefined;
                    } else {
                      $scope.selectedNode = selectedNode;
                      selected = true;
                    }
                  }
                }
                if ($scope.onSelection) {
                  var parentNode = transcludedScope.$parent.node === transcludedScope.synteticRoot ? null : transcludedScope.$parent.node;
                  $scope.onSelection({
                    node: selectedNode,
                    selected: selected,
                    $parentNode: parentNode,
                    $index: transcludedScope.$index,
                    $first: transcludedScope.$first,
                    $middle: transcludedScope.$middle,
                    $last: transcludedScope.$last,
                    $odd: transcludedScope.$odd,
                    $even: transcludedScope.$even
                  });
                }
              }
            };
            $scope.selectedClass = function () {
              var isThisNodeSelected = isSelectedNode(this.node);
              var labelSelectionClass = classIfDefined($scope.options.injectClasses.labelSelected, false);
              var injectSelectionClass = '';
              if (labelSelectionClass && isThisNodeSelected)
                injectSelectionClass = ' ' + labelSelectionClass;
              return isThisNodeSelected ? 'tree-selected' + injectSelectionClass : '';
            };
            $scope.unselectableClass = function () {
              var isThisNodeUnselectable = !$scope.options.isSelectable(this.node);
              var labelUnselectableClass = classIfDefined($scope.options.injectClasses.labelUnselectable, false);
              return isThisNodeUnselectable ? 'tree-unselectable ' + labelUnselectableClass : '';
            };
            //tree template
            $scope.isReverse = function () {
              return !($scope.reverseOrder === 'false' || $scope.reverseOrder === 'False' || $scope.reverseOrder === '' || $scope.reverseOrder === false);
            };
            $scope.orderByFunc = function () {
              return '\'' + $scope.orderBy + '\'';
            };
            var templateOptions = {
                orderBy: $scope.orderBy ? ' | orderBy:orderByFunc():isReverse()' : '',
                ulClass: classIfDefined($scope.options.injectClasses.ul, true),
                nodeChildren: $scope.options.nodeChildren,
                liClass: classIfDefined($scope.options.injectClasses.li, true),
                iLeafClass: classIfDefined($scope.options.injectClasses.iLeaf, false),
                labelClass: classIfDefined($scope.options.injectClasses.label, false)
              };
            var template;
            var templateUrl = $scope.options.templateUrl || treeConfig.templateUrl;
            if (templateUrl) {
              template = $templateCache.get(templateUrl);
            }
            if (!template) {
              template = '<ul {{options.ulClass}} >' + '<li ng-repeat="node in node.{{options.nodeChildren}} | filter:filterExpression:filterComparator {{options.orderBy}}" ng-class="headClass(node)" {{options.liClass}}' + 'set-node-to-data>' + '<i class="tree-branch-head" ng-class="iBranchClass()" ng-click="selectNodeHead(node)"></i>' + '<i class="tree-leaf-head {{options.iLeafClass}}"></i>' + '<div class="tree-label {{options.labelClass}}" ng-class="[selectedClass(), unselectableClass()]" ng-click="selectNodeLabel(node)" tree-transclude></div>' + '<treeitem ng-if="nodeExpanded()"></treeitem>' + '</li>' + '</ul>';
            }
            this.template = $compile($interpolate(template)({ options: templateOptions }));
          }
        ],
        compile: function (element, attrs, childTranscludeFn) {
          return function (scope, element, attrs, treemodelCntr) {
            scope.$watch('treeModel', function updateNodeOnRootScope(newValue) {
              if (angular.isArray(newValue)) {
                if (angular.isDefined(scope.node) && angular.equals(scope.node[scope.options.nodeChildren], newValue))
                  return;
                scope.node = {};
                scope.synteticRoot = scope.node;
                scope.node[scope.options.nodeChildren] = newValue;
              } else {
                if (angular.equals(scope.node, newValue))
                  return;
                scope.node = newValue;
              }
            });
            scope.$watchCollection('expandedNodes', function (newValue, oldValue) {
              var notFoundIds = 0;
              var newExpandedNodesMap = {};
              var $liElements = element.find('li');
              var existingScopes = [];
              // find all nodes visible on the tree and the scope $id of the scopes including them
              angular.forEach($liElements, function (liElement) {
                var $liElement = angular.element(liElement);
                var liScope = {
                    $id: $liElement.data('scope-id'),
                    node: $liElement.data('node')
                  };
                existingScopes.push(liScope);
              });
              // iterate over the newValue, the new expanded nodes, and for each find it in the existingNodesAndScopes
              // if found, add the mapping $id -> node into newExpandedNodesMap
              // if not found, add the mapping num -> node into newExpandedNodesMap
              angular.forEach(newValue, function (newExNode) {
                var found = false;
                for (var i = 0; i < existingScopes.length && !found; i++) {
                  var existingScope = existingScopes[i];
                  if (scope.options.equality(newExNode, existingScope.node)) {
                    newExpandedNodesMap[existingScope.$id] = existingScope.node;
                    found = true;
                  }
                }
                if (!found)
                  newExpandedNodesMap[notFoundIds++] = newExNode;
              });
              scope.expandedNodesMap = newExpandedNodesMap;
            });
            //                        scope.$watch('expandedNodesMap', function(newValue) {
            //
            //                        });
            //Rendering template for a root node
            treemodelCntr.template(scope, function (clone) {
              element.html('').append(clone);
            });
            // save the transclude function from compile (which is not bound to a scope as apposed to the one from link)
            // we can fix this to work with the link transclude function with angular 1.2.6. as for angular 1.2.0 we need
            // to keep using the compile function
            scope.$treeTransclude = childTranscludeFn;
          };
        }
      };
    }
  ]).directive('setNodeToData', [
    '$parse',
    function ($parse) {
      return {
        restrict: 'A',
        link: function ($scope, $element, $attrs) {
          $element.data('node', $scope.node);
          $element.data('scope-id', $scope.$id);
        }
      };
    }
  ]).directive('treeitem', function () {
    return {
      restrict: 'E',
      require: '^treecontrol',
      link: function (scope, element, attrs, treemodelCntr) {
        // Rendering template for the current node
        treemodelCntr.template(scope, function (clone) {
          element.html('').append(clone);
        });
      }
    };
  }).directive('treeTransclude', function () {
    return {
      link: function (scope, element, attrs, controller) {
        if (!scope.options.isLeaf(scope.node)) {
          angular.forEach(scope.expandedNodesMap, function (node, id) {
            if (scope.options.equality(node, scope.node)) {
              scope.expandedNodesMap[scope.$id] = scope.node;
              scope.expandedNodesMap[id] = undefined;
            }
          });
        }
        if (!scope.options.multiSelection && scope.options.equality(scope.node, scope.selectedNode)) {
          scope.selectedNode = scope.node;
        } else if (scope.options.multiSelection) {
          var newSelectedNodes = [];
          for (var i = 0; i < scope.selectedNodes.length; i++) {
            if (scope.options.equality(scope.node, scope.selectedNodes[i])) {
              newSelectedNodes.push(scope.node);
            }
          }
          scope.selectedNodes = newSelectedNodes;
        }
        // create a scope for the transclusion, whos parent is the parent of the tree control
        scope.transcludeScope = scope.parentScopeOfTree.$new();
        scope.transcludeScope.node = scope.node;
        scope.transcludeScope.$parentNode = scope.$parent.node === scope.synteticRoot ? null : scope.$parent.node;
        scope.transcludeScope.$index = scope.$index;
        scope.transcludeScope.$first = scope.$first;
        scope.transcludeScope.$middle = scope.$middle;
        scope.transcludeScope.$last = scope.$last;
        scope.transcludeScope.$odd = scope.$odd;
        scope.transcludeScope.$even = scope.$even;
        scope.$on('$destroy', function () {
          scope.transcludeScope.$destroy();
        });
        scope.$treeTransclude(scope.transcludeScope, function (clone) {
          element.empty();
          element.append(clone);
        });
      }
    };
  });
}(angular));
/**
 * ani-machine - Declarative animation and machine state
 * @version v0.1.9
 * @link https://github.com/jfroffice/ani-machine
 * @license MIT
 */
!function (e) {
  'use strict';
  function t(e, t) {
    var i = n(e, t) ? a : r;
    i(e, t);
  }
  var n = function (e, t) {
      return e.classList.contains(t);
    }, r = function (e, t) {
      e.classList.add(t);
    }, a = function (e, t) {
      e.classList.remove(t);
    }, i = {
      hasClass: n,
      addClass: r,
      removeClass: a,
      toggleClass: t,
      has: n,
      add: r,
      remove: a,
      toggle: t
    };
  'function' == typeof define && define.amd ? define(i) : e.classie = i;
}(window);
var events = function () {
    function e(e) {
      e.eventTypes.forEach(function (t) {
        e.element.removeEventListener(t, e.callback);
      });
    }
    function t(e, t, n, r) {
      var a;
      return 3 == arguments.length && (r = n, n = t, t = void 0), t ? (t += ',' + t + ' *', a = function (n) {
        var a = n.target;
        a.matches && a.matches(t) && (r.handleEvent ? r.handleEvent(n) : r.call(e, n));
      }) : a = r, 'string' == typeof n && (n = n.split(/[\s,]+/)), n.forEach(function (t) {
        e.addEventListener(t, a);
      }), {
        element: e,
        eventTypes: n,
        callback: a
      };
    }
    function n(n, r, a, i) {
      function s(t) {
        e(o), i.handleEvent ? i.handleEvent(t) : i.call(n, t);
      }
      var o;
      3 == arguments.length && (i = a, a = r, r = void 0), o = t(n, r, a, s);
    }
    return {
      one: n,
      on: t,
      off: e
    };
  }(), am = {};
am.prefix = function () {
  'use strict';
  function e(e) {
    var t = document.body || document.documentElement, n = t.style, r = [
        'Moz',
        'Webkit',
        'Khtml',
        'O',
        'ms'
      ], a = e;
    if ('string' == typeof n[a])
      return e;
    a = a.charAt(0).toUpperCase() + a.substr(1);
    for (var i = 0; i < r.length; i++)
      if ('string' == typeof n[r[i] + a])
        return r[i] + a;
    return !1;
  }
  var t = {
      WebkitAnimation: 'webkitAnimationEnd',
      OAnimation: 'oAnimationEnd',
      msAnimation: 'MSAnimationEnd',
      animation: 'animationend'
    }, n = {
      WebkitTransition: 'webkitTransitionEnd',
      OTransition: 'oTransitionEnd',
      msTransition: 'MSTransitionEnd',
      transition: 'transitionend'
    };
  return {
    TRANSITION_END_EVENT: n[e('transition')],
    ANIMATION_END_EVENT: t[e('animation')]
  };
}(), am.viewport = function () {
  'use strict';
  function e(e) {
    var t = 0, n = 0;
    do
      isNaN(e.offsetTop) || (t += e.offsetTop), isNaN(e.offsetLeft) || (n += e.offsetLeft);
    while (e = e.offsetParent);
    return {
      top: t,
      left: n
    };
  }
  function t() {
    var e = window.document.documentElement.clientHeight, t = window.innerHeight;
    return t > e ? t : e;
  }
  return {
    isInside: function (n, r) {
      var a = window.pageYOffset, i = a + t(), s = n.offsetHeight, o = e(n).top, c = o + s;
      return r = r || 0.5, i >= o + s * r && c >= a || 'fixed' == (n.currentStyle ? n.currentStyle : window.getComputedStyle(n, null)).position;
    }
  };
}(), am.styles = function () {
  'use strict';
  function e(e, n) {
    return t[e] ? void 0 : '.' + e + '{' + n + '}';
  }
  var t = {};
  return function (n, r) {
    var a = e(n, r);
    if (!a)
      return n;
    var i = document.createElement('style');
    return i.type = 'text/css', i.innerHTML = a, t[n] = !0, document.getElementsByTagName('head')[0].appendChild(i), n;
  };
}(), am.frame = function () {
  var e = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (e) {
      window.setTimeout(e, 1000 / 60);
    };
  return function (t) {
    e.call(window, t);
  };
}(), am.translate = function (e, t) {
  'use strict';
  return function (n) {
    var r, a = 'translate', i = a + n.axis + '(' + n.move + ')', s = n.scale, o = '';
    return s !== t && (i += ' scale(' + s.value + ')', o += ('_scale' + s.value).replace('.', '_')), r = '-webkit-transform: ' + i + ';transform: ' + i + ';', n.opacity !== t && (r += ' opacity: ' + (n.opacity ? '1' : '0') + ';'), o += a + n.axis + '_' + n.move + '_' + n.opacity, e(o.replace(/-/g, 'm'), r);
  };
}(am.styles), am.transition = function (e) {
  'use strict';
  return function (t, n, r) {
    var a = t + ' ' + n + ' ' + r, i = a + ', all ' + a + ';', s = '_' + a.replace(/ /g, '_').replace(/\./g, '_'), o = '-webkit-transition: -webkit-transform ' + i + 'transition: transform ' + i;
    return e(s, o);
  };
}(am.styles), am.enter = function (e, t) {
  'use strict';
  function n(e) {
    var t, n = {};
    return e.forEach(function (r, a) {
      switch (t = e[a + 1], r) {
      case ':enter':
        return n.enter = t, void (n.axis = 'top' === n.enter || 'bottom' === n.enter ? 'y' : 'x');
      case 'move':
        return void (n.move = t);
      case 'after':
      case 'wait':
        return void (n.after = t);
      case 'over':
        return void (n.over = t);
      case 'easing':
        return void (n.easing = t);
      case 'scale':
        if (n.scale = {}, 'up' == t || 'down' == t ? (n.scale.direction = t, n.scale.power = e[a + 2]) : n.scale.power = t, 0 != parseInt(n.scale.power)) {
          var i = 0.01 * parseFloat(n.scale.power);
          'up' == n.scale.direction && (i = -i), n.scale.value = 1 + i;
        }
        return;
      default:
        return;
      }
    }), n;
  }
  return function (r) {
    var a = n(r), i = a.enter || 'left', s = 'left' !== i && 'top' !== i ? a.move : '-' + a.move, o = a.over || '0.7s', c = a.after || '0s', u = a.easing || 'ease-in-out';
    return {
      initial: e({
        axis: a.axis,
        move: s,
        scale: a.scale,
        opacity: !1
      }),
      transition: t(o, u, c)
    };
  };
}(am.translate, am.transition), am.transform = function (e, t) {
  'use strict';
  function n(e) {
    var t, n, r = {};
    return e.forEach(function (a, i) {
      if (n)
        return void (n = !1);
      switch (t = e[i + 1], a) {
      case 'twist':
        return 'left' === t ? r.skewx = e[i + 2] : 'right' === t && (r.skewx = '-' + e[i + 2]), void (n = !0);
      case 'rotate':
        return 'left' === t ? r.rotatey = '-' + e[i + 2] : 'right' === t && (r.rotatey = e[i + 2]), void (n = !0);
      case 'move':
        var s = e[i + 2];
        return 'left' === t ? r.translatex = '-' + s : 'right' === t ? r.translatex = s : 'bottom' === t ? r.translatey = s : 'top' === t && (r.translatey = '-' + s), void (n = !0);
      case 'scale':
        if (r.scale = {}, 'up' == t || 'down' == t ? (r.scale.direction = t, r.scale.power = e[i + 2]) : r.scale.power = t, 0 != parseInt(r.scale.power)) {
          var o = 0.01 * parseFloat(r.scale.power);
          'up' == r.scale.direction && (o = -o), r.scale.value = 1 + o;
        }
        return;
      case 'after':
      case 'wait':
        return void (r.after = t);
      case 'over':
        return void (r.over = t);
      default:
        return;
      }
    }), r;
  }
  return function (r) {
    var a = n(r), i = a.skewx, s = a.skewy, o = a.rotatey, c = a.translatex, u = a.translatey, f = a.scale, l = a.over || '1.0s', m = a.after || '0s', d = a.easing || 'ease-in-out', v = '', p = '';
    i && (p += 'skewx(' + i + ') ', v += 'skewx' + i), s && (p += 'skewy(' + s + ') ', v += 'skewy' + s), c && (p += 'translatex(' + c + ')', v += 'translatex' + c), u && (p += 'translatey(' + u + ')', v += 'translatey' + u), o && (p += 'rotate(' + o + ') ', v += 'rotate' + o), f && (p += ' scale(' + f.value + ')', v += 'scale' + f.value.toString().replace('.', '_'));
    var g = '-webkit-transform: ' + p + ' translateZ(0);transform: ' + p + ' translateZ(0);';
    return v = v.replace(/-/g, 'm'), {
      target: e(v, g),
      reset: !0,
      transition: t(l, d, m)
    };
  };
}(am.styles, am.transition), function (e, t) {
  'function' == typeof define && define.amd ? define(t) : 'object' == typeof exports ? module.exports = t(require, exports, module) : e.parser = t();
}(this, function () {
  function e(e) {
    return e.replace(/((\s*\S+)*)\s*/, '$1');
  }
  function t(t, n) {
    return e(n.substring(t.length + 1, n.length));
  }
  function n(n) {
    var r, a = [];
    return -1 === n.indexOf(':on active') && (n = ':on active ' + n), n.split(':o').forEach(function (n) {
      n.length && (r = {}, n.split(':').forEach(function (n) {
        0 === n.indexOf('n') ? r.on = e(n.substring(2, n.length)) : 0 === n.indexOf('enter') || 0 === n.indexOf('transform') || 0 === n.indexOf('animate') || 0 === n.indexOf('shake') ? r.do = ':' + e(n) : 0 === n.indexOf('go') ? r.go = e(n.substring(3, n.length)) : 0 === n.indexOf('transform') ? r.transform = t('transform', n) : 0 === n.indexOf('before') ? r.before = e(n.substring(7, n.length)).replace('()', '') : 0 === n.indexOf('after') ? r.after = e(n.substring(6, n.length)).replace('()', '') : 0 === n.indexOf('wait') ? r.wait = 1000 * +e(n.substring(5, n.length)).replace('s', '') : 0 === n.indexOf('loop') && (r.loop = e(n.substring(5, n.length)));
      }), a.push(r));
    }), a;
  }
  return {
    getStates: function (e, t, r) {
      return e = e || {}, e[t] = n(r), e;
    },
    getTriggers: function (t, n, r) {
      var t = t || {}, a = r.indexOf(':trigger');
      return -1 !== a && (t[n] = e(r.substring(a + 9, r.length))), t;
    }
  };
}), am.build = function (e, t, n) {
  'use strict';
  function r(e) {
    getComputedStyle(e, null).display;
  }
  function a(t, n, a, i, s) {
    r(t), a && classie.add(t, a);
    var o = t.getAttribute('data-previous-target');
    classie.has(t, o) && classie.remove(t, o), classie.add(t, i), n && classie.remove(t, n), events.one(t, e.TRANSITION_END_EVENT, function () {
      classie.remove(t, i), a && t.setAttribute('data-previous-target', a), s && s();
    });
  }
  return function (i, s, o, c) {
    var u;
    return ':enter' === s ? function (e) {
      u = t(o), classie.add(i, u.initial), a(i, u.initial, null, u.transition, function () {
        e && e();
      });
    } : ':transform' === s ? function (e) {
      u = n(o), a(i, null, u.target, u.transition, function () {
        e && e();
      });
    } : ':shake' === s ? function (t) {
      r(i), classie.add(i, 'shake'), classie.add(i, 'shake-constant'), o[1] && classie.add(i, 'shake-' + o[1]), events.one(i, e.ANIMATION_END_EVENT, function () {
        classie.remove(i, 'shake'), classie.remove(i, 'shake-constant'), o[1] && classie.remove(i, 'shake-' + o[1]), t && t();
      });
    } : ':animate' === s ? function (t) {
      var n = o + ' animated';
      c && (n += ' loop' + c), r(i), classie.add(i, o), classie.add(i, 'animated'), events.one(i, e.ANIMATION_END_EVENT, function () {
        classie.remove(i, o), classie.remove(i, 'animated'), t && t();
      });
    } : function () {
      alert('ERROR ' + s);
    };
  };
}(am.prefix, am.enter, am.transform), am.sequencer = function (e) {
  'use strict';
  function t(e) {
    return 'enter' === e ? e = 'mouseenter' : 'leave' === e && (e = 'mouseleave'), e;
  }
  return {
    getState: function () {
      return this.currentState;
    },
    init: function (e) {
      function n(e, n) {
        var a = n.split(' '), i = a[0], s = t(a[1]);
        [].forEach.call(document.querySelectorAll(i), function (t) {
          events.on(t, s, function () {
            r.changeState(e, !0);
          });
        });
      }
      var r = this, a = e.triggers;
      r.states = e.states, r.element = e.element, r.jobs = [], r.offs = [], r.currentState, r.running;
      for (var i in a) {
        var s = a[i];
        s && n(i, s);
      }
      return r.changeState('default'), r;
    },
    changeState: function (n, r) {
      function a(e) {
        u.jobs.push(e), i();
      }
      function i() {
        if (!u.running) {
          var e = u.jobs[0];
          e && (u.running = !0, e.run(function () {
            e.finish(), u.jobs.splice(0, 1), u.running = !1, i();
          }));
        }
      }
      function s(e) {
        if (e) {
          var t = [];
          for (var n in e)
            t.push(c(e[n]));
          return t;
        }
      }
      function o(e) {
        e = window[e], 'function' == typeof e && e.apply(null, [u.element]);
      }
      function c(n) {
        function r() {
          if (d && o(d), !h)
            return void i();
          var e = h.split(' '), t = e[0];
          e && (':animate' === t ? (n.currentStep += 1, n.currentStep >= e.length ? console.warn('try to relaunch animation that is not finished') : a({
            run: am.build(u.element, t, e[n.currentStep], g),
            finish: c
          })) : a({
            run: am.build(u.element, t, e),
            finish: s
          }));
        }
        function i() {
          m && (w !== f && events.off(l), u.changeState(m));
        }
        function s() {
          i(), v && o(v);
        }
        function c() {
          n.currentStep < h.split(' ').length - 1 ? e(r) : n.currentStep = 0, s();
        }
        var l, m = n.go, d = n.before, v = n.after, p = n.wait, g = n.loop, h = n.do, w = t(n.on);
        return n.currentStep = n.currentStep || 0, w === f ? p ? setTimeout(function () {
          e(r);
        }, p) : e(r) : l = events.on(u.element, w, r), function () {
          l && events.off(l);
        };
      }
      var u = this, f = 'active', l = u.currentState === n;
      u.currentState && u.offs && !l && u.offs.forEach(function (e) {
        e();
      }), (!l || r) && (u.currentState = n, u.offs = s(u.states[n]));
    }
  };
}(am.frame), am.start = function (e, t) {
  'use strict';
  function n() {
    r && clearTimeout(r), r = setTimeout(function () {
      r = null, function () {
        s.forEach(function (e) {
          (e.states.enter || e.states.leave) && e.changeState(t.isInside(e.element) ? 'enter' : 'leave');
        });
      }();
    }, 10);
  }
  var r, a = 'data-am', i = 'default', s = [];
  return events.on(window, 'scroll', n), events.on(window, 'resize', n), function () {
    [].forEach.call(document.querySelectorAll('[' + a + ']'), function (t) {
      var n = {}, r = {};
      [].forEach.call(t.attributes, function (e) {
        if (-1 !== e.name.indexOf(a)) {
          var t = e.name.replace(a + '-', ''), s = e.value;
          t === a && (t = i), n = parser.getStates(n, t, s), r = parser.getTriggers(r, t, s);
        }
      }), s.push(Object.create(e).init({
        element: t,
        states: n,
        triggers: r
      }));
    });
  };
}(am.sequencer, am.viewport);
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define('simple-module', ['jquery'], function (a0) {
      return root['Module'] = factory(a0);
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require('jquery'));
  } else {
    root['SimpleModule'] = factory(jQuery);
  }
}(this, function ($) {
  var Module, slice = [].slice;
  Module = function () {
    Module.extend = function (obj) {
      var key, ref, val;
      if (!(obj != null && typeof obj === 'object')) {
        return;
      }
      for (key in obj) {
        val = obj[key];
        if (key !== 'included' && key !== 'extended') {
          this[key] = val;
        }
      }
      return (ref = obj.extended) != null ? ref.call(this) : void 0;
    };
    Module.include = function (obj) {
      var key, ref, val;
      if (!(obj != null && typeof obj === 'object')) {
        return;
      }
      for (key in obj) {
        val = obj[key];
        if (key !== 'included' && key !== 'extended') {
          this.prototype[key] = val;
        }
      }
      return (ref = obj.included) != null ? ref.call(this) : void 0;
    };
    Module.connect = function (cls) {
      if (typeof cls !== 'function') {
        return;
      }
      if (!cls.pluginName) {
        throw new Error('Module.connect: cannot connect plugin without pluginName');
        return;
      }
      cls.prototype._connected = true;
      if (!this._connectedClasses) {
        this._connectedClasses = [];
      }
      this._connectedClasses.push(cls);
      if (cls.pluginName) {
        return this[cls.pluginName] = cls;
      }
    };
    Module.prototype.opts = {};
    function Module(opts) {
      var base, cls, i, instance, instances, len, name;
      this.opts = $.extend({}, this.opts, opts);
      (base = this.constructor)._connectedClasses || (base._connectedClasses = []);
      instances = function () {
        var i, len, ref, results;
        ref = this.constructor._connectedClasses;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          cls = ref[i];
          name = cls.pluginName.charAt(0).toLowerCase() + cls.pluginName.slice(1);
          if (cls.prototype._connected) {
            cls.prototype._module = this;
          }
          results.push(this[name] = new cls());
        }
        return results;
      }.call(this);
      if (this._connected) {
        this.opts = $.extend({}, this.opts, this._module.opts);
      } else {
        this._init();
        for (i = 0, len = instances.length; i < len; i++) {
          instance = instances[i];
          if (typeof instance._init === 'function') {
            instance._init();
          }
        }
      }
      this.trigger('initialized');
    }
    Module.prototype._init = function () {
    };
    Module.prototype.on = function () {
      var args, ref;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      (ref = $(this)).on.apply(ref, args);
      return this;
    };
    Module.prototype.one = function () {
      var args, ref;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      (ref = $(this)).one.apply(ref, args);
      return this;
    };
    Module.prototype.off = function () {
      var args, ref;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      (ref = $(this)).off.apply(ref, args);
      return this;
    };
    Module.prototype.trigger = function () {
      var args, ref;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      (ref = $(this)).trigger.apply(ref, args);
      return this;
    };
    Module.prototype.triggerHandler = function () {
      var args, ref;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return (ref = $(this)).triggerHandler.apply(ref, args);
    };
    Module.prototype._t = function () {
      var args, ref;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return (ref = this.constructor)._t.apply(ref, args);
    };
    Module._t = function () {
      var args, key, ref, result;
      key = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      result = ((ref = this.i18n[this.locale]) != null ? ref[key] : void 0) || '';
      if (!(args.length > 0)) {
        return result;
      }
      result = result.replace(/([^%]|^)%(?:(\d+)\$)?s/g, function (p0, p, position) {
        if (position) {
          return p + args[parseInt(position) - 1];
        } else {
          return p + args.shift();
        }
      });
      return result.replace(/%%s/g, '%s');
    };
    Module.i18n = { 'zh-CN': {} };
    Module.locale = 'zh-CN';
    return Module;
  }();
  return Module;
}));
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define('simple-hotkeys', [
      'jquery',
      'simple-module'
    ], function ($, SimpleModule) {
      return root['hotkeys'] = factory($, SimpleModule);
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require('jquery'), require('simple-module'));
  } else {
    root.simple = root.simple || {};
    root.simple['hotkeys'] = factory(jQuery, SimpleModule);
  }
}(this, function ($, SimpleModule) {
  var Hotkeys, hotkeys, extend = function (child, parent) {
      for (var key in parent) {
        if (hasProp.call(parent, key))
          child[key] = parent[key];
      }
      function ctor() {
        this.constructor = child;
      }
      ctor.prototype = parent.prototype;
      child.prototype = new ctor();
      child.__super__ = parent.prototype;
      return child;
    }, hasProp = {}.hasOwnProperty;
  Hotkeys = function (superClass) {
    extend(Hotkeys, superClass);
    function Hotkeys() {
      return Hotkeys.__super__.constructor.apply(this, arguments);
    }
    Hotkeys.count = 0;
    Hotkeys.keyNameMap = {
      8: 'Backspace',
      9: 'Tab',
      13: 'Enter',
      16: 'Shift',
      17: 'Control',
      18: 'Alt',
      19: 'Pause',
      20: 'CapsLock',
      27: 'Esc',
      32: 'Spacebar',
      33: 'PageUp',
      34: 'PageDown',
      35: 'End',
      36: 'Home',
      37: 'Left',
      38: 'Up',
      39: 'Right',
      40: 'Down',
      45: 'Insert',
      46: 'Del',
      91: 'Meta',
      93: 'Meta',
      48: '0',
      49: '1',
      50: '2',
      51: '3',
      52: '4',
      53: '5',
      54: '6',
      55: '7',
      56: '8',
      57: '9',
      65: 'A',
      66: 'B',
      67: 'C',
      68: 'D',
      69: 'E',
      70: 'F',
      71: 'G',
      72: 'H',
      73: 'I',
      74: 'J',
      75: 'K',
      76: 'L',
      77: 'M',
      78: 'N',
      79: 'O',
      80: 'P',
      81: 'Q',
      82: 'R',
      83: 'S',
      84: 'T',
      85: 'U',
      86: 'V',
      87: 'W',
      88: 'X',
      89: 'Y',
      90: 'Z',
      96: '0',
      97: '1',
      98: '2',
      99: '3',
      100: '4',
      101: '5',
      102: '6',
      103: '7',
      104: '8',
      105: '9',
      106: 'Multiply',
      107: 'Add',
      109: 'Subtract',
      110: 'Decimal',
      111: 'Divide',
      112: 'F1',
      113: 'F2',
      114: 'F3',
      115: 'F4',
      116: 'F5',
      117: 'F6',
      118: 'F7',
      119: 'F8',
      120: 'F9',
      121: 'F10',
      122: 'F11',
      123: 'F12',
      124: 'F13',
      125: 'F14',
      126: 'F15',
      127: 'F16',
      128: 'F17',
      129: 'F18',
      130: 'F19',
      131: 'F20',
      132: 'F21',
      133: 'F22',
      134: 'F23',
      135: 'F24',
      59: ';',
      61: '=',
      186: ';',
      187: '=',
      188: ',',
      190: '.',
      191: '/',
      192: '`',
      219: '[',
      220: '\\',
      221: ']',
      222: '\''
    };
    Hotkeys.aliases = {
      'escape': 'esc',
      'delete': 'del',
      'return': 'enter',
      'ctrl': 'control',
      'space': 'spacebar',
      'ins': 'insert',
      'cmd': 'meta',
      'command': 'meta',
      'wins': 'meta',
      'windows': 'meta'
    };
    Hotkeys.normalize = function (shortcut) {
      var i, j, key, keyname, keys, len;
      keys = shortcut.toLowerCase().replace(/\s+/gi, '').split('+');
      for (i = j = 0, len = keys.length; j < len; i = ++j) {
        key = keys[i];
        keys[i] = this.aliases[key] || key;
      }
      keyname = keys.pop();
      keys.sort().push(keyname);
      return keys.join('_');
    };
    Hotkeys.prototype.opts = { el: document };
    Hotkeys.prototype._init = function () {
      this.id = ++this.constructor.count;
      this._map = {};
      this._delegate = typeof this.opts.el === 'string' ? document : this.opts.el;
      return $(this._delegate).on('keydown.simple-hotkeys-' + this.id, this.opts.el, function (_this) {
        return function (e) {
          var ref;
          return (ref = _this._getHander(e)) != null ? ref.call(_this, e) : void 0;
        };
      }(this));
    };
    Hotkeys.prototype._getHander = function (e) {
      var keyname, shortcut;
      if (!(keyname = this.constructor.keyNameMap[e.which])) {
        return;
      }
      shortcut = '';
      if (e.altKey) {
        shortcut += 'alt_';
      }
      if (e.ctrlKey) {
        shortcut += 'control_';
      }
      if (e.metaKey) {
        shortcut += 'meta_';
      }
      if (e.shiftKey) {
        shortcut += 'shift_';
      }
      shortcut += keyname.toLowerCase();
      return this._map[shortcut];
    };
    Hotkeys.prototype.respondTo = function (subject) {
      if (typeof subject === 'string') {
        return this._map[this.constructor.normalize(subject)] != null;
      } else {
        return this._getHander(subject) != null;
      }
    };
    Hotkeys.prototype.add = function (shortcut, handler) {
      this._map[this.constructor.normalize(shortcut)] = handler;
      return this;
    };
    Hotkeys.prototype.remove = function (shortcut) {
      delete this._map[this.constructor.normalize(shortcut)];
      return this;
    };
    Hotkeys.prototype.destroy = function () {
      $(this._delegate).off('.simple-hotkeys-' + this.id);
      this._map = {};
      return this;
    };
    return Hotkeys;
  }(SimpleModule);
  hotkeys = function (opts) {
    return new Hotkeys(opts);
  };
  return hotkeys;
}));
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define('simple-uploader', [
      'jquery',
      'simple-module'
    ], function ($, SimpleModule) {
      return root['uploader'] = factory($, SimpleModule);
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require('jquery'), require('simple-module'));
  } else {
    root.simple = root.simple || {};
    root.simple['uploader'] = factory(jQuery, SimpleModule);
  }
}(this, function ($, SimpleModule) {
  var Uploader, uploader, extend = function (child, parent) {
      for (var key in parent) {
        if (hasProp.call(parent, key))
          child[key] = parent[key];
      }
      function ctor() {
        this.constructor = child;
      }
      ctor.prototype = parent.prototype;
      child.prototype = new ctor();
      child.__super__ = parent.prototype;
      return child;
    }, hasProp = {}.hasOwnProperty;
  Uploader = function (superClass) {
    extend(Uploader, superClass);
    function Uploader() {
      return Uploader.__super__.constructor.apply(this, arguments);
    }
    Uploader.count = 0;
    Uploader.prototype.opts = {
      url: '',
      params: null,
      fileKey: 'upload_file',
      connectionCount: 3
    };
    Uploader.prototype._init = function () {
      this.files = [];
      this.queue = [];
      this.id = ++Uploader.count;
      this.on('uploadcomplete', function (_this) {
        return function (e, file) {
          _this.files.splice($.inArray(file, _this.files), 1);
          if (_this.queue.length > 0 && _this.files.length < _this.opts.connectionCount) {
            return _this.upload(_this.queue.shift());
          } else if (_this.files.length === 0) {
            return _this.uploading = false;
          }
        };
      }(this));
      return $(window).on('beforeunload.uploader-' + this.id, function (_this) {
        return function (e) {
          if (!_this.uploading) {
            return;
          }
          e.originalEvent.returnValue = _this._t('leaveConfirm');
          return _this._t('leaveConfirm');
        };
      }(this));
    };
    Uploader.prototype.generateId = function () {
      var id;
      id = 0;
      return function () {
        return id += 1;
      };
    }();
    Uploader.prototype.upload = function (file, opts) {
      var f, i, key, len;
      if (opts == null) {
        opts = {};
      }
      if (file == null) {
        return;
      }
      if ($.isArray(file) || file instanceof FileList) {
        for (i = 0, len = file.length; i < len; i++) {
          f = file[i];
          this.upload(f, opts);
        }
      } else if ($(file).is('input:file')) {
        key = $(file).attr('name');
        if (key) {
          opts.fileKey = key;
        }
        this.upload($.makeArray($(file)[0].files), opts);
      } else if (!file.id || !file.obj) {
        file = this.getFile(file);
      }
      if (!(file && file.obj)) {
        return;
      }
      $.extend(file, opts);
      if (this.files.length >= this.opts.connectionCount) {
        this.queue.push(file);
        return;
      }
      if (this.triggerHandler('beforeupload', [file]) === false) {
        return;
      }
      this.files.push(file);
      this._xhrUpload(file);
      return this.uploading = true;
    };
    Uploader.prototype.getFile = function (fileObj) {
      var name, ref, ref1;
      if (fileObj instanceof window.File || fileObj instanceof window.Blob) {
        name = (ref = fileObj.fileName) != null ? ref : fileObj.name;
      } else {
        return null;
      }
      return {
        id: this.generateId(),
        url: this.opts.url,
        params: this.opts.params,
        fileKey: this.opts.fileKey,
        name: name,
        size: (ref1 = fileObj.fileSize) != null ? ref1 : fileObj.size,
        ext: name ? name.split('.').pop().toLowerCase() : '',
        obj: fileObj
      };
    };
    Uploader.prototype._xhrUpload = function (file) {
      var formData, k, ref, v;
      formData = new FormData();
      formData.append(file.fileKey, file.obj);
      formData.append('original_filename', file.name);
      if (file.params) {
        ref = file.params;
        for (k in ref) {
          v = ref[k];
          formData.append(k, v);
        }
      }
      return file.xhr = $.ajax({
        url: file.url,
        data: formData,
        processData: false,
        contentType: false,
        type: 'POST',
        headers: { 'X-File-Name': encodeURIComponent(file.name) },
        xhr: function () {
          var req;
          req = $.ajaxSettings.xhr();
          if (req) {
            req.upload.onprogress = function (_this) {
              return function (e) {
                return _this.progress(e);
              };
            }(this);
          }
          return req;
        },
        progress: function (_this) {
          return function (e) {
            if (!e.lengthComputable) {
              return;
            }
            return _this.trigger('uploadprogress', [
              file,
              e.loaded,
              e.total
            ]);
          };
        }(this),
        error: function (_this) {
          return function (xhr, status, err) {
            return _this.trigger('uploaderror', [
              file,
              xhr,
              status
            ]);
          };
        }(this),
        success: function (_this) {
          return function (result) {
            _this.trigger('uploadprogress', [
              file,
              file.size,
              file.size
            ]);
            _this.trigger('uploadsuccess', [
              file,
              result
            ]);
            return $(document).trigger('uploadsuccess', [
              file,
              result,
              _this
            ]);
          };
        }(this),
        complete: function (_this) {
          return function (xhr, status) {
            return _this.trigger('uploadcomplete', [
              file,
              xhr.responseText
            ]);
          };
        }(this)
      });
    };
    Uploader.prototype.cancel = function (file) {
      var f, i, len, ref;
      if (!file.id) {
        ref = this.files;
        for (i = 0, len = ref.length; i < len; i++) {
          f = ref[i];
          if (f.id === file * 1) {
            file = f;
            break;
          }
        }
      }
      this.trigger('uploadcancel', [file]);
      if (file.xhr) {
        file.xhr.abort();
      }
      return file.xhr = null;
    };
    Uploader.prototype.readImageFile = function (fileObj, callback) {
      var fileReader, img;
      if (!$.isFunction(callback)) {
        return;
      }
      img = new Image();
      img.onload = function () {
        return callback(img);
      };
      img.onerror = function () {
        return callback();
      };
      if (window.FileReader && FileReader.prototype.readAsDataURL && /^image/.test(fileObj.type)) {
        fileReader = new FileReader();
        fileReader.onload = function (e) {
          return img.src = e.target.result;
        };
        return fileReader.readAsDataURL(fileObj);
      } else {
        return callback();
      }
    };
    Uploader.prototype.destroy = function () {
      var file, i, len, ref;
      this.queue.length = 0;
      ref = this.files;
      for (i = 0, len = ref.length; i < len; i++) {
        file = ref[i];
        this.cancel(file);
      }
      $(window).off('.uploader-' + this.id);
      return $(document).off('.uploader-' + this.id);
    };
    Uploader.i18n = { 'zh-CN': { leaveConfirm: '\u6b63\u5728\u4e0a\u4f20\u6587\u4ef6\uff0c\u5982\u679c\u79bb\u5f00\u4e0a\u4f20\u4f1a\u81ea\u52a8\u53d6\u6d88' } };
    Uploader.locale = 'zh-CN';
    return Uploader;
  }(SimpleModule);
  uploader = function (opts) {
    return new Uploader(opts);
  };
  return uploader;
}));
/*!
* Simditor v2.1.15
* http://simditor.tower.im/
* 2015-07-01
*/
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define('simditor', [
      'jquery',
      'simple-module',
      'simple-hotkeys',
      'simple-uploader'
    ], function ($, SimpleModule, simpleHotkeys, simpleUploader) {
      return root['Simditor'] = factory($, SimpleModule, simpleHotkeys, simpleUploader);
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require('jquery'), require('simple-module'), require('simple-hotkeys'), require('simple-uploader'));
  } else {
    root['Simditor'] = factory(jQuery, SimpleModule, simple.hotkeys, simple.uploader);
  }
}(this, function ($, SimpleModule, simpleHotkeys, simpleUploader) {
  var AlignmentButton, BlockquoteButton, BoldButton, Button, CodeButton, CodePopover, ColorButton, Formatter, HrButton, ImageButton, ImagePopover, IndentButton, Indentation, InputManager, ItalicButton, Keystroke, LinkButton, LinkPopover, ListButton, OrderListButton, OutdentButton, Popover, Selection, Simditor, StrikethroughButton, TableButton, TitleButton, Toolbar, UnderlineButton, UndoManager, UnorderListButton, Util, extend = function (child, parent) {
      for (var key in parent) {
        if (hasProp.call(parent, key))
          child[key] = parent[key];
      }
      function ctor() {
        this.constructor = child;
      }
      ctor.prototype = parent.prototype;
      child.prototype = new ctor();
      child.__super__ = parent.prototype;
      return child;
    }, hasProp = {}.hasOwnProperty, indexOf = [].indexOf || function (item) {
      for (var i = 0, l = this.length; i < l; i++) {
        if (i in this && this[i] === item)
          return i;
      }
      return -1;
    }, slice = [].slice;
  Selection = function (superClass) {
    extend(Selection, superClass);
    function Selection() {
      return Selection.__super__.constructor.apply(this, arguments);
    }
    Selection.pluginName = 'Selection';
    Selection.prototype._init = function () {
      this.editor = this._module;
      return this.sel = document.getSelection();
    };
    Selection.prototype.clear = function () {
      var e;
      try {
        return this.sel.removeAllRanges();
      } catch (_error) {
        e = _error;
      }
    };
    Selection.prototype.getRange = function () {
      if (!this.editor.inputManager.focused || !this.sel.rangeCount) {
        return null;
      }
      return this.sel.getRangeAt(0);
    };
    Selection.prototype.selectRange = function (range) {
      this.clear();
      this.sel.addRange(range);
      if (!this.editor.inputManager.focused && (this.editor.util.browser.firefox || this.editor.util.browser.msie)) {
        this.editor.body.focus();
      }
      return range;
    };
    Selection.prototype.rangeAtEndOf = function (node, range) {
      var endNode, endNodeLength, result;
      if (range == null) {
        range = this.getRange();
      }
      if (!(range != null && range.collapsed)) {
        return;
      }
      node = $(node)[0];
      endNode = range.endContainer;
      endNodeLength = this.editor.util.getNodeLength(endNode);
      if (!(range.endOffset === endNodeLength - 1 && $(endNode).contents().last().is('br')) && range.endOffset !== endNodeLength) {
        return false;
      }
      if (node === endNode) {
        return true;
      } else if (!$.contains(node, endNode)) {
        return false;
      }
      result = true;
      $(endNode).parentsUntil(node).addBack().each(function (_this) {
        return function (i, n) {
          var $lastChild, nodes;
          nodes = $(n).parent().contents().filter(function () {
            return !(this !== n && this.nodeType === 3 && !this.nodeValue);
          });
          $lastChild = nodes.last();
          if (!($lastChild.get(0) === n || $lastChild.is('br') && $lastChild.prev().get(0) === n)) {
            result = false;
            return false;
          }
        };
      }(this));
      return result;
    };
    Selection.prototype.rangeAtStartOf = function (node, range) {
      var result, startNode;
      if (range == null) {
        range = this.getRange();
      }
      if (!(range != null && range.collapsed)) {
        return;
      }
      node = $(node)[0];
      startNode = range.startContainer;
      if (range.startOffset !== 0) {
        return false;
      }
      if (node === startNode) {
        return true;
      } else if (!$.contains(node, startNode)) {
        return false;
      }
      result = true;
      $(startNode).parentsUntil(node).addBack().each(function (_this) {
        return function (i, n) {
          var nodes;
          nodes = $(n).parent().contents().filter(function () {
            return !(this !== n && this.nodeType === 3 && !this.nodeValue);
          });
          if (nodes.first().get(0) !== n) {
            return result = false;
          }
        };
      }(this));
      return result;
    };
    Selection.prototype.insertNode = function (node, range) {
      if (range == null) {
        range = this.getRange();
      }
      if (range == null) {
        return;
      }
      node = $(node)[0];
      range.insertNode(node);
      return this.setRangeAfter(node, range);
    };
    Selection.prototype.setRangeAfter = function (node, range) {
      if (range == null) {
        range = this.getRange();
      }
      if (range == null) {
        return;
      }
      node = $(node)[0];
      range.setEndAfter(node);
      range.collapse(false);
      return this.selectRange(range);
    };
    Selection.prototype.setRangeBefore = function (node, range) {
      if (range == null) {
        range = this.getRange();
      }
      if (range == null) {
        return;
      }
      node = $(node)[0];
      range.setEndBefore(node);
      range.collapse(false);
      return this.selectRange(range);
    };
    Selection.prototype.setRangeAtStartOf = function (node, range) {
      if (range == null) {
        range = this.getRange();
      }
      node = $(node).get(0);
      range.setEnd(node, 0);
      range.collapse(false);
      return this.selectRange(range);
    };
    Selection.prototype.setRangeAtEndOf = function (node, range) {
      var $lastNode, $node, contents, lastChild, lastText, nodeLength;
      if (range == null) {
        range = this.getRange();
      }
      $node = $(node);
      node = $node.get(0);
      if ($node.is('pre')) {
        contents = $node.contents();
        if (contents.length > 0) {
          lastChild = contents.last();
          lastText = lastChild.text();
          if (lastText.charAt(lastText.length - 1) === '\n') {
            range.setEnd(lastChild[0], this.editor.util.getNodeLength(lastChild[0]) - 1);
          } else {
            range.setEnd(lastChild[0], this.editor.util.getNodeLength(lastChild[0]));
          }
        } else {
          range.setEnd(node, 0);
        }
      } else {
        nodeLength = this.editor.util.getNodeLength(node);
        if (node.nodeType !== 3 && nodeLength > 0) {
          $lastNode = $(node).contents().last();
          if ($lastNode.is('br')) {
            nodeLength -= 1;
          } else if ($lastNode[0].nodeType !== 3 && this.editor.util.isEmptyNode($lastNode)) {
            $lastNode.append(this.editor.util.phBr);
            node = $lastNode[0];
            nodeLength = 0;
          }
        }
        range.setEnd(node, nodeLength);
      }
      range.collapse(false);
      return this.selectRange(range);
    };
    Selection.prototype.deleteRangeContents = function (range) {
      var endRange, startRange;
      if (range == null) {
        range = this.getRange();
      }
      startRange = range.cloneRange();
      endRange = range.cloneRange();
      startRange.collapse(true);
      endRange.collapse(false);
      if (!range.collapsed && this.rangeAtStartOf(this.editor.body, startRange) && this.rangeAtEndOf(this.editor.body, endRange)) {
        this.editor.body.empty();
        range.setStart(this.editor.body[0], 0);
        range.collapse(true);
        this.selectRange(range);
      } else {
        range.deleteContents();
      }
      return range;
    };
    Selection.prototype.breakBlockEl = function (el, range) {
      var $el;
      if (range == null) {
        range = this.getRange();
      }
      $el = $(el);
      if (!range.collapsed) {
        return $el;
      }
      range.setStartBefore($el.get(0));
      if (range.collapsed) {
        return $el;
      }
      return $el.before(range.extractContents());
    };
    Selection.prototype.save = function (range) {
      var endCaret, endRange, startCaret;
      if (range == null) {
        range = this.getRange();
      }
      if (this._selectionSaved) {
        return;
      }
      endRange = range.cloneRange();
      endRange.collapse(false);
      startCaret = $('<span/>').addClass('simditor-caret-start');
      endCaret = $('<span/>').addClass('simditor-caret-end');
      endRange.insertNode(endCaret[0]);
      range.insertNode(startCaret[0]);
      this.clear();
      return this._selectionSaved = true;
    };
    Selection.prototype.restore = function () {
      var endCaret, endContainer, endOffset, range, startCaret, startContainer, startOffset;
      if (!this._selectionSaved) {
        return false;
      }
      startCaret = this.editor.body.find('.simditor-caret-start');
      endCaret = this.editor.body.find('.simditor-caret-end');
      if (startCaret.length && endCaret.length) {
        startContainer = startCaret.parent();
        startOffset = startContainer.contents().index(startCaret);
        endContainer = endCaret.parent();
        endOffset = endContainer.contents().index(endCaret);
        if (startContainer[0] === endContainer[0]) {
          endOffset -= 1;
        }
        range = document.createRange();
        range.setStart(startContainer.get(0), startOffset);
        range.setEnd(endContainer.get(0), endOffset);
        startCaret.remove();
        endCaret.remove();
        this.selectRange(range);
      } else {
        startCaret.remove();
        endCaret.remove();
      }
      this._selectionSaved = false;
      return range;
    };
    return Selection;
  }(SimpleModule);
  Formatter = function (superClass) {
    extend(Formatter, superClass);
    function Formatter() {
      return Formatter.__super__.constructor.apply(this, arguments);
    }
    Formatter.pluginName = 'Formatter';
    Formatter.prototype.opts = {
      allowedTags: null,
      allowedAttributes: null
    };
    Formatter.prototype._init = function () {
      this.editor = this._module;
      this._allowedTags = this.opts.allowedTags || [
        'br',
        'a',
        'img',
        'b',
        'strong',
        'i',
        'u',
        'font',
        'p',
        'ul',
        'ol',
        'li',
        'blockquote',
        'pre',
        'code',
        'h1',
        'h2',
        'h3',
        'h4',
        'hr'
      ];
      this._allowedAttributes = this.opts.allowedAttributes || {
        img: [
          'src',
          'alt',
          'width',
          'height',
          'data-non-image'
        ],
        a: [
          'href',
          'target'
        ],
        font: ['color'],
        code: ['class']
      };
      this._allowedStyles = this.opts.allowedStyles || {
        p: [
          'margin-left',
          'text-align'
        ],
        h1: ['margin-left'],
        h2: ['margin-left'],
        h3: ['margin-left'],
        h4: ['margin-left']
      };
      return this.editor.body.on('click', 'a', function (e) {
        return false;
      });
    };
    Formatter.prototype.decorate = function ($el) {
      if ($el == null) {
        $el = this.editor.body;
      }
      return this.editor.trigger('decorate', [$el]);
    };
    Formatter.prototype.undecorate = function ($el) {
      if ($el == null) {
        $el = this.editor.body.clone();
      }
      this.editor.trigger('undecorate', [$el]);
      return $.trim($el.html());
    };
    Formatter.prototype.autolink = function ($el) {
      var $link, $node, findLinkNode, j, lastIndex, len, linkNodes, match, re, replaceEls, subStr, text, uri;
      if ($el == null) {
        $el = this.editor.body;
      }
      linkNodes = [];
      findLinkNode = function ($parentNode) {
        return $parentNode.contents().each(function (i, node) {
          var $node, text;
          $node = $(node);
          if ($node.is('a') || $node.closest('a, pre', $el).length) {
            return;
          }
          if ($node.contents().length) {
            return findLinkNode($node);
          } else if ((text = $node.text()) && /https?:\/\/|www\./gi.test(text)) {
            return linkNodes.push($node);
          }
        });
      };
      findLinkNode($el);
      re = /(https?:\/\/|www\.)[\w\-\.\?&=\/#%:,@\!\+]+/gi;
      for (j = 0, len = linkNodes.length; j < len; j++) {
        $node = linkNodes[j];
        text = $node.text();
        replaceEls = [];
        match = null;
        lastIndex = 0;
        while ((match = re.exec(text)) !== null) {
          subStr = text.substring(lastIndex, match.index);
          replaceEls.push(document.createTextNode(subStr));
          lastIndex = re.lastIndex;
          uri = /^(http(s)?:\/\/|\/)/.test(match[0]) ? match[0] : 'http://' + match[0];
          $link = $('<a href="' + uri + '" rel="nofollow"></a>').text(match[0]);
          replaceEls.push($link[0]);
        }
        replaceEls.push(document.createTextNode(text.substring(lastIndex)));
        $node.replaceWith($(replaceEls));
      }
      return $el;
    };
    Formatter.prototype.format = function ($el) {
      var $node, blockNode, j, k, len, len1, n, node, ref, ref1;
      if ($el == null) {
        $el = this.editor.body;
      }
      if ($el.is(':empty')) {
        $el.append('<p>' + this.editor.util.phBr + '</p>');
        return $el;
      }
      ref = $el.contents();
      for (j = 0, len = ref.length; j < len; j++) {
        n = ref[j];
        this.cleanNode(n, true);
      }
      ref1 = $el.contents();
      for (k = 0, len1 = ref1.length; k < len1; k++) {
        node = ref1[k];
        $node = $(node);
        if ($node.is('br')) {
          if (typeof blockNode !== 'undefined' && blockNode !== null) {
            blockNode = null;
          }
          $node.remove();
        } else if (this.editor.util.isBlockNode(node)) {
          if ($node.is('li')) {
            if (blockNode && blockNode.is('ul, ol')) {
              blockNode.append(node);
            } else {
              blockNode = $('<ul/>').insertBefore(node);
              blockNode.append(node);
            }
          } else {
            blockNode = null;
          }
        } else {
          if (!blockNode || blockNode.is('ul, ol')) {
            blockNode = $('<p/>').insertBefore(node);
          }
          blockNode.append(node);
        }
      }
      return $el;
    };
    Formatter.prototype.cleanNode = function (node, recursive) {
      var $childImg, $node, $p, $td, allowedAttributes, attr, contents, isDecoration, j, k, len, len1, n, ref, ref1, text, textNode;
      $node = $(node);
      if (!($node.length > 0)) {
        return;
      }
      if ($node[0].nodeType === 3) {
        text = $node.text().replace(/(\r\n|\n|\r)/gm, '');
        if (text) {
          textNode = document.createTextNode(text);
          $node.replaceWith(textNode);
        } else {
          $node.remove();
        }
        return;
      }
      contents = $node.contents();
      isDecoration = $node.is('[class^="simditor-"]');
      if ($node.is(this._allowedTags.join(',')) || isDecoration) {
        if ($node.is('a') && ($childImg = $node.find('img')).length > 0) {
          $node.replaceWith($childImg);
          $node = $childImg;
          contents = null;
        }
        if ($node.is('img') && $node.hasClass('uploading')) {
          $node.remove();
        }
        if (!isDecoration) {
          allowedAttributes = this._allowedAttributes[$node[0].tagName.toLowerCase()];
          ref = $.makeArray($node[0].attributes);
          for (j = 0, len = ref.length; j < len; j++) {
            attr = ref[j];
            if (attr.name === 'style') {
              continue;
            }
            if (!(allowedAttributes != null && (ref1 = attr.name, indexOf.call(allowedAttributes, ref1) >= 0))) {
              $node.removeAttr(attr.name);
            }
            this._cleanNodeStyles($node);
          }
        }
      } else if ($node[0].nodeType === 1 && !$node.is(':empty')) {
        if ($node.is('div, article, dl, header, footer, tr')) {
          $node.append('<br/>');
          contents.first().unwrap();
        } else if ($node.is('table')) {
          $p = $('<p/>');
          $node.find('tr').each(function (i, tr) {
            return $p.append($(tr).text() + '<br/>');
          });
          $node.replaceWith($p);
          contents = null;
        } else if ($node.is('thead, tfoot')) {
          $node.remove();
          contents = null;
        } else if ($node.is('th')) {
          $td = $('<td/>').append($node.contents());
          $node.replaceWith($td);
        } else {
          contents.first().unwrap();
        }
      } else {
        $node.remove();
        contents = null;
      }
      if (recursive && contents != null && !$node.is('pre')) {
        for (k = 0, len1 = contents.length; k < len1; k++) {
          n = contents[k];
          this.cleanNode(n, true);
        }
      }
      return null;
    };
    Formatter.prototype._cleanNodeStyles = function ($node) {
      var allowedStyles, j, len, pair, ref, ref1, style, styleStr, styles;
      styleStr = $node.attr('style');
      if (!styleStr) {
        return;
      }
      $node.removeAttr('style');
      allowedStyles = this._allowedStyles[$node[0].tagName.toLowerCase()];
      if (!(allowedStyles && allowedStyles.length > 0)) {
        return $node;
      }
      styles = {};
      ref = styleStr.split(';');
      for (j = 0, len = ref.length; j < len; j++) {
        style = ref[j];
        style = $.trim(style);
        pair = style.split(':');
        if (!(pair.length = 2)) {
          continue;
        }
        if (ref1 = pair[0], indexOf.call(allowedStyles, ref1) >= 0) {
          styles[$.trim(pair[0])] = $.trim(pair[1]);
        }
      }
      if (Object.keys(styles).length > 0) {
        $node.css(styles);
      }
      return $node;
    };
    Formatter.prototype.clearHtml = function (html, lineBreak) {
      var container, contents, result;
      if (lineBreak == null) {
        lineBreak = true;
      }
      container = $('<div/>').append(html);
      contents = container.contents();
      result = '';
      contents.each(function (_this) {
        return function (i, node) {
          var $node, children;
          if (node.nodeType === 3) {
            return result += node.nodeValue;
          } else if (node.nodeType === 1) {
            $node = $(node);
            children = $node.contents();
            if (children.length > 0) {
              result += _this.clearHtml(children);
            }
            if (lineBreak && i < contents.length - 1 && $node.is('br, p, div, li,tr, pre, address, artticle, aside, dl, figcaption, footer, h1, h2,h3, h4, header')) {
              return result += '\n';
            }
          }
        };
      }(this));
      return result;
    };
    Formatter.prototype.beautify = function ($contents) {
      var uselessP;
      uselessP = function ($el) {
        return !!($el.is('p') && !$el.text() && $el.children(':not(br)').length < 1);
      };
      return $contents.each(function (i, el) {
        var $el, invalid;
        $el = $(el);
        invalid = $el.is(':not(img, br, col, td, hr, [class^="simditor-"]):empty');
        if (invalid || uselessP($el)) {
          $el.remove();
        }
        return $el.find(':not(img, br, col, td, hr, [class^="simditor-"]):empty').remove();
      });
    };
    return Formatter;
  }(SimpleModule);
  InputManager = function (superClass) {
    extend(InputManager, superClass);
    function InputManager() {
      return InputManager.__super__.constructor.apply(this, arguments);
    }
    InputManager.pluginName = 'InputManager';
    InputManager.prototype.opts = { pasteImage: false };
    InputManager.prototype._modifierKeys = [
      16,
      17,
      18,
      91,
      93,
      224
    ];
    InputManager.prototype._arrowKeys = [
      37,
      38,
      39,
      40
    ];
    InputManager.prototype._init = function () {
      var submitKey;
      this.editor = this._module;
      this.throttledTrigger = this.editor.util.throttle(function (_this) {
        return function () {
          var args;
          args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
          return setTimeout(function () {
            var ref;
            return (ref = _this.editor).trigger.apply(ref, args);
          }, 10);
        };
      }(this), 300);
      if (this.opts.pasteImage && typeof this.opts.pasteImage !== 'string') {
        this.opts.pasteImage = 'inline';
      }
      this._keystrokeHandlers = {};
      this.hotkeys = simpleHotkeys({ el: this.editor.body });
      this._pasteArea = $('<div/>').css({
        width: '1px',
        height: '1px',
        overflow: 'hidden',
        position: 'fixed',
        right: '0',
        bottom: '100px'
      }).attr({
        tabIndex: '-1',
        contentEditable: true
      }).addClass('simditor-paste-area').appendTo(this.editor.el);
      $(document).on('selectionchange.simditor' + this.editor.id, function (_this) {
        return function (e) {
          if (!_this.focused) {
            return;
          }
          if (_this._selectionTimer) {
            clearTimeout(_this._selectionTimer);
            _this._selectionTimer = null;
          }
          return _this._selectionTimer = setTimeout(function () {
            return _this.editor.trigger('selectionchanged');
          }, 20);
        };
      }(this));
      this.editor.on('valuechanged', function (_this) {
        return function () {
          if (!_this.editor.util.closestBlockEl() && _this.focused) {
            _this.editor.selection.save();
            _this.editor.formatter.format();
            _this.editor.selection.restore();
          }
          _this.editor.body.find('hr, pre, .simditor-table').each(function (i, el) {
            var $el, formatted;
            $el = $(el);
            if ($el.parent().is('blockquote') || $el.parent()[0] === _this.editor.body[0]) {
              formatted = false;
              if ($el.next().length === 0) {
                $('<p/>').append(_this.editor.util.phBr).insertAfter($el);
                formatted = true;
              }
              if ($el.prev().length === 0) {
                $('<p/>').append(_this.editor.util.phBr).insertBefore($el);
                formatted = true;
              }
              if (formatted) {
                return setTimeout(function () {
                  return _this.editor.trigger('valuechanged');
                }, 10);
              }
            }
          });
          _this.editor.body.find('pre:empty').append(_this.editor.util.phBr);
          if (!_this.editor.util.support.onselectionchange && _this.focused) {
            return _this.editor.trigger('selectionchanged');
          }
        };
      }(this));
      this.editor.on('selectionchanged', function (_this) {
        return function (e) {
          return _this.editor.undoManager.update();
        };
      }(this));
      this.editor.body.on('keydown', $.proxy(this._onKeyDown, this)).on('keypress', $.proxy(this._onKeyPress, this)).on('keyup', $.proxy(this._onKeyUp, this)).on('mouseup', $.proxy(this._onMouseUp, this)).on('focus', $.proxy(this._onFocus, this)).on('blur', $.proxy(this._onBlur, this)).on('paste', $.proxy(this._onPaste, this)).on('drop', $.proxy(this._onDrop, this)).on('input', $.proxy(this._onInput, this));
      if (this.editor.util.browser.firefox) {
        this.addShortcut('cmd+left', function (_this) {
          return function (e) {
            e.preventDefault();
            _this.editor.selection.sel.modify('move', 'backward', 'lineboundary');
            return false;
          };
        }(this));
        this.addShortcut('cmd+right', function (_this) {
          return function (e) {
            e.preventDefault();
            _this.editor.selection.sel.modify('move', 'forward', 'lineboundary');
            return false;
          };
        }(this));
        this.addShortcut(this.editor.util.os.mac ? 'cmd+a' : 'ctrl+a', function (_this) {
          return function (e) {
            var $children, firstBlock, lastBlock, range;
            $children = _this.editor.body.children();
            if (!($children.length > 0)) {
              return;
            }
            firstBlock = $children.first().get(0);
            lastBlock = $children.last().get(0);
            range = document.createRange();
            range.setStart(firstBlock, 0);
            range.setEnd(lastBlock, _this.editor.util.getNodeLength(lastBlock));
            _this.editor.selection.selectRange(range);
            return false;
          };
        }(this));
      }
      submitKey = this.editor.util.os.mac ? 'cmd+enter' : 'ctrl+enter';
      this.addShortcut(submitKey, function (_this) {
        return function (e) {
          _this.editor.el.closest('form').find('button:submit').click();
          return false;
        };
      }(this));
      if (this.editor.textarea.attr('autofocus')) {
        return setTimeout(function (_this) {
          return function () {
            return _this.editor.focus();
          };
        }(this), 0);
      }
    };
    InputManager.prototype._onFocus = function (e) {
      this.editor.el.addClass('focus').removeClass('error');
      this.focused = true;
      this.lastCaretPosition = null;
      return setTimeout(function (_this) {
        return function () {
          _this.editor.triggerHandler('focus');
          return _this.editor.trigger('selectionchanged');
        };
      }(this), 0);
    };
    InputManager.prototype._onBlur = function (e) {
      var ref;
      this.editor.el.removeClass('focus');
      this.editor.sync();
      this.focused = false;
      this.lastCaretPosition = (ref = this.editor.undoManager.currentState()) != null ? ref.caret : void 0;
      return this.editor.triggerHandler('blur');
    };
    InputManager.prototype._onMouseUp = function (e) {
      if (!this.editor.util.support.onselectionchange) {
        return setTimeout(function (_this) {
          return function () {
            return _this.editor.trigger('selectionchanged');
          };
        }(this), 0);
      }
    };
    InputManager.prototype._onKeyDown = function (e) {
      var base, ref, ref1, result;
      if (this.editor.triggerHandler(e) === false) {
        return false;
      }
      if (this.hotkeys.respondTo(e)) {
        return;
      }
      if (e.which in this._keystrokeHandlers) {
        result = typeof (base = this._keystrokeHandlers[e.which])['*'] === 'function' ? base['*'](e) : void 0;
        if (result) {
          this.editor.trigger('valuechanged');
          return false;
        }
        this.editor.util.traverseUp(function (_this) {
          return function (node) {
            var handler, ref;
            if (node.nodeType !== document.ELEMENT_NODE) {
              return;
            }
            handler = (ref = _this._keystrokeHandlers[e.which]) != null ? ref[node.tagName.toLowerCase()] : void 0;
            result = typeof handler === 'function' ? handler(e, $(node)) : void 0;
            if (result === true || result === false) {
              return false;
            }
          };
        }(this));
        if (result) {
          this.editor.trigger('valuechanged');
          return false;
        }
      }
      if ((ref = e.which, indexOf.call(this._modifierKeys, ref) >= 0) || (ref1 = e.which, indexOf.call(this._arrowKeys, ref1) >= 0)) {
        return;
      }
      if (this.editor.util.metaKey(e) && e.which === 86) {
        return;
      }
      if (!this.editor.util.support.oninput) {
        this.throttledTrigger('valuechanged', ['typing']);
      }
      return null;
    };
    InputManager.prototype._onKeyPress = function (e) {
      if (this.editor.triggerHandler(e) === false) {
        return false;
      }
    };
    InputManager.prototype._onKeyUp = function (e) {
      var p, ref;
      if (this.editor.triggerHandler(e) === false) {
        return false;
      }
      if (!this.editor.util.support.onselectionchange && (ref = e.which, indexOf.call(this._arrowKeys, ref) >= 0)) {
        this.editor.trigger('selectionchanged');
        return;
      }
      if ((e.which === 8 || e.which === 46) && this.editor.util.isEmptyNode(this.editor.body)) {
        this.editor.body.empty();
        p = $('<p/>').append(this.editor.util.phBr).appendTo(this.editor.body);
        this.editor.selection.setRangeAtStartOf(p);
      }
    };
    InputManager.prototype._onPaste = function (e) {
      var $blockEl, cleanPaste, imageFile, pasteContent, pasteItem, processPasteContent, range, ref, uploadOpt;
      if (this.editor.triggerHandler(e) === false) {
        return false;
      }
      range = this.editor.selection.deleteRangeContents();
      if (!range.collapsed) {
        range.collapse(true);
      }
      $blockEl = this.editor.util.closestBlockEl();
      cleanPaste = $blockEl.is('pre, table');
      if (e.originalEvent.clipboardData && e.originalEvent.clipboardData.items && e.originalEvent.clipboardData.items.length > 0) {
        pasteItem = e.originalEvent.clipboardData.items[0];
        if (/^image\//.test(pasteItem.type) && !cleanPaste) {
          imageFile = pasteItem.getAsFile();
          if (!(imageFile != null && this.opts.pasteImage)) {
            return;
          }
          if (!imageFile.name) {
            imageFile.name = 'Clipboard Image.png';
          }
          uploadOpt = {};
          uploadOpt[this.opts.pasteImage] = true;
          if ((ref = this.editor.uploader) != null) {
            ref.upload(imageFile, uploadOpt);
          }
          return false;
        }
      }
      processPasteContent = function (_this) {
        return function (pasteContent) {
          var $img, blob, children, insertPosition, j, k, l, lastLine, len, len1, len2, len3, len4, line, lines, m, node, o, ref1, ref2, ref3;
          if (_this.editor.triggerHandler('pasting', [pasteContent]) === false) {
            return;
          }
          if (!pasteContent) {
            return;
          } else if (cleanPaste) {
            if ($blockEl.is('table')) {
              lines = pasteContent.split('\n');
              lastLine = lines.pop();
              for (j = 0, len = lines.length; j < len; j++) {
                line = lines[j];
                _this.editor.selection.insertNode(document.createTextNode(line));
                _this.editor.selection.insertNode($('<br/>'));
              }
              _this.editor.selection.insertNode(document.createTextNode(lastLine));
            } else {
              pasteContent = $('<div/>').text(pasteContent);
              ref1 = pasteContent.contents();
              for (k = 0, len1 = ref1.length; k < len1; k++) {
                node = ref1[k];
                _this.editor.selection.insertNode($(node)[0], range);
              }
            }
          } else if ($blockEl.is(_this.editor.body)) {
            for (l = 0, len2 = pasteContent.length; l < len2; l++) {
              node = pasteContent[l];
              _this.editor.selection.insertNode(node, range);
            }
          } else if (pasteContent.length < 1) {
            return;
          } else if (pasteContent.length === 1) {
            if (pasteContent.is('p')) {
              children = pasteContent.contents();
              if (children.length === 1 && children.is('img')) {
                $img = children;
                if (/^data:image/.test($img.attr('src'))) {
                  if (!_this.opts.pasteImage) {
                    return;
                  }
                  blob = _this.editor.util.dataURLtoBlob($img.attr('src'));
                  blob.name = 'Clipboard Image.png';
                  uploadOpt = {};
                  uploadOpt[_this.opts.pasteImage] = true;
                  if ((ref2 = _this.editor.uploader) != null) {
                    ref2.upload(blob, uploadOpt);
                  }
                  return;
                } else if ($img.is('img[src^="webkit-fake-url://"]')) {
                  return;
                }
              }
              for (m = 0, len3 = children.length; m < len3; m++) {
                node = children[m];
                _this.editor.selection.insertNode(node, range);
              }
            } else if ($blockEl.is('p') && _this.editor.util.isEmptyNode($blockEl)) {
              $blockEl.replaceWith(pasteContent);
              _this.editor.selection.setRangeAtEndOf(pasteContent, range);
            } else if (pasteContent.is('ul, ol')) {
              if (pasteContent.find('li').length === 1) {
                pasteContent = $('<div/>').text(pasteContent.text());
                ref3 = pasteContent.contents();
                for (o = 0, len4 = ref3.length; o < len4; o++) {
                  node = ref3[o];
                  _this.editor.selection.insertNode($(node)[0], range);
                }
              } else if ($blockEl.is('li')) {
                $blockEl.parent().after(pasteContent);
                _this.editor.selection.setRangeAtEndOf(pasteContent, range);
              } else {
                $blockEl.after(pasteContent);
                _this.editor.selection.setRangeAtEndOf(pasteContent, range);
              }
            } else {
              $blockEl.after(pasteContent);
              _this.editor.selection.setRangeAtEndOf(pasteContent, range);
            }
          } else {
            if ($blockEl.is('li')) {
              $blockEl = $blockEl.parent();
            }
            if (_this.editor.selection.rangeAtStartOf($blockEl, range)) {
              insertPosition = 'before';
            } else if (_this.editor.selection.rangeAtEndOf($blockEl, range)) {
              insertPosition = 'after';
            } else {
              _this.editor.selection.breakBlockEl($blockEl, range);
              insertPosition = 'before';
            }
            $blockEl[insertPosition](pasteContent);
            _this.editor.selection.setRangeAtEndOf(pasteContent.last(), range);
          }
          return _this.editor.trigger('valuechanged');
        };
      }(this);
      if (cleanPaste) {
        e.preventDefault();
        if (this.editor.util.browser.msie) {
          pasteContent = window.clipboardData.getData('Text');
        } else {
          pasteContent = e.originalEvent.clipboardData.getData('text/plain');
        }
        return processPasteContent(pasteContent);
      } else {
        this.editor.selection.save(range);
        this._pasteArea.focus();
        if (this.editor.util.browser.msie && this.editor.util.browser.version === 10) {
          e.preventDefault();
          this._pasteArea.html(window.clipboardData.getData('Text'));
        }
        return setTimeout(function (_this) {
          return function () {
            if (_this._pasteArea.is(':empty')) {
              pasteContent = null;
            } else {
              pasteContent = $('<div/>').append(_this._pasteArea.contents());
              pasteContent.find('table colgroup').remove();
              _this.editor.formatter.format(pasteContent);
              _this.editor.formatter.decorate(pasteContent);
              _this.editor.formatter.beautify(pasteContent.children());
              pasteContent = pasteContent.contents();
            }
            _this._pasteArea.empty();
            range = _this.editor.selection.restore();
            return processPasteContent(pasteContent);
          };
        }(this), 10);
      }
    };
    InputManager.prototype._onDrop = function (e) {
      if (this.editor.triggerHandler(e) === false) {
        return false;
      }
      return setTimeout(function (_this) {
        return function () {
          return _this.editor.trigger('valuechanged');
        };
      }(this), 0);
    };
    InputManager.prototype._onInput = function (e) {
      return this.throttledTrigger('valuechanged', ['oninput']);
    };
    InputManager.prototype.addKeystrokeHandler = function (key, node, handler) {
      if (!this._keystrokeHandlers[key]) {
        this._keystrokeHandlers[key] = {};
      }
      return this._keystrokeHandlers[key][node] = handler;
    };
    InputManager.prototype.addShortcut = function (keys, handler) {
      return this.hotkeys.add(keys, $.proxy(handler, this));
    };
    return InputManager;
  }(SimpleModule);
  Keystroke = function (superClass) {
    extend(Keystroke, superClass);
    function Keystroke() {
      return Keystroke.__super__.constructor.apply(this, arguments);
    }
    Keystroke.pluginName = 'Keystroke';
    Keystroke.prototype._init = function () {
      var titleEnterHandler;
      this.editor = this._module;
      if (this.editor.util.browser.safari) {
        this.editor.inputManager.addKeystrokeHandler('13', '*', function (_this) {
          return function (e) {
            var $blockEl, $br;
            if (!e.shiftKey) {
              return;
            }
            $blockEl = _this.editor.util.closestBlockEl();
            if ($blockEl.is('pre')) {
              return;
            }
            $br = $('<br/>');
            if (_this.editor.selection.rangeAtEndOf($blockEl)) {
              _this.editor.selection.insertNode($br);
              _this.editor.selection.insertNode($('<br/>'));
              _this.editor.selection.setRangeBefore($br);
            } else {
              _this.editor.selection.insertNode($br);
            }
            return true;
          };
        }(this));
      }
      if (this.editor.util.browser.webkit || this.editor.util.browser.msie) {
        titleEnterHandler = function (_this) {
          return function (e, $node) {
            var $p;
            if (!_this.editor.selection.rangeAtEndOf($node)) {
              return;
            }
            $p = $('<p/>').append(_this.editor.util.phBr).insertAfter($node);
            _this.editor.selection.setRangeAtStartOf($p);
            return true;
          };
        }(this);
        this.editor.inputManager.addKeystrokeHandler('13', 'h1', titleEnterHandler);
        this.editor.inputManager.addKeystrokeHandler('13', 'h2', titleEnterHandler);
        this.editor.inputManager.addKeystrokeHandler('13', 'h3', titleEnterHandler);
        this.editor.inputManager.addKeystrokeHandler('13', 'h4', titleEnterHandler);
        this.editor.inputManager.addKeystrokeHandler('13', 'h5', titleEnterHandler);
        this.editor.inputManager.addKeystrokeHandler('13', 'h6', titleEnterHandler);
      }
      this.editor.inputManager.addKeystrokeHandler('8', '*', function (_this) {
        return function (e) {
          var $blockEl, $prevBlockEl, $rootBlock;
          $rootBlock = _this.editor.util.furthestBlockEl();
          $prevBlockEl = $rootBlock.prev();
          if ($prevBlockEl.is('hr') && _this.editor.selection.rangeAtStartOf($rootBlock)) {
            _this.editor.selection.save();
            $prevBlockEl.remove();
            _this.editor.selection.restore();
            return true;
          }
          $blockEl = _this.editor.util.closestBlockEl();
          if (_this.editor.util.browser.webkit && _this.editor.selection.rangeAtStartOf($blockEl)) {
            _this.editor.selection.save();
            _this.editor.formatter.cleanNode($blockEl, true);
            _this.editor.selection.restore();
            return null;
          }
        };
      }(this));
      this.editor.inputManager.addKeystrokeHandler('13', 'li', function (_this) {
        return function (e, $node) {
          var $cloneNode, listEl, newBlockEl, newListEl;
          $cloneNode = $node.clone();
          $cloneNode.find('ul, ol').remove();
          if (!(_this.editor.util.isEmptyNode($cloneNode) && $node.is(_this.editor.util.closestBlockEl()))) {
            return;
          }
          listEl = $node.parent();
          if ($node.next('li').length > 0) {
            if (!_this.editor.util.isEmptyNode($node)) {
              return;
            }
            if (listEl.parent('li').length > 0) {
              newBlockEl = $('<li/>').append(_this.editor.util.phBr).insertAfter(listEl.parent('li'));
              newListEl = $('<' + listEl[0].tagName + '/>').append($node.nextAll('li'));
              newBlockEl.append(newListEl);
            } else {
              newBlockEl = $('<p/>').append(_this.editor.util.phBr).insertAfter(listEl);
              newListEl = $('<' + listEl[0].tagName + '/>').append($node.nextAll('li'));
              newBlockEl.after(newListEl);
            }
          } else {
            if (listEl.parent('li').length > 0) {
              newBlockEl = $('<li/>').insertAfter(listEl.parent('li'));
              if ($node.contents().length > 0) {
                newBlockEl.append($node.contents());
              } else {
                newBlockEl.append(_this.editor.util.phBr);
              }
            } else {
              newBlockEl = $('<p/>').append(_this.editor.util.phBr).insertAfter(listEl);
              if ($node.children('ul, ol').length > 0) {
                newBlockEl.after($node.children('ul, ol'));
              }
            }
          }
          if ($node.prev('li').length) {
            $node.remove();
          } else {
            listEl.remove();
          }
          _this.editor.selection.setRangeAtStartOf(newBlockEl);
          return true;
        };
      }(this));
      this.editor.inputManager.addKeystrokeHandler('13', 'pre', function (_this) {
        return function (e, $node) {
          var $p, breakNode, range;
          e.preventDefault();
          if (e.shiftKey) {
            $p = $('<p/>').append(_this.editor.util.phBr).insertAfter($node);
            _this.editor.selection.setRangeAtStartOf($p);
            return true;
          }
          range = _this.editor.selection.getRange();
          breakNode = null;
          range.deleteContents();
          if (!_this.editor.util.browser.msie && _this.editor.selection.rangeAtEndOf($node)) {
            breakNode = document.createTextNode('\n\n');
            range.insertNode(breakNode);
            range.setEnd(breakNode, 1);
          } else {
            breakNode = document.createTextNode('\n');
            range.insertNode(breakNode);
            range.setStartAfter(breakNode);
          }
          range.collapse(false);
          _this.editor.selection.selectRange(range);
          return true;
        };
      }(this));
      this.editor.inputManager.addKeystrokeHandler('13', 'blockquote', function (_this) {
        return function (e, $node) {
          var $closestBlock, range;
          $closestBlock = _this.editor.util.closestBlockEl();
          if (!($closestBlock.is('p') && !$closestBlock.next().length && _this.editor.util.isEmptyNode($closestBlock))) {
            return;
          }
          $node.after($closestBlock);
          range = document.createRange();
          _this.editor.selection.setRangeAtStartOf($closestBlock, range);
          return true;
        };
      }(this));
      this.editor.inputManager.addKeystrokeHandler('8', 'li', function (_this) {
        return function (e, $node) {
          var $br, $childList, $newLi, $prevChildList, $prevNode, $textNode, range, text;
          $childList = $node.children('ul, ol');
          $prevNode = $node.prev('li');
          if (!($childList.length > 0 && $prevNode.length > 0)) {
            return false;
          }
          text = '';
          $textNode = null;
          $node.contents().each(function (i, n) {
            if (n.nodeType === 1 && /UL|OL/.test(n.nodeName)) {
              return false;
            }
            if (n.nodeType === 1 && /BR/.test(n.nodeName)) {
              return;
            }
            if (n.nodeType === 3 && n.nodeValue) {
              text += n.nodeValue;
            } else if (n.nodeType === 1) {
              text += $(n).text();
            }
            return $textNode = $(n);
          });
          if ($textNode && text.length === 1 && _this.editor.util.browser.firefox && !$textNode.next('br').length) {
            $br = $(_this.editor.util.phBr).insertAfter($textNode);
            $textNode.remove();
            _this.editor.selection.setRangeBefore($br);
            return true;
          } else if (text.length > 0) {
            return false;
          }
          range = document.createRange();
          $prevChildList = $prevNode.children('ul, ol');
          if ($prevChildList.length > 0) {
            $newLi = $('<li/>').append(_this.editor.util.phBr).appendTo($prevChildList);
            $prevChildList.append($childList.children('li'));
            $node.remove();
            _this.editor.selection.setRangeAtEndOf($newLi, range);
          } else {
            _this.editor.selection.setRangeAtEndOf($prevNode, range);
            $prevNode.append($childList);
            $node.remove();
            _this.editor.selection.selectRange(range);
          }
          return true;
        };
      }(this));
      this.editor.inputManager.addKeystrokeHandler('8', 'pre', function (_this) {
        return function (e, $node) {
          var $newNode, codeStr, range;
          if (!_this.editor.selection.rangeAtStartOf($node)) {
            return;
          }
          codeStr = $node.html().replace('\n', '<br/>');
          $newNode = $('<p/>').append(codeStr || _this.editor.util.phBr).insertAfter($node);
          $node.remove();
          range = document.createRange();
          _this.editor.selection.setRangeAtStartOf($newNode, range);
          return true;
        };
      }(this));
      return this.editor.inputManager.addKeystrokeHandler('8', 'blockquote', function (_this) {
        return function (e, $node) {
          var $firstChild, range;
          if (!_this.editor.selection.rangeAtStartOf($node)) {
            return;
          }
          $firstChild = $node.children().first().unwrap();
          range = document.createRange();
          _this.editor.selection.setRangeAtStartOf($firstChild, range);
          return true;
        };
      }(this));
    };
    return Keystroke;
  }(SimpleModule);
  UndoManager = function (superClass) {
    extend(UndoManager, superClass);
    function UndoManager() {
      return UndoManager.__super__.constructor.apply(this, arguments);
    }
    UndoManager.pluginName = 'UndoManager';
    UndoManager.prototype._index = -1;
    UndoManager.prototype._capacity = 50;
    UndoManager.prototype._timer = null;
    UndoManager.prototype._init = function () {
      var redoShortcut, undoShortcut;
      this.editor = this._module;
      this._stack = [];
      if (this.editor.util.os.mac) {
        undoShortcut = 'cmd+z';
        redoShortcut = 'shift+cmd+z';
      } else if (this.editor.util.os.win) {
        undoShortcut = 'ctrl+z';
        redoShortcut = 'ctrl+y';
      } else {
        undoShortcut = 'ctrl+z';
        redoShortcut = 'shift+ctrl+z';
      }
      this.editor.inputManager.addShortcut(undoShortcut, function (_this) {
        return function (e) {
          e.preventDefault();
          _this.undo();
          return false;
        };
      }(this));
      this.editor.inputManager.addShortcut(redoShortcut, function (_this) {
        return function (e) {
          e.preventDefault();
          _this.redo();
          return false;
        };
      }(this));
      return this.editor.on('valuechanged', function (_this) {
        return function (e, src) {
          if (src === 'undo' || src === 'redo') {
            return;
          }
          if (_this._timer) {
            clearTimeout(_this._timer);
            _this._timer = null;
          }
          return _this._timer = setTimeout(function () {
            _this._pushUndoState();
            return _this._timer = null;
          }, 200);
        };
      }(this));
    };
    UndoManager.prototype._pushUndoState = function () {
      var currentState, html;
      if (this.editor.triggerHandler('pushundostate') === false) {
        return;
      }
      currentState = this.currentState();
      html = this.editor.body.html();
      if (currentState && currentState.html === html) {
        return;
      }
      this._index += 1;
      this._stack.length = this._index;
      this._stack.push({
        html: html,
        caret: this.caretPosition()
      });
      if (this._stack.length > this._capacity) {
        this._stack.shift();
        return this._index -= 1;
      }
    };
    UndoManager.prototype.currentState = function () {
      if (this._stack.length && this._index > -1) {
        return this._stack[this._index];
      } else {
        return null;
      }
    };
    UndoManager.prototype.undo = function () {
      var state;
      if (this._index < 1 || this._stack.length < 2) {
        return;
      }
      this.editor.hidePopover();
      this._index -= 1;
      state = this._stack[this._index];
      this.editor.body.html(state.html);
      this.caretPosition(state.caret);
      this.editor.body.find('.selected').removeClass('selected');
      this.editor.sync();
      return this.editor.trigger('valuechanged', ['undo']);
    };
    UndoManager.prototype.redo = function () {
      var state;
      if (this._index < 0 || this._stack.length < this._index + 2) {
        return;
      }
      this.editor.hidePopover();
      this._index += 1;
      state = this._stack[this._index];
      this.editor.body.html(state.html);
      this.caretPosition(state.caret);
      this.editor.body.find('.selected').removeClass('selected');
      this.editor.sync();
      return this.editor.trigger('valuechanged', ['redo']);
    };
    UndoManager.prototype.update = function () {
      var currentState, html;
      if (this._timer) {
        return;
      }
      currentState = this.currentState();
      if (!currentState) {
        return;
      }
      html = this.editor.body.html();
      currentState.html = html;
      return currentState.caret = this.caretPosition();
    };
    UndoManager.prototype._getNodeOffset = function (node, index) {
      var $parent, merging, offset;
      if (index) {
        $parent = $(node);
      } else {
        $parent = $(node).parent();
      }
      offset = 0;
      merging = false;
      $parent.contents().each(function (_this) {
        return function (i, child) {
          if (index === i || node === child) {
            return false;
          }
          if (child.nodeType === 3) {
            if (!merging) {
              offset += 1;
              merging = true;
            }
          } else {
            offset += 1;
            merging = false;
          }
          return null;
        };
      }(this));
      return offset;
    };
    UndoManager.prototype._getNodePosition = function (node, offset) {
      var position, prevNode;
      if (node.nodeType === 3) {
        prevNode = node.previousSibling;
        while (prevNode && prevNode.nodeType === 3) {
          node = prevNode;
          offset += this.editor.util.getNodeLength(prevNode);
          prevNode = prevNode.previousSibling;
        }
      } else {
        offset = this._getNodeOffset(node, offset);
      }
      position = [];
      position.unshift(offset);
      this.editor.util.traverseUp(function (_this) {
        return function (n) {
          return position.unshift(_this._getNodeOffset(n));
        };
      }(this), node);
      return position;
    };
    UndoManager.prototype._getNodeByPosition = function (position) {
      var child, childNodes, i, j, len, node, offset, ref;
      node = this.editor.body[0];
      ref = position.slice(0, position.length - 1);
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        offset = ref[i];
        childNodes = node.childNodes;
        if (offset > childNodes.length - 1) {
          if (i === position.length - 2 && $(node).is('pre')) {
            child = document.createTextNode('');
            node.appendChild(child);
            childNodes = node.childNodes;
          } else {
            node = null;
            break;
          }
        }
        node = childNodes[offset];
      }
      return node;
    };
    UndoManager.prototype.caretPosition = function (caret) {
      var endContainer, endOffset, range, startContainer, startOffset;
      if (!caret) {
        range = this.editor.selection.getRange();
        if (!(this.editor.inputManager.focused && range != null)) {
          return {};
        }
        caret = {
          start: [],
          end: null,
          collapsed: true
        };
        caret.start = this._getNodePosition(range.startContainer, range.startOffset);
        if (!range.collapsed) {
          caret.end = this._getNodePosition(range.endContainer, range.endOffset);
          caret.collapsed = false;
        }
        return caret;
      } else {
        if (!this.editor.inputManager.focused) {
          this.editor.body.focus();
        }
        if (!caret.start) {
          this.editor.body.blur();
          return;
        }
        startContainer = this._getNodeByPosition(caret.start);
        startOffset = caret.start[caret.start.length - 1];
        if (caret.collapsed) {
          endContainer = startContainer;
          endOffset = startOffset;
        } else {
          endContainer = this._getNodeByPosition(caret.end);
          endOffset = caret.start[caret.start.length - 1];
        }
        if (!startContainer || !endContainer) {
          throw new Error('simditor: invalid caret state');
          return;
        }
        range = document.createRange();
        range.setStart(startContainer, startOffset);
        range.setEnd(endContainer, endOffset);
        return this.editor.selection.selectRange(range);
      }
    };
    return UndoManager;
  }(SimpleModule);
  Util = function (superClass) {
    extend(Util, superClass);
    function Util() {
      return Util.__super__.constructor.apply(this, arguments);
    }
    Util.pluginName = 'Util';
    Util.prototype._init = function () {
      this.editor = this._module;
      if (this.browser.msie && this.browser.version < 11) {
        return this.phBr = '';
      }
    };
    Util.prototype.phBr = '<br/>';
    Util.prototype.os = function () {
      var os;
      os = {};
      if (/Mac/.test(navigator.appVersion)) {
        os.mac = true;
      } else if (/Linux/.test(navigator.appVersion)) {
        os.linux = true;
      } else if (/Win/.test(navigator.appVersion)) {
        os.win = true;
      } else if (/X11/.test(navigator.appVersion)) {
        os.unix = true;
      }
      if (/Mobi/.test(navigator.appVersion)) {
        os.mobile = true;
      }
      return os;
    }();
    Util.prototype.browser = function () {
      var chrome, firefox, ie, ref, ref1, ref2, ref3, safari, ua;
      ua = navigator.userAgent;
      ie = /(msie|trident)/i.test(ua);
      chrome = /chrome|crios/i.test(ua);
      safari = /safari/i.test(ua) && !chrome;
      firefox = /firefox/i.test(ua);
      if (ie) {
        return {
          msie: true,
          version: ((ref = ua.match(/(msie |rv:)(\d+(\.\d+)?)/i)) != null ? ref[2] : void 0) * 1
        };
      } else if (chrome) {
        return {
          webkit: true,
          chrome: true,
          version: ((ref1 = ua.match(/(?:chrome|crios)\/(\d+(\.\d+)?)/i)) != null ? ref1[1] : void 0) * 1
        };
      } else if (safari) {
        return {
          webkit: true,
          safari: true,
          version: ((ref2 = ua.match(/version\/(\d+(\.\d+)?)/i)) != null ? ref2[1] : void 0) * 1
        };
      } else if (firefox) {
        return {
          mozilla: true,
          firefox: true,
          version: ((ref3 = ua.match(/firefox\/(\d+(\.\d+)?)/i)) != null ? ref3[1] : void 0) * 1
        };
      } else {
        return {};
      }
    }();
    Util.prototype.support = function () {
      return {
        onselectionchange: function () {
          var e, onselectionchange;
          onselectionchange = document.onselectionchange;
          if (onselectionchange !== void 0) {
            try {
              document.onselectionchange = 0;
              return document.onselectionchange === null;
            } catch (_error) {
              e = _error;
            } finally {
              document.onselectionchange = onselectionchange;
            }
          }
          return false;
        }(),
        oninput: function () {
          return !/(msie|trident)/i.test(navigator.userAgent);
        }()
      };
    }();
    Util.prototype.reflow = function (el) {
      if (el == null) {
        el = document;
      }
      return $(el)[0].offsetHeight;
    };
    Util.prototype.metaKey = function (e) {
      var isMac;
      isMac = /Mac/.test(navigator.userAgent);
      if (isMac) {
        return e.metaKey;
      } else {
        return e.ctrlKey;
      }
    };
    Util.prototype.isEmptyNode = function (node) {
      var $node;
      $node = $(node);
      return $node.is(':empty') || !$node.text() && !$node.find(':not(br, span, div)').length;
    };
    Util.prototype.blockNodes = [
      'div',
      'p',
      'ul',
      'ol',
      'li',
      'blockquote',
      'hr',
      'pre',
      'h1',
      'h2',
      'h3',
      'h4',
      'table'
    ];
    Util.prototype.isBlockNode = function (node) {
      node = $(node)[0];
      if (!node || node.nodeType === 3) {
        return false;
      }
      return new RegExp('^(' + this.blockNodes.join('|') + ')$').test(node.nodeName.toLowerCase());
    };
    Util.prototype.closestBlockEl = function (node) {
      var $node, blockEl, range;
      if (node == null) {
        range = this.editor.selection.getRange();
        node = range != null ? range.commonAncestorContainer : void 0;
      }
      $node = $(node);
      if (!$node.length) {
        return null;
      }
      blockEl = $node.parentsUntil(this.editor.body).addBack();
      blockEl = blockEl.filter(function (_this) {
        return function (i) {
          return _this.isBlockNode(blockEl.eq(i));
        };
      }(this));
      if (blockEl.length) {
        return blockEl.last();
      } else {
        return null;
      }
    };
    Util.prototype.furthestNode = function (node, filter) {
      var $node, blockEl, range;
      if (node == null) {
        range = this.editor.selection.getRange();
        node = range != null ? range.commonAncestorContainer : void 0;
      }
      $node = $(node);
      if (!$node.length) {
        return null;
      }
      blockEl = $node.parentsUntil(this.editor.body).addBack();
      blockEl = blockEl.filter(function (i) {
        var $n;
        $n = blockEl.eq(i);
        if ($.isFunction(filter)) {
          return filter($n);
        } else {
          return $n.is(filter);
        }
      });
      if (blockEl.length) {
        return blockEl.first();
      } else {
        return null;
      }
    };
    Util.prototype.furthestBlockEl = function (node) {
      return this.furthestNode(node, $.proxy(this.isBlockNode, this));
    };
    Util.prototype.getNodeLength = function (node) {
      switch (node.nodeType) {
      case 7:
      case 10:
        return 0;
      case 3:
      case 8:
        return node.length;
      default:
        return node.childNodes.length;
      }
    };
    Util.prototype.traverseUp = function (callback, node) {
      var j, len, n, nodes, range, result, results1;
      if (node == null) {
        range = this.editor.selection.getRange();
        node = range != null ? range.commonAncestorContainer : void 0;
      }
      if (node == null || !$.contains(this.editor.body[0], node)) {
        return false;
      }
      nodes = $(node).parentsUntil(this.editor.body).get();
      nodes.unshift(node);
      results1 = [];
      for (j = 0, len = nodes.length; j < len; j++) {
        n = nodes[j];
        result = callback(n);
        if (result === false) {
          break;
        } else {
          results1.push(void 0);
        }
      }
      return results1;
    };
    Util.prototype.dataURLtoBlob = function (dataURL) {
      var BlobBuilder, arrayBuffer, bb, blobArray, byteString, hasArrayBufferViewSupport, hasBlobConstructor, i, intArray, j, mimeString, ref, supportBlob;
      hasBlobConstructor = window.Blob && function () {
        var e;
        try {
          return Boolean(new Blob());
        } catch (_error) {
          e = _error;
          return false;
        }
      }();
      hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {
        var e;
        try {
          return new Blob([new Uint8Array(100)]).size === 100;
        } catch (_error) {
          e = _error;
          return false;
        }
      }();
      BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;
      supportBlob = hasBlobConstructor || BlobBuilder;
      if (!(supportBlob && window.atob && window.ArrayBuffer && window.Uint8Array)) {
        return false;
      }
      if (dataURL.split(',')[0].indexOf('base64') >= 0) {
        byteString = atob(dataURL.split(',')[1]);
      } else {
        byteString = decodeURIComponent(dataURL.split(',')[1]);
      }
      arrayBuffer = new ArrayBuffer(byteString.length);
      intArray = new Uint8Array(arrayBuffer);
      for (i = j = 0, ref = byteString.length; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
        intArray[i] = byteString.charCodeAt(i);
      }
      mimeString = dataURL.split(',')[0].split(':')[1].split(';')[0];
      if (hasBlobConstructor) {
        blobArray = hasArrayBufferViewSupport ? intArray : arrayBuffer;
        return new Blob([blobArray], { type: mimeString });
      }
      bb = new BlobBuilder();
      bb.append(arrayBuffer);
      return bb.getBlob(mimeString);
    };
    Util.prototype.throttle = function (func, wait) {
      var delayedCallTimeout, previousCallTime, stopDelayedCall;
      delayedCallTimeout = null;
      previousCallTime = 0;
      stopDelayedCall = function () {
        if (delayedCallTimeout) {
          clearTimeout(delayedCallTimeout);
          return delayedCallTimeout = null;
        }
      };
      return function () {
        var args, now, remaining, result;
        now = Date.now();
        previousCallTime || (previousCallTime = now);
        remaining = wait - (now - previousCallTime);
        result = null;
        if (0 < remaining && remaining < wait) {
          previousCallTime = now;
          stopDelayedCall();
          args = arguments;
          delayedCallTimeout = setTimeout(function () {
            previousCallTime = 0;
            delayedCallTimeout = null;
            return result = func.apply(null, args);
          }, wait);
        } else {
          stopDelayedCall();
          if (previousCallTime !== now) {
            previousCallTime = 0;
          }
          result = func.apply(null, arguments);
        }
        return result;
      };
    };
    Util.prototype.formatHTML = function (html) {
      var cursor, indentString, lastMatch, level, match, re, repeatString, result, str;
      re = /<(\/?)(.+?)(\/?)>/g;
      result = '';
      level = 0;
      lastMatch = null;
      indentString = '  ';
      repeatString = function (str, n) {
        return new Array(n + 1).join(str);
      };
      while ((match = re.exec(html)) !== null) {
        match.isBlockNode = $.inArray(match[2], this.blockNodes) > -1;
        match.isStartTag = match[1] !== '/' && match[3] !== '/';
        match.isEndTag = match[1] === '/' || match[3] === '/';
        cursor = lastMatch ? lastMatch.index + lastMatch[0].length : 0;
        if ((str = html.substring(cursor, match.index)).length > 0 && $.trim(str)) {
          result += str;
        }
        if (match.isBlockNode && match.isEndTag && !match.isStartTag) {
          level -= 1;
        }
        if (match.isBlockNode && match.isStartTag) {
          if (!(lastMatch && lastMatch.isBlockNode && lastMatch.isEndTag)) {
            result += '\n';
          }
          result += repeatString(indentString, level);
        }
        result += match[0];
        if (match.isBlockNode && match.isEndTag) {
          result += '\n';
        }
        if (match.isBlockNode && match.isStartTag) {
          level += 1;
        }
        lastMatch = match;
      }
      return $.trim(result);
    };
    return Util;
  }(SimpleModule);
  Toolbar = function (superClass) {
    extend(Toolbar, superClass);
    function Toolbar() {
      return Toolbar.__super__.constructor.apply(this, arguments);
    }
    Toolbar.pluginName = 'Toolbar';
    Toolbar.prototype.opts = {
      toolbar: true,
      toolbarFloat: true,
      toolbarHidden: false,
      toolbarFloatOffset: 0
    };
    Toolbar.prototype._tpl = {
      wrapper: '<div class="simditor-toolbar"><ul></ul></div>',
      separator: '<li><span class="separator"></span></li>'
    };
    Toolbar.prototype._init = function () {
      var toolbarHeight;
      this.editor = this._module;
      if (!this.opts.toolbar) {
        return;
      }
      if (!$.isArray(this.opts.toolbar)) {
        this.opts.toolbar = [
          'bold',
          'italic',
          'underline',
          'strikethrough',
          '|',
          'ol',
          'ul',
          'blockquote',
          'code',
          '|',
          'link',
          'image',
          '|',
          'indent',
          'outdent'
        ];
      }
      this._render();
      this.list.on('click', function (_this) {
        return function (e) {
          return false;
        };
      }(this));
      this.wrapper.on('mousedown', function (_this) {
        return function (e) {
          return _this.list.find('.menu-on').removeClass('.menu-on');
        };
      }(this));
      $(document).on('mousedown.simditor' + this.editor.id, function (_this) {
        return function (e) {
          return _this.list.find('.menu-on').removeClass('.menu-on');
        };
      }(this));
      if (!this.opts.toolbarHidden && this.opts.toolbarFloat) {
        this.wrapper.css('top', this.opts.toolbarFloatOffset);
        toolbarHeight = 0;
        $(window).on('resize.simditor-' + this.editor.id, function (_this) {
          return function (e) {
            _this.wrapper.css('position', 'static');
            _this.wrapper.width('auto');
            _this.editor.util.reflow(_this.wrapper);
            _this.wrapper.width(_this.wrapper.outerWidth());
            _this.wrapper.css('left', _this.wrapper.offset().left);
            _this.wrapper.css('position', '');
            toolbarHeight = _this.wrapper.outerHeight();
            return _this.editor.placeholderEl.css('top', toolbarHeight);
          };
        }(this)).resize();
        $(window).on('scroll.simditor-' + this.editor.id, function (_this) {
          return function (e) {
            var bottomEdge, scrollTop, topEdge;
            topEdge = _this.editor.wrapper.offset().top;
            bottomEdge = topEdge + _this.editor.wrapper.outerHeight() - 80;
            scrollTop = $(document).scrollTop() + _this.opts.toolbarFloatOffset;
            if (scrollTop <= topEdge || scrollTop >= bottomEdge) {
              _this.editor.wrapper.removeClass('toolbar-floating').css('padding-top', '');
              if (_this.editor.util.os.mobile) {
                return _this.wrapper.css('top', _this.opts.toolbarFloatOffset);
              }
            } else {
              _this.editor.wrapper.addClass('toolbar-floating').css('padding-top', toolbarHeight);
              if (_this.editor.util.os.mobile) {
                return _this.wrapper.css('top', scrollTop - topEdge + _this.opts.toolbarFloatOffset);
              }
            }
          };
        }(this));
      }
      this.editor.on('selectionchanged', function (_this) {
        return function () {
          return _this.toolbarStatus();
        };
      }(this));
      this.editor.on('destroy', function (_this) {
        return function () {
          return _this.buttons.length = 0;
        };
      }(this));
      return $(document).on('mousedown.simditor-' + this.editor.id, function (_this) {
        return function (e) {
          return _this.list.find('li.menu-on').removeClass('menu-on');
        };
      }(this));
    };
    Toolbar.prototype._render = function () {
      var j, len, name, ref;
      this.buttons = [];
      this.wrapper = $(this._tpl.wrapper).prependTo(this.editor.wrapper);
      this.list = this.wrapper.find('ul');
      ref = this.opts.toolbar;
      for (j = 0, len = ref.length; j < len; j++) {
        name = ref[j];
        if (name === '|') {
          $(this._tpl.separator).appendTo(this.list);
          continue;
        }
        if (!this.constructor.buttons[name]) {
          throw new Error('simditor: invalid toolbar button "' + name + '"');
          continue;
        }
        this.buttons.push(new this.constructor.buttons[name]({ editor: this.editor }));
      }
      if (this.opts.toolbarHidden) {
        return this.wrapper.hide();
      }
    };
    Toolbar.prototype.toolbarStatus = function (name) {
      var buttons;
      if (!this.editor.inputManager.focused) {
        return;
      }
      buttons = this.buttons.slice(0);
      return this.editor.util.traverseUp(function (_this) {
        return function (node) {
          var button, i, j, k, len, len1, removeButtons;
          removeButtons = [];
          for (i = j = 0, len = buttons.length; j < len; i = ++j) {
            button = buttons[i];
            if (name != null && button.name !== name) {
              continue;
            }
            if (!button.status || button.status($(node)) === true) {
              removeButtons.push(button);
            }
          }
          for (k = 0, len1 = removeButtons.length; k < len1; k++) {
            button = removeButtons[k];
            i = $.inArray(button, buttons);
            buttons.splice(i, 1);
          }
          if (buttons.length === 0) {
            return false;
          }
        };
      }(this));
    };
    Toolbar.prototype.findButton = function (name) {
      var button;
      button = this.list.find('.toolbar-item-' + name).data('button');
      return button != null ? button : null;
    };
    Toolbar.addButton = function (btn) {
      return this.buttons[btn.prototype.name] = btn;
    };
    Toolbar.buttons = {};
    return Toolbar;
  }(SimpleModule);
  Indentation = function (superClass) {
    extend(Indentation, superClass);
    function Indentation() {
      return Indentation.__super__.constructor.apply(this, arguments);
    }
    Indentation.pluginName = 'Indentation';
    Indentation.prototype.opts = { tabIndent: true };
    Indentation.prototype._init = function () {
      this.editor = this._module;
      return this.editor.inputManager.addKeystrokeHandler('9', '*', function (_this) {
        return function (e) {
          var codeButton;
          codeButton = _this.editor.toolbar.findButton('code');
          if (!(_this.opts.tabIndent || codeButton && codeButton.active)) {
            return;
          }
          return _this.indent(e.shiftKey);
        };
      }(this));
    };
    Indentation.prototype.indent = function (isBackward) {
      var $blockEls, $endBlock, $startBlock, range, result;
      range = this.editor.selection.getRange();
      if (!range) {
        return;
      }
      $startBlock = this.editor.util.closestBlockEl(range.startContainer);
      $endBlock = this.editor.util.closestBlockEl(range.endContainer);
      if (!($startBlock.is('li') && $endBlock.is('li') && $startBlock.parent().is($endBlock.parent()))) {
        $startBlock = this.editor.util.furthestBlockEl($startBlock);
        $endBlock = this.editor.util.furthestBlockEl($endBlock);
      }
      if ($startBlock.is($endBlock)) {
        $blockEls = $startBlock;
      } else {
        $blockEls = $startBlock.nextUntil($endBlock).add($startBlock).add($endBlock);
      }
      result = false;
      $blockEls.each(function (_this) {
        return function (i, blockEl) {
          return result = isBackward ? _this.outdentBlock(blockEl) : _this.indentBlock(blockEl);
        };
      }(this));
      return result;
    };
    Indentation.prototype.indentBlock = function (blockEl) {
      var $blockEl, $childList, $nextTd, $nextTr, $parentLi, $pre, $td, $tr, marginLeft, range, tagName;
      $blockEl = $(blockEl);
      if (!$blockEl.length) {
        return;
      }
      if ($blockEl.is('pre')) {
        range = this.editor.selection.getRange();
        $pre = $(range.commonAncestorContainer);
        if (!($pre.is($blockEl) || $pre.closest('pre').is($blockEl))) {
          return;
        }
        this.indentText(range);
      } else if ($blockEl.is('li')) {
        $parentLi = $blockEl.prev('li');
        if ($parentLi.length < 1) {
          return;
        }
        this.editor.selection.save();
        tagName = $blockEl.parent()[0].tagName;
        $childList = $parentLi.children('ul, ol');
        if ($childList.length > 0) {
          $childList.append($blockEl);
        } else {
          $('<' + tagName + '/>').append($blockEl).appendTo($parentLi);
        }
        this.editor.selection.restore();
      } else if ($blockEl.is('p, h1, h2, h3, h4')) {
        marginLeft = parseInt($blockEl.css('margin-left')) || 0;
        marginLeft = (Math.round(marginLeft / this.opts.indentWidth) + 1) * this.opts.indentWidth;
        $blockEl.css('margin-left', marginLeft);
      } else if ($blockEl.is('table') || $blockEl.is('.simditor-table')) {
        range = this.editor.selection.getRange();
        $td = $(range.commonAncestorContainer).closest('td, th');
        $nextTd = $td.next('td, th');
        if (!($nextTd.length > 0)) {
          $tr = $td.parent('tr');
          $nextTr = $tr.next('tr');
          if ($nextTr.length < 1 && $tr.parent().is('thead')) {
            $nextTr = $tr.parent('thead').next('tbody').find('tr:first');
          }
          $nextTd = $nextTr.find('td:first, th:first');
        }
        if (!($td.length > 0 && $nextTd.length > 0)) {
          return false;
        }
        this.editor.selection.setRangeAtEndOf($nextTd);
      }
      return true;
    };
    Indentation.prototype.indentText = function (range) {
      var text, textNode;
      text = range.toString().replace(/^(?=.+)/gm, '\xa0\xa0');
      textNode = document.createTextNode(text || '\xa0\xa0');
      range.deleteContents();
      range.insertNode(textNode);
      if (text) {
        range.selectNode(textNode);
        return this.editor.selection.selectRange(range);
      } else {
        return this.editor.selection.setRangeAfter(textNode);
      }
    };
    Indentation.prototype.outdentBlock = function (blockEl) {
      var $blockEl, $parent, $parentLi, $pre, $prevTd, $prevTr, $td, $tr, button, marginLeft, range;
      $blockEl = $(blockEl);
      if (!($blockEl && $blockEl.length > 0)) {
        return;
      }
      if ($blockEl.is('pre')) {
        range = this.editor.selection.getRange();
        $pre = $(range.commonAncestorContainer);
        if (!($pre.is($blockEl) || $pre.closest('pre').is($blockEl))) {
          return;
        }
        this.outdentText(range);
      } else if ($blockEl.is('li')) {
        $parent = $blockEl.parent();
        $parentLi = $parent.parent('li');
        if ($parentLi.length < 1) {
          button = this.editor.toolbar.findButton($parent[0].tagName.toLowerCase());
          if (button != null) {
            button.command();
          }
          return;
        }
        this.editor.selection.save();
        if ($blockEl.next('li').length > 0) {
          $('<' + $parent[0].tagName + '/>').append($blockEl.nextAll('li')).appendTo($blockEl);
        }
        $blockEl.insertAfter($parentLi);
        if ($parent.children('li').length < 1) {
          $parent.remove();
        }
        this.editor.selection.restore();
      } else if ($blockEl.is('p, h1, h2, h3, h4')) {
        marginLeft = parseInt($blockEl.css('margin-left')) || 0;
        marginLeft = Math.max(Math.round(marginLeft / this.opts.indentWidth) - 1, 0) * this.opts.indentWidth;
        $blockEl.css('margin-left', marginLeft === 0 ? '' : marginLeft);
      } else if ($blockEl.is('table') || $blockEl.is('.simditor-table')) {
        range = this.editor.selection.getRange();
        $td = $(range.commonAncestorContainer).closest('td, th');
        $prevTd = $td.prev('td, th');
        if (!($prevTd.length > 0)) {
          $tr = $td.parent('tr');
          $prevTr = $tr.prev('tr');
          if ($prevTr.length < 1 && $tr.parent().is('tbody')) {
            $prevTr = $tr.parent('tbody').prev('thead').find('tr:first');
          }
          $prevTd = $prevTr.find('td:last, th:last');
        }
        if (!($td.length > 0 && $prevTd.length > 0)) {
          return;
        }
        this.editor.selection.setRangeAtEndOf($prevTd);
      }
      return true;
    };
    Indentation.prototype.outdentText = function (range) {
    };
    return Indentation;
  }(SimpleModule);
  Simditor = function (superClass) {
    extend(Simditor, superClass);
    function Simditor() {
      return Simditor.__super__.constructor.apply(this, arguments);
    }
    Simditor.connect(Util);
    Simditor.connect(InputManager);
    Simditor.connect(UndoManager);
    Simditor.connect(Keystroke);
    Simditor.connect(Formatter);
    Simditor.connect(Selection);
    Simditor.connect(Toolbar);
    Simditor.connect(Indentation);
    Simditor.count = 0;
    Simditor.prototype.opts = {
      textarea: null,
      placeholder: '',
      defaultImage: 'images/image.png',
      params: {},
      upload: false,
      indentWidth: 40
    };
    Simditor.prototype._init = function () {
      var e, editor, form, uploadOpts;
      this.textarea = $(this.opts.textarea);
      this.opts.placeholder = this.opts.placeholder || this.textarea.attr('placeholder');
      if (!this.textarea.length) {
        throw new Error('simditor: param textarea is required.');
        return;
      }
      editor = this.textarea.data('simditor');
      if (editor != null) {
        editor.destroy();
      }
      this.id = ++Simditor.count;
      this._render();
      if (this.opts.upload && simpleUploader) {
        uploadOpts = typeof this.opts.upload === 'object' ? this.opts.upload : {};
        this.uploader = simpleUploader(uploadOpts);
      }
      form = this.textarea.closest('form');
      if (form.length) {
        form.on('submit.simditor-' + this.id, function (_this) {
          return function () {
            return _this.sync();
          };
        }(this));
        form.on('reset.simditor-' + this.id, function (_this) {
          return function () {
            return _this.setValue('');
          };
        }(this));
      }
      this.on('initialized', function (_this) {
        return function () {
          if (_this.opts.placeholder) {
            _this.on('valuechanged', function () {
              return _this._placeholder();
            });
          }
          return _this.setValue(_this.textarea.val().trim() || '');
        };
      }(this));
      if (this.util.browser.mozilla) {
        this.util.reflow();
        try {
          document.execCommand('enableObjectResizing', false, false);
          return document.execCommand('enableInlineTableEditing', false, false);
        } catch (_error) {
          e = _error;
        }
      }
    };
    Simditor.prototype._tpl = '<div class="simditor">\n  <div class="simditor-wrapper">\n    <div class="simditor-placeholder"></div>\n    <div class="simditor-body" contenteditable="true">\n    </div>\n  </div>\n</div>';
    Simditor.prototype._render = function () {
      var key, ref, results1, val;
      this.el = $(this._tpl).insertBefore(this.textarea);
      this.wrapper = this.el.find('.simditor-wrapper');
      this.body = this.wrapper.find('.simditor-body');
      this.placeholderEl = this.wrapper.find('.simditor-placeholder').append(this.opts.placeholder);
      this.el.data('simditor', this);
      this.wrapper.append(this.textarea);
      this.textarea.data('simditor', this).blur();
      this.body.attr('tabindex', this.textarea.attr('tabindex'));
      if (this.util.os.mac) {
        this.el.addClass('simditor-mac');
      } else if (this.util.os.linux) {
        this.el.addClass('simditor-linux');
      }
      if (this.util.os.mobile) {
        this.el.addClass('simditor-mobile');
      }
      if (this.opts.params) {
        ref = this.opts.params;
        results1 = [];
        for (key in ref) {
          val = ref[key];
          results1.push($('<input/>', {
            type: 'hidden',
            name: key,
            value: val
          }).insertAfter(this.textarea));
        }
        return results1;
      }
    };
    Simditor.prototype._placeholder = function () {
      var children;
      children = this.body.children();
      if (children.length === 0 || children.length === 1 && this.util.isEmptyNode(children) && parseInt(children.css('margin-left') || 0) < this.opts.indentWidth) {
        return this.placeholderEl.show();
      } else {
        return this.placeholderEl.hide();
      }
    };
    Simditor.prototype.setValue = function (val) {
      this.hidePopover();
      this.textarea.val(val);
      this.body.html(val);
      this.formatter.format();
      this.formatter.decorate();
      this.util.reflow(this.body);
      this.inputManager.lastCaretPosition = null;
      return this.trigger('valuechanged');
    };
    Simditor.prototype.getValue = function () {
      return this.sync();
    };
    Simditor.prototype.sync = function () {
      var children, cloneBody, emptyP, firstP, lastP, val;
      cloneBody = this.body.clone();
      this.formatter.undecorate(cloneBody);
      this.formatter.format(cloneBody);
      this.formatter.autolink(cloneBody);
      children = cloneBody.children();
      lastP = children.last('p');
      firstP = children.first('p');
      while (lastP.is('p') && this.util.isEmptyNode(lastP)) {
        emptyP = lastP;
        lastP = lastP.prev('p');
        emptyP.remove();
      }
      while (firstP.is('p') && this.util.isEmptyNode(firstP)) {
        emptyP = firstP;
        firstP = lastP.next('p');
        emptyP.remove();
      }
      cloneBody.find('img.uploading').remove();
      val = $.trim(cloneBody.html());
      this.textarea.val(val);
      return val;
    };
    Simditor.prototype.focus = function () {
      var $blockEl, range;
      if (!(this.body.is(':visible') && this.body.is('[contenteditable]'))) {
        this.el.find('textarea:visible').focus();
        return;
      }
      if (this.inputManager.lastCaretPosition) {
        return this.undoManager.caretPosition(this.inputManager.lastCaretPosition);
      } else {
        $blockEl = this.body.find('p').last();
        if (!($blockEl.length > 0)) {
          $blockEl = $('<p/>').append(this.util.phBr).appendTo(this.body);
        }
        range = document.createRange();
        this.selection.setRangeAtEndOf($blockEl, range);
        return this.body.focus();
      }
    };
    Simditor.prototype.blur = function () {
      if (this.body.is(':visible') && this.body.is('[contenteditable]')) {
        return this.body.blur();
      } else {
        return this.body.find('textarea:visible').blur();
      }
    };
    Simditor.prototype.hidePopover = function () {
      return this.el.find('.simditor-popover').each(function (i, popover) {
        popover = $(popover).data('popover');
        if (popover.active) {
          return popover.hide();
        }
      });
    };
    Simditor.prototype.destroy = function () {
      this.triggerHandler('destroy');
      this.textarea.closest('form').off('.simditor .simditor-' + this.id);
      this.selection.clear();
      this.inputManager.focused = false;
      this.textarea.insertBefore(this.el).hide().val('').removeData('simditor');
      this.el.remove();
      $(document).off('.simditor-' + this.id);
      $(window).off('.simditor-' + this.id);
      return this.off();
    };
    return Simditor;
  }(SimpleModule);
  Simditor.i18n = {
    'zh-CN': {
      'blockquote': '\u5f15\u7528',
      'bold': '\u52a0\u7c97\u6587\u5b57',
      'code': '\u63d2\u5165\u4ee3\u7801',
      'color': '\u6587\u5b57\u989c\u8272',
      'hr': '\u5206\u9694\u7ebf',
      'image': '\u63d2\u5165\u56fe\u7247',
      'externalImage': '\u5916\u94fe\u56fe\u7247',
      'uploadImage': '\u4e0a\u4f20\u56fe\u7247',
      'uploadFailed': '\u4e0a\u4f20\u5931\u8d25\u4e86',
      'uploadError': '\u4e0a\u4f20\u51fa\u9519\u4e86',
      'imageUrl': '\u56fe\u7247\u5730\u5740',
      'imageSize': '\u56fe\u7247\u5c3a\u5bf8',
      'imageAlt': '\u56fe\u7247\u63cf\u8ff0',
      'restoreImageSize': '\u8fd8\u539f\u56fe\u7247\u5c3a\u5bf8',
      'uploading': '\u6b63\u5728\u4e0a\u4f20',
      'indent': '\u5411\u53f3\u7f29\u8fdb',
      'outdent': '\u5411\u5de6\u7f29\u8fdb',
      'italic': '\u659c\u4f53\u6587\u5b57',
      'link': '\u63d2\u5165\u94fe\u63a5',
      'text': '\u6587\u672c',
      'linkText': '\u94fe\u63a5\u6587\u5b57',
      'linkUrl': '\u5730\u5740',
      'removeLink': '\u79fb\u9664\u94fe\u63a5',
      'ol': '\u6709\u5e8f\u5217\u8868',
      'ul': '\u65e0\u5e8f\u5217\u8868',
      'strikethrough': '\u5220\u9664\u7ebf\u6587\u5b57',
      'table': '\u8868\u683c',
      'deleteRow': '\u5220\u9664\u884c',
      'insertRowAbove': '\u5728\u4e0a\u9762\u63d2\u5165\u884c',
      'insertRowBelow': '\u5728\u4e0b\u9762\u63d2\u5165\u884c',
      'deleteColumn': '\u5220\u9664\u5217',
      'insertColumnLeft': '\u5728\u5de6\u8fb9\u63d2\u5165\u5217',
      'insertColumnRight': '\u5728\u53f3\u8fb9\u63d2\u5165\u5217',
      'deleteTable': '\u5220\u9664\u8868\u683c',
      'title': '\u6807\u9898',
      'normalText': '\u666e\u901a\u6587\u672c',
      'underline': '\u4e0b\u5212\u7ebf\u6587\u5b57',
      'alignment': '\u6c34\u5e73\u5bf9\u9f50',
      'alignCenter': '\u5c45\u4e2d',
      'alignLeft': '\u5c45\u5de6',
      'alignRight': '\u5c45\u53f3',
      'selectLanguage': '\u9009\u62e9\u7a0b\u5e8f\u8bed\u8a00'
    }
  };
  Button = function (superClass) {
    extend(Button, superClass);
    Button.prototype._tpl = {
      item: '<li><a tabindex="-1" unselectable="on" class="toolbar-item" href="javascript:;"><span></span></a></li>',
      menuWrapper: '<div class="toolbar-menu"></div>',
      menuItem: '<li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;"><span></span></a></li>',
      separator: '<li><span class="separator"></span></li>'
    };
    Button.prototype.name = '';
    Button.prototype.icon = '';
    Button.prototype.title = '';
    Button.prototype.text = '';
    Button.prototype.htmlTag = '';
    Button.prototype.disableTag = '';
    Button.prototype.menu = false;
    Button.prototype.active = false;
    Button.prototype.disabled = false;
    Button.prototype.needFocus = true;
    Button.prototype.shortcut = null;
    function Button(opts) {
      this.editor = opts.editor;
      this.title = this._t(this.name);
      Button.__super__.constructor.call(this, opts);
    }
    Button.prototype._init = function () {
      var j, len, ref, results1, tag;
      this.render();
      this.el.on('mousedown', function (_this) {
        return function (e) {
          var exceed, param;
          e.preventDefault();
          if (_this.el.hasClass('disabled') || _this.needFocus && !_this.editor.inputManager.focused) {
            return false;
          }
          if (_this.menu) {
            _this.wrapper.toggleClass('menu-on').siblings('li').removeClass('menu-on');
            if (_this.wrapper.is('.menu-on')) {
              exceed = _this.menuWrapper.offset().left + _this.menuWrapper.outerWidth() + 5 - _this.editor.wrapper.offset().left - _this.editor.wrapper.outerWidth();
              if (exceed > 0) {
                _this.menuWrapper.css({
                  'left': 'auto',
                  'right': 0
                });
              }
              _this.trigger('menuexpand');
            }
            return false;
          }
          param = _this.el.data('param');
          _this.command(param);
          return false;
        };
      }(this));
      this.wrapper.on('click', 'a.menu-item', function (_this) {
        return function (e) {
          var btn, param;
          e.preventDefault();
          btn = $(e.currentTarget);
          _this.wrapper.removeClass('menu-on');
          if (btn.hasClass('disabled') || _this.needFocus && !_this.editor.inputManager.focused) {
            return false;
          }
          _this.editor.toolbar.wrapper.removeClass('menu-on');
          param = btn.data('param');
          _this.command(param);
          return false;
        };
      }(this));
      this.wrapper.on('mousedown', 'a.menu-item', function (_this) {
        return function (e) {
          return false;
        };
      }(this));
      this.editor.on('blur', function (_this) {
        return function () {
          if (!(_this.editor.body.is(':visible') && _this.editor.body.is('[contenteditable]'))) {
            return;
          }
          _this.setActive(false);
          return _this.setDisabled(false);
        };
      }(this));
      if (this.shortcut != null) {
        this.editor.inputManager.addShortcut(this.shortcut, function (_this) {
          return function (e) {
            _this.el.mousedown();
            return false;
          };
        }(this));
      }
      ref = this.htmlTag.split(',');
      results1 = [];
      for (j = 0, len = ref.length; j < len; j++) {
        tag = ref[j];
        tag = $.trim(tag);
        if (tag && $.inArray(tag, this.editor.formatter._allowedTags) < 0) {
          results1.push(this.editor.formatter._allowedTags.push(tag));
        } else {
          results1.push(void 0);
        }
      }
      return results1;
    };
    Button.prototype.iconClassOf = function (icon) {
      if (icon) {
        return 'simditor-icon simditor-icon-' + icon;
      } else {
        return '';
      }
    };
    Button.prototype.setIcon = function (icon) {
      return this.el.find('span').removeClass().addClass(this.iconClassOf(icon)).text(this.text);
    };
    Button.prototype.render = function () {
      this.wrapper = $(this._tpl.item).appendTo(this.editor.toolbar.list);
      this.el = this.wrapper.find('a.toolbar-item');
      this.el.attr('title', this.title).addClass('toolbar-item-' + this.name).data('button', this);
      this.setIcon(this.icon);
      if (!this.menu) {
        return;
      }
      this.menuWrapper = $(this._tpl.menuWrapper).appendTo(this.wrapper);
      this.menuWrapper.addClass('toolbar-menu-' + this.name);
      return this.renderMenu();
    };
    Button.prototype.renderMenu = function () {
      var $menuBtnEl, $menuItemEl, j, len, menuItem, ref, ref1, results1;
      if (!$.isArray(this.menu)) {
        return;
      }
      this.menuEl = $('<ul/>').appendTo(this.menuWrapper);
      ref = this.menu;
      results1 = [];
      for (j = 0, len = ref.length; j < len; j++) {
        menuItem = ref[j];
        if (menuItem === '|') {
          $(this._tpl.separator).appendTo(this.menuEl);
          continue;
        }
        $menuItemEl = $(this._tpl.menuItem).appendTo(this.menuEl);
        $menuBtnEl = $menuItemEl.find('a.menu-item').attr({
          'title': (ref1 = menuItem.title) != null ? ref1 : menuItem.text,
          'data-param': menuItem.param
        }).addClass('menu-item-' + menuItem.name);
        if (menuItem.icon) {
          results1.push($menuBtnEl.find('span').addClass(this.iconClassOf(menuItem.icon)));
        } else {
          results1.push($menuBtnEl.find('span').text(menuItem.text));
        }
      }
      return results1;
    };
    Button.prototype.setActive = function (active) {
      if (active === this.active) {
        return;
      }
      this.active = active;
      this.el.toggleClass('active', this.active);
      return this.editor.toolbar.trigger('buttonstatus', [this]);
    };
    Button.prototype.setDisabled = function (disabled) {
      if (disabled === this.disabled) {
        return;
      }
      this.disabled = disabled;
      this.el.toggleClass('disabled', this.disabled);
      return this.editor.toolbar.trigger('buttonstatus', [this]);
    };
    Button.prototype.status = function ($node) {
      if ($node != null) {
        this.setDisabled($node.is(this.disableTag));
      }
      if (this.disabled) {
        return true;
      }
      if ($node != null) {
        this.setActive($node.is(this.htmlTag));
      }
      return this.active;
    };
    Button.prototype.command = function (param) {
    };
    Button.prototype._t = function () {
      var args, ref, result;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      result = Button.__super__._t.apply(this, args);
      if (!result) {
        result = (ref = this.editor)._t.apply(ref, args);
      }
      return result;
    };
    return Button;
  }(SimpleModule);
  Simditor.Button = Button;
  Popover = function (superClass) {
    extend(Popover, superClass);
    Popover.prototype.offset = {
      top: 4,
      left: 0
    };
    Popover.prototype.target = null;
    Popover.prototype.active = false;
    function Popover(opts) {
      this.button = opts.button;
      this.editor = opts.button.editor;
      Popover.__super__.constructor.call(this, opts);
    }
    Popover.prototype._init = function () {
      this.el = $('<div class="simditor-popover"></div>').appendTo(this.editor.el).data('popover', this);
      this.render();
      this.el.on('mouseenter', function (_this) {
        return function (e) {
          return _this.el.addClass('hover');
        };
      }(this));
      return this.el.on('mouseleave', function (_this) {
        return function (e) {
          return _this.el.removeClass('hover');
        };
      }(this));
    };
    Popover.prototype.render = function () {
    };
    Popover.prototype.show = function ($target, position) {
      if (position == null) {
        position = 'bottom';
      }
      if ($target == null) {
        return;
      }
      this.el.siblings('.simditor-popover').each(function (_this) {
        return function (i, popover) {
          popover = $(popover).data('popover');
          if (popover.active) {
            return popover.hide();
          }
        };
      }(this));
      if (this.active && this.target) {
        this.target.removeClass('selected');
      }
      this.target = $target.addClass('selected');
      if (this.active) {
        this.refresh(position);
        return this.trigger('popovershow');
      } else {
        this.active = true;
        this.el.css({ left: -9999 }).show();
        return setTimeout(function (_this) {
          return function () {
            _this.refresh(position);
            return _this.trigger('popovershow');
          };
        }(this), 0);
      }
    };
    Popover.prototype.hide = function () {
      if (!this.active) {
        return;
      }
      if (this.target) {
        this.target.removeClass('selected');
      }
      this.target = null;
      this.active = false;
      this.el.hide();
      return this.trigger('popoverhide');
    };
    Popover.prototype.refresh = function (position) {
      var editorOffset, left, targetH, targetOffset, top;
      if (position == null) {
        position = 'bottom';
      }
      if (!this.active) {
        return;
      }
      editorOffset = this.editor.el.offset();
      targetOffset = this.target.offset();
      targetH = this.target.outerHeight();
      if (position === 'bottom') {
        top = targetOffset.top - editorOffset.top + targetH;
      } else if (position === 'top') {
        top = targetOffset.top - editorOffset.top - this.el.height();
      }
      left = Math.min(targetOffset.left - editorOffset.left, this.editor.wrapper.width() - this.el.outerWidth() - 10);
      return this.el.css({
        top: top + this.offset.top,
        left: left + this.offset.left
      });
    };
    Popover.prototype.destroy = function () {
      this.target = null;
      this.active = false;
      this.editor.off('.linkpopover');
      return this.el.remove();
    };
    Popover.prototype._t = function () {
      var args, ref, result;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      result = Popover.__super__._t.apply(this, args);
      if (!result) {
        result = (ref = this.button)._t.apply(ref, args);
      }
      return result;
    };
    return Popover;
  }(SimpleModule);
  Simditor.Popover = Popover;
  TitleButton = function (superClass) {
    extend(TitleButton, superClass);
    function TitleButton() {
      return TitleButton.__super__.constructor.apply(this, arguments);
    }
    TitleButton.prototype.name = 'title';
    TitleButton.prototype.htmlTag = 'h1, h2, h3, h4';
    TitleButton.prototype.disableTag = 'pre, table';
    TitleButton.prototype._init = function () {
      this.menu = [
        {
          name: 'normal',
          text: this._t('normalText'),
          param: 'p'
        },
        '|',
        {
          name: 'h1',
          text: this._t('title') + ' 1',
          param: 'h1'
        },
        {
          name: 'h2',
          text: this._t('title') + ' 2',
          param: 'h2'
        },
        {
          name: 'h3',
          text: this._t('title') + ' 3',
          param: 'h3'
        },
        {
          name: 'h4',
          text: this._t('title') + ' 4',
          param: 'h4'
        },
        {
          name: 'h5',
          text: this._t('title') + ' 5',
          param: 'h5'
        }
      ];
      return TitleButton.__super__._init.call(this);
    };
    TitleButton.prototype.setActive = function (active, param) {
      TitleButton.__super__.setActive.call(this, active);
      this.el.removeClass('active-p active-h1 active-h2 active-h3');
      if (active) {
        return this.el.addClass('active active-' + param);
      }
    };
    TitleButton.prototype.status = function ($node) {
      var param, ref;
      if ($node != null) {
        this.setDisabled($node.is(this.disableTag));
      }
      if (this.disabled) {
        return true;
      }
      if ($node != null) {
        param = (ref = $node[0].tagName) != null ? ref.toLowerCase() : void 0;
        this.setActive($node.is(this.htmlTag), param);
      }
      return this.active;
    };
    TitleButton.prototype.command = function (param) {
      var $contents, $endBlock, $startBlock, endNode, j, len, node, range, ref, results, startNode;
      range = this.editor.selection.getRange();
      startNode = range.startContainer;
      endNode = range.endContainer;
      $startBlock = this.editor.util.closestBlockEl(startNode);
      $endBlock = this.editor.util.closestBlockEl(endNode);
      this.editor.selection.save();
      range.setStartBefore($startBlock[0]);
      range.setEndAfter($endBlock[0]);
      $contents = $(range.extractContents());
      results = [];
      $contents.children().each(function (_this) {
        return function (i, el) {
          var c, converted, j, len, results1;
          converted = _this._convertEl(el, param);
          results1 = [];
          for (j = 0, len = converted.length; j < len; j++) {
            c = converted[j];
            results1.push(results.push(c));
          }
          return results1;
        };
      }(this));
      ref = results.reverse();
      for (j = 0, len = ref.length; j < len; j++) {
        node = ref[j];
        range.insertNode(node[0]);
      }
      this.editor.selection.restore();
      return this.editor.trigger('valuechanged');
    };
    TitleButton.prototype._convertEl = function (el, param) {
      var $block, $el, results;
      $el = $(el);
      results = [];
      if ($el.is(param)) {
        results.push($el);
      } else {
        $block = $('<' + param + '/>').append($el.contents());
        results.push($block);
      }
      return results;
    };
    return TitleButton;
  }(Button);
  Simditor.Toolbar.addButton(TitleButton);
  BoldButton = function (superClass) {
    extend(BoldButton, superClass);
    function BoldButton() {
      return BoldButton.__super__.constructor.apply(this, arguments);
    }
    BoldButton.prototype.name = 'bold';
    BoldButton.prototype.icon = 'bold';
    BoldButton.prototype.htmlTag = 'b, strong';
    BoldButton.prototype.disableTag = 'pre';
    BoldButton.prototype.shortcut = 'cmd+b';
    BoldButton.prototype._init = function () {
      if (this.editor.util.os.mac) {
        this.title = this.title + ' ( Cmd + b )';
      } else {
        this.title = this.title + ' ( Ctrl + b )';
        this.shortcut = 'ctrl+b';
      }
      return BoldButton.__super__._init.call(this);
    };
    BoldButton.prototype.status = function ($node) {
      var active;
      if ($node != null) {
        this.setDisabled($node.is(this.disableTag));
      }
      if (this.disabled) {
        return true;
      }
      active = document.queryCommandState('bold') === true;
      this.setActive(active);
      return active;
    };
    BoldButton.prototype.command = function () {
      document.execCommand('bold');
      if (!this.editor.util.support.oninput) {
        this.editor.trigger('valuechanged');
      }
      return $(document).trigger('selectionchange');
    };
    return BoldButton;
  }(Button);
  Simditor.Toolbar.addButton(BoldButton);
  ItalicButton = function (superClass) {
    extend(ItalicButton, superClass);
    function ItalicButton() {
      return ItalicButton.__super__.constructor.apply(this, arguments);
    }
    ItalicButton.prototype.name = 'italic';
    ItalicButton.prototype.icon = 'italic';
    ItalicButton.prototype.htmlTag = 'i';
    ItalicButton.prototype.disableTag = 'pre';
    ItalicButton.prototype.shortcut = 'cmd+i';
    ItalicButton.prototype._init = function () {
      if (this.editor.util.os.mac) {
        this.title = this.title + ' ( Cmd + i )';
      } else {
        this.title = this.title + ' ( Ctrl + i )';
        this.shortcut = 'ctrl+i';
      }
      return ItalicButton.__super__._init.call(this);
    };
    ItalicButton.prototype.status = function ($node) {
      var active;
      if ($node != null) {
        this.setDisabled($node.is(this.disableTag));
      }
      if (this.disabled) {
        return this.disabled;
      }
      active = document.queryCommandState('italic') === true;
      this.setActive(active);
      return active;
    };
    ItalicButton.prototype.command = function () {
      document.execCommand('italic');
      if (!this.editor.util.support.oninput) {
        this.editor.trigger('valuechanged');
      }
      return $(document).trigger('selectionchange');
    };
    return ItalicButton;
  }(Button);
  Simditor.Toolbar.addButton(ItalicButton);
  UnderlineButton = function (superClass) {
    extend(UnderlineButton, superClass);
    function UnderlineButton() {
      return UnderlineButton.__super__.constructor.apply(this, arguments);
    }
    UnderlineButton.prototype.name = 'underline';
    UnderlineButton.prototype.icon = 'underline';
    UnderlineButton.prototype.htmlTag = 'u';
    UnderlineButton.prototype.disableTag = 'pre';
    UnderlineButton.prototype.shortcut = 'cmd+u';
    UnderlineButton.prototype.render = function () {
      if (this.editor.util.os.mac) {
        this.title = this.title + ' ( Cmd + u )';
      } else {
        this.title = this.title + ' ( Ctrl + u )';
        this.shortcut = 'ctrl+u';
      }
      return UnderlineButton.__super__.render.call(this);
    };
    UnderlineButton.prototype.status = function ($node) {
      var active;
      if ($node != null) {
        this.setDisabled($node.is(this.disableTag));
      }
      if (this.disabled) {
        return this.disabled;
      }
      active = document.queryCommandState('underline') === true;
      this.setActive(active);
      return active;
    };
    UnderlineButton.prototype.command = function () {
      document.execCommand('underline');
      if (!this.editor.util.support.oninput) {
        this.editor.trigger('valuechanged');
      }
      return $(document).trigger('selectionchange');
    };
    return UnderlineButton;
  }(Button);
  Simditor.Toolbar.addButton(UnderlineButton);
  ColorButton = function (superClass) {
    extend(ColorButton, superClass);
    function ColorButton() {
      return ColorButton.__super__.constructor.apply(this, arguments);
    }
    ColorButton.prototype.name = 'color';
    ColorButton.prototype.icon = 'tint';
    ColorButton.prototype.disableTag = 'pre';
    ColorButton.prototype.menu = true;
    ColorButton.prototype.render = function () {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return ColorButton.__super__.render.apply(this, args);
    };
    ColorButton.prototype.renderMenu = function () {
      $('<ul class="color-list">\n  <li><a href="javascript:;" class="font-color font-color-1" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-2" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-3" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-4" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-5" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-6" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-7" data-color=""></a></li>\n  <li><a href="javascript:;" class="font-color font-color-default" data-color=""></a></li>\n</ul>').appendTo(this.menuWrapper);
      this.menuWrapper.on('mousedown', '.color-list', function (e) {
        return false;
      });
      return this.menuWrapper.on('click', '.font-color', function (_this) {
        return function (e) {
          var $link, $p, hex, rgb;
          _this.wrapper.removeClass('menu-on');
          $link = $(e.currentTarget);
          if ($link.hasClass('font-color-default')) {
            $p = _this.editor.body.find('p, li');
            if (!($p.length > 0)) {
              return;
            }
            rgb = window.getComputedStyle($p[0], null).getPropertyValue('color');
            hex = _this._convertRgbToHex(rgb);
          } else {
            rgb = window.getComputedStyle($link[0], null).getPropertyValue('background-color');
            hex = _this._convertRgbToHex(rgb);
          }
          if (!hex) {
            return;
          }
          document.execCommand('foreColor', false, hex);
          if (!_this.editor.util.support.oninput) {
            return _this.editor.trigger('valuechanged');
          }
        };
      }(this));
    };
    ColorButton.prototype._convertRgbToHex = function (rgb) {
      var match, re, rgbToHex;
      re = /rgb\((\d+),\s?(\d+),\s?(\d+)\)/g;
      match = re.exec(rgb);
      if (!match) {
        return '';
      }
      rgbToHex = function (r, g, b) {
        var componentToHex;
        componentToHex = function (c) {
          var hex;
          hex = c.toString(16);
          if (hex.length === 1) {
            return '0' + hex;
          } else {
            return hex;
          }
        };
        return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);
      };
      return rgbToHex(match[1] * 1, match[2] * 1, match[3] * 1);
    };
    return ColorButton;
  }(Button);
  Simditor.Toolbar.addButton(ColorButton);
  ListButton = function (superClass) {
    extend(ListButton, superClass);
    function ListButton() {
      return ListButton.__super__.constructor.apply(this, arguments);
    }
    ListButton.prototype.type = '';
    ListButton.prototype.disableTag = 'pre, table';
    ListButton.prototype.status = function ($node) {
      var anotherType;
      if ($node != null) {
        this.setDisabled($node.is(this.disableTag));
      }
      if (this.disabled) {
        return true;
      }
      if ($node == null) {
        return this.active;
      }
      anotherType = this.type === 'ul' ? 'ol' : 'ul';
      if ($node.is(anotherType)) {
        this.setActive(false);
        return true;
      } else {
        this.setActive($node.is(this.htmlTag));
        return this.active;
      }
    };
    ListButton.prototype.command = function (param) {
      var $contents, $endBlock, $furthestEnd, $furthestStart, $parent, $startBlock, endLevel, endNode, getListLevel, j, len, node, range, ref, results, startLevel, startNode;
      range = this.editor.selection.getRange();
      startNode = range.startContainer;
      endNode = range.endContainer;
      $startBlock = this.editor.util.closestBlockEl(startNode);
      $endBlock = this.editor.util.closestBlockEl(endNode);
      this.editor.selection.save();
      range.setStartBefore($startBlock[0]);
      range.setEndAfter($endBlock[0]);
      if ($startBlock.is('li') && $endBlock.is('li')) {
        $furthestStart = this.editor.util.furthestNode($startBlock, 'ul, ol');
        $furthestEnd = this.editor.util.furthestNode($endBlock, 'ul, ol');
        if ($furthestStart.is($furthestEnd)) {
          getListLevel = function ($li) {
            var lvl;
            lvl = 1;
            while (!$li.parent().is($furthestStart)) {
              lvl += 1;
              $li = $li.parent();
            }
            return lvl;
          };
          startLevel = getListLevel($startBlock);
          endLevel = getListLevel($endBlock);
          if (startLevel > endLevel) {
            $parent = $endBlock.parent();
          } else {
            $parent = $startBlock.parent();
          }
          range.setStartBefore($parent[0]);
          range.setEndAfter($parent[0]);
        } else {
          range.setStartBefore($furthestStart[0]);
          range.setEndAfter($furthestEnd[0]);
        }
      }
      $contents = $(range.extractContents());
      results = [];
      $contents.children().each(function (_this) {
        return function (i, el) {
          var c, converted, j, len, results1;
          converted = _this._convertEl(el);
          results1 = [];
          for (j = 0, len = converted.length; j < len; j++) {
            c = converted[j];
            if (results.length && results[results.length - 1].is(_this.type) && c.is(_this.type)) {
              results1.push(results[results.length - 1].append(c.children()));
            } else {
              results1.push(results.push(c));
            }
          }
          return results1;
        };
      }(this));
      ref = results.reverse();
      for (j = 0, len = ref.length; j < len; j++) {
        node = ref[j];
        range.insertNode(node[0]);
      }
      this.editor.selection.restore();
      return this.editor.trigger('valuechanged');
    };
    ListButton.prototype._convertEl = function (el) {
      var $el, anotherType, block, child, children, j, len, ref, results;
      $el = $(el);
      results = [];
      anotherType = this.type === 'ul' ? 'ol' : 'ul';
      if ($el.is(this.type)) {
        $el.children('li').each(function (_this) {
          return function (i, li) {
            var $childList, $li, block;
            $li = $(li);
            $childList = $li.children('ul, ol').remove();
            block = $('<p/>').append($(li).html() || _this.editor.util.phBr);
            results.push(block);
            if ($childList.length > 0) {
              return results.push($childList);
            }
          };
        }(this));
      } else if ($el.is(anotherType)) {
        block = $('<' + this.type + '/>').append($el.html());
        results.push(block);
      } else if ($el.is('blockquote')) {
        ref = $el.children().get();
        for (j = 0, len = ref.length; j < len; j++) {
          child = ref[j];
          children = this._convertEl(child);
        }
        $.merge(results, children);
      } else if ($el.is('table')) {
      } else {
        block = $('<' + this.type + '><li></li></' + this.type + '>');
        block.find('li').append($el.html() || this.editor.util.phBr);
        results.push(block);
      }
      return results;
    };
    return ListButton;
  }(Button);
  OrderListButton = function (superClass) {
    extend(OrderListButton, superClass);
    function OrderListButton() {
      return OrderListButton.__super__.constructor.apply(this, arguments);
    }
    OrderListButton.prototype.type = 'ol';
    OrderListButton.prototype.name = 'ol';
    OrderListButton.prototype.icon = 'list-ol';
    OrderListButton.prototype.htmlTag = 'ol';
    OrderListButton.prototype.shortcut = 'cmd+/';
    OrderListButton.prototype._init = function () {
      if (this.editor.util.os.mac) {
        this.title = this.title + ' ( Cmd + / )';
      } else {
        this.title = this.title + ' ( ctrl + / )';
        this.shortcut = 'ctrl+/';
      }
      return OrderListButton.__super__._init.call(this);
    };
    return OrderListButton;
  }(ListButton);
  UnorderListButton = function (superClass) {
    extend(UnorderListButton, superClass);
    function UnorderListButton() {
      return UnorderListButton.__super__.constructor.apply(this, arguments);
    }
    UnorderListButton.prototype.type = 'ul';
    UnorderListButton.prototype.name = 'ul';
    UnorderListButton.prototype.icon = 'list-ul';
    UnorderListButton.prototype.htmlTag = 'ul';
    UnorderListButton.prototype.shortcut = 'cmd+.';
    UnorderListButton.prototype._init = function () {
      if (this.editor.util.os.mac) {
        this.title = this.title + ' ( Cmd + . )';
      } else {
        this.title = this.title + ' ( Ctrl + . )';
        this.shortcut = 'ctrl+.';
      }
      return UnorderListButton.__super__._init.call(this);
    };
    return UnorderListButton;
  }(ListButton);
  Simditor.Toolbar.addButton(OrderListButton);
  Simditor.Toolbar.addButton(UnorderListButton);
  BlockquoteButton = function (superClass) {
    extend(BlockquoteButton, superClass);
    function BlockquoteButton() {
      return BlockquoteButton.__super__.constructor.apply(this, arguments);
    }
    BlockquoteButton.prototype.name = 'blockquote';
    BlockquoteButton.prototype.icon = 'quote-left';
    BlockquoteButton.prototype.htmlTag = 'blockquote';
    BlockquoteButton.prototype.disableTag = 'pre, table';
    BlockquoteButton.prototype.command = function () {
      var $contents, $endBlock, $startBlock, endNode, j, len, node, range, ref, results, startNode;
      range = this.editor.selection.getRange();
      startNode = range.startContainer;
      endNode = range.endContainer;
      $startBlock = this.editor.util.furthestBlockEl(startNode);
      $endBlock = this.editor.util.furthestBlockEl(endNode);
      this.editor.selection.save();
      range.setStartBefore($startBlock[0]);
      range.setEndAfter($endBlock[0]);
      $contents = $(range.extractContents());
      results = [];
      $contents.children().each(function (_this) {
        return function (i, el) {
          var c, converted, j, len, results1;
          converted = _this._convertEl(el);
          results1 = [];
          for (j = 0, len = converted.length; j < len; j++) {
            c = converted[j];
            if (results.length && results[results.length - 1].is(_this.htmlTag) && c.is(_this.htmlTag)) {
              results1.push(results[results.length - 1].append(c.children()));
            } else {
              results1.push(results.push(c));
            }
          }
          return results1;
        };
      }(this));
      ref = results.reverse();
      for (j = 0, len = ref.length; j < len; j++) {
        node = ref[j];
        range.insertNode(node[0]);
      }
      this.editor.selection.restore();
      return this.editor.trigger('valuechanged');
    };
    BlockquoteButton.prototype._convertEl = function (el) {
      var $el, block, results;
      $el = $(el);
      results = [];
      if ($el.is(this.htmlTag)) {
        $el.children().each(function (_this) {
          return function (i, node) {
            return results.push($(node));
          };
        }(this));
      } else {
        block = $('<' + this.htmlTag + '/>').append($el);
        results.push(block);
      }
      return results;
    };
    return BlockquoteButton;
  }(Button);
  Simditor.Toolbar.addButton(BlockquoteButton);
  CodeButton = function (superClass) {
    extend(CodeButton, superClass);
    function CodeButton() {
      return CodeButton.__super__.constructor.apply(this, arguments);
    }
    CodeButton.prototype.name = 'code';
    CodeButton.prototype.icon = 'code';
    CodeButton.prototype.htmlTag = 'pre';
    CodeButton.prototype.disableTag = 'li, table';
    CodeButton.prototype._init = function () {
      CodeButton.__super__._init.call(this);
      this.editor.on('decorate', function (_this) {
        return function (e, $el) {
          return $el.find('pre').each(function (i, pre) {
            return _this.decorate($(pre));
          });
        };
      }(this));
      return this.editor.on('undecorate', function (_this) {
        return function (e, $el) {
          return $el.find('pre').each(function (i, pre) {
            return _this.undecorate($(pre));
          });
        };
      }(this));
    };
    CodeButton.prototype.render = function () {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      CodeButton.__super__.render.apply(this, args);
      return this.popover = new CodePopover({ button: this });
    };
    CodeButton.prototype.status = function ($node) {
      var result;
      result = CodeButton.__super__.status.call(this, $node);
      if (this.active) {
        this.popover.show($node);
      } else if (this.editor.util.isBlockNode($node)) {
        this.popover.hide();
      }
      return result;
    };
    CodeButton.prototype.decorate = function ($pre) {
      var $code, lang, ref, ref1;
      $code = $pre.find('> code');
      if ($code.length > 0) {
        lang = (ref = $code.attr('class')) != null ? (ref1 = ref.match(/lang-(\S+)/)) != null ? ref1[1] : void 0 : void 0;
        $code.contents().unwrap();
        if (lang) {
          return $pre.attr('data-lang', lang);
        }
      }
    };
    CodeButton.prototype.undecorate = function ($pre) {
      var $code, lang;
      lang = $pre.attr('data-lang');
      $code = $('<code/>');
      if (lang && lang !== -1) {
        $code.addClass('lang-' + lang);
      }
      return $pre.wrapInner($code).removeAttr('data-lang');
    };
    CodeButton.prototype.command = function () {
      var $contents, $endBlock, $startBlock, endNode, j, len, node, range, ref, results, startNode;
      range = this.editor.selection.getRange();
      startNode = range.startContainer;
      endNode = range.endContainer;
      $startBlock = this.editor.util.closestBlockEl(startNode);
      $endBlock = this.editor.util.closestBlockEl(endNode);
      range.setStartBefore($startBlock[0]);
      range.setEndAfter($endBlock[0]);
      $contents = $(range.extractContents());
      results = [];
      $contents.children().each(function (_this) {
        return function (i, el) {
          var c, converted, j, len, results1;
          converted = _this._convertEl(el);
          results1 = [];
          for (j = 0, len = converted.length; j < len; j++) {
            c = converted[j];
            if (results.length && results[results.length - 1].is(_this.htmlTag) && c.is(_this.htmlTag)) {
              results1.push(results[results.length - 1].append(c.contents()));
            } else {
              results1.push(results.push(c));
            }
          }
          return results1;
        };
      }(this));
      ref = results.reverse();
      for (j = 0, len = ref.length; j < len; j++) {
        node = ref[j];
        range.insertNode(node[0]);
      }
      this.editor.selection.setRangeAtEndOf(results[0]);
      return this.editor.trigger('valuechanged');
    };
    CodeButton.prototype._convertEl = function (el) {
      var $el, block, codeStr, results;
      $el = $(el);
      results = [];
      if ($el.is(this.htmlTag)) {
        block = $('<p/>').append($el.html().replace('\n', '<br/>'));
        results.push(block);
      } else {
        if (!$el.text() && $el.children().length === 1 && $el.children().is('br')) {
          codeStr = '\n';
        } else {
          codeStr = this.editor.formatter.clearHtml($el);
        }
        block = $('<' + this.htmlTag + '/>').text(codeStr);
        results.push(block);
      }
      return results;
    };
    return CodeButton;
  }(Button);
  CodePopover = function (superClass) {
    extend(CodePopover, superClass);
    function CodePopover() {
      return CodePopover.__super__.constructor.apply(this, arguments);
    }
    CodePopover.prototype.render = function () {
      var $option, j, lang, len, ref;
      this._tpl = '<div class="code-settings">\n  <div class="settings-field">\n    <select class="select-lang">\n      <option value="-1">' + this._t('selectLanguage') + '</option>\n    </select>\n  </div>\n</div>';
      this.langs = this.editor.opts.codeLanguages || [
        {
          name: 'Bash',
          value: 'bash'
        },
        {
          name: 'C++',
          value: 'c++'
        },
        {
          name: 'C#',
          value: 'cs'
        },
        {
          name: 'CSS',
          value: 'css'
        },
        {
          name: 'Erlang',
          value: 'erlang'
        },
        {
          name: 'Less',
          value: 'less'
        },
        {
          name: 'Sass',
          value: 'sass'
        },
        {
          name: 'Diff',
          value: 'diff'
        },
        {
          name: 'CoffeeScript',
          value: 'coffeescript'
        },
        {
          name: 'HTML,XML',
          value: 'html'
        },
        {
          name: 'JSON',
          value: 'json'
        },
        {
          name: 'Java',
          value: 'java'
        },
        {
          name: 'JavaScript',
          value: 'js'
        },
        {
          name: 'Markdown',
          value: 'markdown'
        },
        {
          name: 'Objective C',
          value: 'oc'
        },
        {
          name: 'PHP',
          value: 'php'
        },
        {
          name: 'Perl',
          value: 'parl'
        },
        {
          name: 'Python',
          value: 'python'
        },
        {
          name: 'Ruby',
          value: 'ruby'
        },
        {
          name: 'SQL',
          value: 'sql'
        }
      ];
      this.el.addClass('code-popover').append(this._tpl);
      this.selectEl = this.el.find('.select-lang');
      ref = this.langs;
      for (j = 0, len = ref.length; j < len; j++) {
        lang = ref[j];
        $option = $('<option/>', {
          text: lang.name,
          value: lang.value
        }).appendTo(this.selectEl);
      }
      this.selectEl.on('change', function (_this) {
        return function (e) {
          var selected;
          _this.lang = _this.selectEl.val();
          selected = _this.target.hasClass('selected');
          _this.target.removeClass().removeAttr('data-lang');
          if (_this.lang !== -1) {
            _this.target.attr('data-lang', _this.lang);
          }
          if (selected) {
            _this.target.addClass('selected');
          }
          return _this.editor.trigger('valuechanged');
        };
      }(this));
      return this.editor.on('valuechanged', function (_this) {
        return function (e) {
          if (_this.active) {
            return _this.refresh();
          }
        };
      }(this));
    };
    CodePopover.prototype.show = function () {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      CodePopover.__super__.show.apply(this, args);
      this.lang = this.target.attr('data-lang');
      if (this.lang != null) {
        return this.selectEl.val(this.lang);
      } else {
        return this.selectEl.val(-1);
      }
    };
    return CodePopover;
  }(Popover);
  Simditor.Toolbar.addButton(CodeButton);
  LinkButton = function (superClass) {
    extend(LinkButton, superClass);
    function LinkButton() {
      return LinkButton.__super__.constructor.apply(this, arguments);
    }
    LinkButton.prototype.name = 'link';
    LinkButton.prototype.icon = 'link';
    LinkButton.prototype.htmlTag = 'a';
    LinkButton.prototype.disableTag = 'pre';
    LinkButton.prototype.render = function () {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      LinkButton.__super__.render.apply(this, args);
      return this.popover = new LinkPopover({ button: this });
    };
    LinkButton.prototype.status = function ($node) {
      var showPopover;
      if ($node != null) {
        this.setDisabled($node.is(this.disableTag));
      }
      if (this.disabled) {
        return true;
      }
      if ($node == null) {
        return this.active;
      }
      showPopover = true;
      if (!$node.is(this.htmlTag) || $node.is('[class^="simditor-"]')) {
        this.setActive(false);
        showPopover = false;
      } else if (this.editor.selection.rangeAtEndOf($node)) {
        this.setActive(true);
        showPopover = false;
      } else {
        this.setActive(true);
      }
      if (showPopover) {
        this.popover.show($node);
      } else if (this.editor.util.isBlockNode($node)) {
        this.popover.hide();
      }
      return this.active;
    };
    LinkButton.prototype.command = function () {
      var $contents, $endBlock, $link, $newBlock, $startBlock, endNode, linkText, range, startNode, txtNode;
      range = this.editor.selection.getRange();
      if (this.active) {
        $link = $(range.commonAncestorContainer).closest('a');
        txtNode = document.createTextNode($link.text());
        $link.replaceWith(txtNode);
        range.selectNode(txtNode);
      } else {
        startNode = range.startContainer;
        endNode = range.endContainer;
        $startBlock = this.editor.util.closestBlockEl(startNode);
        $endBlock = this.editor.util.closestBlockEl(endNode);
        $contents = $(range.extractContents());
        linkText = this.editor.formatter.clearHtml($contents.contents(), false);
        $link = $('<a/>', {
          href: 'http://www.example.com',
          target: '_blank',
          text: linkText || this._t('linkText')
        });
        if ($startBlock[0] === $endBlock[0]) {
          range.insertNode($link[0]);
        } else {
          $newBlock = $('<p/>').append($link);
          range.insertNode($newBlock[0]);
        }
        range.selectNodeContents($link[0]);
        this.popover.one('popovershow', function (_this) {
          return function () {
            if (linkText) {
              _this.popover.urlEl.focus();
              return _this.popover.urlEl[0].select();
            } else {
              _this.popover.textEl.focus();
              return _this.popover.textEl[0].select();
            }
          };
        }(this));
      }
      this.editor.selection.selectRange(range);
      return this.editor.trigger('valuechanged');
    };
    return LinkButton;
  }(Button);
  LinkPopover = function (superClass) {
    extend(LinkPopover, superClass);
    function LinkPopover() {
      return LinkPopover.__super__.constructor.apply(this, arguments);
    }
    LinkPopover.prototype.render = function () {
      var tpl;
      tpl = '<div class="link-settings">\n  <div class="settings-field">\n    <label>' + this._t('text') + '</label>\n    <input class="link-text" type="text"/>\n    <a class="btn-unlink" href="javascript:;" title="' + this._t('removeLink') + '" tabindex="-1"><span class="simditor-icon simditor-icon-unlink"></span></a>\n  </div>\n  <div class="settings-field">\n    <label>' + this._t('linkUrl') + '</label>\n    <input class="link-url" type="text"/>\n  </div>\n</div>';
      this.el.addClass('link-popover').append(tpl);
      this.textEl = this.el.find('.link-text');
      this.urlEl = this.el.find('.link-url');
      this.unlinkEl = this.el.find('.btn-unlink');
      this.textEl.on('keyup', function (_this) {
        return function (e) {
          if (e.which === 13) {
            return;
          }
          return _this.target.text(_this.textEl.val());
        };
      }(this));
      this.urlEl.on('keyup', function (_this) {
        return function (e) {
          var val;
          if (e.which === 13) {
            return;
          }
          val = _this.urlEl.val();
          if (!(/https?:\/\/|^\//gi.test(val) || !val)) {
            val = 'http://' + val;
          }
          return _this.target.attr('href', val);
        };
      }(this));
      $([
        this.urlEl[0],
        this.textEl[0]
      ]).on('keydown', function (_this) {
        return function (e) {
          if (e.which === 13 || e.which === 27 || !e.shiftKey && e.which === 9 && $(e.target).hasClass('link-url')) {
            e.preventDefault();
            return setTimeout(function () {
              var range;
              range = document.createRange();
              _this.editor.selection.setRangeAfter(_this.target, range);
              _this.hide();
              return _this.editor.trigger('valuechanged');
            }, 0);
          }
        };
      }(this));
      return this.unlinkEl.on('click', function (_this) {
        return function (e) {
          var range, txtNode;
          txtNode = document.createTextNode(_this.target.text());
          _this.target.replaceWith(txtNode);
          _this.hide();
          range = document.createRange();
          _this.editor.selection.setRangeAfter(txtNode, range);
          return _this.editor.trigger('valuechanged');
        };
      }(this));
    };
    LinkPopover.prototype.show = function () {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      LinkPopover.__super__.show.apply(this, args);
      this.textEl.val(this.target.text());
      return this.urlEl.val(this.target.attr('href'));
    };
    return LinkPopover;
  }(Popover);
  Simditor.Toolbar.addButton(LinkButton);
  ImageButton = function (superClass) {
    extend(ImageButton, superClass);
    function ImageButton() {
      return ImageButton.__super__.constructor.apply(this, arguments);
    }
    ImageButton.prototype.name = 'image';
    ImageButton.prototype.icon = 'picture-o';
    ImageButton.prototype.htmlTag = 'img';
    ImageButton.prototype.disableTag = 'pre, table';
    ImageButton.prototype.defaultImage = '';
    ImageButton.prototype.needFocus = false;
    ImageButton.prototype._init = function () {
      var item, j, len, ref;
      if (this.editor.opts.imageButton) {
        if (Array.isArray(this.editor.opts.imageButton)) {
          this.menu = [];
          ref = this.editor.opts.imageButton;
          for (j = 0, len = ref.length; j < len; j++) {
            item = ref[j];
            this.menu.push({
              name: item + '-image',
              text: this._t(item + 'Image')
            });
          }
        } else {
          this.menu = false;
        }
      } else {
        if (this.editor.uploader != null) {
          this.menu = [
            {
              name: 'upload-image',
              text: this._t('uploadImage')
            },
            {
              name: 'external-image',
              text: this._t('externalImage')
            }
          ];
        } else {
          this.menu = false;
        }
      }
      this.defaultImage = this.editor.opts.defaultImage;
      this.editor.body.on('click', 'img:not([data-non-image])', function (_this) {
        return function (e) {
          var $img, range;
          $img = $(e.currentTarget);
          range = document.createRange();
          range.selectNode($img[0]);
          _this.editor.selection.selectRange(range);
          if (!_this.editor.util.support.onselectionchange) {
            _this.editor.trigger('selectionchanged');
          }
          return false;
        };
      }(this));
      this.editor.body.on('mouseup', 'img:not([data-non-image])', function (_this) {
        return function (e) {
          return false;
        };
      }(this));
      this.editor.on('selectionchanged.image', function (_this) {
        return function () {
          var $contents, $img, range;
          range = _this.editor.selection.getRange();
          if (range == null) {
            return;
          }
          $contents = $(range.cloneContents()).contents();
          if ($contents.length === 1 && $contents.is('img:not([data-non-image])')) {
            $img = $(range.startContainer).contents().eq(range.startOffset);
            return _this.popover.show($img);
          } else {
            return _this.popover.hide();
          }
        };
      }(this));
      this.editor.on('valuechanged.image', function (_this) {
        return function () {
          var $masks;
          $masks = _this.editor.wrapper.find('.simditor-image-loading');
          if (!($masks.length > 0)) {
            return;
          }
          return $masks.each(function (i, mask) {
            var $img, $mask, file;
            $mask = $(mask);
            $img = $mask.data('img');
            if (!($img && $img.parent().length > 0)) {
              $mask.remove();
              if ($img) {
                file = $img.data('file');
                if (file) {
                  _this.editor.uploader.cancel(file);
                  if (_this.editor.body.find('img.uploading').length < 1) {
                    return _this.editor.uploader.trigger('uploadready', [file]);
                  }
                }
              }
            }
          });
        };
      }(this));
      return ImageButton.__super__._init.call(this);
    };
    ImageButton.prototype.render = function () {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      ImageButton.__super__.render.apply(this, args);
      this.popover = new ImagePopover({ button: this });
      if (this.editor.opts.imageButton === 'upload') {
        return this._initUploader(this.el);
      }
    };
    ImageButton.prototype.renderMenu = function () {
      ImageButton.__super__.renderMenu.call(this);
      return this._initUploader();
    };
    ImageButton.prototype._initUploader = function ($uploadItem) {
      var $input, createInput;
      if ($uploadItem == null) {
        $uploadItem = this.menuEl.find('.menu-item-upload-image');
      }
      if (this.editor.uploader == null) {
        this.el.find('.btn-upload').remove();
        return;
      }
      $input = null;
      createInput = function (_this) {
        return function () {
          if ($input) {
            $input.remove();
          }
          return $input = $('<input type="file" title="' + _this._t('uploadImage') + '" accept="image/*">').appendTo($uploadItem);
        };
      }(this);
      createInput();
      $uploadItem.on('click mousedown', 'input[type=file]', function (_this) {
        return function (e) {
          return e.stopPropagation();
        };
      }(this));
      $uploadItem.on('change', 'input[type=file]', function (_this) {
        return function (e) {
          if (_this.editor.inputManager.focused) {
            _this.editor.uploader.upload($input, { inline: true });
            createInput();
          } else {
            _this.editor.one('focus', function (e) {
              _this.editor.uploader.upload($input, { inline: true });
              return createInput();
            });
            _this.editor.focus();
          }
          return _this.wrapper.removeClass('menu-on');
        };
      }(this));
      this.editor.uploader.on('beforeupload', function (_this) {
        return function (e, file) {
          var $img;
          if (!file.inline) {
            return;
          }
          if (file.img) {
            $img = $(file.img);
          } else {
            $img = _this.createImage(file.name);
            file.img = $img;
          }
          $img.addClass('uploading');
          $img.data('file', file);
          return _this.editor.uploader.readImageFile(file.obj, function (img) {
            var src;
            if (!$img.hasClass('uploading')) {
              return;
            }
            src = img ? img.src : _this.defaultImage;
            return _this.loadImage($img, src, function () {
              if (_this.popover.active) {
                _this.popover.refresh();
                return _this.popover.srcEl.val(_this._t('uploading')).prop('disabled', true);
              }
            });
          });
        };
      }(this));
      this.editor.uploader.on('uploadprogress', $.proxy(this.editor.util.throttle(function (e, file, loaded, total) {
        var $img, $mask, percent;
        if (!file.inline) {
          return;
        }
        $mask = file.img.data('mask');
        if (!$mask) {
          return;
        }
        $img = $mask.data('img');
        if (!($img.hasClass('uploading') && $img.parent().length > 0)) {
          $mask.remove();
          return;
        }
        percent = loaded / total;
        percent = (percent * 100).toFixed(0);
        if (percent > 99) {
          percent = 99;
        }
        return $mask.find('.progress').height(100 - percent + '%');
      }, 500), this));
      this.editor.uploader.on('uploadsuccess', function (_this) {
        return function (e, file, result) {
          var $img, $mask, msg;
          if (!file.inline) {
            return;
          }
          $img = file.img;
          if (!($img.hasClass('uploading') && $img.parent().length > 0)) {
            return;
          }
          $img.removeData('file');
          $img.removeClass('uploading').removeClass('loading');
          $mask = $img.data('mask');
          if ($mask) {
            $mask.remove();
          }
          $img.removeData('mask');
          if (typeof result !== 'object') {
            try {
              result = $.parseJSON(result);
            } catch (_error) {
              e = _error;
              result = { success: false };
            }
          }
          if (result.success === false) {
            msg = result.msg || _this._t('uploadFailed');
            alert(msg);
            $img.attr('src', _this.defaultImage);
          } else {
            $img.attr('src', result.file_path);
          }
          if (_this.popover.active) {
            _this.popover.srcEl.prop('disabled', false);
            _this.popover.srcEl.val(result.file_path);
          }
          _this.editor.trigger('valuechanged');
          if (_this.editor.body.find('img.uploading').length < 1) {
            return _this.editor.uploader.trigger('uploadready', [
              file,
              result
            ]);
          }
        };
      }(this));
      return this.editor.uploader.on('uploaderror', function (_this) {
        return function (e, file, xhr) {
          var $img, $mask, msg, result;
          if (!file.inline) {
            return;
          }
          if (xhr.statusText === 'abort') {
            return;
          }
          if (xhr.responseText) {
            try {
              result = $.parseJSON(xhr.responseText);
              msg = result.msg;
            } catch (_error) {
              e = _error;
              msg = _this._t('uploadError');
            }
            alert(msg);
          }
          $img = file.img;
          if (!($img.hasClass('uploading') && $img.parent().length > 0)) {
            return;
          }
          $img.removeData('file');
          $img.removeClass('uploading').removeClass('loading');
          $mask = $img.data('mask');
          if ($mask) {
            $mask.remove();
          }
          $img.removeData('mask');
          $img.attr('src', _this.defaultImage);
          if (_this.popover.active) {
            _this.popover.srcEl.prop('disabled', false);
            _this.popover.srcEl.val(_this.defaultImage);
          }
          _this.editor.trigger('valuechanged');
          if (_this.editor.body.find('img.uploading').length < 1) {
            return _this.editor.uploader.trigger('uploadready', [
              file,
              result
            ]);
          }
        };
      }(this));
    };
    ImageButton.prototype.status = function ($node) {
      if ($node != null) {
        this.setDisabled($node.is(this.disableTag));
      }
      if (this.disabled) {
        return true;
      }
    };
    ImageButton.prototype.loadImage = function ($img, src, callback) {
      var $mask, img, positionMask;
      positionMask = function (_this) {
        return function () {
          var imgOffset, wrapperOffset;
          imgOffset = $img.offset();
          wrapperOffset = _this.editor.wrapper.offset();
          return $mask.css({
            top: imgOffset.top - wrapperOffset.top,
            left: imgOffset.left - wrapperOffset.left,
            width: $img.width(),
            height: $img.height()
          }).show();
        };
      }(this);
      $img.addClass('loading');
      $mask = $img.data('mask');
      if (!$mask) {
        $mask = $('<div class="simditor-image-loading"><div class="progress"></div></div>').hide().appendTo(this.editor.wrapper);
        positionMask();
        $img.data('mask', $mask);
        $mask.data('img', $img);
      }
      img = new Image();
      img.onload = function (_this) {
        return function () {
          var height, width;
          if (!$img.hasClass('loading') && !$img.hasClass('uploading')) {
            return;
          }
          width = img.width;
          height = img.height;
          $img.attr({
            src: src,
            'data-image-size': width + ',' + height
          }).removeClass('loading');
          if ($img.hasClass('uploading')) {
            _this.editor.util.reflow(_this.editor.body);
            positionMask();
          } else {
            $mask.remove();
            $img.removeData('mask');
          }
          return callback(img);
        };
      }(this);
      img.onerror = function (_this) {
        return function () {
          callback(false);
          $mask.remove();
          return $img.removeData('mask').removeClass('loading');
        };
      }(this);
      return img.src = src;
    };
    ImageButton.prototype.createImage = function (name) {
      var $block, $img, $nextBlock, range;
      if (name == null) {
        name = 'Image';
      }
      if (!this.editor.inputManager.focused) {
        this.editor.focus();
      }
      range = this.editor.selection.getRange();
      range.deleteContents();
      $block = this.editor.util.closestBlockEl();
      if ($block.is('p') && !this.editor.util.isEmptyNode($block)) {
        $block = $('<p/>').append(this.editor.util.phBr).insertAfter($block);
        this.editor.selection.setRangeAtStartOf($block, range);
      }
      $img = $('<img/>').attr('alt', name);
      range.insertNode($img[0]);
      $nextBlock = $block.next('p');
      if (!($nextBlock.length > 0)) {
        $nextBlock = $('<p/>').append(this.editor.util.phBr).insertAfter($block);
      }
      this.editor.selection.setRangeAtStartOf($nextBlock);
      return $img;
    };
    ImageButton.prototype.command = function (src) {
      var $img;
      $img = this.createImage();
      return this.loadImage($img, src || this.defaultImage, function (_this) {
        return function () {
          _this.editor.trigger('valuechanged');
          _this.editor.util.reflow($img);
          $img.click();
          return _this.popover.one('popovershow', function () {
            _this.popover.srcEl.focus();
            return _this.popover.srcEl[0].select();
          });
        };
      }(this));
    };
    return ImageButton;
  }(Button);
  ImagePopover = function (superClass) {
    extend(ImagePopover, superClass);
    function ImagePopover() {
      return ImagePopover.__super__.constructor.apply(this, arguments);
    }
    ImagePopover.prototype.offset = {
      top: 6,
      left: -4
    };
    ImagePopover.prototype.render = function () {
      var tpl;
      tpl = '<div class="link-settings">\n  <div class="settings-field">\n    <label>' + this._t('imageUrl') + '</label>\n    <input class="image-src" type="text" tabindex="1" />\n    <a class="btn-upload" href="javascript:;" title="' + this._t('uploadImage') + '" tabindex="-1">\n      <span class="simditor-icon simditor-icon-upload"></span>\n    </a>\n  </div>\n  <div class=\'settings-field\'>\n    <label>' + this._t('imageAlt') + '</label>\n    <input class="image-alt" id="image-alt" type="text" tabindex="1" />\n  </div>\n  <div class="settings-field">\n    <label>' + this._t('imageSize') + '</label>\n    <input class="image-size" id="image-width" type="text" tabindex="2" />\n    <span class="times">\xd7</span>\n    <input class="image-size" id="image-height" type="text" tabindex="3" />\n    <a class="btn-restore" href="javascript:;" title="' + this._t('restoreImageSize') + '" tabindex="-1">\n      <span class="simditor-icon simditor-icon-undo"></span>\n    </a>\n  </div>\n</div>';
      this.el.addClass('image-popover').append(tpl);
      this.srcEl = this.el.find('.image-src');
      this.widthEl = this.el.find('#image-width');
      this.heightEl = this.el.find('#image-height');
      this.altEl = this.el.find('#image-alt');
      this.srcEl.on('keydown', function (_this) {
        return function (e) {
          if (!(e.which === 13 && !_this.target.hasClass('uploading'))) {
            return;
          }
          e.preventDefault();
          _this.button.editor.body.focus();
          _this.button.editor.selection.setRangeAfter(_this.target);
          return _this.hide();
        };
      }(this));
      this.srcEl.on('blur', function (_this) {
        return function (e) {
          return _this._loadImage(_this.srcEl.val());
        };
      }(this));
      this.el.find('.image-size').on('blur', function (_this) {
        return function (e) {
          _this._resizeImg($(e.currentTarget));
          return _this.el.data('popover').refresh();
        };
      }(this));
      this.el.find('.image-size').on('keyup', function (_this) {
        return function (e) {
          var inputEl;
          inputEl = $(e.currentTarget);
          if (!(e.which === 13 || e.which === 27 || e.which === 9)) {
            return _this._resizeImg(inputEl, true);
          }
        };
      }(this));
      this.el.find('.image-size').on('keydown', function (_this) {
        return function (e) {
          var inputEl;
          inputEl = $(e.currentTarget);
          if (e.which === 13 || e.which === 27) {
            e.preventDefault();
            if (e.which === 13) {
              _this._resizeImg(inputEl);
            } else {
              _this._restoreImg();
            }
            _this.button.editor.body.focus();
            _this.button.editor.selection.setRangeAfter(_this.target);
            return _this.hide();
          } else if (e.which === 9) {
            return _this.el.data('popover').refresh();
          }
        };
      }(this));
      this.altEl.on('keydown', function (_this) {
        return function (e) {
          if (e.which === 13) {
            e.preventDefault();
            _this.button.editor.body.focus();
            _this.button.editor.selection.setRangeAfter(_this.target);
            return _this.hide();
          }
        };
      }(this));
      this.altEl.on('keyup', function (_this) {
        return function (e) {
          if (e.which === 13 || e.which === 27 || e.which === 9) {
            return;
          }
          _this.alt = _this.altEl.val();
          return _this.target.attr('alt', _this.alt);
        };
      }(this));
      this.el.find('.btn-restore').on('click', function (_this) {
        return function (e) {
          _this._restoreImg();
          return _this.el.data('popover').refresh();
        };
      }(this));
      this.editor.on('valuechanged', function (_this) {
        return function (e) {
          if (_this.active) {
            return _this.refresh();
          }
        };
      }(this));
      return this._initUploader();
    };
    ImagePopover.prototype._initUploader = function () {
      var $uploadBtn, createInput;
      $uploadBtn = this.el.find('.btn-upload');
      if (this.editor.uploader == null) {
        $uploadBtn.remove();
        return;
      }
      createInput = function (_this) {
        return function () {
          if (_this.input) {
            _this.input.remove();
          }
          return _this.input = $('<input type="file" title="' + _this._t('uploadImage') + '" accept="image/*">').appendTo($uploadBtn);
        };
      }(this);
      createInput();
      this.el.on('click mousedown', 'input[type=file]', function (_this) {
        return function (e) {
          return e.stopPropagation();
        };
      }(this));
      return this.el.on('change', 'input[type=file]', function (_this) {
        return function (e) {
          _this.editor.uploader.upload(_this.input, {
            inline: true,
            img: _this.target
          });
          return createInput();
        };
      }(this));
    };
    ImagePopover.prototype._resizeImg = function (inputEl, onlySetVal) {
      var height, value, width;
      if (onlySetVal == null) {
        onlySetVal = false;
      }
      value = inputEl.val() * 1;
      if (!($.isNumeric(value) || value < 0)) {
        return;
      }
      if (inputEl.is(this.widthEl)) {
        height = this.height * value / this.width;
        this.heightEl.val(height);
      } else {
        width = this.width * value / this.height;
        this.widthEl.val(width);
      }
      if (!onlySetVal) {
        this.target.attr({
          width: width || value,
          height: height || value
        });
      }
      return this.editor.trigger('valuechanged');
    };
    ImagePopover.prototype._restoreImg = function () {
      var ref, size;
      size = ((ref = this.target.data('image-size')) != null ? ref.split(',') : void 0) || [
        this.width,
        this.height
      ];
      this.target.attr({
        width: size[0] * 1,
        height: size[1] * 1
      });
      this.widthEl.val(size[0]);
      this.heightEl.val(size[1]);
      return this.editor.trigger('valuechanged');
    };
    ImagePopover.prototype._loadImage = function (src, callback) {
      if (/^data:image/.test(src) && !this.editor.uploader) {
        if (callback) {
          callback(false);
        }
        return;
      }
      return this.button.loadImage(this.target, src, function (_this) {
        return function (img) {
          var blob;
          if (!img) {
            return;
          }
          if (_this.active) {
            _this.width = img.width;
            _this.height = img.height;
            _this.widthEl.val(_this.width);
            _this.heightEl.val(_this.height);
            _this.target.removeAttr('width').removeAttr('height');
          }
          if (/^data:image/.test(src)) {
            blob = _this.editor.util.dataURLtoBlob(src);
            blob.name = 'Base64 Image.png';
            _this.editor.uploader.upload(blob, {
              inline: true,
              img: _this.target
            });
          } else {
            _this.editor.trigger('valuechanged');
          }
          if (callback) {
            return callback(img);
          }
        };
      }(this));
    };
    ImagePopover.prototype.show = function () {
      var $img, args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      ImagePopover.__super__.show.apply(this, args);
      $img = this.target;
      this.width = $img.width();
      this.height = $img.height();
      this.alt = $img.attr('alt');
      if ($img.hasClass('uploading')) {
        return this.srcEl.val(this._t('uploading')).prop('disabled', true);
      } else {
        this.srcEl.val($img.attr('src')).prop('disabled', false);
        this.widthEl.val(this.width);
        this.heightEl.val(this.height);
        return this.altEl.val(this.alt);
      }
    };
    return ImagePopover;
  }(Popover);
  Simditor.Toolbar.addButton(ImageButton);
  IndentButton = function (superClass) {
    extend(IndentButton, superClass);
    function IndentButton() {
      return IndentButton.__super__.constructor.apply(this, arguments);
    }
    IndentButton.prototype.name = 'indent';
    IndentButton.prototype.icon = 'indent';
    IndentButton.prototype._init = function () {
      this.title = this._t(this.name) + ' (Tab)';
      return IndentButton.__super__._init.call(this);
    };
    IndentButton.prototype.status = function ($node) {
      return true;
    };
    IndentButton.prototype.command = function () {
      return this.editor.indentation.indent();
    };
    return IndentButton;
  }(Button);
  Simditor.Toolbar.addButton(IndentButton);
  OutdentButton = function (superClass) {
    extend(OutdentButton, superClass);
    function OutdentButton() {
      return OutdentButton.__super__.constructor.apply(this, arguments);
    }
    OutdentButton.prototype.name = 'outdent';
    OutdentButton.prototype.icon = 'outdent';
    OutdentButton.prototype._init = function () {
      this.title = this._t(this.name) + ' (Shift + Tab)';
      return OutdentButton.__super__._init.call(this);
    };
    OutdentButton.prototype.status = function ($node) {
      return true;
    };
    OutdentButton.prototype.command = function () {
      return this.editor.indentation.indent(true);
    };
    return OutdentButton;
  }(Button);
  Simditor.Toolbar.addButton(OutdentButton);
  HrButton = function (superClass) {
    extend(HrButton, superClass);
    function HrButton() {
      return HrButton.__super__.constructor.apply(this, arguments);
    }
    HrButton.prototype.name = 'hr';
    HrButton.prototype.icon = 'minus';
    HrButton.prototype.htmlTag = 'hr';
    HrButton.prototype.status = function ($node) {
      return true;
    };
    HrButton.prototype.command = function () {
      var $hr, $newBlock, $nextBlock, $rootBlock;
      $rootBlock = this.editor.util.furthestBlockEl();
      $nextBlock = $rootBlock.next();
      if ($nextBlock.length > 0) {
        this.editor.selection.save();
      } else {
        $newBlock = $('<p/>').append(this.editor.util.phBr);
      }
      $hr = $('<hr/>').insertAfter($rootBlock);
      if ($newBlock) {
        $newBlock.insertAfter($hr);
        this.editor.selection.setRangeAtStartOf($newBlock);
      } else {
        this.editor.selection.restore();
      }
      return this.editor.trigger('valuechanged');
    };
    return HrButton;
  }(Button);
  Simditor.Toolbar.addButton(HrButton);
  TableButton = function (superClass) {
    extend(TableButton, superClass);
    function TableButton() {
      return TableButton.__super__.constructor.apply(this, arguments);
    }
    TableButton.prototype.name = 'table';
    TableButton.prototype.icon = 'table';
    TableButton.prototype.htmlTag = 'table';
    TableButton.prototype.disableTag = 'pre, li, blockquote';
    TableButton.prototype.menu = true;
    TableButton.prototype._init = function () {
      TableButton.__super__._init.call(this);
      $.merge(this.editor.formatter._allowedTags, [
        'thead',
        'th',
        'tbody',
        'tr',
        'td',
        'colgroup',
        'col'
      ]);
      $.extend(this.editor.formatter._allowedAttributes, {
        td: [
          'rowspan',
          'colspan'
        ],
        col: ['width']
      });
      this._initShortcuts();
      this.editor.on('decorate', function (_this) {
        return function (e, $el) {
          return $el.find('table').each(function (i, table) {
            return _this.decorate($(table));
          });
        };
      }(this));
      this.editor.on('undecorate', function (_this) {
        return function (e, $el) {
          return $el.find('table').each(function (i, table) {
            return _this.undecorate($(table));
          });
        };
      }(this));
      this.editor.on('selectionchanged.table', function (_this) {
        return function (e) {
          var $container, range;
          _this.editor.body.find('.simditor-table td, .simditor-table th').removeClass('active');
          range = _this.editor.selection.getRange();
          if (range == null) {
            return;
          }
          $container = $(range.commonAncestorContainer);
          if (range.collapsed && $container.is('.simditor-table')) {
            if (_this.editor.selection.rangeAtStartOf($container)) {
              $container = $container.find('th:first');
            } else {
              $container = $container.find('td:last');
            }
            _this.editor.selection.setRangeAtEndOf($container);
          }
          return $container.closest('td, th', _this.editor.body).addClass('active');
        };
      }(this));
      this.editor.on('blur.table', function (_this) {
        return function (e) {
          return _this.editor.body.find('.simditor-table td, .simditor-table th').removeClass('active');
        };
      }(this));
      this.editor.inputManager.addKeystrokeHandler('38', 'td', function (_this) {
        return function (e, $node) {
          _this._tdNav($node, 'up');
          return true;
        };
      }(this));
      this.editor.inputManager.addKeystrokeHandler('38', 'th', function (_this) {
        return function (e, $node) {
          _this._tdNav($node, 'up');
          return true;
        };
      }(this));
      this.editor.inputManager.addKeystrokeHandler('40', 'td', function (_this) {
        return function (e, $node) {
          _this._tdNav($node, 'down');
          return true;
        };
      }(this));
      return this.editor.inputManager.addKeystrokeHandler('40', 'th', function (_this) {
        return function (e, $node) {
          _this._tdNav($node, 'down');
          return true;
        };
      }(this));
    };
    TableButton.prototype._tdNav = function ($td, direction) {
      var $anotherTr, $tr, action, anotherTag, index, parentTag, ref;
      if (direction == null) {
        direction = 'up';
      }
      action = direction === 'up' ? 'prev' : 'next';
      ref = direction === 'up' ? [
        'tbody',
        'thead'
      ] : [
        'thead',
        'tbody'
      ], parentTag = ref[0], anotherTag = ref[1];
      $tr = $td.parent('tr');
      $anotherTr = this['_' + action + 'Row']($tr);
      if (!($anotherTr.length > 0)) {
        return true;
      }
      index = $tr.find('td, th').index($td);
      return this.editor.selection.setRangeAtEndOf($anotherTr.find('td, th').eq(index));
    };
    TableButton.prototype._nextRow = function ($tr) {
      var $nextTr;
      $nextTr = $tr.next('tr');
      if ($nextTr.length < 1 && $tr.parent('thead').length > 0) {
        $nextTr = $tr.parent('thead').next('tbody').find('tr:first');
      }
      return $nextTr;
    };
    TableButton.prototype._prevRow = function ($tr) {
      var $prevTr;
      $prevTr = $tr.prev('tr');
      if ($prevTr.length < 1 && $tr.parent('tbody').length > 0) {
        $prevTr = $tr.parent('tbody').prev('thead').find('tr');
      }
      return $prevTr;
    };
    TableButton.prototype.initResize = function ($table) {
      var $colgroup, $resizeHandle, $wrapper;
      $wrapper = $table.parent('.simditor-table');
      $colgroup = $table.find('colgroup');
      if ($colgroup.length < 1) {
        $colgroup = $('<colgroup/>').prependTo($table);
        $table.find('thead tr th').each(function (_this) {
          return function (i, td) {
            var $col;
            return $col = $('<col/>').appendTo($colgroup);
          };
        }(this));
        this.refreshTableWidth($table);
      }
      $resizeHandle = $('<div class="simditor-resize-handle" contenteditable="false"></div>').appendTo($wrapper);
      $wrapper.on('mousemove', 'td, th', function (_this) {
        return function (e) {
          var $col, $td, index, ref, ref1, x;
          if ($wrapper.hasClass('resizing')) {
            return;
          }
          $td = $(e.currentTarget);
          x = e.pageX - $(e.currentTarget).offset().left;
          if (x < 5 && $td.prev().length > 0) {
            $td = $td.prev();
          }
          if ($td.next('td, th').length < 1) {
            $resizeHandle.hide();
            return;
          }
          if ((ref = $resizeHandle.data('td')) != null ? ref.is($td) : void 0) {
            $resizeHandle.show();
            return;
          }
          index = $td.parent().find('td, th').index($td);
          $col = $colgroup.find('col').eq(index);
          if ((ref1 = $resizeHandle.data('col')) != null ? ref1.is($col) : void 0) {
            $resizeHandle.show();
            return;
          }
          return $resizeHandle.css('left', $td.position().left + $td.outerWidth() - 5).data('td', $td).data('col', $col).show();
        };
      }(this));
      $wrapper.on('mouseleave', function (_this) {
        return function (e) {
          return $resizeHandle.hide();
        };
      }(this));
      return $wrapper.on('mousedown', '.simditor-resize-handle', function (_this) {
        return function (e) {
          var $handle, $leftCol, $leftTd, $rightCol, $rightTd, minWidth, startHandleLeft, startLeftWidth, startRightWidth, startX, tableWidth;
          $handle = $(e.currentTarget);
          $leftTd = $handle.data('td');
          $leftCol = $handle.data('col');
          $rightTd = $leftTd.next('td, th');
          $rightCol = $leftCol.next('col');
          startX = e.pageX;
          startLeftWidth = $leftTd.outerWidth() * 1;
          startRightWidth = $rightTd.outerWidth() * 1;
          startHandleLeft = parseFloat($handle.css('left'));
          tableWidth = $leftTd.closest('table').width();
          minWidth = 50;
          $(document).on('mousemove.simditor-resize-table', function (e) {
            var deltaX, leftWidth, rightWidth;
            deltaX = e.pageX - startX;
            leftWidth = startLeftWidth + deltaX;
            rightWidth = startRightWidth - deltaX;
            if (leftWidth < minWidth) {
              leftWidth = minWidth;
              deltaX = minWidth - startLeftWidth;
              rightWidth = startRightWidth - deltaX;
            } else if (rightWidth < minWidth) {
              rightWidth = minWidth;
              deltaX = startRightWidth - minWidth;
              leftWidth = startLeftWidth + deltaX;
            }
            $leftCol.attr('width', leftWidth / tableWidth * 100 + '%');
            $rightCol.attr('width', rightWidth / tableWidth * 100 + '%');
            return $handle.css('left', startHandleLeft + deltaX);
          });
          $(document).one('mouseup.simditor-resize-table', function (e) {
            $(document).off('.simditor-resize-table');
            return $wrapper.removeClass('resizing');
          });
          $wrapper.addClass('resizing');
          return false;
        };
      }(this));
    };
    TableButton.prototype._initShortcuts = function () {
      this.editor.inputManager.addShortcut('ctrl+alt+up', function (_this) {
        return function (e) {
          _this.editMenu.find('.menu-item[data-param=insertRowAbove]').click();
          return false;
        };
      }(this));
      this.editor.inputManager.addShortcut('ctrl+alt+down', function (_this) {
        return function (e) {
          _this.editMenu.find('.menu-item[data-param=insertRowBelow]').click();
          return false;
        };
      }(this));
      this.editor.inputManager.addShortcut('ctrl+alt+left', function (_this) {
        return function (e) {
          _this.editMenu.find('.menu-item[data-param=insertColLeft]').click();
          return false;
        };
      }(this));
      return this.editor.inputManager.addShortcut('ctrl+alt+right', function (_this) {
        return function (e) {
          _this.editMenu.find('.menu-item[data-param=insertColRight]').click();
          return false;
        };
      }(this));
    };
    TableButton.prototype.decorate = function ($table) {
      if ($table.parent('.simditor-table').length > 0) {
        this.undecorate($table);
      }
      $table.wrap('<div class="simditor-table"></div>');
      this.initResize($table);
      return $table.parent();
    };
    TableButton.prototype.undecorate = function ($table) {
      if (!($table.parent('.simditor-table').length > 0)) {
        return;
      }
      return $table.parent().replaceWith($table);
    };
    TableButton.prototype.renderMenu = function () {
      var $table;
      $('<div class="menu-create-table">\n</div>\n<div class="menu-edit-table">\n  <ul>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="deleteRow"><span>' + this._t('deleteRow') + '</span></a></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="insertRowAbove"><span>' + this._t('insertRowAbove') + ' ( Ctrl + Alt + \u2191 )</span></a></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="insertRowBelow"><span>' + this._t('insertRowBelow') + ' ( Ctrl + Alt + \u2193 )</span></a></li>\n    <li><span class="separator"></span></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="deleteCol"><span>' + this._t('deleteColumn') + '</span></a></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="insertColLeft"><span>' + this._t('insertColumnLeft') + ' ( Ctrl + Alt + \u2190 )</span></a></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="insertColRight"><span>' + this._t('insertColumnRight') + ' ( Ctrl + Alt + \u2192 )</span></a></li>\n    <li><span class="separator"></span></li>\n    <li><a tabindex="-1" unselectable="on" class="menu-item" href="javascript:;" data-param="deleteTable"><span>' + this._t('deleteTable') + '</span></a></li>\n  </ul>\n</div>').appendTo(this.menuWrapper);
      this.createMenu = this.menuWrapper.find('.menu-create-table');
      this.editMenu = this.menuWrapper.find('.menu-edit-table');
      $table = this.createTable(6, 6).appendTo(this.createMenu);
      this.createMenu.on('mouseenter', 'td, th', function (_this) {
        return function (e) {
          var $td, $tr, $trs, num;
          _this.createMenu.find('td, th').removeClass('selected');
          $td = $(e.currentTarget);
          $tr = $td.parent();
          num = $tr.find('td, th').index($td) + 1;
          $trs = $tr.prevAll('tr').addBack();
          if ($tr.parent().is('tbody')) {
            $trs = $trs.add($table.find('thead tr'));
          }
          return $trs.find('td:lt(' + num + '), th:lt(' + num + ')').addClass('selected');
        };
      }(this));
      this.createMenu.on('mouseleave', function (_this) {
        return function (e) {
          return $(e.currentTarget).find('td, th').removeClass('selected');
        };
      }(this));
      return this.createMenu.on('mousedown', 'td, th', function (_this) {
        return function (e) {
          var $closestBlock, $td, $tr, colNum, rowNum;
          _this.wrapper.removeClass('menu-on');
          if (!_this.editor.inputManager.focused) {
            return;
          }
          $td = $(e.currentTarget);
          $tr = $td.parent();
          colNum = $tr.find('td').index($td) + 1;
          rowNum = $tr.prevAll('tr').length + 1;
          if ($tr.parent().is('tbody')) {
            rowNum += 1;
          }
          $table = _this.createTable(rowNum, colNum, true);
          $closestBlock = _this.editor.util.closestBlockEl();
          if (_this.editor.util.isEmptyNode($closestBlock)) {
            $closestBlock.replaceWith($table);
          } else {
            $closestBlock.after($table);
          }
          _this.decorate($table);
          _this.editor.selection.setRangeAtStartOf($table.find('th:first'));
          _this.editor.trigger('valuechanged');
          return false;
        };
      }(this));
    };
    TableButton.prototype.createTable = function (row, col, phBr) {
      var $table, $tbody, $td, $thead, $tr, c, j, k, r, ref, ref1;
      $table = $('<table/>');
      $thead = $('<thead/>').appendTo($table);
      $tbody = $('<tbody/>').appendTo($table);
      for (r = j = 0, ref = row; 0 <= ref ? j < ref : j > ref; r = 0 <= ref ? ++j : --j) {
        $tr = $('<tr/>');
        $tr.appendTo(r === 0 ? $thead : $tbody);
        for (c = k = 0, ref1 = col; 0 <= ref1 ? k < ref1 : k > ref1; c = 0 <= ref1 ? ++k : --k) {
          $td = $(r === 0 ? '<th/>' : '<td/>').appendTo($tr);
          if (phBr) {
            $td.append(this.editor.util.phBr);
          }
        }
      }
      return $table;
    };
    TableButton.prototype.refreshTableWidth = function ($table) {
      var cols, tableWidth;
      tableWidth = $table.width();
      cols = $table.find('col');
      return $table.find('thead tr th').each(function (_this) {
        return function (i, td) {
          var $col;
          $col = cols.eq(i);
          return $col.attr('width', $(td).outerWidth() / tableWidth * 100 + '%');
        };
      }(this));
    };
    TableButton.prototype.setActive = function (active) {
      TableButton.__super__.setActive.call(this, active);
      if (active) {
        this.createMenu.hide();
        return this.editMenu.show();
      } else {
        this.createMenu.show();
        return this.editMenu.hide();
      }
    };
    TableButton.prototype._changeCellTag = function ($tr, tagName) {
      return $tr.find('td, th').each(function (_this) {
        return function (i, cell) {
          var $cell;
          $cell = $(cell);
          return $cell.replaceWith('<' + tagName + '>' + $cell.html() + '</' + tagName + '>');
        };
      }(this));
    };
    TableButton.prototype.deleteRow = function ($td) {
      var $newTr, $tr, index;
      $tr = $td.parent('tr');
      if ($tr.closest('table').find('tr').length < 1) {
        return this.deleteTable($td);
      } else {
        $newTr = this._nextRow($tr);
        if (!($newTr.length > 0)) {
          $newTr = this._prevRow($tr);
        }
        index = $tr.find('td, th').index($td);
        if ($tr.parent().is('thead')) {
          $newTr.appendTo($tr.parent());
          this._changeCellTag($newTr, 'th');
        }
        $tr.remove();
        return this.editor.selection.setRangeAtEndOf($newTr.find('td, th').eq(index));
      }
    };
    TableButton.prototype.insertRow = function ($td, direction) {
      var $newTr, $table, $tr, cellTag, colNum, i, index, j, ref;
      if (direction == null) {
        direction = 'after';
      }
      $tr = $td.parent('tr');
      $table = $tr.closest('table');
      colNum = 0;
      $table.find('tr').each(function (_this) {
        return function (i, tr) {
          return colNum = Math.max(colNum, $(tr).find('td').length);
        };
      }(this));
      index = $tr.find('td, th').index($td);
      $newTr = $('<tr/>');
      cellTag = 'td';
      if (direction === 'after' && $tr.parent().is('thead')) {
        $tr.parent().next('tbody').prepend($newTr);
      } else if (direction === 'before' && $tr.parent().is('thead')) {
        $tr.before($newTr);
        $tr.parent().next('tbody').prepend($tr);
        this._changeCellTag($tr, 'td');
        cellTag = 'th';
      } else {
        $tr[direction]($newTr);
      }
      for (i = j = 1, ref = colNum; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {
        $('<' + cellTag + '/>').append(this.editor.util.phBr).appendTo($newTr);
      }
      return this.editor.selection.setRangeAtStartOf($newTr.find('td, th').eq(index));
    };
    TableButton.prototype.deleteCol = function ($td) {
      var $newTd, $table, $tr, index;
      $tr = $td.parent('tr');
      if ($tr.closest('table').find('tr').length < 1 && $td.siblings('td, th').length < 1) {
        return this.deleteTable($td);
      } else {
        index = $tr.find('td, th').index($td);
        $newTd = $td.next('td, th');
        if (!($newTd.length > 0)) {
          $newTd = $tr.prev('td, th');
        }
        $table = $tr.closest('table');
        $table.find('col').eq(index).remove();
        $table.find('tr').each(function (_this) {
          return function (i, tr) {
            return $(tr).find('td, th').eq(index).remove();
          };
        }(this));
        this.refreshTableWidth($table);
        return this.editor.selection.setRangeAtEndOf($newTd);
      }
    };
    TableButton.prototype.insertCol = function ($td, direction) {
      var $col, $newCol, $newTd, $table, $tr, index, tableWidth, width;
      if (direction == null) {
        direction = 'after';
      }
      $tr = $td.parent('tr');
      index = $tr.find('td, th').index($td);
      $table = $td.closest('table');
      $col = $table.find('col').eq(index);
      $table.find('tr').each(function (_this) {
        return function (i, tr) {
          var $newTd, cellTag;
          cellTag = $(tr).parent().is('thead') ? 'th' : 'td';
          $newTd = $('<' + cellTag + '/>').append(_this.editor.util.phBr);
          return $(tr).find('td, th').eq(index)[direction]($newTd);
        };
      }(this));
      $newCol = $('<col/>');
      $col[direction]($newCol);
      tableWidth = $table.width();
      width = Math.max(parseFloat($col.attr('width')) / 2, 50 / tableWidth * 100);
      $col.attr('width', width + '%');
      $newCol.attr('width', width + '%');
      this.refreshTableWidth($table);
      $newTd = direction === 'after' ? $td.next('td, th') : $td.prev('td, th');
      return this.editor.selection.setRangeAtStartOf($newTd);
    };
    TableButton.prototype.deleteTable = function ($td) {
      var $block, $table;
      $table = $td.closest('.simditor-table');
      $block = $table.next('p');
      $table.remove();
      if ($block.length > 0) {
        return this.editor.selection.setRangeAtStartOf($block);
      }
    };
    TableButton.prototype.command = function (param) {
      var $td, range;
      range = this.editor.selection.getRange();
      $td = $(range.commonAncestorContainer).closest('td, th');
      if (!($td.length > 0)) {
        return;
      }
      if (param === 'deleteRow') {
        this.deleteRow($td);
      } else if (param === 'insertRowAbove') {
        this.insertRow($td, 'before');
      } else if (param === 'insertRowBelow') {
        this.insertRow($td);
      } else if (param === 'deleteCol') {
        this.deleteCol($td);
      } else if (param === 'insertColLeft') {
        this.insertCol($td, 'before');
      } else if (param === 'insertColRight') {
        this.insertCol($td);
      } else if (param === 'deleteTable') {
        this.deleteTable($td);
      } else {
        return;
      }
      return this.editor.trigger('valuechanged');
    };
    return TableButton;
  }(Button);
  Simditor.Toolbar.addButton(TableButton);
  StrikethroughButton = function (superClass) {
    extend(StrikethroughButton, superClass);
    function StrikethroughButton() {
      return StrikethroughButton.__super__.constructor.apply(this, arguments);
    }
    StrikethroughButton.prototype.name = 'strikethrough';
    StrikethroughButton.prototype.icon = 'strikethrough';
    StrikethroughButton.prototype.htmlTag = 'strike';
    StrikethroughButton.prototype.disableTag = 'pre';
    StrikethroughButton.prototype.status = function ($node) {
      var active;
      if ($node != null) {
        this.setDisabled($node.is(this.disableTag));
      }
      if (this.disabled) {
        return true;
      }
      active = document.queryCommandState('strikethrough') === true;
      this.setActive(active);
      return active;
    };
    StrikethroughButton.prototype.command = function () {
      document.execCommand('strikethrough');
      if (!this.editor.util.support.oninput) {
        this.editor.trigger('valuechanged');
      }
      return $(document).trigger('selectionchange');
    };
    return StrikethroughButton;
  }(Button);
  Simditor.Toolbar.addButton(StrikethroughButton);
  AlignmentButton = function (superClass) {
    extend(AlignmentButton, superClass);
    function AlignmentButton() {
      return AlignmentButton.__super__.constructor.apply(this, arguments);
    }
    AlignmentButton.prototype.name = 'alignment';
    AlignmentButton.prototype.icon = 'align-left';
    AlignmentButton.prototype.htmlTag = 'p, h1, h2, h3, h4';
    AlignmentButton.prototype._init = function () {
      this.menu = [
        {
          name: 'left',
          text: this._t('alignLeft'),
          icon: 'align-left',
          param: 'left'
        },
        {
          name: 'center',
          text: this._t('alignCenter'),
          icon: 'align-center',
          param: 'center'
        },
        {
          name: 'right',
          text: this._t('alignRight'),
          icon: 'align-right',
          param: 'right'
        }
      ];
      return AlignmentButton.__super__._init.call(this);
    };
    AlignmentButton.prototype.setActive = function (active, align) {
      if (align == null) {
        align = 'left';
      }
      if (align !== 'left' && align !== 'center' && align !== 'right') {
        align = 'left';
      }
      if (align === 'left') {
        AlignmentButton.__super__.setActive.call(this, false);
      } else {
        AlignmentButton.__super__.setActive.call(this, active);
      }
      this.el.removeClass('align-left align-center align-right');
      if (active) {
        this.el.addClass('align-' + align);
      }
      this.setIcon('align-' + align);
      return this.menuEl.find('.menu-item').show().end().find('.menu-item-' + align).hide();
    };
    AlignmentButton.prototype.status = function ($node) {
      if ($node == null) {
        return true;
      }
      if (!this.editor.util.isBlockNode($node)) {
        return;
      }
      this.setDisabled(!$node.is(this.htmlTag));
      if (this.disabled) {
        this.setActive(false);
        return true;
      }
      this.setActive(true, $node.css('text-align'));
      return this.active;
    };
    AlignmentButton.prototype.command = function (align) {
      var $blockEls, $endBlock, $startBlock, block, endNode, j, len, range, ref, startNode;
      if ([
          'left',
          'center',
          'right'
        ].indexOf(align) < 0) {
        throw new Error('invalid ' + align);
      }
      range = this.editor.selection.getRange();
      startNode = range.startContainer;
      endNode = range.endContainer;
      $startBlock = this.editor.util.closestBlockEl(startNode);
      $endBlock = this.editor.util.closestBlockEl(endNode);
      this.editor.selection.save();
      $blockEls = $startBlock.is($endBlock) ? $startBlock : $startBlock.nextUntil($endBlock).addBack().add($endBlock);
      ref = $blockEls.filter(this.htmlTag);
      for (j = 0, len = ref.length; j < len; j++) {
        block = ref[j];
        $(block).css('text-align', align === 'left' ? '' : align);
      }
      this.editor.selection.restore();
      return this.editor.trigger('valuechanged');
    };
    return AlignmentButton;
  }(Button);
  Simditor.Toolbar.addButton(AlignmentButton);
  return Simditor;
}));
(function () {
  'use strict';
  (function () {
    var ngSimditor = angular.module('angular-simditor', []);
    ngSimditor.constant('simditorConfig', {
      placeholder: '\u8fd9\u91cc\u8f93\u5165\u6587\u5b57...',
      toolbar: [
        'title',
        'bold',
        'italic',
        'underline',
        'strikethrough',
        'color',
        '|',
        'ol',
        'ul',
        'blockquote',
        'code',
        'table',
        '|',
        'link',
        'image',
        'hr',
        '|',
        'indent',
        'outdent',
        'alignment',
        '|',
        'html'
      ],
      pasteImage: true,
      defaultImage: '',
      upload: { url: '/upload' },
      allowedTags: [
        'br',
        'a',
        'img',
        'b',
        'strong',
        'i',
        'u',
        'font',
        'p',
        'ul',
        'ol',
        'li',
        'blockquote',
        'pre',
        'h1',
        'h2',
        'h3',
        'h4',
        'hr',
        'div',
        'script',
        'style'
      ]
    });
    ngSimditor.directive('ngSimditor', [
      '$timeout',
      'simditorConfig',
      function ($timeout, simditorConfig) {
        // Runs during compile
        return {
          scope: { content: '=' },
          restrict: 'E',
          template: '<textarea data-autosave="editor-content" autofocus></textarea>',
          replace: true,
          link: function ($scope, iElm, iAttrs, controller) {
            var editor = new Simditor(angular.extend({ textarea: iElm }, simditorConfig));
            var nowContent = '';
            $scope.$watch('content', function (value, old) {
              if (typeof value !== 'undefined' && value != nowContent) {
                editor.setValue(value);
              }
            });
            editor.on('valuechanged', function (e) {
              if ($scope.content != editor.getValue()) {
                $timeout(function () {
                  $scope.content = nowContent = editor.getValue();
                });
              }
            });
          }
        };
      }
    ]);
  }());
}.call(this));
/*!
 * Select2 4.0.2
 * https://select2.github.io
 *
 * Released under the MIT license
 * https://github.com/select2/select2/blob/master/LICENSE.md
 */
(function (factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['jquery'], factory);
  } else if (typeof exports === 'object') {
    // Node/CommonJS
    factory(require('jquery'));
  } else {
    // Browser globals
    factory(jQuery);
  }
}(function (jQuery) {
  // This is needed so we can catch the AMD loader configuration and use it
  // The inner file should be wrapped (by `banner.start.js`) in a function that
  // returns the AMD loader references.
  var S2 = function () {
      // Restore the Select2 AMD loader so it can be used
      // Needed mostly in the language files, where the loader is not inserted
      if (jQuery && jQuery.fn && jQuery.fn.select2 && jQuery.fn.select2.amd) {
        var S2 = jQuery.fn.select2.amd;
      }
      var S2;
      (function () {
        if (!S2 || !S2.requirejs) {
          if (!S2) {
            S2 = {};
          } else {
            require = S2;
          }
          /**
 * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */
          //Going sloppy to avoid 'use strict' string cost, but strict practices should
          //be followed.
          /*jslint sloppy: true */
          /*global setTimeout: false */
          var requirejs, require, define;
          (function (undef) {
            var main, req, makeMap, handlers, defined = {}, waiting = {}, config = {}, defining = {}, hasOwn = Object.prototype.hasOwnProperty, aps = [].slice, jsSuffixRegExp = /\.js$/;
            function hasProp(obj, prop) {
              return hasOwn.call(obj, prop);
            }
            /**
     * Given a relative module name, like ./something, normalize it to
     * a real name that can be mapped to a path.
     * @param {String} name the relative name
     * @param {String} baseName a real name that the name arg is relative
     * to.
     * @returns {String} normalized name
     */
            function normalize(name, baseName) {
              var nameParts, nameSegment, mapValue, foundMap, lastIndex, foundI, foundStarMap, starI, i, j, part, baseParts = baseName && baseName.split('/'), map = config.map, starMap = map && map['*'] || {};
              //Adjust any relative paths.
              if (name && name.charAt(0) === '.') {
                //If have a base name, try to normalize against it,
                //otherwise, assume it is a top-level require that will
                //be relative to baseUrl in the end.
                if (baseName) {
                  name = name.split('/');
                  lastIndex = name.length - 1;
                  // Node .js allowance:
                  if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {
                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
                  }
                  //Lop off the last part of baseParts, so that . matches the
                  //"directory" and not name of the baseName's module. For instance,
                  //baseName of "one/two/three", maps to "one/two/three.js", but we
                  //want the directory, "one/two" for this normalization.
                  name = baseParts.slice(0, baseParts.length - 1).concat(name);
                  //start trimDots
                  for (i = 0; i < name.length; i += 1) {
                    part = name[i];
                    if (part === '.') {
                      name.splice(i, 1);
                      i -= 1;
                    } else if (part === '..') {
                      if (i === 1 && (name[2] === '..' || name[0] === '..')) {
                        //End of the line. Keep at least one non-dot
                        //path segment at the front so it can be mapped
                        //correctly to disk. Otherwise, there is likely
                        //no path mapping for a path starting with '..'.
                        //This can still fail, but catches the most reasonable
                        //uses of ..
                        break;
                      } else if (i > 0) {
                        name.splice(i - 1, 2);
                        i -= 2;
                      }
                    }
                  }
                  //end trimDots
                  name = name.join('/');
                } else if (name.indexOf('./') === 0) {
                  // No baseName, so this is ID is resolved relative
                  // to baseUrl, pull off the leading dot.
                  name = name.substring(2);
                }
              }
              //Apply map config if available.
              if ((baseParts || starMap) && map) {
                nameParts = name.split('/');
                for (i = nameParts.length; i > 0; i -= 1) {
                  nameSegment = nameParts.slice(0, i).join('/');
                  if (baseParts) {
                    //Find the longest baseName segment match in the config.
                    //So, do joins on the biggest to smallest lengths of baseParts.
                    for (j = baseParts.length; j > 0; j -= 1) {
                      mapValue = map[baseParts.slice(0, j).join('/')];
                      //baseName segment has  config, find if it has one for
                      //this name.
                      if (mapValue) {
                        mapValue = mapValue[nameSegment];
                        if (mapValue) {
                          //Match, update name to the new value.
                          foundMap = mapValue;
                          foundI = i;
                          break;
                        }
                      }
                    }
                  }
                  if (foundMap) {
                    break;
                  }
                  //Check for a star map match, but just hold on to it,
                  //if there is a shorter segment match later in a matching
                  //config, then favor over this star map.
                  if (!foundStarMap && starMap && starMap[nameSegment]) {
                    foundStarMap = starMap[nameSegment];
                    starI = i;
                  }
                }
                if (!foundMap && foundStarMap) {
                  foundMap = foundStarMap;
                  foundI = starI;
                }
                if (foundMap) {
                  nameParts.splice(0, foundI, foundMap);
                  name = nameParts.join('/');
                }
              }
              return name;
            }
            function makeRequire(relName, forceSync) {
              return function () {
                //A version of a require function that passes a moduleName
                //value for items that may need to
                //look up paths relative to the moduleName
                var args = aps.call(arguments, 0);
                //If first arg is not require('string'), and there is only
                //one arg, it is the array form without a callback. Insert
                //a null so that the following concat is correct.
                if (typeof args[0] !== 'string' && args.length === 1) {
                  args.push(null);
                }
                return req.apply(undef, args.concat([
                  relName,
                  forceSync
                ]));
              };
            }
            function makeNormalize(relName) {
              return function (name) {
                return normalize(name, relName);
              };
            }
            function makeLoad(depName) {
              return function (value) {
                defined[depName] = value;
              };
            }
            function callDep(name) {
              if (hasProp(waiting, name)) {
                var args = waiting[name];
                delete waiting[name];
                defining[name] = true;
                main.apply(undef, args);
              }
              if (!hasProp(defined, name) && !hasProp(defining, name)) {
                throw new Error('No ' + name);
              }
              return defined[name];
            }
            //Turns a plugin!resource to [plugin, resource]
            //with the plugin being undefined if the name
            //did not have a plugin prefix.
            function splitPrefix(name) {
              var prefix, index = name ? name.indexOf('!') : -1;
              if (index > -1) {
                prefix = name.substring(0, index);
                name = name.substring(index + 1, name.length);
              }
              return [
                prefix,
                name
              ];
            }
            /**
     * Makes a name map, normalizing the name, and using a plugin
     * for normalization if necessary. Grabs a ref to plugin
     * too, as an optimization.
     */
            makeMap = function (name, relName) {
              var plugin, parts = splitPrefix(name), prefix = parts[0];
              name = parts[1];
              if (prefix) {
                prefix = normalize(prefix, relName);
                plugin = callDep(prefix);
              }
              //Normalize according
              if (prefix) {
                if (plugin && plugin.normalize) {
                  name = plugin.normalize(name, makeNormalize(relName));
                } else {
                  name = normalize(name, relName);
                }
              } else {
                name = normalize(name, relName);
                parts = splitPrefix(name);
                prefix = parts[0];
                name = parts[1];
                if (prefix) {
                  plugin = callDep(prefix);
                }
              }
              //Using ridiculous property names for space reasons
              return {
                f: prefix ? prefix + '!' + name : name,
                n: name,
                pr: prefix,
                p: plugin
              };
            };
            function makeConfig(name) {
              return function () {
                return config && config.config && config.config[name] || {};
              };
            }
            handlers = {
              require: function (name) {
                return makeRequire(name);
              },
              exports: function (name) {
                var e = defined[name];
                if (typeof e !== 'undefined') {
                  return e;
                } else {
                  return defined[name] = {};
                }
              },
              module: function (name) {
                return {
                  id: name,
                  uri: '',
                  exports: defined[name],
                  config: makeConfig(name)
                };
              }
            };
            main = function (name, deps, callback, relName) {
              var cjsModule, depName, ret, map, i, args = [], callbackType = typeof callback, usingExports;
              //Use name if no relName
              relName = relName || name;
              //Call the callback to define the module, if necessary.
              if (callbackType === 'undefined' || callbackType === 'function') {
                //Pull out the defined dependencies and pass the ordered
                //values to the callback.
                //Default to [require, exports, module] if no deps
                deps = !deps.length && callback.length ? [
                  'require',
                  'exports',
                  'module'
                ] : deps;
                for (i = 0; i < deps.length; i += 1) {
                  map = makeMap(deps[i], relName);
                  depName = map.f;
                  //Fast path CommonJS standard dependencies.
                  if (depName === 'require') {
                    args[i] = handlers.require(name);
                  } else if (depName === 'exports') {
                    //CommonJS module spec 1.1
                    args[i] = handlers.exports(name);
                    usingExports = true;
                  } else if (depName === 'module') {
                    //CommonJS module spec 1.1
                    cjsModule = args[i] = handlers.module(name);
                  } else if (hasProp(defined, depName) || hasProp(waiting, depName) || hasProp(defining, depName)) {
                    args[i] = callDep(depName);
                  } else if (map.p) {
                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
                    args[i] = defined[depName];
                  } else {
                    throw new Error(name + ' missing ' + depName);
                  }
                }
                ret = callback ? callback.apply(defined[name], args) : undefined;
                if (name) {
                  //If setting exports via "module" is in play,
                  //favor that over return value and exports. After that,
                  //favor a non-undefined return value over exports use.
                  if (cjsModule && cjsModule.exports !== undef && cjsModule.exports !== defined[name]) {
                    defined[name] = cjsModule.exports;
                  } else if (ret !== undef || !usingExports) {
                    //Use the return value from the function.
                    defined[name] = ret;
                  }
                }
              } else if (name) {
                //May just be an object definition for the module. Only
                //worry about defining if have a module name.
                defined[name] = callback;
              }
            };
            requirejs = require = req = function (deps, callback, relName, forceSync, alt) {
              if (typeof deps === 'string') {
                if (handlers[deps]) {
                  //callback in this case is really relName
                  return handlers[deps](callback);
                }
                //Just return the module wanted. In this scenario, the
                //deps arg is the module name, and second arg (if passed)
                //is just the relName.
                //Normalize module name, if it contains . or ..
                return callDep(makeMap(deps, callback).f);
              } else if (!deps.splice) {
                //deps is a config object, not an array.
                config = deps;
                if (config.deps) {
                  req(config.deps, config.callback);
                }
                if (!callback) {
                  return;
                }
                if (callback.splice) {
                  //callback is an array, which means it is a dependency list.
                  //Adjust args if there are dependencies
                  deps = callback;
                  callback = relName;
                  relName = null;
                } else {
                  deps = undef;
                }
              }
              //Support require(['a'])
              callback = callback || function () {
              };
              //If relName is a function, it is an errback handler,
              //so remove it.
              if (typeof relName === 'function') {
                relName = forceSync;
                forceSync = alt;
              }
              //Simulate async callback;
              if (forceSync) {
                main(undef, deps, callback, relName);
              } else {
                //Using a non-zero value because of concern for what old browsers
                //do, and latest browsers "upgrade" to 4 if lower value is used:
                //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:
                //If want a value immediately, use require('id') instead -- something
                //that works in almond on the global level, but not guaranteed and
                //unlikely to work in other AMD implementations.
                setTimeout(function () {
                  main(undef, deps, callback, relName);
                }, 4);
              }
              return req;
            };
            /**
     * Just drops the config on the floor, but returns req in case
     * the config return value is used.
     */
            req.config = function (cfg) {
              return req(cfg);
            };
            /**
     * Expose module registry for debugging and tooling
     */
            requirejs._defined = defined;
            define = function (name, deps, callback) {
              if (typeof name !== 'string') {
                throw new Error('See almond README: incorrect module build, no module name');
              }
              //This module may not have dependencies
              if (!deps.splice) {
                //deps is not an array, so probably means
                //an object literal or factory function for
                //the value. Adjust args.
                callback = deps;
                deps = [];
              }
              if (!hasProp(defined, name) && !hasProp(waiting, name)) {
                waiting[name] = [
                  name,
                  deps,
                  callback
                ];
              }
            };
            define.amd = { jQuery: true };
          }());
          S2.requirejs = requirejs;
          S2.require = require;
          S2.define = define;
        }
      }());
      S2.define('almond', function () {
      });
      /* global jQuery:false, $:false */
      S2.define('jquery', [], function () {
        var _$ = jQuery || $;
        if (_$ == null && console && console.error) {
          console.error('Select2: An instance of jQuery or a jQuery-compatible library was not ' + 'found. Make sure that you are including jQuery before Select2 on your ' + 'web page.');
        }
        return _$;
      });
      S2.define('select2/utils', ['jquery'], function ($) {
        var Utils = {};
        Utils.Extend = function (ChildClass, SuperClass) {
          var __hasProp = {}.hasOwnProperty;
          function BaseConstructor() {
            this.constructor = ChildClass;
          }
          for (var key in SuperClass) {
            if (__hasProp.call(SuperClass, key)) {
              ChildClass[key] = SuperClass[key];
            }
          }
          BaseConstructor.prototype = SuperClass.prototype;
          ChildClass.prototype = new BaseConstructor();
          ChildClass.__super__ = SuperClass.prototype;
          return ChildClass;
        };
        function getMethods(theClass) {
          var proto = theClass.prototype;
          var methods = [];
          for (var methodName in proto) {
            var m = proto[methodName];
            if (typeof m !== 'function') {
              continue;
            }
            if (methodName === 'constructor') {
              continue;
            }
            methods.push(methodName);
          }
          return methods;
        }
        Utils.Decorate = function (SuperClass, DecoratorClass) {
          var decoratedMethods = getMethods(DecoratorClass);
          var superMethods = getMethods(SuperClass);
          function DecoratedClass() {
            var unshift = Array.prototype.unshift;
            var argCount = DecoratorClass.prototype.constructor.length;
            var calledConstructor = SuperClass.prototype.constructor;
            if (argCount > 0) {
              unshift.call(arguments, SuperClass.prototype.constructor);
              calledConstructor = DecoratorClass.prototype.constructor;
            }
            calledConstructor.apply(this, arguments);
          }
          DecoratorClass.displayName = SuperClass.displayName;
          function ctr() {
            this.constructor = DecoratedClass;
          }
          DecoratedClass.prototype = new ctr();
          for (var m = 0; m < superMethods.length; m++) {
            var superMethod = superMethods[m];
            DecoratedClass.prototype[superMethod] = SuperClass.prototype[superMethod];
          }
          var calledMethod = function (methodName) {
            // Stub out the original method if it's not decorating an actual method
            var originalMethod = function () {
            };
            if (methodName in DecoratedClass.prototype) {
              originalMethod = DecoratedClass.prototype[methodName];
            }
            var decoratedMethod = DecoratorClass.prototype[methodName];
            return function () {
              var unshift = Array.prototype.unshift;
              unshift.call(arguments, originalMethod);
              return decoratedMethod.apply(this, arguments);
            };
          };
          for (var d = 0; d < decoratedMethods.length; d++) {
            var decoratedMethod = decoratedMethods[d];
            DecoratedClass.prototype[decoratedMethod] = calledMethod(decoratedMethod);
          }
          return DecoratedClass;
        };
        var Observable = function () {
          this.listeners = {};
        };
        Observable.prototype.on = function (event, callback) {
          this.listeners = this.listeners || {};
          if (event in this.listeners) {
            this.listeners[event].push(callback);
          } else {
            this.listeners[event] = [callback];
          }
        };
        Observable.prototype.trigger = function (event) {
          var slice = Array.prototype.slice;
          this.listeners = this.listeners || {};
          if (event in this.listeners) {
            this.invoke(this.listeners[event], slice.call(arguments, 1));
          }
          if ('*' in this.listeners) {
            this.invoke(this.listeners['*'], arguments);
          }
        };
        Observable.prototype.invoke = function (listeners, params) {
          for (var i = 0, len = listeners.length; i < len; i++) {
            listeners[i].apply(this, params);
          }
        };
        Utils.Observable = Observable;
        Utils.generateChars = function (length) {
          var chars = '';
          for (var i = 0; i < length; i++) {
            var randomChar = Math.floor(Math.random() * 36);
            chars += randomChar.toString(36);
          }
          return chars;
        };
        Utils.bind = function (func, context) {
          return function () {
            func.apply(context, arguments);
          };
        };
        Utils._convertData = function (data) {
          for (var originalKey in data) {
            var keys = originalKey.split('-');
            var dataLevel = data;
            if (keys.length === 1) {
              continue;
            }
            for (var k = 0; k < keys.length; k++) {
              var key = keys[k];
              // Lowercase the first letter
              // By default, dash-separated becomes camelCase
              key = key.substring(0, 1).toLowerCase() + key.substring(1);
              if (!(key in dataLevel)) {
                dataLevel[key] = {};
              }
              if (k == keys.length - 1) {
                dataLevel[key] = data[originalKey];
              }
              dataLevel = dataLevel[key];
            }
            delete data[originalKey];
          }
          return data;
        };
        Utils.hasScroll = function (index, el) {
          // Adapted from the function created by @ShadowScripter
          // and adapted by @BillBarry on the Stack Exchange Code Review website.
          // The original code can be found at
          // http://codereview.stackexchange.com/q/13338
          // and was designed to be used with the Sizzle selector engine.
          var $el = $(el);
          var overflowX = el.style.overflowX;
          var overflowY = el.style.overflowY;
          //Check both x and y declarations
          if (overflowX === overflowY && (overflowY === 'hidden' || overflowY === 'visible')) {
            return false;
          }
          if (overflowX === 'scroll' || overflowY === 'scroll') {
            return true;
          }
          return $el.innerHeight() < el.scrollHeight || $el.innerWidth() < el.scrollWidth;
        };
        Utils.escapeMarkup = function (markup) {
          var replaceMap = {
              '\\': '&#92;',
              '&': '&amp;',
              '<': '&lt;',
              '>': '&gt;',
              '"': '&quot;',
              '\'': '&#39;',
              '/': '&#47;'
            };
          // Do not try to escape the markup if it's not a string
          if (typeof markup !== 'string') {
            return markup;
          }
          return String(markup).replace(/[&<>"'\/\\]/g, function (match) {
            return replaceMap[match];
          });
        };
        // Append an array of jQuery nodes to a given element.
        Utils.appendMany = function ($element, $nodes) {
          // jQuery 1.7.x does not support $.fn.append() with an array
          // Fall back to a jQuery object collection using $.fn.add()
          if ($.fn.jquery.substr(0, 3) === '1.7') {
            var $jqNodes = $();
            $.map($nodes, function (node) {
              $jqNodes = $jqNodes.add(node);
            });
            $nodes = $jqNodes;
          }
          $element.append($nodes);
        };
        return Utils;
      });
      S2.define('select2/results', [
        'jquery',
        './utils'
      ], function ($, Utils) {
        function Results($element, options, dataAdapter) {
          this.$element = $element;
          this.data = dataAdapter;
          this.options = options;
          Results.__super__.constructor.call(this);
        }
        Utils.Extend(Results, Utils.Observable);
        Results.prototype.render = function () {
          var $results = $('<ul class="select2-results__options" role="tree"></ul>');
          if (this.options.get('multiple')) {
            $results.attr('aria-multiselectable', 'true');
          }
          this.$results = $results;
          return $results;
        };
        Results.prototype.clear = function () {
          this.$results.empty();
        };
        Results.prototype.displayMessage = function (params) {
          var escapeMarkup = this.options.get('escapeMarkup');
          this.clear();
          this.hideLoading();
          var $message = $('<li role="treeitem" aria-live="assertive"' + ' class="select2-results__option"></li>');
          var message = this.options.get('translations').get(params.message);
          $message.append(escapeMarkup(message(params.args)));
          $message[0].className += ' select2-results__message';
          this.$results.append($message);
        };
        Results.prototype.hideMessages = function () {
          this.$results.find('.select2-results__message').remove();
        };
        Results.prototype.append = function (data) {
          this.hideLoading();
          var $options = [];
          if (data.results == null || data.results.length === 0) {
            if (this.$results.children().length === 0) {
              this.trigger('results:message', { message: 'noResults' });
            }
            return;
          }
          data.results = this.sort(data.results);
          for (var d = 0; d < data.results.length; d++) {
            var item = data.results[d];
            var $option = this.option(item);
            $options.push($option);
          }
          this.$results.append($options);
        };
        Results.prototype.position = function ($results, $dropdown) {
          var $resultsContainer = $dropdown.find('.select2-results');
          $resultsContainer.append($results);
        };
        Results.prototype.sort = function (data) {
          var sorter = this.options.get('sorter');
          return sorter(data);
        };
        Results.prototype.setClasses = function () {
          var self = this;
          this.data.current(function (selected) {
            var selectedIds = $.map(selected, function (s) {
                return s.id.toString();
              });
            var $options = self.$results.find('.select2-results__option[aria-selected]');
            $options.each(function () {
              var $option = $(this);
              var item = $.data(this, 'data');
              // id needs to be converted to a string when comparing
              var id = '' + item.id;
              if (item.element != null && item.element.selected || item.element == null && $.inArray(id, selectedIds) > -1) {
                $option.attr('aria-selected', 'true');
              } else {
                $option.attr('aria-selected', 'false');
              }
            });
            var $selected = $options.filter('[aria-selected=true]');
            // Check if there are any selected options
            if ($selected.length > 0) {
              // If there are selected options, highlight the first
              $selected.first().trigger('mouseenter');
            } else {
              // If there are no selected options, highlight the first option
              // in the dropdown
              $options.first().trigger('mouseenter');
            }
          });
        };
        Results.prototype.showLoading = function (params) {
          this.hideLoading();
          var loadingMore = this.options.get('translations').get('searching');
          var loading = {
              disabled: true,
              loading: true,
              text: loadingMore(params)
            };
          var $loading = this.option(loading);
          $loading.className += ' loading-results';
          this.$results.prepend($loading);
        };
        Results.prototype.hideLoading = function () {
          this.$results.find('.loading-results').remove();
        };
        Results.prototype.option = function (data) {
          var option = document.createElement('li');
          option.className = 'select2-results__option';
          var attrs = {
              'role': 'treeitem',
              'aria-selected': 'false'
            };
          if (data.disabled) {
            delete attrs['aria-selected'];
            attrs['aria-disabled'] = 'true';
          }
          if (data.id == null) {
            delete attrs['aria-selected'];
          }
          if (data._resultId != null) {
            option.id = data._resultId;
          }
          if (data.title) {
            option.title = data.title;
          }
          if (data.children) {
            attrs.role = 'group';
            attrs['aria-label'] = data.text;
            delete attrs['aria-selected'];
          }
          for (var attr in attrs) {
            var val = attrs[attr];
            option.setAttribute(attr, val);
          }
          if (data.children) {
            var $option = $(option);
            var label = document.createElement('strong');
            label.className = 'select2-results__group';
            var $label = $(label);
            this.template(data, label);
            var $children = [];
            for (var c = 0; c < data.children.length; c++) {
              var child = data.children[c];
              var $child = this.option(child);
              $children.push($child);
            }
            var $childrenContainer = $('<ul></ul>', { 'class': 'select2-results__options select2-results__options--nested' });
            $childrenContainer.append($children);
            $option.append(label);
            $option.append($childrenContainer);
          } else {
            this.template(data, option);
          }
          $.data(option, 'data', data);
          return option;
        };
        Results.prototype.bind = function (container, $container) {
          var self = this;
          var id = container.id + '-results';
          this.$results.attr('id', id);
          container.on('results:all', function (params) {
            self.clear();
            self.append(params.data);
            if (container.isOpen()) {
              self.setClasses();
            }
          });
          container.on('results:append', function (params) {
            self.append(params.data);
            if (container.isOpen()) {
              self.setClasses();
            }
          });
          container.on('query', function (params) {
            self.hideMessages();
            self.showLoading(params);
          });
          container.on('select', function () {
            if (!container.isOpen()) {
              return;
            }
            self.setClasses();
          });
          container.on('unselect', function () {
            if (!container.isOpen()) {
              return;
            }
            self.setClasses();
          });
          container.on('open', function () {
            // When the dropdown is open, aria-expended="true"
            self.$results.attr('aria-expanded', 'true');
            self.$results.attr('aria-hidden', 'false');
            self.setClasses();
            self.ensureHighlightVisible();
          });
          container.on('close', function () {
            // When the dropdown is closed, aria-expended="false"
            self.$results.attr('aria-expanded', 'false');
            self.$results.attr('aria-hidden', 'true');
            self.$results.removeAttr('aria-activedescendant');
          });
          container.on('results:toggle', function () {
            var $highlighted = self.getHighlightedResults();
            if ($highlighted.length === 0) {
              return;
            }
            $highlighted.trigger('mouseup');
          });
          container.on('results:select', function () {
            var $highlighted = self.getHighlightedResults();
            if ($highlighted.length === 0) {
              return;
            }
            var data = $highlighted.data('data');
            if ($highlighted.attr('aria-selected') == 'true') {
              self.trigger('close', {});
            } else {
              self.trigger('select', { data: data });
            }
          });
          container.on('results:previous', function () {
            var $highlighted = self.getHighlightedResults();
            var $options = self.$results.find('[aria-selected]');
            var currentIndex = $options.index($highlighted);
            // If we are already at te top, don't move further
            if (currentIndex === 0) {
              return;
            }
            var nextIndex = currentIndex - 1;
            // If none are highlighted, highlight the first
            if ($highlighted.length === 0) {
              nextIndex = 0;
            }
            var $next = $options.eq(nextIndex);
            $next.trigger('mouseenter');
            var currentOffset = self.$results.offset().top;
            var nextTop = $next.offset().top;
            var nextOffset = self.$results.scrollTop() + (nextTop - currentOffset);
            if (nextIndex === 0) {
              self.$results.scrollTop(0);
            } else if (nextTop - currentOffset < 0) {
              self.$results.scrollTop(nextOffset);
            }
          });
          container.on('results:next', function () {
            var $highlighted = self.getHighlightedResults();
            var $options = self.$results.find('[aria-selected]');
            var currentIndex = $options.index($highlighted);
            var nextIndex = currentIndex + 1;
            // If we are at the last option, stay there
            if (nextIndex >= $options.length) {
              return;
            }
            var $next = $options.eq(nextIndex);
            $next.trigger('mouseenter');
            var currentOffset = self.$results.offset().top + self.$results.outerHeight(false);
            var nextBottom = $next.offset().top + $next.outerHeight(false);
            var nextOffset = self.$results.scrollTop() + nextBottom - currentOffset;
            if (nextIndex === 0) {
              self.$results.scrollTop(0);
            } else if (nextBottom > currentOffset) {
              self.$results.scrollTop(nextOffset);
            }
          });
          container.on('results:focus', function (params) {
            params.element.addClass('select2-results__option--highlighted');
          });
          container.on('results:message', function (params) {
            self.displayMessage(params);
          });
          if ($.fn.mousewheel) {
            this.$results.on('mousewheel', function (e) {
              var top = self.$results.scrollTop();
              var bottom = self.$results.get(0).scrollHeight - top + e.deltaY;
              var isAtTop = e.deltaY > 0 && top - e.deltaY <= 0;
              var isAtBottom = e.deltaY < 0 && bottom <= self.$results.height();
              if (isAtTop) {
                self.$results.scrollTop(0);
                e.preventDefault();
                e.stopPropagation();
              } else if (isAtBottom) {
                self.$results.scrollTop(self.$results.get(0).scrollHeight - self.$results.height());
                e.preventDefault();
                e.stopPropagation();
              }
            });
          }
          this.$results.on('mouseup', '.select2-results__option[aria-selected]', function (evt) {
            var $this = $(this);
            var data = $this.data('data');
            if ($this.attr('aria-selected') === 'true') {
              if (self.options.get('multiple')) {
                self.trigger('unselect', {
                  originalEvent: evt,
                  data: data
                });
              } else {
                self.trigger('close', {});
              }
              return;
            }
            self.trigger('select', {
              originalEvent: evt,
              data: data
            });
          });
          this.$results.on('mouseenter', '.select2-results__option[aria-selected]', function (evt) {
            var data = $(this).data('data');
            self.getHighlightedResults().removeClass('select2-results__option--highlighted');
            self.trigger('results:focus', {
              data: data,
              element: $(this)
            });
          });
        };
        Results.prototype.getHighlightedResults = function () {
          var $highlighted = this.$results.find('.select2-results__option--highlighted');
          return $highlighted;
        };
        Results.prototype.destroy = function () {
          this.$results.remove();
        };
        Results.prototype.ensureHighlightVisible = function () {
          var $highlighted = this.getHighlightedResults();
          if ($highlighted.length === 0) {
            return;
          }
          var $options = this.$results.find('[aria-selected]');
          var currentIndex = $options.index($highlighted);
          var currentOffset = this.$results.offset().top;
          var nextTop = $highlighted.offset().top;
          var nextOffset = this.$results.scrollTop() + (nextTop - currentOffset);
          var offsetDelta = nextTop - currentOffset;
          nextOffset -= $highlighted.outerHeight(false) * 2;
          if (currentIndex <= 2) {
            this.$results.scrollTop(0);
          } else if (offsetDelta > this.$results.outerHeight() || offsetDelta < 0) {
            this.$results.scrollTop(nextOffset);
          }
        };
        Results.prototype.template = function (result, container) {
          var template = this.options.get('templateResult');
          var escapeMarkup = this.options.get('escapeMarkup');
          var content = template(result, container);
          if (content == null) {
            container.style.display = 'none';
          } else if (typeof content === 'string') {
            container.innerHTML = escapeMarkup(content);
          } else {
            $(container).append(content);
          }
        };
        return Results;
      });
      S2.define('select2/keys', [], function () {
        var KEYS = {
            BACKSPACE: 8,
            TAB: 9,
            ENTER: 13,
            SHIFT: 16,
            CTRL: 17,
            ALT: 18,
            ESC: 27,
            SPACE: 32,
            PAGE_UP: 33,
            PAGE_DOWN: 34,
            END: 35,
            HOME: 36,
            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            DOWN: 40,
            DELETE: 46
          };
        return KEYS;
      });
      S2.define('select2/selection/base', [
        'jquery',
        '../utils',
        '../keys'
      ], function ($, Utils, KEYS) {
        function BaseSelection($element, options) {
          this.$element = $element;
          this.options = options;
          BaseSelection.__super__.constructor.call(this);
        }
        Utils.Extend(BaseSelection, Utils.Observable);
        BaseSelection.prototype.render = function () {
          var $selection = $('<span class="select2-selection" role="combobox" ' + ' aria-haspopup="true" aria-expanded="false">' + '</span>');
          this._tabindex = 0;
          if (this.$element.data('old-tabindex') != null) {
            this._tabindex = this.$element.data('old-tabindex');
          } else if (this.$element.attr('tabindex') != null) {
            this._tabindex = this.$element.attr('tabindex');
          }
          $selection.attr('title', this.$element.attr('title'));
          $selection.attr('tabindex', this._tabindex);
          this.$selection = $selection;
          return $selection;
        };
        BaseSelection.prototype.bind = function (container, $container) {
          var self = this;
          var id = container.id + '-container';
          var resultsId = container.id + '-results';
          this.container = container;
          this.$selection.on('focus', function (evt) {
            self.trigger('focus', evt);
          });
          this.$selection.on('blur', function (evt) {
            self._handleBlur(evt);
          });
          this.$selection.on('keydown', function (evt) {
            self.trigger('keypress', evt);
            if (evt.which === KEYS.SPACE) {
              evt.preventDefault();
            }
          });
          container.on('results:focus', function (params) {
            self.$selection.attr('aria-activedescendant', params.data._resultId);
          });
          container.on('selection:update', function (params) {
            self.update(params.data);
          });
          container.on('open', function () {
            // When the dropdown is open, aria-expanded="true"
            self.$selection.attr('aria-expanded', 'true');
            self.$selection.attr('aria-owns', resultsId);
            self._attachCloseHandler(container);
          });
          container.on('close', function () {
            // When the dropdown is closed, aria-expanded="false"
            self.$selection.attr('aria-expanded', 'false');
            self.$selection.removeAttr('aria-activedescendant');
            self.$selection.removeAttr('aria-owns');
            self.$selection.focus();
            self._detachCloseHandler(container);
          });
          container.on('enable', function () {
            self.$selection.attr('tabindex', self._tabindex);
          });
          container.on('disable', function () {
            self.$selection.attr('tabindex', '-1');
          });
        };
        BaseSelection.prototype._handleBlur = function (evt) {
          var self = this;
          // This needs to be delayed as the active element is the body when the tab
          // key is pressed, possibly along with others.
          window.setTimeout(function () {
            // Don't trigger `blur` if the focus is still in the selection
            if (document.activeElement == self.$selection[0] || $.contains(self.$selection[0], document.activeElement)) {
              return;
            }
            self.trigger('blur', evt);
          }, 1);
        };
        BaseSelection.prototype._attachCloseHandler = function (container) {
          var self = this;
          $(document.body).on('mousedown.select2.' + container.id, function (e) {
            var $target = $(e.target);
            var $select = $target.closest('.select2');
            var $all = $('.select2.select2-container--open');
            $all.each(function () {
              var $this = $(this);
              if (this == $select[0]) {
                return;
              }
              var $element = $this.data('element');
              $element.select2('close');
            });
          });
        };
        BaseSelection.prototype._detachCloseHandler = function (container) {
          $(document.body).off('mousedown.select2.' + container.id);
        };
        BaseSelection.prototype.position = function ($selection, $container) {
          var $selectionContainer = $container.find('.selection');
          $selectionContainer.append($selection);
        };
        BaseSelection.prototype.destroy = function () {
          this._detachCloseHandler(this.container);
        };
        BaseSelection.prototype.update = function (data) {
          throw new Error('The `update` method must be defined in child classes.');
        };
        return BaseSelection;
      });
      S2.define('select2/selection/single', [
        'jquery',
        './base',
        '../utils',
        '../keys'
      ], function ($, BaseSelection, Utils, KEYS) {
        function SingleSelection() {
          SingleSelection.__super__.constructor.apply(this, arguments);
        }
        Utils.Extend(SingleSelection, BaseSelection);
        SingleSelection.prototype.render = function () {
          var $selection = SingleSelection.__super__.render.call(this);
          $selection.addClass('select2-selection--single');
          $selection.html('<span class="select2-selection__rendered"></span>' + '<span class="select2-selection__arrow" role="presentation">' + '<b role="presentation"></b>' + '</span>');
          return $selection;
        };
        SingleSelection.prototype.bind = function (container, $container) {
          var self = this;
          SingleSelection.__super__.bind.apply(this, arguments);
          var id = container.id + '-container';
          this.$selection.find('.select2-selection__rendered').attr('id', id);
          this.$selection.attr('aria-labelledby', id);
          this.$selection.on('mousedown', function (evt) {
            // Only respond to left clicks
            if (evt.which !== 1) {
              return;
            }
            self.trigger('toggle', { originalEvent: evt });
          });
          this.$selection.on('focus', function (evt) {
          });
          this.$selection.on('blur', function (evt) {
          });
          container.on('selection:update', function (params) {
            self.update(params.data);
          });
        };
        SingleSelection.prototype.clear = function () {
          this.$selection.find('.select2-selection__rendered').empty();
        };
        SingleSelection.prototype.display = function (data, container) {
          var template = this.options.get('templateSelection');
          var escapeMarkup = this.options.get('escapeMarkup');
          return escapeMarkup(template(data, container));
        };
        SingleSelection.prototype.selectionContainer = function () {
          return $('<span></span>');
        };
        SingleSelection.prototype.update = function (data) {
          if (data.length === 0) {
            this.clear();
            return;
          }
          var selection = data[0];
          var $rendered = this.$selection.find('.select2-selection__rendered');
          var formatted = this.display(selection, $rendered);
          $rendered.empty().append(formatted);
          $rendered.prop('title', selection.title || selection.text);
        };
        return SingleSelection;
      });
      S2.define('select2/selection/multiple', [
        'jquery',
        './base',
        '../utils'
      ], function ($, BaseSelection, Utils) {
        function MultipleSelection($element, options) {
          MultipleSelection.__super__.constructor.apply(this, arguments);
        }
        Utils.Extend(MultipleSelection, BaseSelection);
        MultipleSelection.prototype.render = function () {
          var $selection = MultipleSelection.__super__.render.call(this);
          $selection.addClass('select2-selection--multiple');
          $selection.html('<ul class="select2-selection__rendered"></ul>');
          return $selection;
        };
        MultipleSelection.prototype.bind = function (container, $container) {
          var self = this;
          MultipleSelection.__super__.bind.apply(this, arguments);
          this.$selection.on('click', function (evt) {
            self.trigger('toggle', { originalEvent: evt });
          });
          this.$selection.on('click', '.select2-selection__choice__remove', function (evt) {
            // Ignore the event if it is disabled
            if (self.options.get('disabled')) {
              return;
            }
            var $remove = $(this);
            var $selection = $remove.parent();
            var data = $selection.data('data');
            self.trigger('unselect', {
              originalEvent: evt,
              data: data
            });
          });
        };
        MultipleSelection.prototype.clear = function () {
          this.$selection.find('.select2-selection__rendered').empty();
        };
        MultipleSelection.prototype.display = function (data, container) {
          var template = this.options.get('templateSelection');
          var escapeMarkup = this.options.get('escapeMarkup');
          return escapeMarkup(template(data, container));
        };
        MultipleSelection.prototype.selectionContainer = function () {
          var $container = $('<li class="select2-selection__choice">' + '<span class="select2-selection__choice__remove" role="presentation">' + '&times;' + '</span>' + '</li>');
          return $container;
        };
        MultipleSelection.prototype.update = function (data) {
          this.clear();
          if (data.length === 0) {
            return;
          }
          var $selections = [];
          for (var d = 0; d < data.length; d++) {
            var selection = data[d];
            var $selection = this.selectionContainer();
            var formatted = this.display(selection, $selection);
            $selection.append(formatted);
            $selection.prop('title', selection.title || selection.text);
            $selection.data('data', selection);
            $selections.push($selection);
          }
          var $rendered = this.$selection.find('.select2-selection__rendered');
          Utils.appendMany($rendered, $selections);
        };
        return MultipleSelection;
      });
      S2.define('select2/selection/placeholder', ['../utils'], function (Utils) {
        function Placeholder(decorated, $element, options) {
          this.placeholder = this.normalizePlaceholder(options.get('placeholder'));
          decorated.call(this, $element, options);
        }
        Placeholder.prototype.normalizePlaceholder = function (_, placeholder) {
          if (typeof placeholder === 'string') {
            placeholder = {
              id: '',
              text: placeholder
            };
          }
          return placeholder;
        };
        Placeholder.prototype.createPlaceholder = function (decorated, placeholder) {
          var $placeholder = this.selectionContainer();
          $placeholder.html(this.display(placeholder));
          $placeholder.addClass('select2-selection__placeholder').removeClass('select2-selection__choice');
          return $placeholder;
        };
        Placeholder.prototype.update = function (decorated, data) {
          var singlePlaceholder = data.length == 1 && data[0].id != this.placeholder.id;
          var multipleSelections = data.length > 1;
          if (multipleSelections || singlePlaceholder) {
            return decorated.call(this, data);
          }
          this.clear();
          var $placeholder = this.createPlaceholder(this.placeholder);
          this.$selection.find('.select2-selection__rendered').append($placeholder);
        };
        return Placeholder;
      });
      S2.define('select2/selection/allowClear', [
        'jquery',
        '../keys'
      ], function ($, KEYS) {
        function AllowClear() {
        }
        AllowClear.prototype.bind = function (decorated, container, $container) {
          var self = this;
          decorated.call(this, container, $container);
          if (this.placeholder == null) {
            if (this.options.get('debug') && window.console && console.error) {
              console.error('Select2: The `allowClear` option should be used in combination ' + 'with the `placeholder` option.');
            }
          }
          this.$selection.on('mousedown', '.select2-selection__clear', function (evt) {
            self._handleClear(evt);
          });
          container.on('keypress', function (evt) {
            self._handleKeyboardClear(evt, container);
          });
        };
        AllowClear.prototype._handleClear = function (_, evt) {
          // Ignore the event if it is disabled
          if (this.options.get('disabled')) {
            return;
          }
          var $clear = this.$selection.find('.select2-selection__clear');
          // Ignore the event if nothing has been selected
          if ($clear.length === 0) {
            return;
          }
          evt.stopPropagation();
          var data = $clear.data('data');
          for (var d = 0; d < data.length; d++) {
            var unselectData = { data: data[d] };
            // Trigger the `unselect` event, so people can prevent it from being
            // cleared.
            this.trigger('unselect', unselectData);
            // If the event was prevented, don't clear it out.
            if (unselectData.prevented) {
              return;
            }
          }
          this.$element.val(this.placeholder.id).trigger('change');
          this.trigger('toggle', {});
        };
        AllowClear.prototype._handleKeyboardClear = function (_, evt, container) {
          if (container.isOpen()) {
            return;
          }
          if (evt.which == KEYS.DELETE || evt.which == KEYS.BACKSPACE) {
            this._handleClear(evt);
          }
        };
        AllowClear.prototype.update = function (decorated, data) {
          decorated.call(this, data);
          if (this.$selection.find('.select2-selection__placeholder').length > 0 || data.length === 0) {
            return;
          }
          var $remove = $('<span class="select2-selection__clear">' + '&times;' + '</span>');
          $remove.data('data', data);
          this.$selection.find('.select2-selection__rendered').prepend($remove);
        };
        return AllowClear;
      });
      S2.define('select2/selection/search', [
        'jquery',
        '../utils',
        '../keys'
      ], function ($, Utils, KEYS) {
        function Search(decorated, $element, options) {
          decorated.call(this, $element, options);
        }
        Search.prototype.render = function (decorated) {
          var $search = $('<li class="select2-search select2-search--inline">' + '<input class="select2-search__field" type="search" tabindex="-1"' + ' autocomplete="off" autocorrect="off" autocapitalize="off"' + ' spellcheck="false" role="textbox" aria-autocomplete="list" />' + '</li>');
          this.$searchContainer = $search;
          this.$search = $search.find('input');
          var $rendered = decorated.call(this);
          this._transferTabIndex();
          return $rendered;
        };
        Search.prototype.bind = function (decorated, container, $container) {
          var self = this;
          decorated.call(this, container, $container);
          container.on('open', function () {
            self.$search.trigger('focus');
          });
          container.on('close', function () {
            self.$search.val('');
            self.$search.removeAttr('aria-activedescendant');
            self.$search.trigger('focus');
          });
          container.on('enable', function () {
            self.$search.prop('disabled', false);
            self._transferTabIndex();
          });
          container.on('disable', function () {
            self.$search.prop('disabled', true);
          });
          container.on('focus', function (evt) {
            self.$search.trigger('focus');
          });
          container.on('results:focus', function (params) {
            self.$search.attr('aria-activedescendant', params.id);
          });
          this.$selection.on('focusin', '.select2-search--inline', function (evt) {
            self.trigger('focus', evt);
          });
          this.$selection.on('focusout', '.select2-search--inline', function (evt) {
            self._handleBlur(evt);
          });
          this.$selection.on('keydown', '.select2-search--inline', function (evt) {
            evt.stopPropagation();
            self.trigger('keypress', evt);
            self._keyUpPrevented = evt.isDefaultPrevented();
            var key = evt.which;
            if (key === KEYS.BACKSPACE && self.$search.val() === '') {
              var $previousChoice = self.$searchContainer.prev('.select2-selection__choice');
              if ($previousChoice.length > 0) {
                var item = $previousChoice.data('data');
                self.searchRemoveChoice(item);
                evt.preventDefault();
              }
            }
          });
          // Try to detect the IE version should the `documentMode` property that
          // is stored on the document. This is only implemented in IE and is
          // slightly cleaner than doing a user agent check.
          // This property is not available in Edge, but Edge also doesn't have
          // this bug.
          var msie = document.documentMode;
          var disableInputEvents = msie && msie <= 11;
          // Workaround for browsers which do not support the `input` event
          // This will prevent double-triggering of events for browsers which support
          // both the `keyup` and `input` events.
          this.$selection.on('input.searchcheck', '.select2-search--inline', function (evt) {
            // IE will trigger the `input` event when a placeholder is used on a
            // search box. To get around this issue, we are forced to ignore all
            // `input` events in IE and keep using `keyup`.
            if (disableInputEvents) {
              self.$selection.off('input.search input.searchcheck');
              return;
            }
            // Unbind the duplicated `keyup` event
            self.$selection.off('keyup.search');
          });
          this.$selection.on('keyup.search input.search', '.select2-search--inline', function (evt) {
            // IE will trigger the `input` event when a placeholder is used on a
            // search box. To get around this issue, we are forced to ignore all
            // `input` events in IE and keep using `keyup`.
            if (disableInputEvents && evt.type === 'input') {
              self.$selection.off('input.search input.searchcheck');
              return;
            }
            var key = evt.which;
            // We can freely ignore events from modifier keys
            if (key == KEYS.SHIFT || key == KEYS.CTRL || key == KEYS.ALT) {
              return;
            }
            // Tabbing will be handled during the `keydown` phase
            if (key == KEYS.TAB) {
              return;
            }
            self.handleSearch(evt);
          });
        };
        /**
   * This method will transfer the tabindex attribute from the rendered
   * selection to the search box. This allows for the search box to be used as
   * the primary focus instead of the selection container.
   *
   * @private
   */
        Search.prototype._transferTabIndex = function (decorated) {
          this.$search.attr('tabindex', this.$selection.attr('tabindex'));
          this.$selection.attr('tabindex', '-1');
        };
        Search.prototype.createPlaceholder = function (decorated, placeholder) {
          this.$search.attr('placeholder', placeholder.text);
        };
        Search.prototype.update = function (decorated, data) {
          var searchHadFocus = this.$search[0] == document.activeElement;
          this.$search.attr('placeholder', '');
          decorated.call(this, data);
          this.$selection.find('.select2-selection__rendered').append(this.$searchContainer);
          this.resizeSearch();
          if (searchHadFocus) {
            this.$search.focus();
          }
        };
        Search.prototype.handleSearch = function () {
          this.resizeSearch();
          if (!this._keyUpPrevented) {
            var input = this.$search.val();
            this.trigger('query', { term: input });
          }
          this._keyUpPrevented = false;
        };
        Search.prototype.searchRemoveChoice = function (decorated, item) {
          this.trigger('unselect', { data: item });
          this.$search.val(item.text);
          this.handleSearch();
        };
        Search.prototype.resizeSearch = function () {
          this.$search.css('width', '25px');
          var width = '';
          if (this.$search.attr('placeholder') !== '') {
            width = this.$selection.find('.select2-selection__rendered').innerWidth();
          } else {
            var minimumWidth = this.$search.val().length + 1;
            width = minimumWidth * 0.75 + 'em';
          }
          this.$search.css('width', width);
        };
        return Search;
      });
      S2.define('select2/selection/eventRelay', ['jquery'], function ($) {
        function EventRelay() {
        }
        EventRelay.prototype.bind = function (decorated, container, $container) {
          var self = this;
          var relayEvents = [
              'open',
              'opening',
              'close',
              'closing',
              'select',
              'selecting',
              'unselect',
              'unselecting'
            ];
          var preventableEvents = [
              'opening',
              'closing',
              'selecting',
              'unselecting'
            ];
          decorated.call(this, container, $container);
          container.on('*', function (name, params) {
            // Ignore events that should not be relayed
            if ($.inArray(name, relayEvents) === -1) {
              return;
            }
            // The parameters should always be an object
            params = params || {};
            // Generate the jQuery event for the Select2 event
            var evt = $.Event('select2:' + name, { params: params });
            self.$element.trigger(evt);
            // Only handle preventable events if it was one
            if ($.inArray(name, preventableEvents) === -1) {
              return;
            }
            params.prevented = evt.isDefaultPrevented();
          });
        };
        return EventRelay;
      });
      S2.define('select2/translation', [
        'jquery',
        'require'
      ], function ($, require) {
        function Translation(dict) {
          this.dict = dict || {};
        }
        Translation.prototype.all = function () {
          return this.dict;
        };
        Translation.prototype.get = function (key) {
          return this.dict[key];
        };
        Translation.prototype.extend = function (translation) {
          this.dict = $.extend({}, translation.all(), this.dict);
        };
        // Static functions
        Translation._cache = {};
        Translation.loadPath = function (path) {
          if (!(path in Translation._cache)) {
            var translations = require(path);
            Translation._cache[path] = translations;
          }
          return new Translation(Translation._cache[path]);
        };
        return Translation;
      });
      S2.define('select2/diacritics', [], function () {
        var diacritics = {
            '\u24b6': 'A',
            '\uff21': 'A',
            '\xc0': 'A',
            '\xc1': 'A',
            '\xc2': 'A',
            '\u1ea6': 'A',
            '\u1ea4': 'A',
            '\u1eaa': 'A',
            '\u1ea8': 'A',
            '\xc3': 'A',
            '\u0100': 'A',
            '\u0102': 'A',
            '\u1eb0': 'A',
            '\u1eae': 'A',
            '\u1eb4': 'A',
            '\u1eb2': 'A',
            '\u0226': 'A',
            '\u01e0': 'A',
            '\xc4': 'A',
            '\u01de': 'A',
            '\u1ea2': 'A',
            '\xc5': 'A',
            '\u01fa': 'A',
            '\u01cd': 'A',
            '\u0200': 'A',
            '\u0202': 'A',
            '\u1ea0': 'A',
            '\u1eac': 'A',
            '\u1eb6': 'A',
            '\u1e00': 'A',
            '\u0104': 'A',
            '\u023a': 'A',
            '\u2c6f': 'A',
            '\ua732': 'AA',
            '\xc6': 'AE',
            '\u01fc': 'AE',
            '\u01e2': 'AE',
            '\ua734': 'AO',
            '\ua736': 'AU',
            '\ua738': 'AV',
            '\ua73a': 'AV',
            '\ua73c': 'AY',
            '\u24b7': 'B',
            '\uff22': 'B',
            '\u1e02': 'B',
            '\u1e04': 'B',
            '\u1e06': 'B',
            '\u0243': 'B',
            '\u0182': 'B',
            '\u0181': 'B',
            '\u24b8': 'C',
            '\uff23': 'C',
            '\u0106': 'C',
            '\u0108': 'C',
            '\u010a': 'C',
            '\u010c': 'C',
            '\xc7': 'C',
            '\u1e08': 'C',
            '\u0187': 'C',
            '\u023b': 'C',
            '\ua73e': 'C',
            '\u24b9': 'D',
            '\uff24': 'D',
            '\u1e0a': 'D',
            '\u010e': 'D',
            '\u1e0c': 'D',
            '\u1e10': 'D',
            '\u1e12': 'D',
            '\u1e0e': 'D',
            '\u0110': 'D',
            '\u018b': 'D',
            '\u018a': 'D',
            '\u0189': 'D',
            '\ua779': 'D',
            '\u01f1': 'DZ',
            '\u01c4': 'DZ',
            '\u01f2': 'Dz',
            '\u01c5': 'Dz',
            '\u24ba': 'E',
            '\uff25': 'E',
            '\xc8': 'E',
            '\xc9': 'E',
            '\xca': 'E',
            '\u1ec0': 'E',
            '\u1ebe': 'E',
            '\u1ec4': 'E',
            '\u1ec2': 'E',
            '\u1ebc': 'E',
            '\u0112': 'E',
            '\u1e14': 'E',
            '\u1e16': 'E',
            '\u0114': 'E',
            '\u0116': 'E',
            '\xcb': 'E',
            '\u1eba': 'E',
            '\u011a': 'E',
            '\u0204': 'E',
            '\u0206': 'E',
            '\u1eb8': 'E',
            '\u1ec6': 'E',
            '\u0228': 'E',
            '\u1e1c': 'E',
            '\u0118': 'E',
            '\u1e18': 'E',
            '\u1e1a': 'E',
            '\u0190': 'E',
            '\u018e': 'E',
            '\u24bb': 'F',
            '\uff26': 'F',
            '\u1e1e': 'F',
            '\u0191': 'F',
            '\ua77b': 'F',
            '\u24bc': 'G',
            '\uff27': 'G',
            '\u01f4': 'G',
            '\u011c': 'G',
            '\u1e20': 'G',
            '\u011e': 'G',
            '\u0120': 'G',
            '\u01e6': 'G',
            '\u0122': 'G',
            '\u01e4': 'G',
            '\u0193': 'G',
            '\ua7a0': 'G',
            '\ua77d': 'G',
            '\ua77e': 'G',
            '\u24bd': 'H',
            '\uff28': 'H',
            '\u0124': 'H',
            '\u1e22': 'H',
            '\u1e26': 'H',
            '\u021e': 'H',
            '\u1e24': 'H',
            '\u1e28': 'H',
            '\u1e2a': 'H',
            '\u0126': 'H',
            '\u2c67': 'H',
            '\u2c75': 'H',
            '\ua78d': 'H',
            '\u24be': 'I',
            '\uff29': 'I',
            '\xcc': 'I',
            '\xcd': 'I',
            '\xce': 'I',
            '\u0128': 'I',
            '\u012a': 'I',
            '\u012c': 'I',
            '\u0130': 'I',
            '\xcf': 'I',
            '\u1e2e': 'I',
            '\u1ec8': 'I',
            '\u01cf': 'I',
            '\u0208': 'I',
            '\u020a': 'I',
            '\u1eca': 'I',
            '\u012e': 'I',
            '\u1e2c': 'I',
            '\u0197': 'I',
            '\u24bf': 'J',
            '\uff2a': 'J',
            '\u0134': 'J',
            '\u0248': 'J',
            '\u24c0': 'K',
            '\uff2b': 'K',
            '\u1e30': 'K',
            '\u01e8': 'K',
            '\u1e32': 'K',
            '\u0136': 'K',
            '\u1e34': 'K',
            '\u0198': 'K',
            '\u2c69': 'K',
            '\ua740': 'K',
            '\ua742': 'K',
            '\ua744': 'K',
            '\ua7a2': 'K',
            '\u24c1': 'L',
            '\uff2c': 'L',
            '\u013f': 'L',
            '\u0139': 'L',
            '\u013d': 'L',
            '\u1e36': 'L',
            '\u1e38': 'L',
            '\u013b': 'L',
            '\u1e3c': 'L',
            '\u1e3a': 'L',
            '\u0141': 'L',
            '\u023d': 'L',
            '\u2c62': 'L',
            '\u2c60': 'L',
            '\ua748': 'L',
            '\ua746': 'L',
            '\ua780': 'L',
            '\u01c7': 'LJ',
            '\u01c8': 'Lj',
            '\u24c2': 'M',
            '\uff2d': 'M',
            '\u1e3e': 'M',
            '\u1e40': 'M',
            '\u1e42': 'M',
            '\u2c6e': 'M',
            '\u019c': 'M',
            '\u24c3': 'N',
            '\uff2e': 'N',
            '\u01f8': 'N',
            '\u0143': 'N',
            '\xd1': 'N',
            '\u1e44': 'N',
            '\u0147': 'N',
            '\u1e46': 'N',
            '\u0145': 'N',
            '\u1e4a': 'N',
            '\u1e48': 'N',
            '\u0220': 'N',
            '\u019d': 'N',
            '\ua790': 'N',
            '\ua7a4': 'N',
            '\u01ca': 'NJ',
            '\u01cb': 'Nj',
            '\u24c4': 'O',
            '\uff2f': 'O',
            '\xd2': 'O',
            '\xd3': 'O',
            '\xd4': 'O',
            '\u1ed2': 'O',
            '\u1ed0': 'O',
            '\u1ed6': 'O',
            '\u1ed4': 'O',
            '\xd5': 'O',
            '\u1e4c': 'O',
            '\u022c': 'O',
            '\u1e4e': 'O',
            '\u014c': 'O',
            '\u1e50': 'O',
            '\u1e52': 'O',
            '\u014e': 'O',
            '\u022e': 'O',
            '\u0230': 'O',
            '\xd6': 'O',
            '\u022a': 'O',
            '\u1ece': 'O',
            '\u0150': 'O',
            '\u01d1': 'O',
            '\u020c': 'O',
            '\u020e': 'O',
            '\u01a0': 'O',
            '\u1edc': 'O',
            '\u1eda': 'O',
            '\u1ee0': 'O',
            '\u1ede': 'O',
            '\u1ee2': 'O',
            '\u1ecc': 'O',
            '\u1ed8': 'O',
            '\u01ea': 'O',
            '\u01ec': 'O',
            '\xd8': 'O',
            '\u01fe': 'O',
            '\u0186': 'O',
            '\u019f': 'O',
            '\ua74a': 'O',
            '\ua74c': 'O',
            '\u01a2': 'OI',
            '\ua74e': 'OO',
            '\u0222': 'OU',
            '\u24c5': 'P',
            '\uff30': 'P',
            '\u1e54': 'P',
            '\u1e56': 'P',
            '\u01a4': 'P',
            '\u2c63': 'P',
            '\ua750': 'P',
            '\ua752': 'P',
            '\ua754': 'P',
            '\u24c6': 'Q',
            '\uff31': 'Q',
            '\ua756': 'Q',
            '\ua758': 'Q',
            '\u024a': 'Q',
            '\u24c7': 'R',
            '\uff32': 'R',
            '\u0154': 'R',
            '\u1e58': 'R',
            '\u0158': 'R',
            '\u0210': 'R',
            '\u0212': 'R',
            '\u1e5a': 'R',
            '\u1e5c': 'R',
            '\u0156': 'R',
            '\u1e5e': 'R',
            '\u024c': 'R',
            '\u2c64': 'R',
            '\ua75a': 'R',
            '\ua7a6': 'R',
            '\ua782': 'R',
            '\u24c8': 'S',
            '\uff33': 'S',
            '\u1e9e': 'S',
            '\u015a': 'S',
            '\u1e64': 'S',
            '\u015c': 'S',
            '\u1e60': 'S',
            '\u0160': 'S',
            '\u1e66': 'S',
            '\u1e62': 'S',
            '\u1e68': 'S',
            '\u0218': 'S',
            '\u015e': 'S',
            '\u2c7e': 'S',
            '\ua7a8': 'S',
            '\ua784': 'S',
            '\u24c9': 'T',
            '\uff34': 'T',
            '\u1e6a': 'T',
            '\u0164': 'T',
            '\u1e6c': 'T',
            '\u021a': 'T',
            '\u0162': 'T',
            '\u1e70': 'T',
            '\u1e6e': 'T',
            '\u0166': 'T',
            '\u01ac': 'T',
            '\u01ae': 'T',
            '\u023e': 'T',
            '\ua786': 'T',
            '\ua728': 'TZ',
            '\u24ca': 'U',
            '\uff35': 'U',
            '\xd9': 'U',
            '\xda': 'U',
            '\xdb': 'U',
            '\u0168': 'U',
            '\u1e78': 'U',
            '\u016a': 'U',
            '\u1e7a': 'U',
            '\u016c': 'U',
            '\xdc': 'U',
            '\u01db': 'U',
            '\u01d7': 'U',
            '\u01d5': 'U',
            '\u01d9': 'U',
            '\u1ee6': 'U',
            '\u016e': 'U',
            '\u0170': 'U',
            '\u01d3': 'U',
            '\u0214': 'U',
            '\u0216': 'U',
            '\u01af': 'U',
            '\u1eea': 'U',
            '\u1ee8': 'U',
            '\u1eee': 'U',
            '\u1eec': 'U',
            '\u1ef0': 'U',
            '\u1ee4': 'U',
            '\u1e72': 'U',
            '\u0172': 'U',
            '\u1e76': 'U',
            '\u1e74': 'U',
            '\u0244': 'U',
            '\u24cb': 'V',
            '\uff36': 'V',
            '\u1e7c': 'V',
            '\u1e7e': 'V',
            '\u01b2': 'V',
            '\ua75e': 'V',
            '\u0245': 'V',
            '\ua760': 'VY',
            '\u24cc': 'W',
            '\uff37': 'W',
            '\u1e80': 'W',
            '\u1e82': 'W',
            '\u0174': 'W',
            '\u1e86': 'W',
            '\u1e84': 'W',
            '\u1e88': 'W',
            '\u2c72': 'W',
            '\u24cd': 'X',
            '\uff38': 'X',
            '\u1e8a': 'X',
            '\u1e8c': 'X',
            '\u24ce': 'Y',
            '\uff39': 'Y',
            '\u1ef2': 'Y',
            '\xdd': 'Y',
            '\u0176': 'Y',
            '\u1ef8': 'Y',
            '\u0232': 'Y',
            '\u1e8e': 'Y',
            '\u0178': 'Y',
            '\u1ef6': 'Y',
            '\u1ef4': 'Y',
            '\u01b3': 'Y',
            '\u024e': 'Y',
            '\u1efe': 'Y',
            '\u24cf': 'Z',
            '\uff3a': 'Z',
            '\u0179': 'Z',
            '\u1e90': 'Z',
            '\u017b': 'Z',
            '\u017d': 'Z',
            '\u1e92': 'Z',
            '\u1e94': 'Z',
            '\u01b5': 'Z',
            '\u0224': 'Z',
            '\u2c7f': 'Z',
            '\u2c6b': 'Z',
            '\ua762': 'Z',
            '\u24d0': 'a',
            '\uff41': 'a',
            '\u1e9a': 'a',
            '\xe0': 'a',
            '\xe1': 'a',
            '\xe2': 'a',
            '\u1ea7': 'a',
            '\u1ea5': 'a',
            '\u1eab': 'a',
            '\u1ea9': 'a',
            '\xe3': 'a',
            '\u0101': 'a',
            '\u0103': 'a',
            '\u1eb1': 'a',
            '\u1eaf': 'a',
            '\u1eb5': 'a',
            '\u1eb3': 'a',
            '\u0227': 'a',
            '\u01e1': 'a',
            '\xe4': 'a',
            '\u01df': 'a',
            '\u1ea3': 'a',
            '\xe5': 'a',
            '\u01fb': 'a',
            '\u01ce': 'a',
            '\u0201': 'a',
            '\u0203': 'a',
            '\u1ea1': 'a',
            '\u1ead': 'a',
            '\u1eb7': 'a',
            '\u1e01': 'a',
            '\u0105': 'a',
            '\u2c65': 'a',
            '\u0250': 'a',
            '\ua733': 'aa',
            '\xe6': 'ae',
            '\u01fd': 'ae',
            '\u01e3': 'ae',
            '\ua735': 'ao',
            '\ua737': 'au',
            '\ua739': 'av',
            '\ua73b': 'av',
            '\ua73d': 'ay',
            '\u24d1': 'b',
            '\uff42': 'b',
            '\u1e03': 'b',
            '\u1e05': 'b',
            '\u1e07': 'b',
            '\u0180': 'b',
            '\u0183': 'b',
            '\u0253': 'b',
            '\u24d2': 'c',
            '\uff43': 'c',
            '\u0107': 'c',
            '\u0109': 'c',
            '\u010b': 'c',
            '\u010d': 'c',
            '\xe7': 'c',
            '\u1e09': 'c',
            '\u0188': 'c',
            '\u023c': 'c',
            '\ua73f': 'c',
            '\u2184': 'c',
            '\u24d3': 'd',
            '\uff44': 'd',
            '\u1e0b': 'd',
            '\u010f': 'd',
            '\u1e0d': 'd',
            '\u1e11': 'd',
            '\u1e13': 'd',
            '\u1e0f': 'd',
            '\u0111': 'd',
            '\u018c': 'd',
            '\u0256': 'd',
            '\u0257': 'd',
            '\ua77a': 'd',
            '\u01f3': 'dz',
            '\u01c6': 'dz',
            '\u24d4': 'e',
            '\uff45': 'e',
            '\xe8': 'e',
            '\xe9': 'e',
            '\xea': 'e',
            '\u1ec1': 'e',
            '\u1ebf': 'e',
            '\u1ec5': 'e',
            '\u1ec3': 'e',
            '\u1ebd': 'e',
            '\u0113': 'e',
            '\u1e15': 'e',
            '\u1e17': 'e',
            '\u0115': 'e',
            '\u0117': 'e',
            '\xeb': 'e',
            '\u1ebb': 'e',
            '\u011b': 'e',
            '\u0205': 'e',
            '\u0207': 'e',
            '\u1eb9': 'e',
            '\u1ec7': 'e',
            '\u0229': 'e',
            '\u1e1d': 'e',
            '\u0119': 'e',
            '\u1e19': 'e',
            '\u1e1b': 'e',
            '\u0247': 'e',
            '\u025b': 'e',
            '\u01dd': 'e',
            '\u24d5': 'f',
            '\uff46': 'f',
            '\u1e1f': 'f',
            '\u0192': 'f',
            '\ua77c': 'f',
            '\u24d6': 'g',
            '\uff47': 'g',
            '\u01f5': 'g',
            '\u011d': 'g',
            '\u1e21': 'g',
            '\u011f': 'g',
            '\u0121': 'g',
            '\u01e7': 'g',
            '\u0123': 'g',
            '\u01e5': 'g',
            '\u0260': 'g',
            '\ua7a1': 'g',
            '\u1d79': 'g',
            '\ua77f': 'g',
            '\u24d7': 'h',
            '\uff48': 'h',
            '\u0125': 'h',
            '\u1e23': 'h',
            '\u1e27': 'h',
            '\u021f': 'h',
            '\u1e25': 'h',
            '\u1e29': 'h',
            '\u1e2b': 'h',
            '\u1e96': 'h',
            '\u0127': 'h',
            '\u2c68': 'h',
            '\u2c76': 'h',
            '\u0265': 'h',
            '\u0195': 'hv',
            '\u24d8': 'i',
            '\uff49': 'i',
            '\xec': 'i',
            '\xed': 'i',
            '\xee': 'i',
            '\u0129': 'i',
            '\u012b': 'i',
            '\u012d': 'i',
            '\xef': 'i',
            '\u1e2f': 'i',
            '\u1ec9': 'i',
            '\u01d0': 'i',
            '\u0209': 'i',
            '\u020b': 'i',
            '\u1ecb': 'i',
            '\u012f': 'i',
            '\u1e2d': 'i',
            '\u0268': 'i',
            '\u0131': 'i',
            '\u24d9': 'j',
            '\uff4a': 'j',
            '\u0135': 'j',
            '\u01f0': 'j',
            '\u0249': 'j',
            '\u24da': 'k',
            '\uff4b': 'k',
            '\u1e31': 'k',
            '\u01e9': 'k',
            '\u1e33': 'k',
            '\u0137': 'k',
            '\u1e35': 'k',
            '\u0199': 'k',
            '\u2c6a': 'k',
            '\ua741': 'k',
            '\ua743': 'k',
            '\ua745': 'k',
            '\ua7a3': 'k',
            '\u24db': 'l',
            '\uff4c': 'l',
            '\u0140': 'l',
            '\u013a': 'l',
            '\u013e': 'l',
            '\u1e37': 'l',
            '\u1e39': 'l',
            '\u013c': 'l',
            '\u1e3d': 'l',
            '\u1e3b': 'l',
            '\u017f': 'l',
            '\u0142': 'l',
            '\u019a': 'l',
            '\u026b': 'l',
            '\u2c61': 'l',
            '\ua749': 'l',
            '\ua781': 'l',
            '\ua747': 'l',
            '\u01c9': 'lj',
            '\u24dc': 'm',
            '\uff4d': 'm',
            '\u1e3f': 'm',
            '\u1e41': 'm',
            '\u1e43': 'm',
            '\u0271': 'm',
            '\u026f': 'm',
            '\u24dd': 'n',
            '\uff4e': 'n',
            '\u01f9': 'n',
            '\u0144': 'n',
            '\xf1': 'n',
            '\u1e45': 'n',
            '\u0148': 'n',
            '\u1e47': 'n',
            '\u0146': 'n',
            '\u1e4b': 'n',
            '\u1e49': 'n',
            '\u019e': 'n',
            '\u0272': 'n',
            '\u0149': 'n',
            '\ua791': 'n',
            '\ua7a5': 'n',
            '\u01cc': 'nj',
            '\u24de': 'o',
            '\uff4f': 'o',
            '\xf2': 'o',
            '\xf3': 'o',
            '\xf4': 'o',
            '\u1ed3': 'o',
            '\u1ed1': 'o',
            '\u1ed7': 'o',
            '\u1ed5': 'o',
            '\xf5': 'o',
            '\u1e4d': 'o',
            '\u022d': 'o',
            '\u1e4f': 'o',
            '\u014d': 'o',
            '\u1e51': 'o',
            '\u1e53': 'o',
            '\u014f': 'o',
            '\u022f': 'o',
            '\u0231': 'o',
            '\xf6': 'o',
            '\u022b': 'o',
            '\u1ecf': 'o',
            '\u0151': 'o',
            '\u01d2': 'o',
            '\u020d': 'o',
            '\u020f': 'o',
            '\u01a1': 'o',
            '\u1edd': 'o',
            '\u1edb': 'o',
            '\u1ee1': 'o',
            '\u1edf': 'o',
            '\u1ee3': 'o',
            '\u1ecd': 'o',
            '\u1ed9': 'o',
            '\u01eb': 'o',
            '\u01ed': 'o',
            '\xf8': 'o',
            '\u01ff': 'o',
            '\u0254': 'o',
            '\ua74b': 'o',
            '\ua74d': 'o',
            '\u0275': 'o',
            '\u01a3': 'oi',
            '\u0223': 'ou',
            '\ua74f': 'oo',
            '\u24df': 'p',
            '\uff50': 'p',
            '\u1e55': 'p',
            '\u1e57': 'p',
            '\u01a5': 'p',
            '\u1d7d': 'p',
            '\ua751': 'p',
            '\ua753': 'p',
            '\ua755': 'p',
            '\u24e0': 'q',
            '\uff51': 'q',
            '\u024b': 'q',
            '\ua757': 'q',
            '\ua759': 'q',
            '\u24e1': 'r',
            '\uff52': 'r',
            '\u0155': 'r',
            '\u1e59': 'r',
            '\u0159': 'r',
            '\u0211': 'r',
            '\u0213': 'r',
            '\u1e5b': 'r',
            '\u1e5d': 'r',
            '\u0157': 'r',
            '\u1e5f': 'r',
            '\u024d': 'r',
            '\u027d': 'r',
            '\ua75b': 'r',
            '\ua7a7': 'r',
            '\ua783': 'r',
            '\u24e2': 's',
            '\uff53': 's',
            '\xdf': 's',
            '\u015b': 's',
            '\u1e65': 's',
            '\u015d': 's',
            '\u1e61': 's',
            '\u0161': 's',
            '\u1e67': 's',
            '\u1e63': 's',
            '\u1e69': 's',
            '\u0219': 's',
            '\u015f': 's',
            '\u023f': 's',
            '\ua7a9': 's',
            '\ua785': 's',
            '\u1e9b': 's',
            '\u24e3': 't',
            '\uff54': 't',
            '\u1e6b': 't',
            '\u1e97': 't',
            '\u0165': 't',
            '\u1e6d': 't',
            '\u021b': 't',
            '\u0163': 't',
            '\u1e71': 't',
            '\u1e6f': 't',
            '\u0167': 't',
            '\u01ad': 't',
            '\u0288': 't',
            '\u2c66': 't',
            '\ua787': 't',
            '\ua729': 'tz',
            '\u24e4': 'u',
            '\uff55': 'u',
            '\xf9': 'u',
            '\xfa': 'u',
            '\xfb': 'u',
            '\u0169': 'u',
            '\u1e79': 'u',
            '\u016b': 'u',
            '\u1e7b': 'u',
            '\u016d': 'u',
            '\xfc': 'u',
            '\u01dc': 'u',
            '\u01d8': 'u',
            '\u01d6': 'u',
            '\u01da': 'u',
            '\u1ee7': 'u',
            '\u016f': 'u',
            '\u0171': 'u',
            '\u01d4': 'u',
            '\u0215': 'u',
            '\u0217': 'u',
            '\u01b0': 'u',
            '\u1eeb': 'u',
            '\u1ee9': 'u',
            '\u1eef': 'u',
            '\u1eed': 'u',
            '\u1ef1': 'u',
            '\u1ee5': 'u',
            '\u1e73': 'u',
            '\u0173': 'u',
            '\u1e77': 'u',
            '\u1e75': 'u',
            '\u0289': 'u',
            '\u24e5': 'v',
            '\uff56': 'v',
            '\u1e7d': 'v',
            '\u1e7f': 'v',
            '\u028b': 'v',
            '\ua75f': 'v',
            '\u028c': 'v',
            '\ua761': 'vy',
            '\u24e6': 'w',
            '\uff57': 'w',
            '\u1e81': 'w',
            '\u1e83': 'w',
            '\u0175': 'w',
            '\u1e87': 'w',
            '\u1e85': 'w',
            '\u1e98': 'w',
            '\u1e89': 'w',
            '\u2c73': 'w',
            '\u24e7': 'x',
            '\uff58': 'x',
            '\u1e8b': 'x',
            '\u1e8d': 'x',
            '\u24e8': 'y',
            '\uff59': 'y',
            '\u1ef3': 'y',
            '\xfd': 'y',
            '\u0177': 'y',
            '\u1ef9': 'y',
            '\u0233': 'y',
            '\u1e8f': 'y',
            '\xff': 'y',
            '\u1ef7': 'y',
            '\u1e99': 'y',
            '\u1ef5': 'y',
            '\u01b4': 'y',
            '\u024f': 'y',
            '\u1eff': 'y',
            '\u24e9': 'z',
            '\uff5a': 'z',
            '\u017a': 'z',
            '\u1e91': 'z',
            '\u017c': 'z',
            '\u017e': 'z',
            '\u1e93': 'z',
            '\u1e95': 'z',
            '\u01b6': 'z',
            '\u0225': 'z',
            '\u0240': 'z',
            '\u2c6c': 'z',
            '\ua763': 'z',
            '\u0386': '\u0391',
            '\u0388': '\u0395',
            '\u0389': '\u0397',
            '\u038a': '\u0399',
            '\u03aa': '\u0399',
            '\u038c': '\u039f',
            '\u038e': '\u03a5',
            '\u03ab': '\u03a5',
            '\u038f': '\u03a9',
            '\u03ac': '\u03b1',
            '\u03ad': '\u03b5',
            '\u03ae': '\u03b7',
            '\u03af': '\u03b9',
            '\u03ca': '\u03b9',
            '\u0390': '\u03b9',
            '\u03cc': '\u03bf',
            '\u03cd': '\u03c5',
            '\u03cb': '\u03c5',
            '\u03b0': '\u03c5',
            '\u03c9': '\u03c9',
            '\u03c2': '\u03c3'
          };
        return diacritics;
      });
      S2.define('select2/data/base', ['../utils'], function (Utils) {
        function BaseAdapter($element, options) {
          BaseAdapter.__super__.constructor.call(this);
        }
        Utils.Extend(BaseAdapter, Utils.Observable);
        BaseAdapter.prototype.current = function (callback) {
          throw new Error('The `current` method must be defined in child classes.');
        };
        BaseAdapter.prototype.query = function (params, callback) {
          throw new Error('The `query` method must be defined in child classes.');
        };
        BaseAdapter.prototype.bind = function (container, $container) {
        };
        BaseAdapter.prototype.destroy = function () {
        };
        BaseAdapter.prototype.generateResultId = function (container, data) {
          var id = container.id + '-result-';
          id += Utils.generateChars(4);
          if (data.id != null) {
            id += '-' + data.id.toString();
          } else {
            id += '-' + Utils.generateChars(4);
          }
          return id;
        };
        return BaseAdapter;
      });
      S2.define('select2/data/select', [
        './base',
        '../utils',
        'jquery'
      ], function (BaseAdapter, Utils, $) {
        function SelectAdapter($element, options) {
          this.$element = $element;
          this.options = options;
          SelectAdapter.__super__.constructor.call(this);
        }
        Utils.Extend(SelectAdapter, BaseAdapter);
        SelectAdapter.prototype.current = function (callback) {
          var data = [];
          var self = this;
          this.$element.find(':selected').each(function () {
            var $option = $(this);
            var option = self.item($option);
            data.push(option);
          });
          callback(data);
        };
        SelectAdapter.prototype.select = function (data) {
          var self = this;
          data.selected = true;
          // If data.element is a DOM node, use it instead
          if ($(data.element).is('option')) {
            data.element.selected = true;
            this.$element.trigger('change');
            return;
          }
          if (this.$element.prop('multiple')) {
            this.current(function (currentData) {
              var val = [];
              data = [data];
              data.push.apply(data, currentData);
              for (var d = 0; d < data.length; d++) {
                var id = data[d].id;
                if ($.inArray(id, val) === -1) {
                  val.push(id);
                }
              }
              self.$element.val(val);
              self.$element.trigger('change');
            });
          } else {
            var val = data.id;
            this.$element.val(val);
            this.$element.trigger('change');
          }
        };
        SelectAdapter.prototype.unselect = function (data) {
          var self = this;
          if (!this.$element.prop('multiple')) {
            return;
          }
          data.selected = false;
          if ($(data.element).is('option')) {
            data.element.selected = false;
            this.$element.trigger('change');
            return;
          }
          this.current(function (currentData) {
            var val = [];
            for (var d = 0; d < currentData.length; d++) {
              var id = currentData[d].id;
              if (id !== data.id && $.inArray(id, val) === -1) {
                val.push(id);
              }
            }
            self.$element.val(val);
            self.$element.trigger('change');
          });
        };
        SelectAdapter.prototype.bind = function (container, $container) {
          var self = this;
          this.container = container;
          container.on('select', function (params) {
            self.select(params.data);
          });
          container.on('unselect', function (params) {
            self.unselect(params.data);
          });
        };
        SelectAdapter.prototype.destroy = function () {
          // Remove anything added to child elements
          this.$element.find('*').each(function () {
            // Remove any custom data set by Select2
            $.removeData(this, 'data');
          });
        };
        SelectAdapter.prototype.query = function (params, callback) {
          var data = [];
          var self = this;
          var $options = this.$element.children();
          $options.each(function () {
            var $option = $(this);
            if (!$option.is('option') && !$option.is('optgroup')) {
              return;
            }
            var option = self.item($option);
            var matches = self.matches(params, option);
            if (matches !== null) {
              data.push(matches);
            }
          });
          callback({ results: data });
        };
        SelectAdapter.prototype.addOptions = function ($options) {
          Utils.appendMany(this.$element, $options);
        };
        SelectAdapter.prototype.option = function (data) {
          var option;
          if (data.children) {
            option = document.createElement('optgroup');
            option.label = data.text;
          } else {
            option = document.createElement('option');
            if (option.textContent !== undefined) {
              option.textContent = data.text;
            } else {
              option.innerText = data.text;
            }
          }
          if (data.id) {
            option.value = data.id;
          }
          if (data.disabled) {
            option.disabled = true;
          }
          if (data.selected) {
            option.selected = true;
          }
          if (data.title) {
            option.title = data.title;
          }
          var $option = $(option);
          var normalizedData = this._normalizeItem(data);
          normalizedData.element = option;
          // Override the option's data with the combined data
          $.data(option, 'data', normalizedData);
          return $option;
        };
        SelectAdapter.prototype.item = function ($option) {
          var data = {};
          data = $.data($option[0], 'data');
          if (data != null) {
            return data;
          }
          if ($option.is('option')) {
            data = {
              id: $option.val(),
              text: $option.text(),
              disabled: $option.prop('disabled'),
              selected: $option.prop('selected'),
              title: $option.prop('title')
            };
          } else if ($option.is('optgroup')) {
            data = {
              text: $option.prop('label'),
              children: [],
              title: $option.prop('title')
            };
            var $children = $option.children('option');
            var children = [];
            for (var c = 0; c < $children.length; c++) {
              var $child = $($children[c]);
              var child = this.item($child);
              children.push(child);
            }
            data.children = children;
          }
          data = this._normalizeItem(data);
          data.element = $option[0];
          $.data($option[0], 'data', data);
          return data;
        };
        SelectAdapter.prototype._normalizeItem = function (item) {
          if (!$.isPlainObject(item)) {
            item = {
              id: item,
              text: item
            };
          }
          item = $.extend({}, { text: '' }, item);
          var defaults = {
              selected: false,
              disabled: false
            };
          if (item.id != null) {
            item.id = item.id.toString();
          }
          if (item.text != null) {
            item.text = item.text.toString();
          }
          if (item._resultId == null && item.id && this.container != null) {
            item._resultId = this.generateResultId(this.container, item);
          }
          return $.extend({}, defaults, item);
        };
        SelectAdapter.prototype.matches = function (params, data) {
          var matcher = this.options.get('matcher');
          return matcher(params, data);
        };
        return SelectAdapter;
      });
      S2.define('select2/data/array', [
        './select',
        '../utils',
        'jquery'
      ], function (SelectAdapter, Utils, $) {
        function ArrayAdapter($element, options) {
          var data = options.get('data') || [];
          ArrayAdapter.__super__.constructor.call(this, $element, options);
          this.addOptions(this.convertToOptions(data));
        }
        Utils.Extend(ArrayAdapter, SelectAdapter);
        ArrayAdapter.prototype.select = function (data) {
          var $option = this.$element.find('option').filter(function (i, elm) {
              return elm.value == data.id.toString();
            });
          if ($option.length === 0) {
            $option = this.option(data);
            this.addOptions($option);
          }
          ArrayAdapter.__super__.select.call(this, data);
        };
        ArrayAdapter.prototype.convertToOptions = function (data) {
          var self = this;
          var $existing = this.$element.find('option');
          var existingIds = $existing.map(function () {
              return self.item($(this)).id;
            }).get();
          var $options = [];
          // Filter out all items except for the one passed in the argument
          function onlyItem(item) {
            return function () {
              return $(this).val() == item.id;
            };
          }
          for (var d = 0; d < data.length; d++) {
            var item = this._normalizeItem(data[d]);
            // Skip items which were pre-loaded, only merge the data
            if ($.inArray(item.id, existingIds) >= 0) {
              var $existingOption = $existing.filter(onlyItem(item));
              var existingData = this.item($existingOption);
              var newData = $.extend(true, {}, item, existingData);
              var $newOption = this.option(newData);
              $existingOption.replaceWith($newOption);
              continue;
            }
            var $option = this.option(item);
            if (item.children) {
              var $children = this.convertToOptions(item.children);
              Utils.appendMany($option, $children);
            }
            $options.push($option);
          }
          return $options;
        };
        return ArrayAdapter;
      });
      S2.define('select2/data/ajax', [
        './array',
        '../utils',
        'jquery'
      ], function (ArrayAdapter, Utils, $) {
        function AjaxAdapter($element, options) {
          this.ajaxOptions = this._applyDefaults(options.get('ajax'));
          if (this.ajaxOptions.processResults != null) {
            this.processResults = this.ajaxOptions.processResults;
          }
          AjaxAdapter.__super__.constructor.call(this, $element, options);
        }
        Utils.Extend(AjaxAdapter, ArrayAdapter);
        AjaxAdapter.prototype._applyDefaults = function (options) {
          var defaults = {
              data: function (params) {
                return $.extend({}, params, { q: params.term });
              },
              transport: function (params, success, failure) {
                var $request = $.ajax(params);
                $request.then(success);
                $request.fail(failure);
                return $request;
              }
            };
          return $.extend({}, defaults, options, true);
        };
        AjaxAdapter.prototype.processResults = function (results) {
          return results;
        };
        AjaxAdapter.prototype.query = function (params, callback) {
          var matches = [];
          var self = this;
          if (this._request != null) {
            // JSONP requests cannot always be aborted
            if ($.isFunction(this._request.abort)) {
              this._request.abort();
            }
            this._request = null;
          }
          var options = $.extend({ type: 'GET' }, this.ajaxOptions);
          if (typeof options.url === 'function') {
            options.url = options.url.call(this.$element, params);
          }
          if (typeof options.data === 'function') {
            options.data = options.data.call(this.$element, params);
          }
          function request() {
            var $request = options.transport(options, function (data) {
                var results = self.processResults(data, params);
                if (self.options.get('debug') && window.console && console.error) {
                  // Check to make sure that the response included a `results` key.
                  if (!results || !results.results || !$.isArray(results.results)) {
                    console.error('Select2: The AJAX results did not return an array in the ' + '`results` key of the response.');
                  }
                }
                callback(results);
              }, function () {
                self.trigger('results:message', { message: 'errorLoading' });
              });
            self._request = $request;
          }
          if (this.ajaxOptions.delay && params.term !== '') {
            if (this._queryTimeout) {
              window.clearTimeout(this._queryTimeout);
            }
            this._queryTimeout = window.setTimeout(request, this.ajaxOptions.delay);
          } else {
            request();
          }
        };
        return AjaxAdapter;
      });
      S2.define('select2/data/tags', ['jquery'], function ($) {
        function Tags(decorated, $element, options) {
          var tags = options.get('tags');
          var createTag = options.get('createTag');
          if (createTag !== undefined) {
            this.createTag = createTag;
          }
          var insertTag = options.get('insertTag');
          if (insertTag !== undefined) {
            this.insertTag = insertTag;
          }
          decorated.call(this, $element, options);
          if ($.isArray(tags)) {
            for (var t = 0; t < tags.length; t++) {
              var tag = tags[t];
              var item = this._normalizeItem(tag);
              var $option = this.option(item);
              this.$element.append($option);
            }
          }
        }
        Tags.prototype.query = function (decorated, params, callback) {
          var self = this;
          this._removeOldTags();
          if (params.term == null || params.page != null) {
            decorated.call(this, params, callback);
            return;
          }
          function wrapper(obj, child) {
            var data = obj.results;
            for (var i = 0; i < data.length; i++) {
              var option = data[i];
              var checkChildren = option.children != null && !wrapper({ results: option.children }, true);
              var checkText = option.text === params.term;
              if (checkText || checkChildren) {
                if (child) {
                  return false;
                }
                obj.data = data;
                callback(obj);
                return;
              }
            }
            if (child) {
              return true;
            }
            var tag = self.createTag(params);
            if (tag != null) {
              var $option = self.option(tag);
              $option.attr('data-select2-tag', true);
              self.addOptions([$option]);
              self.insertTag(data, tag);
            }
            obj.results = data;
            callback(obj);
          }
          decorated.call(this, params, wrapper);
        };
        Tags.prototype.createTag = function (decorated, params) {
          var term = $.trim(params.term);
          if (term === '') {
            return null;
          }
          return {
            id: term,
            text: term
          };
        };
        Tags.prototype.insertTag = function (_, data, tag) {
          data.unshift(tag);
        };
        Tags.prototype._removeOldTags = function (_) {
          var tag = this._lastTag;
          var $options = this.$element.find('option[data-select2-tag]');
          $options.each(function () {
            if (this.selected) {
              return;
            }
            $(this).remove();
          });
        };
        return Tags;
      });
      S2.define('select2/data/tokenizer', ['jquery'], function ($) {
        function Tokenizer(decorated, $element, options) {
          var tokenizer = options.get('tokenizer');
          if (tokenizer !== undefined) {
            this.tokenizer = tokenizer;
          }
          decorated.call(this, $element, options);
        }
        Tokenizer.prototype.bind = function (decorated, container, $container) {
          decorated.call(this, container, $container);
          this.$search = container.dropdown.$search || container.selection.$search || $container.find('.select2-search__field');
        };
        Tokenizer.prototype.query = function (decorated, params, callback) {
          var self = this;
          function select(data) {
            self.trigger('select', { data: data });
          }
          params.term = params.term || '';
          var tokenData = this.tokenizer(params, this.options, select);
          if (tokenData.term !== params.term) {
            // Replace the search term if we have the search box
            if (this.$search.length) {
              this.$search.val(tokenData.term);
              this.$search.focus();
            }
            params.term = tokenData.term;
          }
          decorated.call(this, params, callback);
        };
        Tokenizer.prototype.tokenizer = function (_, params, options, callback) {
          var separators = options.get('tokenSeparators') || [];
          var term = params.term;
          var i = 0;
          var createTag = this.createTag || function (params) {
              return {
                id: params.term,
                text: params.term
              };
            };
          while (i < term.length) {
            var termChar = term[i];
            if ($.inArray(termChar, separators) === -1) {
              i++;
              continue;
            }
            var part = term.substr(0, i);
            var partParams = $.extend({}, params, { term: part });
            var data = createTag(partParams);
            if (data == null) {
              i++;
              continue;
            }
            callback(data);
            // Reset the term to not include the tokenized portion
            term = term.substr(i + 1) || '';
            i = 0;
          }
          return { term: term };
        };
        return Tokenizer;
      });
      S2.define('select2/data/minimumInputLength', [], function () {
        function MinimumInputLength(decorated, $e, options) {
          this.minimumInputLength = options.get('minimumInputLength');
          decorated.call(this, $e, options);
        }
        MinimumInputLength.prototype.query = function (decorated, params, callback) {
          params.term = params.term || '';
          if (params.term.length < this.minimumInputLength) {
            this.trigger('results:message', {
              message: 'inputTooShort',
              args: {
                minimum: this.minimumInputLength,
                input: params.term,
                params: params
              }
            });
            return;
          }
          decorated.call(this, params, callback);
        };
        return MinimumInputLength;
      });
      S2.define('select2/data/maximumInputLength', [], function () {
        function MaximumInputLength(decorated, $e, options) {
          this.maximumInputLength = options.get('maximumInputLength');
          decorated.call(this, $e, options);
        }
        MaximumInputLength.prototype.query = function (decorated, params, callback) {
          params.term = params.term || '';
          if (this.maximumInputLength > 0 && params.term.length > this.maximumInputLength) {
            this.trigger('results:message', {
              message: 'inputTooLong',
              args: {
                maximum: this.maximumInputLength,
                input: params.term,
                params: params
              }
            });
            return;
          }
          decorated.call(this, params, callback);
        };
        return MaximumInputLength;
      });
      S2.define('select2/data/maximumSelectionLength', [], function () {
        function MaximumSelectionLength(decorated, $e, options) {
          this.maximumSelectionLength = options.get('maximumSelectionLength');
          decorated.call(this, $e, options);
        }
        MaximumSelectionLength.prototype.query = function (decorated, params, callback) {
          var self = this;
          this.current(function (currentData) {
            var count = currentData != null ? currentData.length : 0;
            if (self.maximumSelectionLength > 0 && count >= self.maximumSelectionLength) {
              self.trigger('results:message', {
                message: 'maximumSelected',
                args: { maximum: self.maximumSelectionLength }
              });
              return;
            }
            decorated.call(self, params, callback);
          });
        };
        return MaximumSelectionLength;
      });
      S2.define('select2/dropdown', [
        'jquery',
        './utils'
      ], function ($, Utils) {
        function Dropdown($element, options) {
          this.$element = $element;
          this.options = options;
          Dropdown.__super__.constructor.call(this);
        }
        Utils.Extend(Dropdown, Utils.Observable);
        Dropdown.prototype.render = function () {
          var $dropdown = $('<span class="select2-dropdown">' + '<span class="select2-results"></span>' + '</span>');
          $dropdown.attr('dir', this.options.get('dir'));
          this.$dropdown = $dropdown;
          return $dropdown;
        };
        Dropdown.prototype.bind = function () {
        };
        Dropdown.prototype.position = function ($dropdown, $container) {
        };
        Dropdown.prototype.destroy = function () {
          // Remove the dropdown from the DOM
          this.$dropdown.remove();
        };
        return Dropdown;
      });
      S2.define('select2/dropdown/search', [
        'jquery',
        '../utils'
      ], function ($, Utils) {
        function Search() {
        }
        Search.prototype.render = function (decorated) {
          var $rendered = decorated.call(this);
          var $search = $('<span class="select2-search select2-search--dropdown">' + '<input class="select2-search__field" type="search" tabindex="-1"' + ' autocomplete="off" autocorrect="off" autocapitalize="off"' + ' spellcheck="false" role="textbox" />' + '</span>');
          this.$searchContainer = $search;
          this.$search = $search.find('input');
          $rendered.prepend($search);
          return $rendered;
        };
        Search.prototype.bind = function (decorated, container, $container) {
          var self = this;
          decorated.call(this, container, $container);
          this.$search.on('keydown', function (evt) {
            self.trigger('keypress', evt);
            self._keyUpPrevented = evt.isDefaultPrevented();
          });
          // Workaround for browsers which do not support the `input` event
          // This will prevent double-triggering of events for browsers which support
          // both the `keyup` and `input` events.
          this.$search.on('input', function (evt) {
            // Unbind the duplicated `keyup` event
            $(this).off('keyup');
          });
          this.$search.on('keyup input', function (evt) {
            self.handleSearch(evt);
          });
          container.on('open', function () {
            self.$search.attr('tabindex', 0);
            self.$search.focus();
            window.setTimeout(function () {
              self.$search.focus();
            }, 0);
          });
          container.on('close', function () {
            self.$search.attr('tabindex', -1);
            self.$search.val('');
          });
          container.on('results:all', function (params) {
            if (params.query.term == null || params.query.term === '') {
              var showSearch = self.showSearch(params);
              if (showSearch) {
                self.$searchContainer.removeClass('select2-search--hide');
              } else {
                self.$searchContainer.addClass('select2-search--hide');
              }
            }
          });
        };
        Search.prototype.handleSearch = function (evt) {
          if (!this._keyUpPrevented) {
            var input = this.$search.val();
            this.trigger('query', { term: input });
          }
          this._keyUpPrevented = false;
        };
        Search.prototype.showSearch = function (_, params) {
          return true;
        };
        return Search;
      });
      S2.define('select2/dropdown/hidePlaceholder', [], function () {
        function HidePlaceholder(decorated, $element, options, dataAdapter) {
          this.placeholder = this.normalizePlaceholder(options.get('placeholder'));
          decorated.call(this, $element, options, dataAdapter);
        }
        HidePlaceholder.prototype.append = function (decorated, data) {
          data.results = this.removePlaceholder(data.results);
          decorated.call(this, data);
        };
        HidePlaceholder.prototype.normalizePlaceholder = function (_, placeholder) {
          if (typeof placeholder === 'string') {
            placeholder = {
              id: '',
              text: placeholder
            };
          }
          return placeholder;
        };
        HidePlaceholder.prototype.removePlaceholder = function (_, data) {
          var modifiedData = data.slice(0);
          for (var d = data.length - 1; d >= 0; d--) {
            var item = data[d];
            if (this.placeholder.id === item.id) {
              modifiedData.splice(d, 1);
            }
          }
          return modifiedData;
        };
        return HidePlaceholder;
      });
      S2.define('select2/dropdown/infiniteScroll', ['jquery'], function ($) {
        function InfiniteScroll(decorated, $element, options, dataAdapter) {
          this.lastParams = {};
          decorated.call(this, $element, options, dataAdapter);
          this.$loadingMore = this.createLoadingMore();
          this.loading = false;
        }
        InfiniteScroll.prototype.append = function (decorated, data) {
          this.$loadingMore.remove();
          this.loading = false;
          decorated.call(this, data);
          if (this.showLoadingMore(data)) {
            this.$results.append(this.$loadingMore);
          }
        };
        InfiniteScroll.prototype.bind = function (decorated, container, $container) {
          var self = this;
          decorated.call(this, container, $container);
          container.on('query', function (params) {
            self.lastParams = params;
            self.loading = true;
          });
          container.on('query:append', function (params) {
            self.lastParams = params;
            self.loading = true;
          });
          this.$results.on('scroll', function () {
            var isLoadMoreVisible = $.contains(document.documentElement, self.$loadingMore[0]);
            if (self.loading || !isLoadMoreVisible) {
              return;
            }
            var currentOffset = self.$results.offset().top + self.$results.outerHeight(false);
            var loadingMoreOffset = self.$loadingMore.offset().top + self.$loadingMore.outerHeight(false);
            if (currentOffset + 50 >= loadingMoreOffset) {
              self.loadMore();
            }
          });
        };
        InfiniteScroll.prototype.loadMore = function () {
          this.loading = true;
          var params = $.extend({}, { page: 1 }, this.lastParams);
          params.page++;
          this.trigger('query:append', params);
        };
        InfiniteScroll.prototype.showLoadingMore = function (_, data) {
          return data.pagination && data.pagination.more;
        };
        InfiniteScroll.prototype.createLoadingMore = function () {
          var $option = $('<li ' + 'class="select2-results__option select2-results__option--load-more"' + 'role="treeitem" aria-disabled="true"></li>');
          var message = this.options.get('translations').get('loadingMore');
          $option.html(message(this.lastParams));
          return $option;
        };
        return InfiniteScroll;
      });
      S2.define('select2/dropdown/attachBody', [
        'jquery',
        '../utils'
      ], function ($, Utils) {
        function AttachBody(decorated, $element, options) {
          this.$dropdownParent = options.get('dropdownParent') || $(document.body);
          decorated.call(this, $element, options);
        }
        AttachBody.prototype.bind = function (decorated, container, $container) {
          var self = this;
          var setupResultsEvents = false;
          decorated.call(this, container, $container);
          container.on('open', function () {
            self._showDropdown();
            self._attachPositioningHandler(container);
            if (!setupResultsEvents) {
              setupResultsEvents = true;
              container.on('results:all', function () {
                self._positionDropdown();
                self._resizeDropdown();
              });
              container.on('results:append', function () {
                self._positionDropdown();
                self._resizeDropdown();
              });
            }
          });
          container.on('close', function () {
            self._hideDropdown();
            self._detachPositioningHandler(container);
          });
          this.$dropdownContainer.on('mousedown', function (evt) {
            evt.stopPropagation();
          });
        };
        AttachBody.prototype.destroy = function (decorated) {
          decorated.call(this);
          this.$dropdownContainer.remove();
        };
        AttachBody.prototype.position = function (decorated, $dropdown, $container) {
          // Clone all of the container classes
          $dropdown.attr('class', $container.attr('class'));
          $dropdown.removeClass('select2');
          $dropdown.addClass('select2-container--open');
          $dropdown.css({
            position: 'absolute',
            top: -999999
          });
          this.$container = $container;
        };
        AttachBody.prototype.render = function (decorated) {
          var $container = $('<span></span>');
          var $dropdown = decorated.call(this);
          $container.append($dropdown);
          this.$dropdownContainer = $container;
          return $container;
        };
        AttachBody.prototype._hideDropdown = function (decorated) {
          this.$dropdownContainer.detach();
        };
        AttachBody.prototype._attachPositioningHandler = function (decorated, container) {
          var self = this;
          var scrollEvent = 'scroll.select2.' + container.id;
          var resizeEvent = 'resize.select2.' + container.id;
          var orientationEvent = 'orientationchange.select2.' + container.id;
          var $watchers = this.$container.parents().filter(Utils.hasScroll);
          $watchers.each(function () {
            $(this).data('select2-scroll-position', {
              x: $(this).scrollLeft(),
              y: $(this).scrollTop()
            });
          });
          $watchers.on(scrollEvent, function (ev) {
            var position = $(this).data('select2-scroll-position');
            $(this).scrollTop(position.y);
          });
          $(window).on(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent, function (e) {
            self._positionDropdown();
            self._resizeDropdown();
          });
        };
        AttachBody.prototype._detachPositioningHandler = function (decorated, container) {
          var scrollEvent = 'scroll.select2.' + container.id;
          var resizeEvent = 'resize.select2.' + container.id;
          var orientationEvent = 'orientationchange.select2.' + container.id;
          var $watchers = this.$container.parents().filter(Utils.hasScroll);
          $watchers.off(scrollEvent);
          $(window).off(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent);
        };
        AttachBody.prototype._positionDropdown = function () {
          var $window = $(window);
          var isCurrentlyAbove = this.$dropdown.hasClass('select2-dropdown--above');
          var isCurrentlyBelow = this.$dropdown.hasClass('select2-dropdown--below');
          var newDirection = null;
          var offset = this.$container.offset();
          offset.bottom = offset.top + this.$container.outerHeight(false);
          var container = { height: this.$container.outerHeight(false) };
          container.top = offset.top;
          container.bottom = offset.top + container.height;
          var dropdown = { height: this.$dropdown.outerHeight(false) };
          var viewport = {
              top: $window.scrollTop(),
              bottom: $window.scrollTop() + $window.height()
            };
          var enoughRoomAbove = viewport.top < offset.top - dropdown.height;
          var enoughRoomBelow = viewport.bottom > offset.bottom + dropdown.height;
          var css = {
              left: offset.left,
              top: container.bottom
            };
          // Determine what the parent element is to use for calciulating the offset
          var $offsetParent = this.$dropdownParent;
          // For statically positoned elements, we need to get the element
          // that is determining the offset
          if ($offsetParent.css('position') === 'static') {
            $offsetParent = $offsetParent.offsetParent();
          }
          var parentOffset = $offsetParent.offset();
          css.top -= parentOffset.top;
          css.left -= parentOffset.left;
          if (!isCurrentlyAbove && !isCurrentlyBelow) {
            newDirection = 'below';
          }
          if (!enoughRoomBelow && enoughRoomAbove && !isCurrentlyAbove) {
            newDirection = 'above';
          } else if (!enoughRoomAbove && enoughRoomBelow && isCurrentlyAbove) {
            newDirection = 'below';
          }
          if (newDirection == 'above' || isCurrentlyAbove && newDirection !== 'below') {
            css.top = container.top - dropdown.height;
          }
          if (newDirection != null) {
            this.$dropdown.removeClass('select2-dropdown--below select2-dropdown--above').addClass('select2-dropdown--' + newDirection);
            this.$container.removeClass('select2-container--below select2-container--above').addClass('select2-container--' + newDirection);
          }
          this.$dropdownContainer.css(css);
        };
        AttachBody.prototype._resizeDropdown = function () {
          var css = { width: this.$container.outerWidth(false) + 'px' };
          if (this.options.get('dropdownAutoWidth')) {
            css.minWidth = css.width;
            css.width = 'auto';
          }
          this.$dropdown.css(css);
        };
        AttachBody.prototype._showDropdown = function (decorated) {
          this.$dropdownContainer.appendTo(this.$dropdownParent);
          this._positionDropdown();
          this._resizeDropdown();
        };
        return AttachBody;
      });
      S2.define('select2/dropdown/minimumResultsForSearch', [], function () {
        function countResults(data) {
          var count = 0;
          for (var d = 0; d < data.length; d++) {
            var item = data[d];
            if (item.children) {
              count += countResults(item.children);
            } else {
              count++;
            }
          }
          return count;
        }
        function MinimumResultsForSearch(decorated, $element, options, dataAdapter) {
          this.minimumResultsForSearch = options.get('minimumResultsForSearch');
          if (this.minimumResultsForSearch < 0) {
            this.minimumResultsForSearch = Infinity;
          }
          decorated.call(this, $element, options, dataAdapter);
        }
        MinimumResultsForSearch.prototype.showSearch = function (decorated, params) {
          if (countResults(params.data.results) < this.minimumResultsForSearch) {
            return false;
          }
          return decorated.call(this, params);
        };
        return MinimumResultsForSearch;
      });
      S2.define('select2/dropdown/selectOnClose', [], function () {
        function SelectOnClose() {
        }
        SelectOnClose.prototype.bind = function (decorated, container, $container) {
          var self = this;
          decorated.call(this, container, $container);
          container.on('close', function () {
            self._handleSelectOnClose();
          });
        };
        SelectOnClose.prototype._handleSelectOnClose = function () {
          var $highlightedResults = this.getHighlightedResults();
          // Only select highlighted results
          if ($highlightedResults.length < 1) {
            return;
          }
          var data = $highlightedResults.data('data');
          // Don't re-select already selected resulte
          if (data.element != null && data.element.selected || data.element == null && data.selected) {
            return;
          }
          this.trigger('select', { data: data });
        };
        return SelectOnClose;
      });
      S2.define('select2/dropdown/closeOnSelect', [], function () {
        function CloseOnSelect() {
        }
        CloseOnSelect.prototype.bind = function (decorated, container, $container) {
          var self = this;
          decorated.call(this, container, $container);
          container.on('select', function (evt) {
            self._selectTriggered(evt);
          });
          container.on('unselect', function (evt) {
            self._selectTriggered(evt);
          });
        };
        CloseOnSelect.prototype._selectTriggered = function (_, evt) {
          var originalEvent = evt.originalEvent;
          // Don't close if the control key is being held
          if (originalEvent && originalEvent.ctrlKey) {
            return;
          }
          this.trigger('close', {});
        };
        return CloseOnSelect;
      });
      S2.define('select2/i18n/en', [], function () {
        // English
        return {
          errorLoading: function () {
            return 'The results could not be loaded.';
          },
          inputTooLong: function (args) {
            var overChars = args.input.length - args.maximum;
            var message = 'Please delete ' + overChars + ' character';
            if (overChars != 1) {
              message += 's';
            }
            return message;
          },
          inputTooShort: function (args) {
            var remainingChars = args.minimum - args.input.length;
            var message = 'Please enter ' + remainingChars + ' or more characters';
            return message;
          },
          loadingMore: function () {
            return 'Loading more results\u2026';
          },
          maximumSelected: function (args) {
            var message = 'You can only select ' + args.maximum + ' item';
            if (args.maximum != 1) {
              message += 's';
            }
            return message;
          },
          noResults: function () {
            return 'No results found';
          },
          searching: function () {
            return 'Searching\u2026';
          }
        };
      });
      S2.define('select2/defaults', [
        'jquery',
        'require',
        './results',
        './selection/single',
        './selection/multiple',
        './selection/placeholder',
        './selection/allowClear',
        './selection/search',
        './selection/eventRelay',
        './utils',
        './translation',
        './diacritics',
        './data/select',
        './data/array',
        './data/ajax',
        './data/tags',
        './data/tokenizer',
        './data/minimumInputLength',
        './data/maximumInputLength',
        './data/maximumSelectionLength',
        './dropdown',
        './dropdown/search',
        './dropdown/hidePlaceholder',
        './dropdown/infiniteScroll',
        './dropdown/attachBody',
        './dropdown/minimumResultsForSearch',
        './dropdown/selectOnClose',
        './dropdown/closeOnSelect',
        './i18n/en'
      ], function ($, require, ResultsList, SingleSelection, MultipleSelection, Placeholder, AllowClear, SelectionSearch, EventRelay, Utils, Translation, DIACRITICS, SelectData, ArrayData, AjaxData, Tags, Tokenizer, MinimumInputLength, MaximumInputLength, MaximumSelectionLength, Dropdown, DropdownSearch, HidePlaceholder, InfiniteScroll, AttachBody, MinimumResultsForSearch, SelectOnClose, CloseOnSelect, EnglishTranslation) {
        function Defaults() {
          this.reset();
        }
        Defaults.prototype.apply = function (options) {
          options = $.extend(true, {}, this.defaults, options);
          if (options.dataAdapter == null) {
            if (options.ajax != null) {
              options.dataAdapter = AjaxData;
            } else if (options.data != null) {
              options.dataAdapter = ArrayData;
            } else {
              options.dataAdapter = SelectData;
            }
            if (options.minimumInputLength > 0) {
              options.dataAdapter = Utils.Decorate(options.dataAdapter, MinimumInputLength);
            }
            if (options.maximumInputLength > 0) {
              options.dataAdapter = Utils.Decorate(options.dataAdapter, MaximumInputLength);
            }
            if (options.maximumSelectionLength > 0) {
              options.dataAdapter = Utils.Decorate(options.dataAdapter, MaximumSelectionLength);
            }
            if (options.tags) {
              options.dataAdapter = Utils.Decorate(options.dataAdapter, Tags);
            }
            if (options.tokenSeparators != null || options.tokenizer != null) {
              options.dataAdapter = Utils.Decorate(options.dataAdapter, Tokenizer);
            }
            if (options.query != null) {
              var Query = require(options.amdBase + 'compat/query');
              options.dataAdapter = Utils.Decorate(options.dataAdapter, Query);
            }
            if (options.initSelection != null) {
              var InitSelection = require(options.amdBase + 'compat/initSelection');
              options.dataAdapter = Utils.Decorate(options.dataAdapter, InitSelection);
            }
          }
          if (options.resultsAdapter == null) {
            options.resultsAdapter = ResultsList;
            if (options.ajax != null) {
              options.resultsAdapter = Utils.Decorate(options.resultsAdapter, InfiniteScroll);
            }
            if (options.placeholder != null) {
              options.resultsAdapter = Utils.Decorate(options.resultsAdapter, HidePlaceholder);
            }
            if (options.selectOnClose) {
              options.resultsAdapter = Utils.Decorate(options.resultsAdapter, SelectOnClose);
            }
          }
          if (options.dropdownAdapter == null) {
            if (options.multiple) {
              options.dropdownAdapter = Dropdown;
            } else {
              var SearchableDropdown = Utils.Decorate(Dropdown, DropdownSearch);
              options.dropdownAdapter = SearchableDropdown;
            }
            if (options.minimumResultsForSearch !== 0) {
              options.dropdownAdapter = Utils.Decorate(options.dropdownAdapter, MinimumResultsForSearch);
            }
            if (options.closeOnSelect) {
              options.dropdownAdapter = Utils.Decorate(options.dropdownAdapter, CloseOnSelect);
            }
            if (options.dropdownCssClass != null || options.dropdownCss != null || options.adaptDropdownCssClass != null) {
              var DropdownCSS = require(options.amdBase + 'compat/dropdownCss');
              options.dropdownAdapter = Utils.Decorate(options.dropdownAdapter, DropdownCSS);
            }
            options.dropdownAdapter = Utils.Decorate(options.dropdownAdapter, AttachBody);
          }
          if (options.selectionAdapter == null) {
            if (options.multiple) {
              options.selectionAdapter = MultipleSelection;
            } else {
              options.selectionAdapter = SingleSelection;
            }
            // Add the placeholder mixin if a placeholder was specified
            if (options.placeholder != null) {
              options.selectionAdapter = Utils.Decorate(options.selectionAdapter, Placeholder);
            }
            if (options.allowClear) {
              options.selectionAdapter = Utils.Decorate(options.selectionAdapter, AllowClear);
            }
            if (options.multiple) {
              options.selectionAdapter = Utils.Decorate(options.selectionAdapter, SelectionSearch);
            }
            if (options.containerCssClass != null || options.containerCss != null || options.adaptContainerCssClass != null) {
              var ContainerCSS = require(options.amdBase + 'compat/containerCss');
              options.selectionAdapter = Utils.Decorate(options.selectionAdapter, ContainerCSS);
            }
            options.selectionAdapter = Utils.Decorate(options.selectionAdapter, EventRelay);
          }
          if (typeof options.language === 'string') {
            // Check if the language is specified with a region
            if (options.language.indexOf('-') > 0) {
              // Extract the region information if it is included
              var languageParts = options.language.split('-');
              var baseLanguage = languageParts[0];
              options.language = [
                options.language,
                baseLanguage
              ];
            } else {
              options.language = [options.language];
            }
          }
          if ($.isArray(options.language)) {
            var languages = new Translation();
            options.language.push('en');
            var languageNames = options.language;
            for (var l = 0; l < languageNames.length; l++) {
              var name = languageNames[l];
              var language = {};
              try {
                // Try to load it with the original name
                language = Translation.loadPath(name);
              } catch (e) {
                try {
                  // If we couldn't load it, check if it wasn't the full path
                  name = this.defaults.amdLanguageBase + name;
                  language = Translation.loadPath(name);
                } catch (ex) {
                  // The translation could not be loaded at all. Sometimes this is
                  // because of a configuration problem, other times this can be
                  // because of how Select2 helps load all possible translation files.
                  if (options.debug && window.console && console.warn) {
                    console.warn('Select2: The language file for "' + name + '" could not be ' + 'automatically loaded. A fallback will be used instead.');
                  }
                  continue;
                }
              }
              languages.extend(language);
            }
            options.translations = languages;
          } else {
            var baseTranslation = Translation.loadPath(this.defaults.amdLanguageBase + 'en');
            var customTranslation = new Translation(options.language);
            customTranslation.extend(baseTranslation);
            options.translations = customTranslation;
          }
          return options;
        };
        Defaults.prototype.reset = function () {
          function stripDiacritics(text) {
            // Used 'uni range + named function' from http://jsperf.com/diacritics/18
            function match(a) {
              return DIACRITICS[a] || a;
            }
            return text.replace(/[^\u0000-\u007E]/g, match);
          }
          function matcher(params, data) {
            // Always return the object if there is nothing to compare
            if ($.trim(params.term) === '') {
              return data;
            }
            // Do a recursive check for options with children
            if (data.children && data.children.length > 0) {
              // Clone the data object if there are children
              // This is required as we modify the object to remove any non-matches
              var match = $.extend(true, {}, data);
              // Check each child of the option
              for (var c = data.children.length - 1; c >= 0; c--) {
                var child = data.children[c];
                var matches = matcher(params, child);
                // If there wasn't a match, remove the object in the array
                if (matches == null) {
                  match.children.splice(c, 1);
                }
              }
              // If any children matched, return the new object
              if (match.children.length > 0) {
                return match;
              }
              // If there were no matching children, check just the plain object
              return matcher(params, match);
            }
            var original = stripDiacritics(data.text).toUpperCase();
            var term = stripDiacritics(params.term).toUpperCase();
            // Check if the text contains the term
            if (original.indexOf(term) > -1) {
              return data;
            }
            // If it doesn't contain the term, don't return anything
            return null;
          }
          this.defaults = {
            amdBase: './',
            amdLanguageBase: './i18n/',
            closeOnSelect: true,
            debug: false,
            dropdownAutoWidth: false,
            escapeMarkup: Utils.escapeMarkup,
            language: EnglishTranslation,
            matcher: matcher,
            minimumInputLength: 0,
            maximumInputLength: 0,
            maximumSelectionLength: 0,
            minimumResultsForSearch: 0,
            selectOnClose: false,
            sorter: function (data) {
              return data;
            },
            templateResult: function (result) {
              return result.text;
            },
            templateSelection: function (selection) {
              return selection.text;
            },
            theme: 'default',
            width: 'resolve'
          };
        };
        Defaults.prototype.set = function (key, value) {
          var camelKey = $.camelCase(key);
          var data = {};
          data[camelKey] = value;
          var convertedData = Utils._convertData(data);
          $.extend(this.defaults, convertedData);
        };
        var defaults = new Defaults();
        return defaults;
      });
      S2.define('select2/options', [
        'require',
        'jquery',
        './defaults',
        './utils'
      ], function (require, $, Defaults, Utils) {
        function Options(options, $element) {
          this.options = options;
          if ($element != null) {
            this.fromElement($element);
          }
          this.options = Defaults.apply(this.options);
          if ($element && $element.is('input')) {
            var InputCompat = require(this.get('amdBase') + 'compat/inputData');
            this.options.dataAdapter = Utils.Decorate(this.options.dataAdapter, InputCompat);
          }
        }
        Options.prototype.fromElement = function ($e) {
          var excludedData = ['select2'];
          if (this.options.multiple == null) {
            this.options.multiple = $e.prop('multiple');
          }
          if (this.options.disabled == null) {
            this.options.disabled = $e.prop('disabled');
          }
          if (this.options.language == null) {
            if ($e.prop('lang')) {
              this.options.language = $e.prop('lang').toLowerCase();
            } else if ($e.closest('[lang]').prop('lang')) {
              this.options.language = $e.closest('[lang]').prop('lang');
            }
          }
          if (this.options.dir == null) {
            if ($e.prop('dir')) {
              this.options.dir = $e.prop('dir');
            } else if ($e.closest('[dir]').prop('dir')) {
              this.options.dir = $e.closest('[dir]').prop('dir');
            } else {
              this.options.dir = 'ltr';
            }
          }
          $e.prop('disabled', this.options.disabled);
          $e.prop('multiple', this.options.multiple);
          if ($e.data('select2Tags')) {
            if (this.options.debug && window.console && console.warn) {
              console.warn('Select2: The `data-select2-tags` attribute has been changed to ' + 'use the `data-data` and `data-tags="true"` attributes and will be ' + 'removed in future versions of Select2.');
            }
            $e.data('data', $e.data('select2Tags'));
            $e.data('tags', true);
          }
          if ($e.data('ajaxUrl')) {
            if (this.options.debug && window.console && console.warn) {
              console.warn('Select2: The `data-ajax-url` attribute has been changed to ' + '`data-ajax--url` and support for the old attribute will be removed' + ' in future versions of Select2.');
            }
            $e.attr('ajax--url', $e.data('ajaxUrl'));
            $e.data('ajax--url', $e.data('ajaxUrl'));
          }
          var dataset = {};
          // Prefer the element's `dataset` attribute if it exists
          // jQuery 1.x does not correctly handle data attributes with multiple dashes
          if ($.fn.jquery && $.fn.jquery.substr(0, 2) == '1.' && $e[0].dataset) {
            dataset = $.extend(true, {}, $e[0].dataset, $e.data());
          } else {
            dataset = $e.data();
          }
          var data = $.extend(true, {}, dataset);
          data = Utils._convertData(data);
          for (var key in data) {
            if ($.inArray(key, excludedData) > -1) {
              continue;
            }
            if ($.isPlainObject(this.options[key])) {
              $.extend(this.options[key], data[key]);
            } else {
              this.options[key] = data[key];
            }
          }
          return this;
        };
        Options.prototype.get = function (key) {
          return this.options[key];
        };
        Options.prototype.set = function (key, val) {
          this.options[key] = val;
        };
        return Options;
      });
      S2.define('select2/core', [
        'jquery',
        './options',
        './utils',
        './keys'
      ], function ($, Options, Utils, KEYS) {
        var Select2 = function ($element, options) {
          if ($element.data('select2') != null) {
            $element.data('select2').destroy();
          }
          this.$element = $element;
          this.id = this._generateId($element);
          options = options || {};
          this.options = new Options(options, $element);
          Select2.__super__.constructor.call(this);
          // Set up the tabindex
          var tabindex = $element.attr('tabindex') || 0;
          $element.data('old-tabindex', tabindex);
          $element.attr('tabindex', '-1');
          // Set up containers and adapters
          var DataAdapter = this.options.get('dataAdapter');
          this.dataAdapter = new DataAdapter($element, this.options);
          var $container = this.render();
          this._placeContainer($container);
          var SelectionAdapter = this.options.get('selectionAdapter');
          this.selection = new SelectionAdapter($element, this.options);
          this.$selection = this.selection.render();
          this.selection.position(this.$selection, $container);
          var DropdownAdapter = this.options.get('dropdownAdapter');
          this.dropdown = new DropdownAdapter($element, this.options);
          this.$dropdown = this.dropdown.render();
          this.dropdown.position(this.$dropdown, $container);
          var ResultsAdapter = this.options.get('resultsAdapter');
          this.results = new ResultsAdapter($element, this.options, this.dataAdapter);
          this.$results = this.results.render();
          this.results.position(this.$results, this.$dropdown);
          // Bind events
          var self = this;
          // Bind the container to all of the adapters
          this._bindAdapters();
          // Register any DOM event handlers
          this._registerDomEvents();
          // Register any internal event handlers
          this._registerDataEvents();
          this._registerSelectionEvents();
          this._registerDropdownEvents();
          this._registerResultsEvents();
          this._registerEvents();
          // Set the initial state
          this.dataAdapter.current(function (initialData) {
            self.trigger('selection:update', { data: initialData });
          });
          // Hide the original select
          $element.addClass('select2-hidden-accessible');
          $element.attr('aria-hidden', 'true');
          // Synchronize any monitored attributes
          this._syncAttributes();
          $element.data('select2', this);
        };
        Utils.Extend(Select2, Utils.Observable);
        Select2.prototype._generateId = function ($element) {
          var id = '';
          if ($element.attr('id') != null) {
            id = $element.attr('id');
          } else if ($element.attr('name') != null) {
            id = $element.attr('name') + '-' + Utils.generateChars(2);
          } else {
            id = Utils.generateChars(4);
          }
          id = id.replace(/(:|\.|\[|\]|,)/g, '');
          id = 'select2-' + id;
          return id;
        };
        Select2.prototype._placeContainer = function ($container) {
          $container.insertAfter(this.$element);
          var width = this._resolveWidth(this.$element, this.options.get('width'));
          if (width != null) {
            $container.css('width', width);
          }
        };
        Select2.prototype._resolveWidth = function ($element, method) {
          var WIDTH = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
          if (method == 'resolve') {
            var styleWidth = this._resolveWidth($element, 'style');
            if (styleWidth != null) {
              return styleWidth;
            }
            return this._resolveWidth($element, 'element');
          }
          if (method == 'element') {
            var elementWidth = $element.outerWidth(false);
            if (elementWidth <= 0) {
              return 'auto';
            }
            return elementWidth + 'px';
          }
          if (method == 'style') {
            var style = $element.attr('style');
            if (typeof style !== 'string') {
              return null;
            }
            var attrs = style.split(';');
            for (var i = 0, l = attrs.length; i < l; i = i + 1) {
              var attr = attrs[i].replace(/\s/g, '');
              var matches = attr.match(WIDTH);
              if (matches !== null && matches.length >= 1) {
                return matches[1];
              }
            }
            return null;
          }
          return method;
        };
        Select2.prototype._bindAdapters = function () {
          this.dataAdapter.bind(this, this.$container);
          this.selection.bind(this, this.$container);
          this.dropdown.bind(this, this.$container);
          this.results.bind(this, this.$container);
        };
        Select2.prototype._registerDomEvents = function () {
          var self = this;
          this.$element.on('change.select2', function () {
            self.dataAdapter.current(function (data) {
              self.trigger('selection:update', { data: data });
            });
          });
          this._sync = Utils.bind(this._syncAttributes, this);
          if (this.$element[0].attachEvent) {
            this.$element[0].attachEvent('onpropertychange', this._sync);
          }
          var observer = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
          ;
          if (observer != null) {
            this._observer = new observer(function (mutations) {
              $.each(mutations, self._sync);
            });
            this._observer.observe(this.$element[0], {
              attributes: true,
              subtree: false
            });
          } else if (this.$element[0].addEventListener) {
            this.$element[0].addEventListener('DOMAttrModified', self._sync, false);
          }
        };
        Select2.prototype._registerDataEvents = function () {
          var self = this;
          this.dataAdapter.on('*', function (name, params) {
            self.trigger(name, params);
          });
        };
        Select2.prototype._registerSelectionEvents = function () {
          var self = this;
          var nonRelayEvents = [
              'toggle',
              'focus'
            ];
          this.selection.on('toggle', function () {
            self.toggleDropdown();
          });
          this.selection.on('focus', function (params) {
            self.focus(params);
          });
          this.selection.on('*', function (name, params) {
            if ($.inArray(name, nonRelayEvents) !== -1) {
              return;
            }
            self.trigger(name, params);
          });
        };
        Select2.prototype._registerDropdownEvents = function () {
          var self = this;
          this.dropdown.on('*', function (name, params) {
            self.trigger(name, params);
          });
        };
        Select2.prototype._registerResultsEvents = function () {
          var self = this;
          this.results.on('*', function (name, params) {
            self.trigger(name, params);
          });
        };
        Select2.prototype._registerEvents = function () {
          var self = this;
          this.on('open', function () {
            self.$container.addClass('select2-container--open');
          });
          this.on('close', function () {
            self.$container.removeClass('select2-container--open');
          });
          this.on('enable', function () {
            self.$container.removeClass('select2-container--disabled');
          });
          this.on('disable', function () {
            self.$container.addClass('select2-container--disabled');
          });
          this.on('blur', function () {
            self.$container.removeClass('select2-container--focus');
          });
          this.on('query', function (params) {
            if (!self.isOpen()) {
              self.trigger('open', {});
            }
            this.dataAdapter.query(params, function (data) {
              self.trigger('results:all', {
                data: data,
                query: params
              });
            });
          });
          this.on('query:append', function (params) {
            this.dataAdapter.query(params, function (data) {
              self.trigger('results:append', {
                data: data,
                query: params
              });
            });
          });
          this.on('keypress', function (evt) {
            var key = evt.which;
            if (self.isOpen()) {
              if (key === KEYS.ESC || key === KEYS.TAB || key === KEYS.UP && evt.altKey) {
                self.close();
                evt.preventDefault();
              } else if (key === KEYS.ENTER) {
                self.trigger('results:select', {});
                evt.preventDefault();
              } else if (key === KEYS.SPACE && evt.ctrlKey) {
                self.trigger('results:toggle', {});
                evt.preventDefault();
              } else if (key === KEYS.UP) {
                self.trigger('results:previous', {});
                evt.preventDefault();
              } else if (key === KEYS.DOWN) {
                self.trigger('results:next', {});
                evt.preventDefault();
              }
            } else {
              if (key === KEYS.ENTER || key === KEYS.SPACE || key === KEYS.DOWN && evt.altKey) {
                self.open();
                evt.preventDefault();
              }
            }
          });
        };
        Select2.prototype._syncAttributes = function () {
          this.options.set('disabled', this.$element.prop('disabled'));
          if (this.options.get('disabled')) {
            if (this.isOpen()) {
              this.close();
            }
            this.trigger('disable', {});
          } else {
            this.trigger('enable', {});
          }
        };
        /**
   * Override the trigger method to automatically trigger pre-events when
   * there are events that can be prevented.
   */
        Select2.prototype.trigger = function (name, args) {
          var actualTrigger = Select2.__super__.trigger;
          var preTriggerMap = {
              'open': 'opening',
              'close': 'closing',
              'select': 'selecting',
              'unselect': 'unselecting'
            };
          if (args === undefined) {
            args = {};
          }
          if (name in preTriggerMap) {
            var preTriggerName = preTriggerMap[name];
            var preTriggerArgs = {
                prevented: false,
                name: name,
                args: args
              };
            actualTrigger.call(this, preTriggerName, preTriggerArgs);
            if (preTriggerArgs.prevented) {
              args.prevented = true;
              return;
            }
          }
          actualTrigger.call(this, name, args);
        };
        Select2.prototype.toggleDropdown = function () {
          if (this.options.get('disabled')) {
            return;
          }
          if (this.isOpen()) {
            this.close();
          } else {
            this.open();
          }
        };
        Select2.prototype.open = function () {
          if (this.isOpen()) {
            return;
          }
          this.trigger('query', {});
        };
        Select2.prototype.close = function () {
          if (!this.isOpen()) {
            return;
          }
          this.trigger('close', {});
        };
        Select2.prototype.isOpen = function () {
          return this.$container.hasClass('select2-container--open');
        };
        Select2.prototype.hasFocus = function () {
          return this.$container.hasClass('select2-container--focus');
        };
        Select2.prototype.focus = function (data) {
          // No need to re-trigger focus events if we are already focused
          if (this.hasFocus()) {
            return;
          }
          this.$container.addClass('select2-container--focus');
          this.trigger('focus', {});
        };
        Select2.prototype.enable = function (args) {
          if (this.options.get('debug') && window.console && console.warn) {
            console.warn('Select2: The `select2("enable")` method has been deprecated and will' + ' be removed in later Select2 versions. Use $element.prop("disabled")' + ' instead.');
          }
          if (args == null || args.length === 0) {
            args = [true];
          }
          var disabled = !args[0];
          this.$element.prop('disabled', disabled);
        };
        Select2.prototype.data = function () {
          if (this.options.get('debug') && arguments.length > 0 && window.console && console.warn) {
            console.warn('Select2: Data can no longer be set using `select2("data")`. You ' + 'should consider setting the value instead using `$element.val()`.');
          }
          var data = [];
          this.dataAdapter.current(function (currentData) {
            data = currentData;
          });
          return data;
        };
        Select2.prototype.val = function (args) {
          if (this.options.get('debug') && window.console && console.warn) {
            console.warn('Select2: The `select2("val")` method has been deprecated and will be' + ' removed in later Select2 versions. Use $element.val() instead.');
          }
          if (args == null || args.length === 0) {
            return this.$element.val();
          }
          var newVal = args[0];
          if ($.isArray(newVal)) {
            newVal = $.map(newVal, function (obj) {
              return obj.toString();
            });
          }
          this.$element.val(newVal).trigger('change');
        };
        Select2.prototype.destroy = function () {
          this.$container.remove();
          if (this.$element[0].detachEvent) {
            this.$element[0].detachEvent('onpropertychange', this._sync);
          }
          if (this._observer != null) {
            this._observer.disconnect();
            this._observer = null;
          } else if (this.$element[0].removeEventListener) {
            this.$element[0].removeEventListener('DOMAttrModified', this._sync, false);
          }
          this._sync = null;
          this.$element.off('.select2');
          this.$element.attr('tabindex', this.$element.data('old-tabindex'));
          this.$element.removeClass('select2-hidden-accessible');
          this.$element.attr('aria-hidden', 'false');
          this.$element.removeData('select2');
          this.dataAdapter.destroy();
          this.selection.destroy();
          this.dropdown.destroy();
          this.results.destroy();
          this.dataAdapter = null;
          this.selection = null;
          this.dropdown = null;
          this.results = null;
        };
        Select2.prototype.render = function () {
          var $container = $('<span class="select2 select2-container">' + '<span class="selection"></span>' + '<span class="dropdown-wrapper" aria-hidden="true"></span>' + '</span>');
          $container.attr('dir', this.options.get('dir'));
          this.$container = $container;
          this.$container.addClass('select2-container--' + this.options.get('theme'));
          $container.data('element', this.$element);
          return $container;
        };
        return Select2;
      });
      S2.define('jquery-mousewheel', ['jquery'], function ($) {
        // Used to shim jQuery.mousewheel for non-full builds.
        return $;
      });
      S2.define('jquery.select2', [
        'jquery',
        'jquery-mousewheel',
        './select2/core',
        './select2/defaults'
      ], function ($, _, Select2, Defaults) {
        if ($.fn.select2 == null) {
          // All methods that should return the element
          var thisMethods = [
              'open',
              'close',
              'destroy'
            ];
          $.fn.select2 = function (options) {
            options = options || {};
            if (typeof options === 'object') {
              this.each(function () {
                var instanceOptions = $.extend(true, {}, options);
                var instance = new Select2($(this), instanceOptions);
              });
              return this;
            } else if (typeof options === 'string') {
              var ret;
              this.each(function () {
                var instance = $(this).data('select2');
                if (instance == null && window.console && console.error) {
                  console.error('The select2(\'' + options + '\') method was called on an ' + 'element that is not using Select2.');
                }
                var args = Array.prototype.slice.call(arguments, 1);
                ret = instance[options].apply(instance, args);
              });
              // Check if we should be returning `this`
              if ($.inArray(options, thisMethods) > -1) {
                return this;
              }
              return ret;
            } else {
              throw new Error('Invalid arguments for Select2: ' + options);
            }
          };
        }
        if ($.fn.select2.defaults == null) {
          $.fn.select2.defaults = Defaults;
        }
        return Select2;
      });
      // Return the AMD loader configuration so it can be used outside of this file
      return {
        define: S2.define,
        require: S2.require
      };
    }();
  // Autoload the jQuery bindings
  // We know that all of the modules exist above this, so we're safe
  var select2 = S2.require('jquery.select2');
  // Hold the AMD module references on the jQuery function that was just loaded
  // This allows Select2 to use the internal loader outside of this file, such
  // as in the language files.
  jQuery.fn.select2.amd = S2;
  // Return the Select2 instance for anyone who is importing it.
  return select2;
}));
angular.module('iwx', [
  'ui.bootstrap',
  'ui.utils',
  'ui.router',
  'ngAnimate',
  'ngTable',
  'angular-loading-bar',
  'monospaced.qrcode',
  'chart.js',
  'treeControl',
  'ngSanitize',
  'angular-simditor'
]);
angular.module('iwx').constant('eventType', {
  LOGIN: 'login',
  LOGOUT: 'logout',
  NOTIFICATION: 'notification'
});
angular.module('iwx').constant('notificationType', {
  INFO: {
    name: 'INFO',
    timeout: 3000,
    class: 'info',
    closable: false
  },
  LONG_INFO: {
    name: 'LONG_INFO',
    timeout: -1,
    class: 'info',
    closable: true
  },
  ERROR: {
    name: 'ERROR',
    timeout: 10000,
    class: 'error',
    closable: true
  },
  POPMSG: {
    name: 'POPMSG',
    timeout: 10000,
    class: 'info',
    closable: true
  }
});
//添加请求头常量
angular.module('iwx').constant('origin', {
  DESTINATION: { name: 'http://broadcast.iweixiao.cn' },
  ORIGIN: 'http://101.201.146.103:8888'
});
angular.module('iwx').config([
  '$httpProvider',
  function ($httpProvider) {
    //initialize get if not there
    if (!$httpProvider.defaults.headers.get) {
      $httpProvider.defaults.headers.get = {};
    }
    //disable IE ajax request caching
    $httpProvider.defaults.headers.get['If-Modified-Since'] = '0';
  }
]);
angular.module('iwx').config([
  '$stateProvider',
  '$urlRouterProvider',
  '$locationProvider',
  '$httpProvider',
  function ($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {
    //$locationProvider.html5Mode(true);
    $stateProvider.state('welcome', {
      url: '/',
      templateUrl: 'partial/welcome/welcome.html'
    });
    $stateProvider.state('certificate', {
      url: '/certificate',
      templateUrl: 'partial/certificate/certificate.html'
    });
    $stateProvider.state('certificate_coupons', {
      url: '/certificate/coupons',
      templateUrl: 'partial/certificate/coupons/certificate_coupons.html'
    });
    $stateProvider.state('certificate_coupons_details', {
      url: '/certificate/coupons/:id/details',
      templateUrl: 'partial/certificate/coupons/certificate_coupons_details.html'
    });
    $stateProvider.state('certificate_coupons_item', {
      url: '/certificate/coupons/:id',
      templateUrl: 'partial/certificate/coupons/certificate_coupons_item.html'
    });
    $stateProvider.state('profile', {
      url: '/profile',
      templateUrl: 'partial/profile/profile.html'
    });
    $stateProvider.state('profile.change_password', {
      url: '/change_password',
      templateUrl: 'partial/profile/change_password.html'
    });
    $stateProvider.state('community', {
      url: '/community',
      templateUrl: 'partial/community/community.html'
    });
    $stateProvider.state('community.members', {
      url: '/community/members/:page',
      templateUrl: 'partial/community/community_members.html'
    });
    //部门管理
    $stateProvider.state('community.department', {
      url: '/community/department',
      templateUrl: 'partial/community/community_department/community_department.html'
    });
    //职务管理
    $stateProvider.state('community.duty', {
      url: '/community/duty',
      templateUrl: 'partial/community/community_duty/community_duty.html'
    });
    //已审核的成员
    $stateProvider.state('community.approved', {
      url: '/community/members/approved',
      templateUrl: 'partial/community/community_members_approved.html'
    });
    //待审核的成员
    /*$stateProvider.state('community.pending', {
            url: '/community/members/pending',
            templateUrl: 'partial/community/community_members_pending.html'
        });*/
    $stateProvider.state('community.verify_members', {
      url: '/members/verify_members/:page',
      templateUrl: 'partial/community/community_members_verify.html'
    });
    $stateProvider.state('community.register', {
      url: '/community/register',
      templateUrl: 'partial/community/community_register.html'
    });
    $stateProvider.state('community.member', {
      url: '/community/member/:id/:page',
      templateUrl: 'partial/community/community_member.html'
    });
    //换届管理
    $stateProvider.state('community.election', {
      url: '/community/election/:id',
      templateUrl: 'partial/community/community_election.html'
    });
    $stateProvider.state('activity', {
      url: '/activity/:currentPage',
      templateUrl: 'partial/activity/activity.html'
    });
    //社团管理员-社团文章管理
    $stateProvider.state('activity.article', {
      url: '/article/:page',
      templateUrl: 'partial/article/admin/comm_article.html'
    });
    //社团管理员-校园集市
    $stateProvider.state('activity.bazaar', {
      url: '/bazaar/:id/:page',
      templateUrl: 'partial/bazaar/admin/bazaar_list.html'
    });
    //创建校园集市
    $stateProvider.state('create_bazaar', {
      url: '/create_bazaar',
      templateUrl: 'partial/bazaar/admin/create_bazaar.html'
    });
    //求购
    $stateProvider.state('purchase_bazaar', {
      url: '/purchase_bazaar/:id/:page',
      templateUrl: 'partial/bazaar/admin/purchase.html'
    });
    //转让
    $stateProvider.state('sale_bazaar', {
      url: '/sale_bazaar/:id/:page',
      templateUrl: 'partial/bazaar/admin/sale.html'
    });
    //寻物
    $stateProvider.state('lost_bazaar', {
      url: '/lost_bazaar/:id/:page',
      templateUrl: 'partial/bazaar/admin/lost.html'
    });
    //招领
    $stateProvider.state('pick_bazaar', {
      url: '/pick_bazaar/:id/:page',
      templateUrl: 'partial/bazaar/admin/pick.html'
    });
    //校园集市消息路由
    $stateProvider.state('message.bazaar', {
      url: '/message_bazaar/:id',
      templateUrl: 'partial/message/message.html'
    });
    $stateProvider.state('message.bazaar_user', {
      url: '/message_bazaar_user/:id',
      templateUrl: 'partial/message/message_bazaar_user.html'
    });
    $stateProvider.state('message.bazaar_topic', {
      url: '/message_bazaar_topic/:id/:user_id',
      templateUrl: 'partial/message/message_bazaar_topic.html'
    });
    $stateProvider.state('activity.article_detail', {
      url: '/article/detail/:articleId/:page',
      templateUrl: 'partial/article/admin/comm_article_detail.html'
    });
    //校级管理员-社团文章管理
    $stateProvider.state('activity_university.article', {
      url: '/article',
      templateUrl: 'partial/article/university/comm_article_un.html'
    });
    //校级管理员-校园集市
    $stateProvider.state('activity_university.bazaar', {
      url: '/bazaar',
      templateUrl: 'partial/bazaar/university/bazaar_list_un.html'
    });
    $stateProvider.state('activity_university.bazaar.personal', {
      url: '/personal',
      templateUrl: 'partial/bazaar/university/bazaar_list_personal_un.html'
    });
    //i微校管理员-社团文章管理
    $stateProvider.state('activity_iWX.article', {
      url: '/article',
      templateUrl: 'partial/article/iwx/comm_article_iwx.html'
    });
    //i微校管理员-校园集市
    $stateProvider.state('activity_iWX.bazaar', {
      url: '/bazaar',
      templateUrl: 'partial/bazaar/iwx/bazaar_list_iwx.html'
    });
    $stateProvider.state('activity_iWX.bazaar.personal', {
      url: '/personal',
      templateUrl: 'partial/bazaar/iwx/bazaar_list_person_iwx.html'
    });
    //i微校管理员-活动管理
    $stateProvider.state('activity_iWX', {
      url: '/activity_iWX',
      templateUrl: 'partial/activity/activity_iWX.html'
    });
    $stateProvider.state('activity_iWX.create_activity', {
      url: '/create',
      templateUrl: 'partial/activity/activity_iWX_create.html'
    });
    //i微校管理员-社团管理
    $stateProvider.state('community_iWX', {
      url: '/community_iWX',
      templateUrl: 'partial/community/community_iWX/community_iWX.html'
    });
    $stateProvider.state('community_iWX.pending', {
      url: '/pending',
      templateUrl: 'partial/community/community_iWX/community_iWX_pending.html'
    });
    //换届状态
    $stateProvider.state('community_iWX.shift', {
      url: '/shift',
      templateUrl: 'partial/community/community_iWX/community_iWX_shift.html'
    });
    //新建社团
    $stateProvider.state('community_iWX.register_community', {
      url: '/register_community',
      templateUrl: 'partial/community/community_iWX/community_iWX_register_community.html'
    });
    //新建管理员
    $stateProvider.state('community_iWX.create_manager', {
      url: '/create_manager',
      templateUrl: 'partial/community/community_iWX/community_iWX_create_manager.html'
    });
    //管理员列表
    $stateProvider.state('community_iWX.manager_list', {
      url: '/manager_list',
      templateUrl: 'partial/community/community_iWX/community_iWX_manager_list.html'
    });
    //i微校管理员-电子凭证管理
    $stateProvider.state('certificate_coupons_iWX', {
      url: '/certificate_coupons_iWX',
      templateUrl: 'partial/certificate/coupons/coupons_iWX/certificate_coupons_iWX.html'
    });
    $stateProvider.state('certificate_coupons_iWX.create', {
      url: '/create',
      templateUrl: 'partial/certificate/coupons/coupons_iWX/certificate_coupons_iWX_create.html'
    });
    $stateProvider.state('certificate_coupons_iWX.coupons_detail', {
      url: '/coupons_detail/:id',
      templateUrl: 'partial/certificate/coupons/coupons_iWX/certificate_coupons_detail_iWX.html'
    });
    //i微校管理员-信息管理
    $stateProvider.state('message_iWX', {
      url: '/message_iWX',
      templateUrl: 'partial/message/message_iWX/message_iWX.html'
    });
    $stateProvider.state('message_iWX.create_letters', {
      url: '/create_letters',
      templateUrl: 'partial/message/message_iWX/message_iWX_letters.html'
    });
    $stateProvider.state('message_iWX.message_iWX_to_community', {
      url: '/message_iWX_to_community/:id',
      templateUrl: 'partial/message/message_iWX/message_iWX_to_community.html'
    });
    //i微校管理员-账户管理
    $stateProvider.state('profile_iwx', {
      url: '/profile_iwx',
      templateUrl: 'partial/profile/profile_iwx/profile_iwx.html'
    });
    $stateProvider.state('profile_iwx.change_password', {
      url: '/change_password_iwx',
      templateUrl: 'partial/profile/profile_iwx/change_password_iwx.html'
    });
    //校级管理员相关路由
    //校级管理员-活动管理
    $stateProvider.state('activity_university', {
      url: '/activity_university',
      templateUrl: 'partial/activity/activity_university/activity_university.html'
    });
    $stateProvider.state('activity_university.create_activity', {
      url: '/create_activity',
      templateUrl: 'partial/activity/activity_university/activity_university_create.html'
    });
    //校级管理员-电子凭证管理
    $stateProvider.state('certificate_coupons_university', {
      url: '/certificate_coupons_university',
      templateUrl: 'partial/certificate/coupons/coupons_university/certificate_university.html'
    });
    $stateProvider.state('certificate_coupons_university.create', {
      url: '/create_coupon',
      templateUrl: 'partial/certificate/coupons/coupons_university/certificate_university_create.html'
    });
    $stateProvider.state('certificate_coupons_university.details', {
      url: '/details_coupon/:id',
      templateUrl: 'partial/certificate/coupons/coupons_university/certificate_university_detail.html'
    });
    //校级管理员-社团管理-社联
    $stateProvider.state('community_university', {
      url: '/community_university',
      templateUrl: 'partial/community/community_university/community_university.html'
    });
    $stateProvider.state('community_university.pending', {
      url: '/pending',
      templateUrl: 'partial/community/community_university/community_university_pending.html'
    });
    $stateProvider.state('community_university.election', {
      url: '/election',
      templateUrl: 'partial/community/community_university/community_university_election.html'
    });
    //校级管理员-活动审批-社联
    $stateProvider.state('community_university.activity_approve', {
      url: '/activity_approve',
      templateUrl: 'partial/community/community_university/comm_activity_approve/activity_appr_list.html'
    });
    $stateProvider.state('community_university.act_appr_setting', {
      url: '/act_appr_setting',
      templateUrl: 'partial/community/community_university/comm_activity_approve/act_setting/act_appr_setting.html'
    });
    $stateProvider.state('community_university.appr_table_detail', {
      url: '/activity_approve/:id',
      templateUrl: 'partial/community/community_university/comm_activity_approve/act_setting/appr_table_detail.html'
    });
    //校级管理员-校团委
    $stateProvider.state('community_university.league', {
      url: '/league',
      templateUrl: 'partial/community/community_university/community_org_info/org_info.html'
    });
    $stateProvider.state('community_university.stu_union', {
      url: '/stu_union',
      templateUrl: 'partial/community/community_university/community_org_info/org_info.html'
    });
    $stateProvider.state('community_university.stu_org', {
      url: '/stu_org',
      templateUrl: 'partial/community/community_university/community_org_info/org_info.html'
    });
    $stateProvider.state('community_university.stu_community', {
      url: '/stu_org',
      templateUrl: 'partial/community/community_university/community_org_info/org_info.html'
    });
    //校级管理员-信息管理
    $stateProvider.state('message_university', {
      url: '/message_university',
      templateUrl: 'partial/message/message_university/message_university.html'
    });
    $stateProvider.state('message_university.create_letters', {
      url: '/create_letters',
      templateUrl: 'partial/message/message_university/message_university_letters.html'
    });
    $stateProvider.state('message_university.message_uni_to_community', {
      url: '/message_uni_to_community/:id',
      templateUrl: 'partial/message/message_university/message_university_to_community.html'
    });
    //校级管理员-账户管理
    $stateProvider.state('profile_university', {
      url: '/profile_university',
      templateUrl: 'partial/profile/profile_university/profile_university.html'
    });
    $stateProvider.state('profile_university.change_password', {
      url: '/change_password_university',
      templateUrl: 'partial/profile/profile_university/change_password_university.html'
    });
    //超级管理员相关路由
    //超级管理员-角色管理
    $stateProvider.state('role_manage_super', {
      url: '/role_manage_super',
      templateUrl: 'partial/role/super/role_manage_super.html'
    });
    //版本管理
    $stateProvider.state('version_manage_super', {
      url: '/version_manage_super',
      templateUrl: 'partial/role/super/version_manage_super.html'
    });
    $stateProvider.state('version_manage_super.app', {
      url: '/app',
      templateUrl: 'partial/role/super/app_version_manage_super.html'
    });
    $stateProvider.state('version_manage_super_detail', {
      url: '/version_manage_super_detail/:id',
      templateUrl: 'partial/role/super/version_manage_super_detail.html'
    });
    $stateProvider.state('version_manage_super_detail_app', {
      url: '/app_version_manage_super_detail/:id',
      templateUrl: 'partial/role/super/app_version_manage_super_detail.html'
    });
    $stateProvider.state('role_manage_super.user', {
      url: '/user/:manager_type',
      templateUrl: 'partial/role/super/role_manage_super_user.html'
    });
    $stateProvider.state('role_manage_super.create_user', {
      url: '/create_user',
      templateUrl: 'partial/role/super/role_manage_super_create_user.html'
    });
    $stateProvider.state('message', {
      url: '/message',
      templateUrl: 'partial/message/messages.html'
    });
    $stateProvider.state('message.members', {
      url: '/members',
      templateUrl: 'partial/message/messages_members.html'
    });
    $stateProvider.state('message.user', {
      url: '/:id',
      templateUrl: 'partial/message/message.html'
    });
    $stateProvider.state('message.userInfo', {
      url: '/:id',
      templateUrl: 'partial/message/message_member_info.html'
    });
    //添加社团管理员和管理员间通信页面路由
    $stateProvider.state('message.iwx', {
      url: '/message.iwx/:id',
      templateUrl: 'partial/message/message_admin_iwx.html'
    });
    $stateProvider.state('message.university', {
      url: '/message.university/:id',
      templateUrl: 'partial/message/message_admin_university.html'
    });
    $stateProvider.state('activity_item', {
      url: '/activity/:id/:currentPage',
      templateUrl: 'partial/activity/item/activity_item.html'
    });
    $stateProvider.state('activity_item.announcement_plugin', {
      url: '/plugin/announcement/:currentPage',
      templateUrl: 'partial/activity/plugin/announcement.html'
    });
    $stateProvider.state('activity_item.lottery_plugin', {
      url: '/plugin/lottery/:currentPage',
      templateUrl: 'partial/activity/plugin/lottery.html'
    });
    $stateProvider.state('activity_item.lotteryat_plugin', {
      url: '/plugin/lottery/:award_id',
      templateUrl: 'partial/activity/plugin/lotteryat.html'
    });
    $stateProvider.state('activity_item.timeline_plugin', {
      url: '/plugin/timeline/:currentPage',
      templateUrl: 'partial/activity/plugin/timeline.html'
    });
    $stateProvider.state('activity_item.ticket_plugin', {
      url: '/plugin/ticket/:currentPage',
      templateUrl: 'partial/activity/plugin/ticket.html'
    });
    $stateProvider.state('activity_item.vote_plugin', {
      url: '/plugin/vote/:currentPage',
      templateUrl: 'partial/activity/plugin/vote.html'
    });
    $stateProvider.state('activity_item.stat_plugin', {
      url: '/plugin/stat/:currentPage',
      templateUrl: 'partial/activity/plugin/stat.html'
    });
    $stateProvider.state('activity_item.votestat_plugin', {
      url: '/plugin/votestat',
      templateUrl: 'partial/activity/plugin/votestat.html'
    });
    //添加查看历史投票route
    $stateProvider.state('activity_item.history_vote_plugin', {
      url: '/plugin/history_vote',
      templateUrl: 'partial/activity/plugin/history_vote.html'
    });
    //添加查看历史候选人route
    $stateProvider.state('activity_item.history_candidate_plugin', {
      url: '/plugin/history_candidate/:vote_id',
      templateUrl: 'partial/activity/plugin/history_candidate.html'
    });
    //添加查看历史电子票route
    $stateProvider.state('activity_item.history_ticket_plugin', {
      url: '/plugin/history_ticket',
      templateUrl: 'partial/activity/plugin/history_ticket.html'
    });
    $stateProvider.state('activity_item.register_plugin', {
      url: '/plugin/register',
      template: '<h4>\u793e\u56e2\u62db\u65b0</h4>'
    });
    $stateProvider.state('activity_item.sign_in_plugin', {
      url: '/plugin/signin/:currentPage',
      templateUrl: 'partial/activity/plugin/signin.html'
    });
    $stateProvider.state('activity_item.sign_in_at_plugin', {
      url: '/plugin/signinat',
      templateUrl: 'partial/activity/plugin/signinat.html'
    });
    //问卷插件
    $stateProvider.state('activity_item.questionnaire_plugin', {
      url: '/plugin/questionnaire/:currentPage',
      templateUrl: 'partial/activity/plugin/questionnaire.html'
    });
    $stateProvider.state('activity_item.questionnaire_stat_plugin', {
      url: '/plugin/questionnaire_stat',
      templateUrl: 'partial/activity/plugin/questionnaire_stat.html'
    });
    $stateProvider.state('register', {
      url: '/admin/register',
      templateUrl: 'partial/admin/register.html'
    });
    $stateProvider.state('login', {
      url: '/admin/login/:next',
      templateUrl: 'partial/admin/login.html'
    });
    //系统通知和信息--社团管理员
    $stateProvider.state('sysMesAndInfo', {
      url: '/sysMesAndInfo/:id',
      templateUrl: 'partial/welcome/sysMesAndInfo.html'
    });
    //取消发布活动通知日志
    $stateProvider.state('activity.unpublishLog', {
      url: '/unpublishLog/:type/:id',
      templateUrl: 'partial/common/unpublished_log.html'
    });
    //取消发布文章通知日志
    $stateProvider.state('activity.unpublishLog_art', {
      url: '/unpublishLog/:type/:id',
      templateUrl: 'partial/common/unpublished_log.html'
    });
    //取消发布集市通知日志
    $stateProvider.state('activity.unpublishLog_bazaar', {
      url: '/unpublishLog/:type/:id',
      templateUrl: 'partial/common/unpublished_log.html'
    });
    //党支部角色相关路由
    $stateProvider.state('party_info', {
      url: '/party_org',
      templateUrl: 'partial/community/party_branch/party_org.html'
    });
    $stateProvider.state('party_info.party_persons', {
      url: '/party_persons',
      templateUrl: 'partial/community/party_branch/party_persons.html'
    });
    $stateProvider.state('party_info.duty', {
      url: '/duty',
      templateUrl: 'partial/community/party_branch/party_persons/duty.html'
    });
    $stateProvider.state('party_info.grade', {
      url: '/grade',
      templateUrl: 'partial/community/party_branch/party_persons/grade.html'
    });
    $stateProvider.state('party_info.group', {
      url: '/group',
      templateUrl: 'partial/community/party_branch/party_persons/group.html'
    });
    $stateProvider.state('party_info.course', {
      url: '/course/:personId/:summaryId',
      templateUrl: 'partial/community/party_branch/party_persons/course.html'
    });
    $stateProvider.state('party_info.activity', {
      url: '/course/:personId/activity',
      templateUrl: 'partial/community/party_branch/party_persons/course/party_activity.html'
    });
    $stateProvider.state('party_info.info_conllection', {
      url: '/info_conllection',
      templateUrl: 'partial/community/party_branch/info_conllection.html'
    });
    $stateProvider.state('party_info.verify', {
      url: '/verify',
      templateUrl: 'partial/community/party_branch/info_conllection/verify.html'
    });
    $stateProvider.state('party_info.apply_person_info', {
      url: '/apply_person_info/:id',
      templateUrl: 'partial/community/party_branch/info_conllection/applyPersonInfo.html'
    });
    $stateProvider.state('party_info.activity_summary', {
      url: '/activity_summary/:activityId/:summaryId/:personId',
      templateUrl: 'partial/community/party_branch/party_persons/course/activity_summary.html'
    });
    $stateProvider.state('party_info.course_summary', {
      url: '/course_summary/:personId',
      templateUrl: 'partial/community/party_branch/party_persons/course/course_summary.html'
    });
    //党支部动态管理
    $stateProvider.state('party_act_list', {
      url: '/party_act/:page',
      templateUrl: 'partial/activity/party_branch/activity_list.html'
    });
    $stateProvider.state('party_act_item', {
      url: '/party_act_item/:id/:page',
      templateUrl: 'partial/activity/party_branch/activity_item.html'
    });
    $stateProvider.state('party_act_item.stat_plugin', {
      url: '/plugin/stat_plugin',
      templateUrl: 'partial/activity/party_branch/plugins/stat.html'
    });
    //活动签到插件
    $stateProvider.state('party_act_item.political_sign_in_plugin', {
      url: '/plugin/sign_in_plugin',
      templateUrl: 'partial/activity/party_branch/plugins/sign_in.html'
    });
    //线上讨论插件
    $stateProvider.state('party_act_item.discuss_plugin', {
      url: '/plugin/timeline_plugin',
      templateUrl: 'partial/activity/party_branch/plugins/timeline.html'
    });
    //签到结果
    $stateProvider.state('party_act_item.political_sign_in_at_plugin', {
      url: '/plugin/sign_in_at_plugin/:signInId/:isSpecify',
      templateUrl: 'partial/activity/party_branch/plugins/sign_in_at.html'
    });
    //电子展板
    $stateProvider.state('screen', {
      url: '/screen/:page',
      templateUrl: 'partial/screen/screen_list.html'
    });
    $stateProvider.state('screen.screen_edit', {
      url: '/screen_edit/:id',
      templateUrl: 'partial/screen/screen_edit.html'
    });
    //校级管理员终端管理
    $stateProvider.state('terminal_university', {
      url: '/terminal',
      templateUrl: 'partial/screen/university/terminal.html'
    });
    $stateProvider.state('terminal_university.schedule', {
      url: '/schedule/:page',
      templateUrl: 'partial/screen/university/schedule.html'
    });
    //素材库
    $stateProvider.state('terminal_university.source', {
      url: '/source/:page',
      templateUrl: 'partial/screen/university/schedule/source.html'
    });
    //播放日志
    $stateProvider.state('terminal_university.display_log', {
      url: '/display_log/:page',
      templateUrl: 'partial/screen/university/schedule/display_log.html'
    });
    $stateProvider.state('terminal_university.approve', {
      url: '/approve',
      templateUrl: 'partial/screen/university/terminal/approve_list.html'
    });
    $stateProvider.state('terminal_university.inter_cut', {
      url: '/inter_cut/:page/:router',
      templateUrl: 'partial/screen/university/schedule/inter_cut.html'
    });
    $stateProvider.state('terminal_university.native_upload', {
      url: '/native_upload/:page',
      templateUrl: 'partial/screen/university/schedule/upload_native.html'
    });
    $stateProvider.state('terminal_university.set_levels', {
      url: '/set_levels/:page',
      templateUrl: 'partial/screen/university/schedule/set_levels.html'
    });
    //校级管理员设备管理
    $stateProvider.state('terminal_university.device', {
      url: '/device_normal',
      templateUrl: 'partial/screen/university/device/device_normal.html'
    });
    $stateProvider.state('terminal_university.device_exception', {
      url: '/device_exception',
      templateUrl: 'partial/screen/university/device/device_exception.html'
    });
    $urlRouterProvider.otherwise('/');
    $httpProvider.interceptors.push('httpinterceptor');
  }
]);
angular.module('iwx').run([
  '$rootScope',
  function ($rootScope) {
    $rootScope.safeApply = function (fn) {
      var phase = $rootScope.$$phase;
      if (phase === '$apply' || phase === '$digest') {
        if (fn && typeof fn === 'function') {
          fn();
        }
      } else {
        this.$apply(fn);
      }
    };
  }
]);
//add the module with global defaults for froala
/*angular.module('iwx').value('froalaConfig', {
    inlineMode: false,
    events: {
        align: function (e, editor, alignment) {

        }
    }
});*/
//modify angular-simditor constant config
angular.module('iwx').constant('simditorConfig', {
  placeholder: '\u8f93\u5165\u5185\u5bb9\u8bf7\u9650\u5236\u57282000\u5b57\u4ee5\u5185',
  toolbar: [
    'title',
    'bold',
    'italic',
    'underline',
    'strikethrough',
    'color',
    '|',
    'ol',
    'ul',
    'blockquote',
    'table',
    '|',
    'link',
    'hr',
    '|',
    'indent',
    'outdent',
    'alignment'
  ],
  pasteImage: true,
  toolbarFloat: false,
  defaultImage: '',
  upload: {
    url: '',
    params: null,
    fileKey: 'upload_file',
    connectionCount: 3,
    leaveConfirm: 'Uploading is in progress, are you sure to leave this page?'
  },
  allowedTags: [
    'br',
    'a',
    'img',
    'b',
    'strong',
    'i',
    'u',
    'font',
    'p',
    'ul',
    'ol',
    'li',
    'blockquote',
    'pre',
    'h1',
    'h2',
    'h3',
    'h4',
    'hr',
    'div',
    'script',
    'style'
  ]
});
angular.module('iwx').controller('MainCtrl', [
  '$rootScope',
  '$scope',
  '$http',
  '$timeout',
  '$modal',
  'userService',
  'eventType',
  'notificationType',
  '$state',
  function ($rootScope, $scope, $http, $timeout, $modal, userService, eventType, notificationType, $state) {
    $scope.user = null;
    userService.load(true).then(function (user) {
      if (user.role.name === 'ADMIN') {
        $rootScope.message();
        if (!user.managed_community.password_code) {
          $http.get('/api/admin/community').success(function (data) {
          });
        }
      }
      $scope.user = user;  // console.log(user);
    });
    $scope.$on('flushLoginUser', function (event, community) {
      console.log(community);
      $scope.user.managed_community = community;
    });
    var notificationPromise = null;
    $scope.notification = null;
    $scope.popmsg = null;
    //发布编辑器或app新版本
    $scope.publishVersion = function (flag) {
      if (flag === 'editor') {
        $state.go('version_manage_super_detail', { 'id': -1 });
      } else {
        $state.go('version_manage_super_detail_app', { 'id': -1 });
      }
    };
    //消息提示
    $rootScope.message = function () {
      $http.get('/api/admin/community/message/members').success(function (data) {
        var message = data.member.concat(data.non_member);
        var mes_len = message.length;
        for (var i = 0; i < mes_len; i++) {
          if (message[i].count !== 0) {
            $rootScope.mes_note = true;
            break;
          } else {
            if (i === mes_len - 1) {
              getBazMes();
            }
          }
        }
      });
    };
    var getBazMes = function () {
      $http.get('/api/admin/bazaar/message/users').success(function (data) {
        var baz_len = data.length;
        for (var j = 0; j < baz_len; j++) {
          if (data[j].count !== 0) {
            $rootScope.mes_note = true;
            break;
          }
        }
      });
    };
    //分享web页面
    $scope.shareWeb = function (role) {
      // console.log(role);
      // console.log($scope.user);
      var shareUrl = '';
      if (role === 'ADMIN') {
        shareUrl = window.location.origin + '/weixin/community/share#' + $scope.user.managed_community.id;
      } else {
        if ($scope.user.admin_type === 'COMMITTEE') {
          shareUrl = window.location.origin + '/app/university/share#' + $scope.user.university.id;
        } else {
          shareUrl = window.location.origin + '/app/university/union/share#' + $scope.user.university.id;
        }
      }
      $modal.open({
        templateUrl: 'partial/common/share_qrcode.html',
        controller: 'shareQrcodeCtrl',
        resolve: {
          shareUrl: function () {
            return shareUrl;
          }
        }
      });
    };
    $scope.logout = function () {
      userService.logout();
    };
    $scope.clearNotification = function () {
      if (notificationPromise) {
        $timeout.cancel(notificationPromise);
        notificationPromise = null;
      }
      $scope.notification = null;
      $('#notificationModal').modal('hide');
      $scope.popmsg = null;
    };
    $scope.notificationDetails = function (details) {
      $modal.open({
        template: JSON.stringify(details),
        size: 'sm'
      });
    };
    $rootScope.$on(eventType.LOGIN, function (event, user) {
      if (user.role.name === 'ADMIN') {
        $rootScope.message();
        if (!user.managed_community.password_code) {
          //生成社团管理密码
          $http.get('/api/admin/community').success(function (data) {
          });
        }
      }
      console.log(user);
      $scope.user = user;
    });
    $rootScope.$on(eventType.LOGOUT, function (event, user) {
      $scope.user = null;
    });
    $rootScope.$on(eventType.NOTIFICATION, function (event, n) {
      if (!n) {
        $scope.clearNotification();
        return;
      }
      if (n.type === 'POPMSG') {
        angular.forEach(notificationType, function (type) {
          if (type.name === n.type) {
            $scope.popmsg = {
              message: n.message,
              title: n.title,
              type: type
            };
          }
        });
        $('#notificationModal').modal();
      } else {
        angular.forEach(notificationType, function (type) {
          if (type.name === n.type) {
            $scope.notification = {
              message: n.message,
              type: type
            };
          }
          if (n.payload) {
            $scope.notification.payload = n.payload;
          }
        });
        if ($scope.notification && $scope.notification.type.timeout > 0) {
          if (notificationPromise) {
            $timeout.cancel(notificationPromise);
          }
          notificationPromise = $timeout(function () {
            notificationPromise = null;
            $scope.notification = null;
          }, $scope.notification.type.timeout);
        }
      }
    });
  }
]);
angular.module('iwx').controller('WelcomeCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'userService',
  function ($scope, $rootScope, $http, userService) {
    $rootScope.welcome_bg = true;
    //获取系统通知
    $scope.get_system_message = function () {
      $http.get('/api/admin/system/message?page=1&per_page=5').success(function (data) {
        $scope.system_messages = data.items;
      });
    };
    //获取校级管理员统计数据方法
    $scope.get_stat_university = function () {
      $http.get('/api/un/home').success(function (data) {
        $scope.stat_data_un = data;
      });
    };
    //获取社团管理员统计数据方法
    $scope.get_stat_admin = function () {
      $http.get('/api/admin/home').success(function (data) {
        $scope.stat_data_admin = data;
      });
    };
    $scope.load_stat_data = function () {
      if ($scope.user && $scope.user.role.name === 'ADMIN') {
        $scope.get_stat_admin();
      } else if ($scope.user && $scope.user.role.name === 'UN_ADMIN') {
        $scope.get_stat_university();
      }
    };
    userService.load().then(function (user) {
      $scope.user = user;
      $scope.load_stat_data();
      if (user.role.name === 'ADMIN') {
        $scope.get_system_message();
      }
    });
  }
]);
angular.module('iwx').controller('SystemInfoCtrl', [
  '$scope',
  '$modalInstance',
  function ($scope, $modalInstance) {
    $scope.version = 'v1.6';
    $scope.cancel = function () {
      $modalInstance.dismiss('cancel');
    };
  }
]);
angular.module('iwx').controller('SysMesInfoCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  function ($scope, $rootScope, $http, $stateParams) {
    console.log($stateParams);
    $scope.sysinfoId = $stateParams.id;
    $rootScope.welcome_bg = false;
    $scope.sysinfos = [];
    var sysinfoSet = {};
    $scope.loadSysinfoBtn = '\u52a0\u8f7d\u66f4\u591a\u516c\u544a\u4fe1\u606f~~';
    $scope.loadMoreBtn = false;
    $scope.loadMore = true;
    $scope.currentPage = 1;
    //测试展开指定信息代码
    /*angular.forEach($scope.sysinfos, function (value) {
			if (value.id === parseInt($scope.sysinfoId)) {
				value.isDisplay = true;
			} else {
				value.isDisplay = false;
			}
		});*/
    //加载系统公告信息
    var loadSysinfos = function (currentPage) {
      $http.get('/api/admin/system/message?per_page=10&page=' + currentPage).success(function (data) {
        $scope.loadMore = true;
        if (data.items.length === 0) {
          $scope.loadSysinfoBtn = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8\u516c\u544a\u4fe1\u606f~~';
          $scope.loadMoreBtn = true;
          return;
        }
        var added = 0;
        angular.forEach(data.items, function (value) {
          if (value.id === parseInt($scope.sysinfoId)) {
            value.isDisplay = true;
          } else {
            value.isDisplay = false;
          }
          if (!(value.id in sysinfoSet)) {
            sysinfoSet[value.id] = true;
            $scope.sysinfos.push(value);
            added++;
          }
        });
        if (added === 0) {
          loadSysinfos(++$scope.currentPage);
        }
      });
    };
    loadSysinfos($scope.currentPage);
    //加载更多公告信息
    $scope.loadMoreInfos = function () {
      loadSysinfos(++$scope.currentPage);
    };
  }
]);
angular.module('iwx').controller('UnpublishLogCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  function ($scope, $rootScope, $http, $stateParams) {
    console.log($stateParams);
    $scope.type = $stateParams.type;
    $scope.id = $stateParams.id;
    $rootScope.welcome_bg = false;
    $scope.sysinfos = [];
    var sysinfoSet = {};
    $scope.loadSysinfoBtn = '\u52a0\u8f7d\u66f4\u591a\u516c\u544a\u4fe1\u606f~~';
    $scope.loadMoreBtn = false;
    $scope.loadMore = true;
    $scope.currentPage = 1;
    var api = '';
    if ($scope.type === 'activity') {
      api = '/api/admin/activity/' + $scope.id + '/log';
    } else if ($scope.type === 'article') {
      api = '/api/admin/news/' + $scope.id + '/log';
    } else {
      api = '/api/admin/bazaar/' + $scope.id + '/log';
    }
    //加载系统公告信息
    var loadSysinfos = function (currentPage, api) {
      $http.get(api + '?per_page=10&page=' + currentPage).success(function (data) {
        $scope.loadMore = true;
        if (data.items.length === 0) {
          $scope.loadSysinfoBtn = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8\u516c\u544a\u4fe1\u606f~~';
          $scope.loadMoreBtn = true;
          return;
        }
        var added = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in sysinfoSet)) {
            sysinfoSet[value.id] = true;
            $scope.sysinfos.push(value);
            added++;
          }
        });
        if (added === 0) {
          loadSysinfos(++$scope.currentPage);
        }
      });
    };
    //加载更多公告信息
    $scope.loadMoreInfos = function () {
      loadSysinfos(++$scope.currentPage, api);
    };
    loadSysinfos($scope.currentPage, api);
  }
]);
angular.module('iwx').controller('ProfileCtrl', [
  '$scope',
  '$rootScope',
  'userService',
  function ($scope, $rootScope, userService) {
    $rootScope.welcome_bg = false;
    userService.load().then(function (user) {
      $scope.user = user;
    });
    $scope.change = {};
    $scope.changePassword = function () {
      userService.changePassword($scope.change);
    };
  }
]);
angular.module('iwx').controller('ProfileIwxCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'eventType',
  'userService',
  function ($scope, $rootScope, $http, eventType, userService) {
    $rootScope.welcome_bg = false;
    $scope.change = {};
    userService.load().then(function (user) {
      $scope.user = user;
    });
    var validate = function () {
      if ($scope.user.nickname && $scope.user.nickname === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u586b\u5199\u7ba1\u7406\u5458\u6635\u79f0\u3002'
        });
        return false;
      }
      if ($scope.change.new_password !== $scope.change.new_password_confirm) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u4e24\u6b21\u5bc6\u7801\u8f93\u5165\u5fc5\u987b\u4e00\u81f4\u3002'
        });
        return false;
      }
      return true;
    };
    $scope.save_manager_info = function () {
      if (!validate()) {
        return;
      }
      var fd = new FormData();
      fd.append('nickname', $scope.user.nickname);
      if (typeof $scope.user.icon !== 'string') {
        fd.append('icon', $scope.user.icon);
      }
      userService.update(fd);
    };
    $scope.changePassword = function () {
      // userService.changePassword($scope.change);
      if (!validate()) {
        return;
      }
      var param = {};
      param['old_password'] = $scope.change.password;
      param['password'] = $scope.change.new_password;
      userService.update_password(param);
    };
  }
]);
angular.module('iwx').controller('ProfileUniCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'eventType',
  'userService',
  function ($scope, $rootScope, $http, eventType, userService) {
    $rootScope.welcome_bg = false;
    $scope.change = {};
    userService.load().then(function (user) {
      $scope.user = user;
    });
    var validate = function () {
      if ($scope.user.nickname && $scope.user.nickname === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u586b\u5199\u7ba1\u7406\u5458\u6635\u79f0\u3002'
        });
        return false;
      }
      if ($scope.change.new_password !== $scope.change.new_password_confirm) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u4e24\u6b21\u5bc6\u7801\u8f93\u5165\u5fc5\u987b\u4e00\u81f4\u3002'
        });
        return false;
      }
      return true;
    };
    $scope.save_manager_info = function () {
      if (!validate()) {
        return;
      }
      var fd = new FormData();
      fd.append('nickname', $scope.user.nickname);
      if (typeof $scope.user.icon !== 'string') {
        fd.append('icon', $scope.user.icon);
      }
      userService.update(fd);
    };
    $scope.changePassword = function () {
      if (!validate()) {
        return;
      }
      var param = {};
      param['old_password'] = $scope.change.password;
      param['password'] = $scope.change.new_password;
      userService.update_password(param);
    };
  }
]);
angular.module('iwx').controller('CertificateCouponsCtrl', [
  '$scope',
  '$http',
  '$state',
  '$timeout',
  'ngTableParams',
  '$modal',
  '$rootScope',
  'eventType',
  'userService',
  function ($scope, $http, $state, $timeout, ngTableParams, $modal, $rootScope, eventType, userService) {
    $rootScope.welcome_bg = false;
    if (!$rootScope.mes_note) {
      $rootScope.message();
    }
    //创建电子礼券
    $scope.createCertificateCoupons = function () {
      $state.go('certificate_coupons_item', { 'id': -1 });
    };
    //修改电子礼券
    $scope.updateCertificateCoupons = function (id) {
      $state.go('certificate_coupons_item', { 'id': id });
    };
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    var load_cer_coupons = function () {
      var NgTableParams = ngTableParams;
      var coupons = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          // console.log(params.count() + '---------' + params.page());
          $http.get('/api/goods/community?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            // console.log(data);
            coupons = data.items;
            // $scope.community_id = coupons[0].community_id;
            params.total(data.total);
            $defer.resolve(coupons);
          });
        }
      });
    };
    userService.load(true).then(function () {
      load_cer_coupons();
    });
    //获取原图  /images/images/placeholder.png
    $scope.viewImage = function (image) {
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }  // console.log(tempArr);
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    //删除电子礼券
    $scope.del_coupon = function (coupon_id) {
      $scope.confirm.message = '\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e2a\u793c\u5238\uff1f';
      $scope.confirm.type = 'delete_coupon';
      $scope.confirm.param = coupon_id;
      $('#confirmModal').modal();
      return;
    };
    //确认框
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delete_coupon') {
        $http.delete('/api/goods/' + $scope.confirm.param).success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
  }
]);
angular.module('iwx').filter('couponStatus', function () {
  return function (input, value) {
    if (input === 'NEW') {
      return '\u672a\u4f7f\u7528';
    } else if (input === 'USED') {
      return '\u5df2\u4f7f\u7528';
    } else if (input === 'EXPIRED') {
      return '\u5df2\u8fc7\u671f';
    } else if (input === 'RETRIEVE') {
      return '\u5df2\u4f5c\u5e9f';
    } else {
      return input;
    }
  };
}).controller('CertificateCouponsDetailsCtrl', [
  '$scope',
  '$http',
  '$state',
  '$stateParams',
  '$modal',
  'ngTableParams',
  function ($scope, $http, $state, $stateParams, $modal, ngTableParams) {
    var NgTableParams = ngTableParams;
    var users = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $http.get('/api/goods/' + $stateParams.id + '/users?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          users = data.items;
          params.total(data.total);
          // $defer.resolve(users.slice((params.page() - 1) * params.count(), params.page() * params.count()));
          $defer.resolve(users);
        });
      }
    });
    $scope.takeback = function (id) {
      $http.post('api/goods/takeback/' + id).success(function (data) {
        $state.go('certificate_coupons_details', { 'id': $stateParams.id }, { reload: true });
      });
    };
    $scope.privateLetter = function (user_id) {
      $modal.open({
        template: '<div class="modal-header">' + '<h3 class="modal-title">\u53d1\u9001\u79c1\u4fe1</h3>' + '</div>' + '<div class="modal-body">' + '<textarea class="form-control ng-pristine ng-valid ng-touched" ng-model="content" rows="5"></textarea>' + '</div>' + '<div class="modal-footer">' + '<button class="btn btn-primary" ng-click="ok()">\u53d1\u9001</button>' + '<button class="btn btn-warning" ng-click="cancel()">\u53d6\u6d88</button>' + '</div>',
        controller: function ($scope, $modalInstance) {
          $scope.ok = function () {
            $http.post('/api/admin/messages/' + user_id, { content: $scope.content }).success(function (data) {
              $modalInstance.close('ok');
            });
          };
          $scope.cancel = function () {
            $modalInstance.dismiss('cancel');
          };
        }
      });
    };
  }
]);
angular.module('iwx').controller('CertificateCouponsItemCtrl', [
  '$scope',
  '$http',
  '$modal',
  '$state',
  '$stateParams',
  '$rootScope',
  '$filter',
  'eventType',
  function ($scope, $http, $modal, $state, $stateParams, $rootScope, $filter, eventType) {
    $scope.coupons = {};
    //根据id判断是创建电子礼券还是修改电子礼券
    $scope.edit_id = $stateParams.id;
    if ($scope.edit_id !== '-1') {
      $http.get('/api/goods/' + $scope.edit_id).success(function (data) {
        $scope.coupons = data;
        console.log($scope.coupons);
      });
    } else {
      $scope.coupons = {};
    }
    $scope.validation = function () {
      if ($scope.coupons.title == null || $scope.coupons.title === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u793c\u5238\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a'
        });
        return false;
      }
      if ($scope.coupons.title && $scope.coupons.title.length > 20) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u793c\u5238\u540d\u79f0\u4e0d\u80fd\u8d85\u8fc720\u4e2a\u5b57\u7b26'
        });
        return false;
      }
      if ($scope.coupons.end_time == null || $scope.coupons.end_time === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u7ed3\u675f\u65f6\u95f4'
        });
        return false;
      }
      if ($scope.coupons.sponsor_name == null || $scope.coupons.sponsor_name === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8d5e\u52a9\u5546\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a'
        });
        return false;
      }
      if ($scope.coupons.sponsor_name && $scope.coupons.sponsor_name.length > 20) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8d5e\u52a9\u5546\u540d\u79f0\u4e0d\u80fd\u8d85\u8fc720\u4e2a\u5b57\u7b26'
        });
        return false;
      }
      if ($scope.coupons.image === undefined || $scope.coupons.image === '/images/images/placeholder.png') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u9009\u62e9\u7269\u54c1\u56fe\u7247'
        });
        return false;
      }
      if ($scope.coupons.total == null || isNaN(parseInt($scope.coupons.total)) || parseInt($scope.coupons.total) <= 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u603b\u6570'
        });
        return false;
      }
      return true;
    };
    var getFormData = function () {
      var fd = new FormData();
      fd.append('end_time', $scope.coupons.end_time);
      fd.append('title', $scope.coupons.title);
      fd.append('sponsor_name', $scope.coupons.sponsor_name);
      fd.append('sponsor_logo', $scope.coupons.sponsor_logo);
      fd.append('image', $scope.coupons.image);
      fd.append('total', $scope.coupons.total);
      return fd;
    };
    //创建电子礼券
    $scope.create = function () {
      if (!$scope.validation()) {
        return;
      }
      $http.post('/api/goods', getFormData(), { headers: { 'Content-Type': undefined } }).success(function (data) {
        $state.go('certificate_coupons', {}, { reload: true });
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6210\u529f\u521b\u5efa\u7535\u5b50\u793c\u5238\u3002'
        });
      });
    };
    //修改电子礼券
    $scope.update = function (id) {
      if ($scope.coupons.is_used) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8be5\u793c\u5238\u5df2\u88ab\u4f7f\u7528\uff0c\u65e0\u6cd5\u4fee\u6539\u3002'
        });
        return;
      }
      if (!$scope.validation()) {
        return;
      }
      $http.put('/api/goods/' + id, getFormData(), {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (data) {
        $state.go('certificate_coupons', {}, { reload: true });
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6210\u529f\u4fee\u6539\u7535\u5b50\u793c\u5238\u3002'
        });
      });
    };
  }
]);
angular.module('iwx').controller('CommunityCtrl', [
  '$scope',
  '$http',
  '$modal',
  'userService',
  '$rootScope',
  'eventType',
  'ngTableParams',
  function ($scope, $http, $modal, userService, $rootScope, eventType, ngTableParams) {
    $rootScope.welcome_bg = false;
    if (!$rootScope.mes_note) {
      $rootScope.message();
    }
    var NgTableParams = ngTableParams;
    var admins = null;
    userService.load().then(function (user) {
      if (user.roles[0].name === 'SUPER_USER') {
        $scope.su = true;
        $scope.tableParams = new NgTableParams({
          page: 1,
          count: 10
        }, {
          counts: [],
          getData: function ($defer, params) {
            if (admins) {
              $defer.resolve(admins.slice((params.page() - 1) * params.count(), params.page() * params.count()));
            }
            $http.get('/api/su/pending_admins').success(function (data) {
              admins = data;
              $defer.resolve(admins.slice((params.page() - 1) * params.count(), params.page() * params.count()));
            });
          }
        });
      } else {
        $scope.su = false;
        $http.get('/api/admin/community').success(function (data) {
          $scope.community = data;
        });
      }
    });
    $scope.preview = function (url) {
      $modal.open({
        template: '<div><img style="width:100%" src=' + url + '></div>',
        size: 'md'
      });
    };
    $scope.confirm = function (id) {
      $rootScope.$emit(eventType.NOTIFICATION, {
        'type': 'LONG_INFO',
        'message': '\u5904\u7406\u4e2d...'
      });
      $http.get('/api/su/confirm/' + id).success(function (data) {
        admins = data;
        $scope.tableParams.reload();
        $rootScope.$emit(eventType.NOTIFICATION, null);
      });
    };
    //监控社团描述
    $scope.$watch('community.description', function (str) {
      if (str) {
        var arr = [];
        for (var i = 0; i < str.length; i++) {
          if (str.charAt(i) !== ' ') {
            console.log('-----' + str.charAt(i));
            arr.push(str.charAt(i));
          }
        }
        console.log(arr.length);
        if (arr.length > 200) {
          $scope.show_description = true;
        } else {
          $scope.show_description = false;
        }
      }
    });
    $scope.submit = function () {
      var fd = new FormData();
      angular.forEach($scope.community, function (value, key) {
        fd.append(key, value);
      });
      $http.post('/api/admin/community', fd, {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (data) {
        $scope.community = data;
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u4fdd\u5b58\u6210\u529f'
        });
      });
    };  //分享web社团主页
        /*$scope.share_web = function () {
    console.log(window.location.origin);
    var share_url = window.location.origin + '/weixin/community/share#' + $scope.community.id
    $modal.open({
      templateUrl: 'partial/common/share_qrcode.html',
      controller: 'shareQrcodeCtrl',
      resolve: {
        shareUrl: function () {
          return share_url;
        }
      }
    });
  };*/
  }
]);
angular.module('iwx').controller('CommunityRegisterCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  '$state',
  'eventType',
  function ($scope, $http, $rootScope, $state, eventType) {
    //确认框信息
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.types = [
      {
        name: '\u95ee\u7b54\u9898',
        id: 'TEXT'
      },
      {
        name: '\u5355\u9009\u9898',
        id: 'SINGLE_CHOICE'
      },
      {
        name: '\u591a\u9009\u9898',
        id: 'MULTI_CHOICE'
      },
      {
        name: '\u56fe\u7247\u4e0a\u4f20',
        id: 'IMAGES'
      }
    ];
    $scope.questions = [];
    //定义一个选择部门问题
    $scope.dep_question = {
      title: 'PLACEHOLDER',
      type: 'MULTI_CHOICE',
      question: '\u4f60\u60f3\u52a0\u5165\u6211\u4eec\u54ea\u4e2a\u90e8\u95e8\uff1f',
      options: []
    };
    $http.get('/api/admin/community/register/form').success(function (data) {
      if (data) {
        $scope.questions = data;
        console.log($scope.dep_question);
      } else {
        $http.get('/api/admin/department').success(function (data) {
          $scope.departments = data;
          for (var i = 0; i < $scope.departments.length; i++) {
            $scope.dep_question.options.push($scope.departments[i].name);
          }
          $scope.questions.unshift($scope.dep_question);
        });
      }
    });
    $scope.addQuestion = function () {
      $scope.questions.push({
        title: 'PLACEHOLDER',
        type: 'TEXT',
        question: '',
        options: []
      });
    };
    //删除问题
    $scope.remove_question = function (index) {
      var question = index + 1;
      $scope.confirm.message = '\u786e\u5b9a\u8981\u5220\u9664\u95ee\u9898 ' + question + '\uff1f';
      $scope.confirm.type = 'remove_question';
      $scope.confirm.param = index;
      $('#confirmModal').modal();
      return;
    };
    /*$scope.removeQuestion = function(index) {
      $scope.questions.splice(index, 1);
  };*/
    $scope.addOption = function (index) {
      $scope.questions[index].options.push('');
    };
    $scope.removeOption = function (questionIndex, index) {
      $scope.questions[questionIndex].options.splice(index, 1);
    };
    //确认框
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'remove_question') {
        $('#question' + ($scope.confirm.param + 1)).slideUp(1000, function () {
          $scope.questions.splice($scope.confirm.param, 1);
        });  // $scope.questions.splice($scope.confirm.param, 1);
      }
    };
    //验证招新问题
    $scope.validate_question = function () {
      var questions_len = $scope.questions.length;
      var question, option;
      for (var i = 0; i < questions_len; i++) {
        question = $scope.questions[i];
        if (question.question === '') {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u8bf7\u586b\u5199\u95ee\u9898\u7684\u5185\u5bb9\u3002'
          });
          return false;
        } else {
          if (question.type === 'SINGLE_CHOICE' || question.type === 'MULTI_CHOICE') {
            if (question.options.length === 0) {
              $rootScope.$emit(eventType.NOTIFICATION, {
                'type': 'POPMSG',
                'title': '\u6d88\u606f',
                'message': '\u8bf7\u6dfb\u52a0\u5355\u9009\u6216\u591a\u9009\u95ee\u9898\u7684\u9009\u9879\u3002'
              });
              return false;
            } else {
              for (var j = 0; j < question.options.length; j++) {
                option = question.options[j];
                if (option === '') {
                  $rootScope.$emit(eventType.NOTIFICATION, {
                    'type': 'POPMSG',
                    'title': '\u6d88\u606f',
                    'message': '\u8bf7\u5b8c\u6574\u586b\u5199\u5355\u9009\u6216\u591a\u9009\u95ee\u9898\u7684\u9009\u9879\u3002'
                  });
                  return false;
                }
              }
            }
          }
        }
      }
      return true;
    };
    $scope.submit = function () {
      if (!$scope.validate_question()) {
        return;
      }
      console.log($scope.questions);
      $http.post('/api/admin/community/register/form', { register_form: angular.toJson($scope.questions) }).success(function () {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u4fdd\u5b58\u6210\u529f'
        });
      });
    };
    $scope.create_activity = function () {
      $http.post('/api/admin/activities?register=1').success(function (id) {
        $state.go('activity_item', {
          'id': id,
          'currentPage': 1
        });
      });
    };
    $scope.$parent.$watch('community.enable_register', function (newVal, oldVal) {
      if (newVal !== undefined && oldVal !== undefined && newVal !== oldVal) {
        if (newVal) {
          $http.post('/api/admin/community/register').success(function () {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u4fdd\u5b58\u6210\u529f'
            });
          });
        } else {
          $http.delete('/api/admin/community/register').success(function () {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u4fdd\u5b58\u6210\u529f'
            });
          });
        }
      }
    });
  }
]);
angular.module('iwx').controller('CommunityMembersCtrl', [
  '$scope',
  '$http',
  '$modal',
  '$state',
  'ngTableParams',
  '$rootScope',
  'eventType',
  '$window',
  '$stateParams',
  function ($scope, $http, $modal, $state, ngTableParams, $rootScope, eventType, $window, $stateParams) {
    $scope.currentPage = $stateParams.page;
    //部门id数组
    $scope.dep_id_array = [];
    //当前路径状态
    // var curr_state = $state.current.name;
    $scope.param = {};
    /*$scope.param.view = 'ALL';
    if (curr_state === 'community.approved') {
        $scope.param.view = "APPROVED";
    } else if (curr_state === 'community.pending') {
        $scope.param.view = "PENDING";
    }
    $scope.status = {
        'APPROVED': {
            'text': '已审核',
            'label': 'label label-success'
        },
        'PENDING': {
            'text': '待审核',
            'label': 'label label-warning'
        },
        'REJECTED': {
            'text': '已拒绝',
            'label': 'label label-danger'
        }
    };*/
    // Avoid lint complain
    var NgTableParams = ngTableParams;
    var users = null;
    $scope.tableParams = new NgTableParams({
      page: $scope.currentPage,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        /*if (users) {
                $defer.resolve(users.slice((params.page() - 1) * params.count(), params.page() * params.count()));
            }*/
        $scope.currentPage = params.page();
        //请求参数
        var request_param;
        if ($scope.dep_id_array.length !== 0) {
          var dep_id_str = '';
          for (var i = 0; i < $scope.dep_id_array.length; i++) {
            if (i !== $scope.dep_id_array.length - 1) {
              dep_id_str += $scope.dep_id_array[i] + '-';
            } else {
              dep_id_str += $scope.dep_id_array[i] + '';
            }
          }
          console.log(dep_id_str);
          request_param = '?page=' + params.page() + '&per_page=' + params.count() + '&department_type=' + dep_id_str;
        } else {
          request_param = '?page=' + params.page() + '&per_page=' + params.count();
        }
        console.log(request_param);
        $http.get('/api/admin/community/members' + request_param).success(function (data) {
          users = data.items;
          params.total(data.total);
          $defer.resolve(users);
        });
      }
    });
    /*$scope.$on('table_reload', function () {
        $scope.tableParams.reload();
    });*/
    //私信
    $scope.private_letter = function (user_id) {
      $modal.open({
        templateUrl: 'partial/community/community_letter.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.ok = function () {
              if (!$scope.content) {
                return;
              }
              $http.post('/api/admin/messages/' + user_id, { 'content': $scope.content }).success(function (data) {
                $modalInstance.close('ok');
                $rootScope.$emit(eventType.NOTIFICATION, {
                  'type': 'POPMSG',
                  'title': '\u6d88\u606f',
                  'message': '\u5df2\u7ecf\u6210\u529f\u53d1\u9001\u79c1\u4fe1\u3002'
                });
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //获取社团部门
    $scope.getCommDep = function () {
      $http.get('/api/admin/department').success(function (data) {
        for (var i = 0; i < data.length; i++) {
          data[i].chosen = false;
        }
        $scope.departments = data;
        console.log($scope.departments);
      });
    };
    $scope.getCommDep();
    //选择部门条件
    $scope.chose_department = function (department) {
      if (department.chosen) {
        department.chosen = false;
        //将选中的部门从过滤条件中删除
        for (var i = 0; i < $scope.dep_id_array.length; i++) {
          if ($scope.dep_id_array[i] === department.id) {
            $scope.dep_id_array.splice(i, 1);
            break;
          }
        }
        console.log($scope.dep_id_array);
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      } else {
        department.chosen = true;
        //将选中的部门添加到过滤条件中
        $scope.dep_id_array.push(department.id);
        console.log($scope.dep_id_array);
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      }
    };
  }
]);
angular.module('iwx').controller('CommunityMemberCtrl', [
  '$scope',
  '$http',
  '$stateParams',
  '$rootScope',
  'eventType',
  '$modal',
  function ($scope, $http, $stateParams, $rootScope, eventType, $modal) {
    // console.log($stateParams.id);
    $scope.returnPage = $stateParams.page;
    $scope.unique = function (arr) {
      var hash = {}, result_arr = [], elem;
      for (var i = 0; (elem = arr[i]) != null; i++) {
        if (!hash[elem]) {
          result_arr.push(elem);
          hash[elem] = true;
        }
      }
      return result_arr;
    };
    //获取社员信息
    var getUser = function () {
      $http.get('/api/admin/community/register/users/' + $stateParams.id).success(function (data) {
        angular.forEach(data.answers, function (value) {
          value.question.options = $scope.unique(value.question.options);
        });
        $scope.user = data;
      });
    };
    getUser();
    //批准入社
    $scope.approve = function () {
      $modal.open({
        templateUrl: 'partial/community/community_member_department.html',
        controller: 'CommMemberDepCtrl',
        resolve: {
          userId: function () {
            return $stateParams.id;
          }
        }
      });
    };
    $scope.print = function () {
      window.print();
    };
    //拒绝入社
    $scope.refuse = function (reason) {
      $modal.open({
        templateUrl: 'partial/community/community_reject_reason.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.ok = function () {
              if (!$scope.content) {
                return;
              }
              $http.post('/api/admin/messages/' + $stateParams.id, { 'content': $scope.content }).success(function (data) {
                $modalInstance.close('ok');
                $http.post('/api/admin/community/register/users/' + $stateParams.id + '/decision', {
                  'status': 'REJECTED',
                  'reason': reason
                }).success(function (data) {
                  getUser();
                });
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //进行成员部门设置
    $scope.depSetting = function () {
      $modal.open({
        templateUrl: 'partial/community/community_mem_dep_setting.html',
        controller: 'CommMemDepSetCtrl',
        resolve: {
          user: function () {
            return $scope.user;
          }
        }
      });
    };
    //进行成员职位设置
    $scope.dutySetting = function () {
      $modal.open({
        templateUrl: 'partial/community/community_mem_duty_setting.html',
        controller: 'CommMemDutySetCtrl',
        resolve: {
          user: function () {
            return $scope.user;
          }
        }
      });
    };
    //注册获取社员信息事件
    $scope.$on('getUserEvent', function () {
      getUser();
    });
  }
]);
angular.module('iwx').controller('CommDepartmentCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  '$modal',
  function ($scope, $rootScope, $http, ngTableParams, $modal) {
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //创建社团部门
    $scope.createDepartment = function () {
      var department = { 'id': -1 };
      $modal.open({
        templateUrl: 'partial/community/community_department/community_department_detail.html',
        controller: 'DepDetailCtrl',
        resolve: {
          department: function () {
            return department;
          }
        }
      });
    };
    //编辑社团部门
    $scope.editDepartment = function (department) {
      $modal.open({
        templateUrl: 'partial/community/community_department/community_department_detail.html',
        controller: 'DepDetailCtrl',
        resolve: {
          department: function () {
            return department;
          }
        }
      });
    };
    //删除社团部门
    $scope.delDepartment = function (departmentId) {
      $scope.confirm.message = '\u786e\u5b9a\u8981\u5220\u9664\u8be5\u90e8\u95e8\uff1f';
      $scope.confirm.type = 'delDepartment';
      $scope.confirm.param = departmentId;
      $('#confirmModal').modal();
    };
    //加载社团部门列表
    var NgTableParams = ngTableParams;
    var department = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 50
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        //发送部门列表请求
        $http.get('/api/admin/department?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          if (data.length === 0) {
            $scope.showTable = false;
            $scope.note_message = '\u76ee\u524d\u8fd8\u6ca1\u6709\u90e8\u95e8\uff0c\u70b9\u51fb\u201c\u65b0\u5efa\u90e8\u95e8\u201d\u6309\u94ae\u521b\u5efa\u7b2c\u4e00\u4e2a\u672c\u793e\u90e8\u95e8\u5427~~';
          } else {
            $scope.showTable = true;
            department = data;
            params.total(data.length);
            $defer.resolve(department.slice((params.page() - 1) * params.count(), params.page() * params.count()));
          }
        });
      }
    });
    //注册刷新列表事件
    $scope.$on('flushDepartmentList', function () {
      $scope.tableParams.reload();
    });
    //确认框方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delDepartment') {
        $http.delete('/api/admin/department/' + $scope.confirm.param + '/delete').success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
    //添加部门成员
    $scope.addDepMember = function (department) {
      $modal.open({
        templateUrl: 'partial/community/community_department/community_add_dep_member.html',
        controller: 'CommAddDepMemCtrl',
        resolve: {
          department: function () {
            return department;
          }
        }
      });
    };
    //注册表格刷新事件
    $scope.$on('flushDepartmentList', function () {
      $scope.tableParams.reload();
    });
  }
]);
angular.module('iwx').controller('DepDetailCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'department',
  '$modalInstance',
  function ($scope, $rootScope, $http, department, $modalInstance) {
    $scope.departmentId = department.id;
    $scope.department = {};
    if ($scope.departmentId === -1) {
      $scope.department.name = '';
      $scope.department.describe = '';
    } else {
      $scope.department = department;
    }
    //创建或修改部门信息
    $scope.creOrUdpDep = function () {
      console.log($scope.department);
      var param = {};
      param.name = $scope.department.name;
      param.describe = $scope.department.describe;
      if ($scope.departmentId === -1) {
        //创建部门信息
        $http.post('/api/admin/department/add', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $rootScope.$broadcast('flushDepartmentList');
          $modalInstance.close('ok');
        });
      } else {
        //修改部门信息
        $http.put('/api/admin/department/' + $scope.department.id + '/update', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $rootScope.$broadcast('flushDepartmentList');
          $modalInstance.close('ok');
        });
      }
    };
    //关闭modal
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('CommAddDepMemCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  '$modalInstance',
  'eventType',
  'department',
  function ($scope, $rootScope, $http, ngTableParams, $modalInstance, eventType, department) {
    $scope.department = department;
    //社团成员id数组
    $scope.member_id_array = [];
    //选中成员的hash对照表
    $scope.member_id_hash = {};
    var hashtable = {};
    //定义页码和全选状态对照表
    var page_check_all_hash = {};
    //定义变量，用来记录当前页码信息
    var current_page = 1;
    //获取全部社团成员
    var NgTableParams = ngTableParams;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 5
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $http.get('/api/admin/department/users?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          //给当前页码变量赋值
          current_page = params.page();
          $scope.users = data.items;
          params.total(data.total);
          $defer.resolve($scope.users);
          //控制全选框的选中状态
          if (page_check_all_hash[current_page]) {
            $scope.is_checked_all = true;
          } else {
            $scope.is_checked_all = false;
          }
        });
      }
    });
    //全选复选框勾选状态
    $scope.checked_all = function () {
      return $scope.is_checked_all;
    };
    //对社团成员进行全部选择操作
    $scope.get_checked_all = function (is_checked_all) {
      //当社团被全部选中时
      if (is_checked_all) {
        //当选中全选按钮时，进行页码和全选状态的记录
        page_check_all_hash[current_page] = true;
        for (var i = 0; i < $scope.users.length; i++) {
          var temp = $scope.users[i];
          if (!hashtable[temp.user.id]) {
            hashtable[temp.user.id] = true;
            $scope.member_id_array.push(temp.user.id);
          }
        }
        $scope.member_id_hash = {};
        $scope.is_checked_all = true;
      } else {
        //用来记录要删除的子数组的元素
        var hash = {};
        angular.forEach($scope.users, function (value) {
          hash[value.user.id] = true;
        });
        console.log('\u8981\u5220\u9664\u7684\u5b50\u6570\u7ec4hash\u8868\uff1a' + angular.toJson(hash));
        for (var j = 0; j < $scope.member_id_array.length; j++) {
          if (hash[$scope.member_id_array[j]]) {
            delete $scope.member_id_array[j];
          }
        }
        //当取消全选按钮时，进行页码和全选状态的记录
        page_check_all_hash[current_page] = false;
        hashtable = {};
        // $scope.member_id_array.splice(0, $scope.member_id_array.length);
        $scope.is_checked_all = false;
      }
    };
    //每条记录的复选框勾选状态
    $scope.is_checked = function (id) {
      if ($scope.is_checked_all) {
        return true;
      } else {
        return $scope.member_id_hash[id];
      }
    };
    //对社团成员进行单个选择操作
    $scope.get_checked_item = function (member_id, is_checked_item) {
      //当社团被选中时
      if (is_checked_item) {
        hashtable[member_id] = true;
        $scope.member_id_hash[member_id] = true;
        $scope.member_id_array.push(member_id);
      } else {
        for (var i = 0; i < $scope.member_id_array.length; i++) {
          var temp = $scope.member_id_array[i];
          if (temp === member_id) {
            hashtable[member_id] = false;
            $scope.member_id_hash[member_id] = false;
            $scope.member_id_array.splice($scope.member_id_array.indexOf(temp), 1);
            break;
          }
        }
      }
    };
    //添加选中的社团成员
    $scope.choose_member = function () {
      console.log($scope.member_id_array);
      var param = {};
      param.users = $scope.member_id_array;
      if ($scope.member_id_array.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u9009\u62e9\u793e\u56e2\u6210\u5458\u3002'
        });
        return;
      }
      $http.post('/api/admin/department/' + $scope.department.id + '/add_department', param).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6210\u529f\u6dfb\u52a0\u6210\u5458\u3002'
        });
        $rootScope.$broadcast('flushDepartmentList');
      });
      $modalInstance.close('ok');
    };
    //取消添加操作
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('CommDutyCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  '$modal',
  'eventType',
  '$state',
  function ($scope, $rootScope, $http, ngTableParams, $modal, eventType, $state) {
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //创建职务
    $scope.createDuty = function () {
      //检测是否存在部门
      $http.get('/api/admin/department').success(function (data) {
        if (data.length === 0) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '',
            'message': '\u9700\u8981\u5148\u521b\u5efa\u90e8\u95e8\uff0c\u624d\u80fd\u521b\u5efa\u5bf9\u5e94\u7684\u90e8\u95e8\u804c\u4f4d\u3002'
          });
          $state.go('community.department', { reload: true });
        } else {
          var duty = { 'id': -1 };
          $modal.open({
            templateUrl: 'partial/community/community_duty/community_duty_detail.html',
            controller: 'DutyDetailCtrl',
            resolve: {
              duty: function () {
                return duty;
              }
            }
          });
        }
      });
    };
    //编辑职务
    $scope.editDuty = function (duty) {
      $modal.open({
        templateUrl: 'partial/community/community_duty/community_duty_detail.html',
        controller: 'DutyDetailCtrl',
        resolve: {
          duty: function () {
            return duty;
          }
        }
      });
    };
    //删除社团部门
    $scope.delDuty = function (dutyId) {
      $scope.confirm.message = '\u786e\u5b9a\u8981\u5220\u9664\u8be5\u804c\u52a1\uff1f';
      $scope.confirm.type = 'delDuty';
      $scope.confirm.param = dutyId;
      $('#confirmModal').modal();
    };
    //加载社团部门列表
    var NgTableParams = ngTableParams;
    var duty = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 50
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $http.get('/api/admin/duty/all').success(function (data) {
          if (data.length === 0) {
            $scope.showTable = false;
            $scope.note_message = '\u76ee\u524d\u8fd8\u6ca1\u6709\u804c\u52a1\uff0c\u70b9\u51fb\u201c\u65b0\u5efa\u804c\u52a1\u201d\u6309\u94ae\u521b\u5efa\u672c\u793e\u7b2c\u4e00\u4efd\u804c\u52a1\u5427~~';
          } else {
            $scope.showTable = true;
            duty = data;
            params.total(data.length);
            $defer.resolve(duty.slice((params.page() - 1) * params.count(), params.page() * params.count()));
          }
        });
      }
    });
    //注册刷新列表事件
    $scope.$on('flushDutyList', function () {
      $scope.tableParams.reload();
    });
    //确认框方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delDuty') {
        $http.delete('/api/admin/duty/' + $scope.confirm.param + '/delete').success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
    //将职务分配给社员
    $scope.addDutyMember = function (duty) {
      $modal.open({
        templateUrl: 'partial/community/community_duty/comm_add_duty_member.html',
        controller: 'CommDutyMemCtrl',
        resolve: {
          duty: function () {
            return duty;
          }
        }
      });
    };
  }
]);
angular.module('iwx').controller('DutyDetailCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'duty',
  '$modalInstance',
  'eventType',
  function ($scope, $rootScope, $http, duty, $modalInstance, eventType) {
    $scope.dutyId = duty.id;
    $scope.duty = {};
    if ($scope.dutyId === -1) {
      $scope.duty.name = '';
      $scope.duty.describe = '';
      $scope.duty.department = '';
    } else {
      $scope.duty = duty;
    }
    //获取部门列表
    var getDepartmentList = function () {
      $http.get('/api/admin/department').success(function (data) {
        $scope.departmentArray = data;
      });
    };
    getDepartmentList();
    //创建或修改部门信息
    $scope.creOrUdpDuty = function () {
      var param = {};
      param.name = $scope.duty.name;
      param.describe = $scope.duty.describe;
      console.log($scope.duty.department.id);
      if (!$scope.duty.department.id) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '',
          'message': '\u9700\u8981\u5148\u9009\u62e9\u90e8\u95e8\uff0c\u624d\u80fd\u521b\u5efa\u5bf9\u5e94\u7684\u90e8\u95e8\u804c\u4f4d\u3002'
        });
        return;
      }
      if ($scope.dutyId === -1) {
        //创建部门信息
        $http.post('/api/admin/department/' + $scope.duty.department.id + '/duty/add', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $rootScope.$broadcast('flushDutyList');
          $modalInstance.close('ok');
        });
      } else {
        //修改部门信息
        $http.put('/api/admin/duty/' + $scope.duty.id + '/update', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $rootScope.$broadcast('flushDutyList');
          $modalInstance.close('ok');
        });
      }
    };
    //关闭modal
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('CommDutyMemCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  '$modalInstance',
  'duty',
  'eventType',
  function ($scope, $rootScope, $http, ngTableParams, $modalInstance, duty, eventType) {
    //部门id
    $scope.duty = duty;
    //社团成员id数组
    $scope.member_id_array = [];
    //选中成员的hash对照表
    $scope.member_id_hash = {};
    var hashtable = {};
    //定义页码和全选状态对照表
    var page_check_all_hash = {};
    //定义变量，用来记录当前页码信息
    var current_page = 1;
    //获取全部社团成员
    var NgTableParams = ngTableParams;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 5
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $http.get('/api/admin/duty/' + $scope.duty.department.id + '/users?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          //给当前页码变量赋值
          current_page = params.page();
          $scope.users = data.items;
          params.total(data.total);
          $defer.resolve($scope.users);
          //控制全选框的选中状态
          if (page_check_all_hash[current_page]) {
            $scope.is_checked_all = true;
          } else {
            $scope.is_checked_all = false;
          }
        });
      }
    });
    //全选复选框勾选状态
    $scope.checked_all = function () {
      return $scope.is_checked_all;
    };
    //对社团成员进行全部选择操作
    $scope.get_checked_all = function (is_checked_all) {
      //当社团被全部选中时
      if (is_checked_all) {
        //当选中全选按钮时，进行页码和全选状态的记录
        page_check_all_hash[current_page] = true;
        for (var i = 0; i < $scope.users.length; i++) {
          var temp = $scope.users[i];
          if (!hashtable[temp.user.id]) {
            hashtable[temp.user.id] = true;
            $scope.member_id_array.push(temp.user.id);
          }
        }
        $scope.member_id_hash = {};
        $scope.is_checked_all = true;
      } else {
        //用来记录要删除的子数组的元素
        var hash = {};
        angular.forEach($scope.users, function (value) {
          hash[value.user.id] = true;
        });
        console.log('\u8981\u5220\u9664\u7684\u5b50\u6570\u7ec4hash\u8868\uff1a' + angular.toJson(hash));
        for (var j = 0; j < $scope.member_id_array.length; j++) {
          if (hash[$scope.member_id_array[j]]) {
            delete $scope.member_id_array[j];
          }
        }
        //当取消全选按钮时，进行页码和全选状态的记录
        page_check_all_hash[current_page] = false;
        hashtable = {};
        // $scope.member_id_array.splice(0, $scope.member_id_array.length);
        $scope.is_checked_all = false;
      }
    };
    //每条记录的复选框勾选状态
    $scope.is_checked = function (id) {
      if ($scope.is_checked_all) {
        return true;
      } else {
        return $scope.member_id_hash[id];
      }
    };
    //对社团成员进行单个选择操作
    $scope.get_checked_item = function (member_id, is_checked_item) {
      //当社团被选中时
      if (is_checked_item) {
        hashtable[member_id] = true;
        $scope.member_id_hash[member_id] = true;
        $scope.member_id_array.push(member_id);
      } else {
        for (var i = 0; i < $scope.member_id_array.length; i++) {
          var temp = $scope.member_id_array[i];
          if (temp === member_id) {
            hashtable[member_id] = false;
            $scope.member_id_hash[member_id] = false;
            $scope.member_id_array.splice($scope.member_id_array.indexOf(temp), 1);
            break;
          }
        }
      }
    };
    //添加选中的社团成员
    $scope.choose_member = function () {
      console.log($scope.member_id_array);
      console.log('\u90e8\u95e8id\uff1a' + $scope.duty.department.id);
      var param = {};
      param.users = $scope.member_id_array;
      if ($scope.member_id_array.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u9009\u62e9\u793e\u56e2\u6210\u5458\u3002'
        });
        return;
      }
      $http.post('/api/admin/duty/' + $scope.duty.id + '/add_duty', param).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6210\u529f\u8d4b\u4e88\u6210\u5458\u804c\u4f4d\u3002'
        });
      });
      $modalInstance.close('ok');
    };
    //取消添加操作
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('CommunityElectionCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'userService',
  '$modal',
  '$stateParams',
  'eventType',
  function ($scope, $rootScope, $http, userService, $modal, $stateParams, eventType) {
    // console.log($stateParams.id);
    //获取现管理员用户信息
    userService.load().then(function (user) {
      $scope.user = user;
    });
    //选择新的管理员用户
    $scope.choose_new_manager = function () {
      $modal.open({
        templateUrl: 'partial/community/community_election_members.html',
        controller: 'CommElecMembersCtrl',
        resolve: {}
      });
    };
    //选中新管理员事件
    $scope.$on('member_choosed', function (d, param) {
      $scope.new_manager = true;
      //根据id获取用户信息
      $http.get('/api/admin/community/register/users/' + param).success(function (data) {
        $scope.new_user = data;
      });
    });
    //申请换届方法
    $scope.election = function (user_id) {
      if (!$scope.new_user.user.email) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u6b63\u786e\u586b\u5199\u65b0\u7ba1\u7406\u5458\u90ae\u7bb1\u3002'
        });
        return;
      } else if ($scope.new_user.user.photo_id === '/images/images/placeholder.png') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u9009\u62e9\u65b0\u7ba1\u7406\u5458\u8bc1\u4ef6\u7167\u3002'
        });
        return;
      }
      var fd = new FormData();
      fd.append('email', $scope.new_user.user.email);
      if (typeof $scope.new_user.user.photo_id !== 'string') {
        fd.append('photo_id', $scope.new_user.user.photo_id);
      }
      //修改新管理员信息
      $http.post('/api/admin/' + user_id + '/update', fd, {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (data) {
        $http.get('/api/admin/' + $stateParams.id + '/election/' + $scope.new_user.user.id).success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u6362\u5c4a\u7533\u8bf7\u5df2\u6210\u529f\u63d0\u4ea4\uff0c\u8bf7\u7b49\u5f85\u4e0a\u7ea7\u7ba1\u7406\u5458\u5ba1\u6279\u3002'
          });
        });
      }).error(function (code) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u65b0\u7ba1\u7406\u5458\u4fe1\u606f\u63d0\u4ea4\u5931\u8d25\uff0c\u6362\u5c4a\u7533\u8bf7\u7ec8\u6b62\u3002'
        });
      });
    };
  }
]);
angular.module('iwx').controller('CommElecMembersCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  '$modalInstance',
  '$modal',
  'eventType',
  function ($scope, $rootScope, $http, ngTableParams, $modalInstance, $modal, eventType) {
    $scope.choose_member_btn = true;
    //加载社团成员
    $scope.load_community_members = function () {
      var NgTableParams = ngTableParams;
      var community_members;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 5
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          var url = '/api/admin/members?page=' + params.page() + '&per_page=' + params.count();
          $http.get(url).success(function (data) {
            community_members = data.items;
            params.total(data.total);
            $defer.resolve(community_members);
          });
        }
      });
    };
    $scope.load_community_members();
    //取消选择管理范围
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
    //通过单选框选中成员
    $scope.get_checked_user = function (checked_user) {
      $scope.member = checked_user;
      $scope.choose_member_btn = false;
      console.log('\u88ab\u9009\u4e2d\u7684\u6210\u5458\uff1a' + $scope.member);
    };
    //确定选中的成员
    $scope.choose_member = function () {
      $rootScope.$broadcast('member_choosed', $scope.member);
      $modalInstance.close('ok');
    };
    //获取大图  /images/images/placeholder.png
    $scope.viewImage = function (image) {
      console.log(image);
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
  }
]);
angular.module('iwx').controller('CommMemVerCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  '$modal',
  '$stateParams',
  function ($scope, $rootScope, $http, ngTableParams, $modal, $stateParams) {
    $scope.currentPage = $stateParams.page;
    var NgTableParams = ngTableParams;
    var users = null;
    $scope.tableParams = new NgTableParams({
      page: $scope.currentPage,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $scope.currentPage = params.page();
        $http.get('/api/admin/community/register/users?page=' + params.page() + '&per_page=' + params.count() + '&register_type=PENDING').success(function (data) {
          users = data.items;
          params.total(data.total);
          $defer.resolve(users);
        });
      }
    });
    //刷新表格
    var reloadTable = function () {
      $scope.tableParams.reload();
    };
    //批准入社
    $scope.approve = function (userId) {
      $modal.open({
        templateUrl: 'partial/community/community_member_department.html',
        controller: 'CommMemberDepCtrl',
        resolve: {
          userId: function () {
            return userId;
          }
        }
      });
    };
    //拒绝入社
    $scope.refuse = function (user, reason) {
      $modal.open({
        templateUrl: 'partial/community/community_reject_reason.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.ok = function () {
              if (!$scope.content) {
                return;
              }
              $http.post('/api/admin/messages/' + user.user.id, { 'content': $scope.content }).success(function (data) {
                $modalInstance.close('ok');
                $http.post('/api/admin/community/register/users/' + user.user.id + '/decision', {
                  'status': 'REJECTED',
                  'reason': reason
                }).success(function (data) {
                  reloadTable();
                });
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //刷新待审核成员表事件
    $scope.$on('verify_members_tab', function () {
      $scope.tableParams.reload();
    });
  }
]);
angular.module('iwx').controller('CommMemberDepCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  '$modalInstance',
  'userId',
  'eventType',
  function ($scope, $rootScope, $http, ngTableParams, $modalInstance, userId, eventType) {
    //待审核的用户id
    $scope.userId = userId;
    $scope.choose_department_btn = true;
    var NgTableParams = ngTableParams;
    var department = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 50
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $http.get('/api/admin/department?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          department = data;
          params.total(data.length);
          $defer.resolve(department);
        });
      }
    });
    //批准成员
    var approve_member = function () {
      var param = {
          'status': 'APPROVED',
          'department_id': 0
        };
      if ($scope.department) {
        param.department_id = $scope.department;
      }
      console.log(param);
      $http.post('/api/admin/community/register/users/' + $scope.userId + '/decision', param).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6279\u51c6\u6210\u529f'
        });
        //通知表格刷新
        $rootScope.$broadcast('verify_members_tab');
        //刷新社员信息表
        $rootScope.$broadcast('getUserEvent');
      });
    };
    //取消选择部门
    $scope.cancel = function () {
      $modalInstance.close('ok');
      approve_member();
    };
    //获取选中的部门
    $scope.get_checked_department = function (checked_department) {
      $scope.department = checked_department;
      $scope.choose_department_btn = false;
      console.log('\u9009\u4e2d\u7684\u90e8\u95e8\uff1a' + $scope.department);
    };
    //确定选中的部门
    $scope.choose_department = function () {
      $modalInstance.close('ok');
      approve_member();
    };
  }
]);
angular.module('iwx').controller('CommMemDepSetCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$modalInstance',
  'user',
  'eventType',
  function ($scope, $rootScope, $http, $modalInstance, user, eventType) {
    $scope.btnSetting = true;
    //获取社员信息
    $http.get('/api/admin/community/register/users/' + user.user.id).success(function (data) {
      $scope.member = data;
    });
    //获取社团部门列表
    var getDepatments = function () {
      $http.get('/api/admin/department').success(function (data) {
        $scope.departmentArray = data;
      });
    };
    getDepatments();
    //监控部门下拉列表的值
    $scope.$watch('department_id', function () {
      if ($scope.department_id) {
        $scope.btnSetting = false;
      }
    });
    //取消操作
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
    //设置部门
    $scope.setDepartment = function () {
      var param = {};
      param.department_id = $scope.department_id;
      param.duty_id = 0;
      $http.post('/api/admin/community/' + $scope.member.user.id + '/member/set', param).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6210\u529f\u6dfb\u52a0\u5230\u8be5\u90e8\u95e8\u3002'
        });
        $modalInstance.close('ok');
      });
    };
  }
]);
angular.module('iwx').controller('CommMemDutySetCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$modalInstance',
  'user',
  'eventType',
  function ($scope, $rootScope, $http, $modalInstance, user, eventType) {
    $scope.btnSetting = true;
    //获取社员信息
    $http.get('/api/admin/community/register/users/' + user.user.id).success(function (data) {
      $scope.member = data;
      if ($scope.member.department) {
        $http.get('/api/admin/department/' + $scope.member.department.id + '/duty').success(function (data) {
          $scope.dutyArray = data;
        });
      }
    });
    //获取社团部门列表
    var getDepatments = function () {
      $http.get('/api/admin/department').success(function (data) {
        $scope.departmentArray = data;
      });
    };
    getDepatments();
    $scope.changeDepartment = function (departmentId) {
      console.log(departmentId);
      if (departmentId) {
        $http.get('/api/admin/department/' + departmentId + '/duty').success(function (data) {
          $scope.dutyArray = data;
        });
      }
    };
    //监听职务下拉框变化
    $scope.$watch('duty_id', function () {
      if ($scope.duty_id) {
        $scope.btnSetting = false;
      }
    });
    //设置职务
    $scope.setDuty = function () {
      var param = {};
      if ($scope.member.department) {
        param.department_id = $scope.member.department.id;
      } else {
        param.department_id = $scope.department_id;
      }
      param.duty_id = $scope.duty_id;
      $http.post('/api/admin/community/' + $scope.member.user.id + '/member/set', param).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6210\u529f\u8d4b\u4e88\u6210\u5458\u8be5\u804c\u52a1\u3002'
        });
        $modalInstance.close('ok');
      });
    };
    //取消操作
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('ActivityCtrl', [
  '$scope',
  '$http',
  '$state',
  'ngTableParams',
  '$rootScope',
  'eventType',
  '$modal',
  '$stateParams',
  function ($scope, $http, $state, ngTableParams, $rootScope, eventType, $modal, $stateParams) {
    $rootScope.welcome_bg = false;
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.plugins_config = {
      announcement: {
        'id': 'announcement',
        'name': '\u516c\u544a\u677f',
        'icon_path': '/static/images/announcement_new.png',
        'note': '\u6d3b\u52a8\u5730\u70b9\uff0c\u65f6\u95f4\uff0c\u4e34\u65f6\u7a81\u53d1\u72b6\u51b5\u53ef\u4ee5\u901a\u8fc7\u516c\u544a\u677f\u7b2c\u4e00\u65f6\u95f4\u63a8\u9001\u7ed9\u6240\u6709\u5173\u6ce8\u672c\u6d3b\u52a8\u7684\u5c0f\u4f19\u4f34\u4eec\u3002'
      },
      timeline: {
        'id': 'timeline',
        'name': '\u6d3b\u52a8\u52a8\u6001',
        'icon_path': '/static/images/timeline_new.png',
        'note': '\u901a\u8fc7\u56fe\u7247\u548c\u6587\u5b57\u5f62\u5f0f\u8fd8\u539f\u73b0\u573a\u5b9e\u65f6\u52a8\u6001\uff0c\u6bcf\u4e00\u6761\u52a8\u6001\u53ef\u901a\u8fc7\u5927\u5c4f\u5e55\u5b9e\u65f6\u5c55\u793a\u3002'
      },
      ticket: {
        'id': 'ticket',
        'name': '\u7535\u5b50\u7968',
        'icon_path': '/static/images/ticket_new.png',
        'note': '\u73af\u4fdd\uff0c\u65f6\u5c1a\u7684\u7535\u5b50\u7968\u636e\uff0c\u4f5c\u4e3a\u6d3b\u52a8\u552f\u4e00\u7684\u5165\u573a\u51ed\u8bc1\uff0c\u7535\u5b50\u7968\u9762\u5185\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5e7f\u544a\u4f4d\uff08\u5305\u542b\u7968\u9762\u80cc\u666f\u548c\u8d5e\u52a9\u5546logo\uff09\uff0c\u901a\u8fc7\u540e\u53f0\u53ef\u4ee5\u5b9e\u65f6\u67e5\u770b\u62a2\u7968\u4eba\u6570\uff0c\u5b9e\u9645\u5230\u573a\u9a8c\u7968\u4eba\u6570\uff0c\u5ba2\u89c2\u53cd\u6620\u73b0\u573a\u7684\u70ed\u70c8\u7a0b\u5ea6\uff0c\u6bcf\u4e00\u5f20\u7535\u5b50\u7968\u90fd\u6709\u552f\u4e00\u7684\u7535\u5b50\u7968\u7f16\u53f7\uff0c\u53ef\u88ab\u7528\u4e8e\u540e\u7eed\u7684\u5176\u4ed6\u73af\u8282\u7ee7\u7eed\u4f7f\u7528\u3002'
      },
      vote: {
        'id': 'vote',
        'name': '\u6295\u7968',
        'icon_path': '/static/images/vote_new.png',
        'note': '\u652f\u6301\u81ea\u5b9a\u4e49\u5019\u9009\u9879\uff0c\u53ef\u4ee5\u662f\u5019\u9009\u4eba\uff0c\u4e5f\u53ef\u4ee5\u662f\u5019\u9009\u9898\u76ee\uff0c\u901a\u8fc7\u7075\u6d3b\u8bbe\u7f6e\u6295\u7968\u89c4\u5219\uff0c\u53ef\u4ee5\u6536\u96c6\u5230\u8f83\u4e3a\u7cbe\u786e\u7684\u6295\u7968\u7edf\u8ba1\u6570\u636e\u3002'
      },
      sign_in: {
        'id': 'sign_in',
        'name': '\u7b7e\u5230',
        'icon_path': '/static/images/sign_in_new.png',
        'note': '\u8f7b\u91cf\u5316\u7684\u5165\u573a\u51ed\u8bc1\uff0c\u53ef\u4f5c\u4e3a\u6d3b\u52a8\u552f\u4e00\u7684\u5165\u573a\u65b9\u5f0f\uff0c\u7ae5\u978b\u4eec\u901a\u8fc7\u626b\u63cf\u5165\u573a\u5904\u7684\u4e8c\u7ef4\u7801\u7b7e\u5230\u5165\u573a\uff0c\u6bcf\u4e00\u5f20\u7b7e\u5230\u51ed\u8bc1\u90fd\u6709\u552f\u4e00\u7684\u7b7e\u5230\u53f7\u7801\uff0c\u53ef\u88ab\u7528\u4e8e\u540e\u7eed\u7684\u5176\u4ed6\u73af\u8282\u7ee7\u7eed\u4f7f\u7528\u3002'
      },
      lottery: {
        'id': 'lottery',
        'name': '\u62bd\u5956',
        'icon_path': '/static/images/lottery_new.png',
        'note': '\u6d3b\u8dc3\u73b0\u573a\u5229\u5668\uff0c\u793e\u56e2\u53ef\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u5b89\u6392\u51fa\u5bf9\u5e94\u7684\u5355\u9879\u5956\uff0c\u914d\u5408\u5927\u5c4f\u5e55\u7684\u4f7f\u7528\u53ef\u4ee5\u8ba9\u6d3b\u52a8\u73b0\u573a\u60ac\u5ff5\u611f\u5341\u8db3\uff0c\u52a0\u5f3a\u793e\u56e2\u4e0e\u53c2\u4f1a\u5c0f\u4f19\u4f34\u4eec\u7684\u4e92\u52a8\u3002'
      },
      contests: {
        'id': 'contests',
        'name': '\u6253\u5206',
        'icon_path': '/static/images/grade_new.png',
        'note': '\u6253\u5206'
      },
      questionnaire: {
        'id': 'questionnaire',
        'name': '\u95ee\u5377',
        'icon_path': '/static/images/questionnaire.png',
        'note': '\u4fbf\u4e8e\u6536\u96c6\u610f\u89c1\uff0c\u76ee\u524d\u652f\u6301\u56db\u79cd\u95ee\u9898\uff0c\u5355\u9009\u3001\u591a\u9009\u3001\u7b80\u7b54\u4ee5\u53ca\u4e0a\u4f20\u56fe\u7247\uff0c\u6bcf\u4e00\u6b21\u95ee\u5377\u652f\u6301\u6dfb\u52a0\u65e0\u9650\u91cf\u7684\u793c\u5238\uff0c\u793c\u5238\u53ef\u4ee5\u4ece\u7535\u5b50\u51ed\u8bc1\u7ba1\u7406\u4e2d\u8c03\u53d6\uff0c\u56de\u7b54\u5b8c\u6210\u540e\u81ea\u52a8\u83b7\u5f97\u4e00\u79cd\u793c\u5238\u7684\u4e00\u5f20\uff0c\u5148\u5230\u5148\u5f97\uff01\u5177\u4f53\u4f7f\u7528\u7ec6\u8282\u8bf7\u53c2\u9605\u95ee\u5377\u6982\u51b5\u4e2d\u7684\u95ee\u5377\u529f\u80fd\u89e3\u91ca\u3002'
      }
    };
    //消息提示
    if (!$rootScope.mes_note) {
      $rootScope.message();
    }
    $scope.currentPage = $stateParams.currentPage;
    // Avoid lint complain
    var NgTableParams = ngTableParams;
    var activities = null;
    $scope.tableParams = new NgTableParams({
      page: $scope.currentPage,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $scope.currentPage = params.page();
        //if (activities) {
        //    $defer.resolve(activities.slice((params.page() - 1) * params.count(), params.page() * params.count()));
        //}
        //TODO(zhangchun): we don't have pagination for this API
        // console.log(params.count() + '---------' + params.page());
        $http.get('/api/admin/activities?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          var items = data.items;
          if (items) {
            var len_items = items.length;
            for (var i = 0; i < len_items; i++) {
              var temp_item_plugin = items[i].plugins;
              var len_plugins = temp_item_plugin.length;
              for (var j = 0; j < len_plugins; j++) {
                var temp_plugin = temp_item_plugin[j];
                // console.log(temp_plugin);
                temp_plugin['icon_path'] = $scope.plugins_config[temp_plugin.id].icon_path;
              }
            }
          }
          activities = items;
          params.total(data.total);
          /*activities = data;
                params.total(data.length);*/
          $defer.resolve(activities);
        });
      }
    });
    $scope.createActivity = function () {
      $state.go('activity_item', {
        'id': -1,
        'currentPage': $scope.currentPage
      });
    };
    $scope.confirmModal = function () {
      var url = '/api/admin/activities/' + $scope.confirm.param + '/' + $scope.confirm.type;
      if ($scope.confirm.type === 'deleteActivity') {
        $http.delete('/api/admin/activities/' + $scope.confirm.param).success(function () {
          activities = null;
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'publish') {
        $http.post(url).success(function () {
          $scope.tableParams.reload();  // $scope.sendMessage($scope.confirm.param);
        });
      } else if ($scope.confirm.type === 'unpublish') {
        $http.post(url).success(function () {
          $scope.tableParams.reload();
        });
      }
    };
    $scope.sendMessage = function (activity_id) {
      $modal.open({
        templateUrl: 'partial/activity/message_modal.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.ok = function () {
              if (!$scope.content) {
                return;
              }
              $http.post('/api/admin/activities/' + activity_id + '/publish/message', { 'content': $scope.content }).success(function () {
                $modalInstance.close('ok');
                $rootScope.$emit(eventType.NOTIFICATION, {
                  'type': 'POPMSG',
                  'title': '\u6d88\u606f',
                  'message': '\u5df2\u7ecf\u6210\u529f\u53d1\u9001\u79c1\u4fe1\u548c\u77ed\u4fe1\u3002'
                });
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    $scope.deleteActivity = function (activityId) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e2a\u6d3b\u52a8\u5417?';
      $scope.confirm.type = 'deleteActivity';
      $scope.confirm.param = activityId;
      $('#confirmModal').modal();
      return;
    };
    $scope.togglePublish = function (activityId, value) {
      var action = value ? 'publish' : 'unpublish';
      var url = '/api/admin/activities/' + activityId + '/' + action;
      $http.post(url).success(function () {
        $scope.tableParams.reload();
      });
    };
    $scope.invTogglePublish = function (activityId, value) {
      var action = value ? 'unpublish' : 'publish';
      if (action === 'unpublish') {
        $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u53d6\u6d88\u53d1\u5e03\u8fd9\u4e2a\u6d3b\u52a8\u5417?';
        $scope.confirm.type = 'unpublish';
      } else {
        $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u53d1\u5e03\u8fd9\u4e2a\u6d3b\u52a8\u5417?';
        $scope.confirm.type = 'publish';
      }
      $scope.confirm.param = activityId;
      $('#confirmModal').modal();
      return;
    };
    $scope.setTop = function (activityId) {
    };
    var _to_top = function (activityId) {
      $http.post('/api/admin/activities/' + activityId + '/top').success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u7f6e\u9876\u6210\u529f'
        });
        $scope.tableParams.reload();
      });
    };
    $scope.top = function (published, admin_top, activityId) {
      if (!published) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u5148\u53d1\u5e03\u6d3b\u52a8'
        });
        return;
      }
      if (admin_top) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8be5\u6d3b\u52a8\u5df2\u88abi\u5fae\u6821\u7ba1\u7406\u5458\u7f6e\u9876'
        });
        return;
      }
      var modalInstance = $modal.open({
          templateUrl: 'partial/activity/item/top_modal.html',
          size: 'md',
          controller: [
            '$scope',
            '$modalInstance',
            function ($scope, $modalInstance) {
              $scope.ok = function () {
                $modalInstance.close();
              };
              $scope.cancel = function () {
                $modalInstance.dismiss('cancel');
              };
            }
          ]
        });
      modalInstance.result.then(function (selectedItem) {
        _to_top(activityId);
      });
    };
    $scope.gotoPlugin = function (activityId, pluginId) {
      if (pluginId === '') {
        $state.go('activity_item', {
          'id': activityId,
          'currentPage': $scope.currentPage
        });
      } else {
        $state.go('activity_item.' + pluginId + '_plugin', {
          'id': activityId,
          'currentPage': $scope.currentPage
        });
      }
    };
    //跳转到被取消发布的通知页面
    $scope.goToUnpubLog = function (type, activity_id) {
      console.log(type + '------' + activity_id);
      $state.go('activity.unpublishLog', {
        'type': type,
        'id': activity_id
      });
    };
  }
]);
angular.module('iwx').controller('CommArticleCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  '$state',
  '$stateParams',
  function ($scope, $rootScope, $http, ngTableParams, eventType, $state, $stateParams) {
    // console.log('this community article controller');
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.currentPage = $stateParams.page;
    //创建社团文章列表
    var NgTableParams = ngTableParams;
    var articles = null;
    $scope.tableParams = new NgTableParams({
      page: $scope.currentPage,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $scope.currentPage = params.page();
        $http.get('/api/admin/news/list?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          //获取文章总数
          $scope.article_sum = data.total;
          articles = data.items;
          params.total(data.total);
          $defer.resolve(articles);
        });
      }
    });
    //确认操作方法
    $scope.confirm = function () {
      if ($scope.confirm.type === 'deleteArticle') {
        $http.delete('/api/admin/news/' + $scope.confirm.param + '/del').success(function () {
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'publishArticle') {
        $http.post('/api/admin/news/' + $scope.confirm.param + '/publish').success(function () {
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'unPublishArticle') {
        $http.post('/api/admin/news/' + $scope.confirm.param + '/unpublish').success(function () {
          $scope.tableParams.reload();
        });
      }
    };
    //发布文章或者取消发布
    $scope.togglePubArt = function (articleId, publish) {
      var action = publish ? 'unPublishArticle' : 'publishArticle';
      if (action === 'unPublishArticle') {
        $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u53d6\u6d88\u53d1\u5e03\u8fd9\u7bc7\u6587\u7ae0\uff1f';
        $scope.confirm.type = 'unPublishArticle';
      } else {
        $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u53d1\u5e03\u8fd9\u7bc7\u6587\u7ae0\uff1f';
        $scope.confirm.type = 'publishArticle';
      }
      $scope.confirm.param = articleId;
      $('#confirmModal').modal();
      return;
    };
    //删除文章
    $scope.deleteArticle = function (articleId) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u7bc7\u6587\u7ae0\uff1f';
      $scope.confirm.type = 'deleteArticle';
      $scope.confirm.param = articleId;
      $('#confirmModal').modal();
    };
    //创建或者编辑文章
    $scope.goToArtDetail = function (articleId, currentPage) {
      $state.go('activity.article_detail', {
        'articleId': articleId,
        'page': currentPage
      });
    };
    //文章被取消发布日志页面
    $scope.goToUnpubLog = function (type, article_id) {
      $state.go('activity.unpublishLog_art', {
        'type': type,
        'id': article_id
      });
    };
  }
]);
angular.module('iwx').controller('CommArtDetailCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  'eventType',
  '$state',
  function ($scope, $rootScope, $http, $stateParams, eventType, $state) {
    // console.log('文章id：' + $stateParams.articleId);
    $scope.articleId = $stateParams.articleId;
    $scope.page = $stateParams.page;
    console.log($stateParams);
    $scope.article = {};
    //url regular expression
    $scope.urlRegExp = /^https{0,1}:\/\/mp.weixin.qq.com\//;
    if ($scope.articleId === '-1') {
      $scope.article.title = '';
      $scope.article.context = '';
      $scope.article.link = '';
    } else {
      $http.get('/api/admin/news/' + $scope.articleId).success(function (data) {
        $scope.article = data;
      });
    }
    //创建或者编辑文章
    $scope.sendArticle = function () {
      console.log($scope.urlRegExp.test($scope.article.link));
      if (!$scope.urlRegExp.test($scope.article.link)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u76ee\u524d\u4ec5\u652f\u6301http(s)://mp.weixin.qq.com/\u5f00\u5934\u7684\u6587\u7ae0\u94fe\u63a5\u3002'
        });
        return;
      }
      var params = {};
      params.title = $scope.article.title;
      params.context = $scope.article.context;
      params.link = $scope.article.link;
      if ($scope.articleId === '-1') {
        //创建文章
        $http.post('/api/admin/news/add', params, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $state.go('activity.article', { page: 1 }, { reload: true });
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u6210\u529f\u53d1\u9001\u793e\u56e2\u6587\u7ae0\u3002'
          });
        });
      } else {
        //修改文章
        $http.put('/api/admin/news/' + $scope.articleId + '/update', params, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $state.go('activity.article', { page: $scope.page }, { reload: true });
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u6210\u529f\u53d1\u9001\u793e\u56e2\u6587\u7ae0\u3002'
          });
        });
      }
    };
  }
]);
angular.module('iwx').controller('CommArtUnCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'eventType',
  'ngTableParams',
  '$modal',
  function ($scope, $rootScope, $http, eventType, ngTableParams, $modal) {
    //查询到的社团
    $scope.communitys = [];
    $scope.community_set = {};
    //当前页码
    $scope.current_page = 1;
    $scope.load_btn = '\u52a0\u8f7d\u66f4\u591a~~';
    //选中的社团id数组
    $scope.community_id_chosen = [];
    //确认框参数
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.c_type = 'committee';
    $('#org_tab a').click(function (e) {
      e.preventDefault();
      $(this).tab('show');
      var id = $(this).attr('id');
      if (id === 'committee') {
        $scope.$apply(function () {
          $scope.community_id_chosen = [];
          $scope.choose_all = false;
          $scope.communitys = [];
          $scope.community_set = {};
          $scope.c_type = 'committee';
          $scope.current_page = 1;
          load_community($scope.current_page);
          $scope.tableParams.page($scope.current_page);
          $scope.tableParams.reload();
        });
      } else if (id === 'union') {
        $scope.$apply(function () {
          $scope.community_id_chosen = [];
          $scope.choose_all = false;
          $scope.communitys = [];
          $scope.community_set = {};
          $scope.c_type = 'union';
          $scope.current_page = 1;
          load_community($scope.current_page);
          $scope.tableParams.page($scope.current_page);
          $scope.tableParams.reload();
        });
      } else if (id === 'tissue') {
        $scope.$apply(function () {
          $scope.community_id_chosen = [];
          $scope.choose_all = false;
          $scope.communitys = [];
          $scope.community_set = {};
          $scope.c_type = 'tissue';
          $scope.current_page = 1;
          load_community($scope.current_page);
          $scope.tableParams.page($scope.current_page);
          $scope.tableParams.reload();
        });
      } else {
        $scope.$apply(function () {
          $scope.community_id_chosen = [];
          $scope.choose_all = false;
          $scope.communitys = [];
          $scope.community_set = {};
          $scope.c_type = 'organization';
          $scope.current_page = 1;
          load_community($scope.current_page);
          $scope.tableParams.page($scope.current_page);
          $scope.tableParams.reload();
        });
      }
    });
    //选择社团
    $scope.choose_community = function (community_id, choose_item) {
      if (choose_item) {
        $scope.community_id_chosen.push(community_id);
        console.log($scope.community_id_chosen);
        //调用分页接口，查询文章
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      } else {
        for (var i = 0; i < $scope.community_id_chosen.length; i++) {
          var temp = $scope.community_id_chosen[i];
          if (temp === community_id) {
            $scope.community_id_chosen.splice($scope.community_id_chosen.indexOf(temp), 1);
          }
        }
        console.log($scope.community_id_chosen);
        //调用分页接口，查询文章
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      }
    };
    //选择查询到的所有社团
    $scope.choose_communitys = function (choose_all) {
      if (choose_all) {
        if ($scope.community_id_chosen.length !== 0) {
          $scope.community_id_chosen.splice(0, $scope.community_id_chosen.length);
        }
        for (var i = 0; i < $scope.communitys.length; i++) {
          var temp = $scope.communitys[i];
          $scope.community_id_chosen.push(temp.id);
        }
        console.log($scope.community_id_chosen);
        //调用分页接口，查询文章
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      } else {
        $scope.community_id_chosen.splice(0, $scope.community_id_chosen.length);
        console.log($scope.community_id_chosen);
        //调用分页接口，查询文章
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      }
    };
    //加载查询到的社团
    var load_community = function (page) {
      $http.get('/api/un/community?page=' + page + '&per_page=12&c_type=' + $scope.c_type).success(function (data) {
        if (data.items.length === 0) {
          if (page === 1) {
            $scope.msg = false;
            if ($scope.c_type === 'organization') {
              $scope.load_msg = '\u6682\u65f6\u6ca1\u6709\u66f4\u591a' + $rootScope.org_type[$scope.c_type] + '~~';
            } else {
              $scope.load_msg = '\u6682\u65f6\u6ca1\u6709\u66f4\u591a' + $rootScope.org_type[$scope.c_type] + '\u7ec4\u7ec7~~';
            }
          } else {
            $scope.btn = true;
            $scope.load_btn = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8~~';
          }
          return;
        }
        $scope.btn = false;
        $scope.load_btn = '\u52a0\u8f7d\u66f4\u591a~~';
        $scope.msg = true;
        $scope.show_community = true;
        var add = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in $scope.community_set)) {
            $scope.community_set[value.community.id] = true;
            $scope.communitys.push(value.community);
            add++;
          }
        });
        //当全选复选框为选中状态时，添加选中的社团
        if ($scope.choose_all) {
          $scope.choose_communitys($scope.choose_all);
        }
        if (add === 0) {
          load_community(++$scope.current_page);
        }
      });
    };
    load_community($scope.current_page);
    //加载更多
    $scope.load_more = function () {
      load_community(++$scope.current_page);
    };
    //社团文章列表
    var NgTableParams = ngTableParams;
    var articles = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        //请求参数
        var request_param;
        if ($scope.community_id_chosen.length !== 0) {
          var comm_id_str = '';
          for (var i = 0; i < $scope.community_id_chosen.length; i++) {
            if (i !== $scope.community_id_chosen.length - 1) {
              comm_id_str += $scope.community_id_chosen[i] + '-';
            } else {
              comm_id_str += $scope.community_id_chosen[i] + '';
            }
          }
          console.log(comm_id_str);
          request_param = '?page=' + params.page() + '&per_page=' + params.count() + '&communities=' + comm_id_str;
        } else {
          request_param = '?page=' + params.page() + '&per_page=' + params.count() + '&c_type=' + $scope.c_type;
        }
        $http.get('/api/un/news/list' + request_param).success(function (data) {
          //获取文章总数
          $scope.article_sum = data.total;
          articles = data.items;
          params.total(data.total);
          $defer.resolve(articles);
        });
      }
    });
    //确认操作方法
    $scope.confirm = function () {
      /*if ($scope.confirm.type === 'publishArticle') {
				$http
					.post('' + $scope.confirm.param + '/' + $scope.confirm.type)
					.success(function () {
						$scope.tableParams.reload();
					});
			} else */
      if ($scope.confirm.type === 'unPublishArticle') {
        $http.post('/api/un/news/' + $scope.confirm.param + '/unpublish').success(function () {
          $scope.tableParams.reload();
        });
      }
    };
    var reloadArticle = function () {
      $scope.tableParams.reload();
    };
    //发布文章或者取消发布
    $scope.togglePubArt = function (article_id, publish) {
      var action = publish ? 'unPublishArticle' : 'publishArticle';
      if (action === 'unPublishArticle') {
        $modal.open({
          templateUrl: 'partial/common/unpublished_reason.html',
          controller: [
            '$scope',
            '$modalInstance',
            function ($scope, $modalInstance) {
              $scope.reason_title = '\u53d6\u6d88\u53d1\u8868\u7406\u7531';
              $scope.$watch('content', function (value) {
                if (value) {
                  $scope.ok_btn = false;
                } else {
                  $scope.ok_btn = true;
                }
              });
              $scope.ok = function () {
                console.log($scope.content);
                $http.post('/api/un/news/' + article_id + '/unpublish', { content: $scope.content }).success(function (data) {
                  $modalInstance.close('ok');
                  reloadArticle();
                });
              };
              $scope.cancel = function () {
                console.log($modalInstance);
                $modalInstance.close('ok');
              };
            }
          ]
        });
      } else {
        $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u53d1\u5e03\u8fd9\u7bc7\u6587\u7ae0\uff1f';
        $scope.confirm.type = 'publishArticle';
        $scope.confirm.param = article_id;
        $('#confirmModal').modal();
        return;
      }
    };
    //查看社团详细信息
    $scope.preview_host = function (hostId) {
      $modal.open({
        templateUrl: 'partial/common/host_detail.html',
        controller: 'HostDetailCtrl',
        resolve: {
          hostId: function () {
            return hostId;
          }
        }
      });
    };
  }
]);
angular.module('iwx').controller('CommArtIwxCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  '$state',
  '$modal',
  function ($scope, $rootScope, $http, ngTableParams, eventType, $state, $modal) {
    //确认操作参数
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //条件搜索参数对象
    $scope.params = {};
    //获取管理的地域和学校
    $scope.load_region = function () {
      $http.get('/api/iwx/geography').success(function (data) {
        $scope.geography = data;
        $scope.provinceArray = [];
        angular.forEach($scope.geography, function (value, key) {
          $scope.provinceArray.push(value.obj);
        });
        $scope.params.province_scope_id = $scope.provinceArray[0].id;
        $scope.cityArray = [];
        if ($scope.geography) {
          $scope.geography_city = $scope.geography[$scope.params.province_scope_id];
          angular.forEach($scope.geography_city, function (value, key) {
            if (value instanceof Array) {
              $scope.cityArray.push(value[0].geography);
            }
          });
        }
        $scope.params.city_scope_id = $scope.cityArray[0].id;
        $scope.universityArray = [];
        if ($scope.geography_city) {
          $scope.geography_university = $scope.geography_city[$scope.params.city_scope_id];
          angular.forEach($scope.geography_university, function (value, key) {
            $scope.universityArray.push(value.university);
          });
        }
        $scope.params.university_scope_id = $scope.universityArray[0].id;
        $scope.article_list_param = $scope.params.university_scope_id;
        article_list();
      });
    };
    $scope.load_region();
    //监控省下拉列表框的value值的改变
    $scope.change_province = function () {
      $scope.cityArray = [];
      if ($scope.geography) {
        $scope.geography_city = $scope.geography[$scope.params.province_scope_id];
        angular.forEach($scope.geography_city, function (value, key) {
          if (value instanceof Array) {
            $scope.cityArray.push(value[0].geography);
          }
        });
      }
    };
    //监控市下拉列表框的value值的改变
    $scope.change_city = function () {
      $scope.universityArray = [];
      if ($scope.geography_city) {
        $scope.geography_university = $scope.geography_city[$scope.params.city_scope_id];
        angular.forEach($scope.geography_university, function (value, key) {
          $scope.universityArray.push(value.university);
        });
      }
    };
    //监控学校下拉框的value值的改变
    $scope.change_university = function () {
      console.log('change_university');
      $scope.article_list_param = $scope.params.university_scope_id;
      $scope.tableParams.page(1);
      $scope.tableParams.reload();
    };
    //社团文章列表
    var article_list = function () {
      var NgTableParams = ngTableParams;
      var articles = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/iwx/news/' + $scope.article_list_param + '/list' + '?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            //获取文章总数
            $scope.article_sum = data.total;
            articles = data.items;
            params.total(data.total);
            $defer.resolve(articles);
          });
        }
      });
    };
    //确认操作方法
    $scope.confirm = function () {
      /*if ($scope.confirm.type === 'publishArticle') {
				$http
					.post('' + $scope.confirm.param + '/' + $scope.confirm.type)
					.success(function () {
						$scope.tableParams.reload();
					});
			} else */
      if ($scope.confirm.type === 'unPublishArticle') {
        $http.post('/api/iwx/news/' + $scope.confirm.param + '/unpublish').success(function () {
          $scope.tableParams.reload();
        });
      }
    };
    var reloadArticle = function () {
      $scope.tableParams.reload();
    };
    //发布文章或者取消发布
    $scope.togglePubArt = function (article_id, publish) {
      var action = publish ? 'unPublishArticle' : 'publishArticle';
      if (action === 'unPublishArticle') {
        $modal.open({
          templateUrl: 'partial/common/unpublished_reason.html',
          controller: [
            '$scope',
            '$modalInstance',
            function ($scope, $modalInstance) {
              $scope.reason_title = '\u53d6\u6d88\u53d1\u5e03\u7406\u7531';
              $scope.$watch('content', function (value) {
                if (value) {
                  $scope.ok_btn = false;
                } else {
                  $scope.ok_btn = true;
                }
              });
              $scope.ok = function () {
                $http.post('/api/iwx/news/' + article_id + '/unpublish', { content: $scope.content }).success(function (data) {
                  $modalInstance.close('ok');
                  reloadArticle();
                });
              };
              $scope.cancel = function () {
                console.log($modalInstance);
                $modalInstance.close('ok');
              };
            }
          ]
        });
      } else {
        $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u53d1\u5e03\u8fd9\u7bc7\u6587\u7ae0\uff1f';
        $scope.confirm.type = 'publishArticle';
      }
    };
  }
]);
angular.module('iwx').controller('BazListIwxCtrl', [
  '$scope',
  '$http',
  '$modal',
  '$rootScope',
  'ngTableParams',
  '$state',
  'userService',
  function ($scope, $http, $modal, $rootScope, ngTableParams, $state, userService) {
    console.log($state.current.url);
    //页码初始值
    $scope.current_page = 1;
    $scope.load_btn = '\u52a0\u8f7d\u66f4\u591a~~';
    //查询到的社团
    $scope.communities = [];
    $scope.community_set = {};
    $scope.community_id = '';
    $scope.org_type_hash = {
      'committee': '\u9662\u7cfb\u56e2\u59d4',
      'tissue': '\u9662\u7cfb\u5b66\u751f\u4f1a',
      'organization': '\u6821\u7ea7\u5b66\u751f\u7ec4\u7ec7',
      'union': '\u5b66\u751f\u793e\u56e2'
    };
    $scope.bazaar_alias_arr = [];
    //获取管理的地域和学校
    var load_geography = function () {
      $http.get('/api/iwx/geography').success(function (data) {
        $scope.geography = data;
        $scope.provinceArray = [];
        angular.forEach($scope.geography, function (value, key) {
          $scope.provinceArray.push(value.obj);
        });
        $scope.search_params.province_scope_id = $scope.provinceArray[0].id;
        $scope.cityArray = [];
        if ($scope.geography) {
          $scope.geography_city = $scope.geography[$scope.search_params.province_scope_id];
          angular.forEach($scope.geography_city, function (value, key) {
            if (value instanceof Array) {
              $scope.cityArray.push(value[0].geography);
            }
          });
        }
        $scope.search_params.city_scope_id = $scope.cityArray[0].id;
        $scope.universityArray = [];
        if ($scope.geography_city) {
          $scope.geography_university = $scope.geography_city[$scope.search_params.city_scope_id];
          angular.forEach($scope.geography_university, function (value, key) {
            $scope.universityArray.push(value.university);
          });
        }
        $scope.search_params.university_scope_id = $scope.universityArray[0].id;
        $scope.bazaar_list_param = $scope.search_params.university_scope_id + '/u';
        var bazaar_type_api = '';
        if ($state.current.url === '/bazaar') {
          bazaar_type_api = '/api/admin/bazaar/type';
          $scope.bazaar_list_api = '/api/iwx/' + $scope.search_params.university_scope_id + '/community/bazaars';
          //分页加载社团，参数为学校id和社团类型
          loadCommunities($scope.current_page);
        } else {
          bazaar_type_api = '/api/bazaars/type';
          $scope.bazaar_list_api = '/api/iwx/' + $scope.search_params.university_scope_id + '/user/bazaars';
        }
        getBazCount($scope.search_params.university_scope_id);
        getBazType(bazaar_type_api);
        loadBazaars($scope.current_page);
      });
    };
    //监听省份条件的改变
    $scope.change_province = function () {
      $scope.cityArray = [];
      if ($scope.geography) {
        $scope.geography_city = $scope.geography[$scope.search_params.province_scope_id];
        angular.forEach($scope.geography_city, function (value, key) {
          if (value instanceof Array) {
            $scope.cityArray.push(value[0].geography);
          }
        });
      }
    };
    //监听市级条件的改变
    $scope.change_city = function () {
      $scope.universityArray = [];
      if ($scope.geography_city) {
        $scope.geography_university = $scope.geography_city[$scope.search_params.city_scope_id];
        angular.forEach($scope.geography_university, function (value, key) {
          $scope.universityArray.push(value.university);
        });
      }
    };
    //监听校级条件的改变
    $scope.change_university = function () {
      console.log($scope.search_params.university_scope_id);
      $scope.communities = [];
      $scope.community_set = {};
      $scope.current_page = 1;
      if ($state.current.url === '/bazaar') {
        $scope.bazaar_list_api = '/api/iwx/' + $scope.search_params.university_scope_id + '/community/bazaars';
        loadCommunities($scope.current_page);
      } else {
        $scope.bazaar_list_api = '/api/iwx/' + $scope.search_params.university_scope_id + '/user/bazaars';
      }
      getBazCount($scope.search_params.university_scope_id);
      $scope.tableParams.page($scope.current_page);
      $scope.tableParams.reload();
    };
    //根据学校和组织类型加载组织
    var loadCommunities = function (page) {
      $http.get('/api/iwx/' + $scope.search_params.university_scope_id + '/communities?page=' + page + '&per_page=12&c_type=' + $scope.search_params.org_type).success(function (data) {
        if (data.items.length === 0) {
          if (page === 1) {
            $scope.msg = false;
            console.log($scope.search_params.org_type);
            if ($scope.search_params.org_type === 'organization') {
              $scope.load_msg = '\u6682\u65f6\u6ca1\u6709\u66f4\u591a' + $scope.org_type_hash[$scope.search_params.org_type] + '~~';
            } else {
              $scope.load_msg = '\u6682\u65f6\u6ca1\u6709\u66f4\u591a' + $scope.org_type_hash[$scope.search_params.org_type] + '\u7ec4\u7ec7~~';
            }
          } else {
            $scope.btn = true;
            $scope.load_btn = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8~~';
          }
          return;
        }
        $scope.btn = false;
        $scope.load_btn = '\u52a0\u8f7d\u66f4\u591a~~';
        $scope.msg = true;
        var add = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in $scope.community_set)) {
            $scope.community_set[value.community.id] = true;
            $scope.communities.push(value.community);
            add++;
          }
        });
        if (add === 0) {
          loadCommunities(++$scope.current_page);
        }
      });
    };
    $scope.load_more = function () {
      loadCommunities(++$scope.current_page);
    };
    //选择组织条件
    $scope.get_checked_community = function (id) {
      $scope.community_id = id;
      $scope.current_page = 1;
      $scope.tableParams.page($scope.current_page);
      $scope.tableParams.reload();
    };
    //切换组织条件
    $('#org_tab_baz a').click(function (e) {
      e.preventDefault();
      $(this).tab('show');
      var id = $(this).attr('id');
      if (id === 'committee') {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.search_params.org_type = 'committee';
          $scope.current_page = 1;
          loadCommunities($scope.current_page);
        });
      } else if (id === 'union') {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.search_params.org_type = 'union';
          $scope.current_page = 1;
          loadCommunities($scope.current_page);
        });
      } else if (id === 'tissue') {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.search_params.org_type = 'tissue';
          $scope.current_page = 1;
          loadCommunities($scope.current_page);
        });
      } else {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.search_params.org_type = 'organization';
          $scope.current_page = 1;
          loadCommunities($scope.current_page);
        });
      }
    });
    //获取集市类型
    var getBazType = function (bazaar_type_api) {
      $http.get(bazaar_type_api).success(function (data) {
        $scope.bazaar_type = data;
        angular.forEach($scope.bazaar_type, function (bazaar) {
          bazaar.chosen = false;
        });
      });
    };
    //选择集市类型条件
    $scope.choseBazaarType = function (type) {
      if (type.chosen) {
        type.chosen = false;
        angular.forEach($scope.bazaar_alias_arr, function (value, index) {
          if (value === type.alias) {
            $scope.bazaar_alias_arr.splice(index, 1);
          }
        });
        console.log($scope.bazaar_alias_arr);
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      } else {
        type.chosen = true;
        $scope.bazaar_alias_arr.push(type.alias);
        console.log($scope.bazaar_alias_arr);
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      }
    };
    //获取集市列表
    var loadBazaars = function () {
      var NgTableParams = ngTableParams;
      var bazaars = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          var request_param = '?page=' + params.page() + '&per_page=' + params.count();
          if ($scope.community_id !== '') {
            request_param += '&community_id=' + $scope.community_id;
          }
          if ($scope.bazaar_alias_arr.length !== 0) {
            var bazaar_alias = '';
            angular.forEach($scope.bazaar_alias_arr, function (value, index) {
              if (index !== $scope.bazaar_alias_arr.length - 1) {
                bazaar_alias += value + '-';
              } else {
                bazaar_alias += value;
              }
            });
            request_param += '&bazaar_type=' + bazaar_alias;
          }
          $http.get($scope.bazaar_list_api + request_param).success(function (data) {
            bazaars = data.items;
            params.total(data.total);
            $defer.resolve(bazaars);
          });
        }
      });
    };
    //获取发布总数
    var getBazCount = function (university_id) {
      $http.get('/api/iwx/university/bazaar/' + university_id + '/count').success(function (data) {
        console.log(data);
        $scope.org_count = data.admin;
        $scope.personal_count = data.user;
        $scope.sum = data.admin + data.user;
      });
    };
    userService.load(true).then(function (user) {
      //条件搜索参数对象
      $scope.search_params = { org_type: 'committee' };
      load_geography();
    });
    var reloadBazaar = function () {
      $scope.tableParams.reload();
    };
    //取消发布操作
    $scope.unPubBazaar = function (university_id, type, bazaar_id) {
      $modal.open({
        templateUrl: 'partial/common/unpublished_reason.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            if (type === 'USER') {
              $scope.reason_title = '\u5220\u9664\u7406\u7531';
            } else {
              $scope.reason_title = '\u53d6\u6d88\u53d1\u5e03\u7406\u7531';
            }
            $scope.$watch('content', function (value) {
              if (value) {
                $scope.ok_btn = false;
              } else {
                $scope.ok_btn = true;
              }
            });
            $scope.ok = function () {
              $http.post('/api/iwx/' + university_id + '/bazaar/' + bazaar_id + '/unpublish?b_type=' + type, { content: $scope.content }).success(function (data) {
                $modalInstance.close('ok');
                reloadBazaar();
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //查看发布者信息
    $scope.publisherInfo = function (publisher_id, flag) {
      console.log(flag);
      $modal.open({
        templateUrl: 'partial/bazaar/iwx/publisher_info.html',
        controller: 'PublisherInfoCtrl',
        resolve: {
          publisherId: function () {
            return publisher_id;
          },
          flag: function () {
            return flag;
          }
        }
      });
    };
    $scope.goToBazDetail = function (bazaar_id, bazaar_type) {
      console.log(bazaar_id);
      var root_url = '';
      if (bazaar_type === 'GIVE') {
        root_url = 'sale_bazaar';
      } else if (bazaar_type === 'BUY') {
        root_url = 'purchase_bazaar';
      } else if (bazaar_type === 'LOSE') {
        root_url = 'lost_bazaar';
      } else {
        root_url = 'pick_bazaar';
      }
      $state.go(root_url, { 'id': bazaar_id });
    };
  }
]);
angular.module('iwx').controller('PublisherInfoCtrl', [
  '$scope',
  '$http',
  '$modal',
  '$modalInstance',
  'publisherId',
  'flag',
  function ($scope, $http, $modal, $modalInstance, publisherId, flag) {
    $scope.flag = flag;
    $scope.publisher = { publish_title: '' };
    //获取社团信息
    var getCommInfo = function (comm_id) {
      $http.get('/api/communities/' + comm_id).success(function (data) {
        $scope.community = data;
        $scope.publisher.publish_title = $scope.community.name + '\u4fe1\u606f\u9884\u89c8';
      });
    };
    //获取个人信息
    var getPersonalInfo = function (user_id) {
      $http.get('/api/users/' + user_id).success(function (data) {
        $scope.user = data;
        $scope.publisher.publish_title = $scope.user.name + '\u4e2a\u4eba\u4fe1\u606f\u9884\u89c8';
      });
    };
    //获取发布者信息
    var getPublisherInfo = function (publisher_id, flag) {
      if (flag === 'org') {
        //调用获取社团信息接口
        getCommInfo(publisher_id);
      } else {
        //调用获取个人信息接口
        getPersonalInfo(publisher_id);
      }
    };
    getPublisherInfo(publisherId, flag);
    //关闭信息框
    $scope.close = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('BazListUnCtrl', [
  '$scope',
  '$http',
  '$modal',
  '$state',
  'ngTableParams',
  'userService',
  '$rootScope',
  'eventType',
  function ($scope, $http, $modal, $state, ngTableParams, userService, $rootScope, eventType) {
    console.log($state.current.url);
    $scope.current_page = 1;
    $scope.load_btn = '\u52a0\u8f7d\u66f4\u591a~~';
    //社团数组
    $scope.communities = [];
    $scope.community_set = {};
    //组织类型对照表
    $scope.org_type = {
      'committee': '\u9662\u7cfb\u56e2\u59d4',
      'tissue': '\u9662\u7cfb\u5b66\u751f\u4f1a',
      'organization': '\u6821\u7ea7\u5b66\u751f\u7ec4\u7ec7',
      'union': '\u5b66\u751f\u793e\u56e2'
    };
    //集市列表参数
    $scope.bazaar_alias_arr = [];
    $scope.community_id = '';
    //切换各级组织
    $('#org_tab a').click(function (e) {
      e.preventDefault();
      $(this).tab('show');
      var id = $(this).attr('id');
      if (id === 'committee') {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.c_type = 'committee';
          $scope.current_page = 1;
          loadUniversityCommunities($scope.current_page);
        });
      } else if (id === 'union') {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.c_type = 'union';
          $scope.current_page = 1;
          loadUniversityCommunities($scope.current_page);
        });
      } else if (id === 'tissue') {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.c_type = 'tissue';
          $scope.current_page = 1;
          loadUniversityCommunities($scope.current_page);
        });
      } else {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.c_type = 'organization';
          $scope.current_page = 1;
          loadUniversityCommunities($scope.current_page);
        });
      }
    });
    //加载组织社团
    var loadUniversityCommunities = function (page) {
      $http.get('/api/un/community?page=' + page + '&per_page=12&c_type=' + $scope.c_type).success(function (data) {
        if (data.items.length === 0) {
          if (page === 1) {
            $scope.msg = false;
            if ($scope.c_type === 'organization') {
              $scope.load_msg = '\u6682\u65f6\u6ca1\u6709\u66f4\u591a' + $scope.org_type[$scope.c_type] + '~~';
            } else {
              $scope.load_msg = '\u6682\u65f6\u6ca1\u6709\u66f4\u591a' + $scope.org_type[$scope.c_type] + '\u7ec4\u7ec7~~';
            }
          } else {
            $scope.btn = true;
            $scope.load_btn = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8~~';
          }
          return;
        }
        $scope.btn = false;
        $scope.load_btn = '\u52a0\u8f7d\u66f4\u591a~~';
        $scope.msg = true;
        // $scope.show_community = true;
        var add = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in $scope.community_set)) {
            $scope.community_set[value.community.id] = true;
            $scope.communities.push(value.community);
            add++;
          }
        });
        if (add === 0) {
          loadUniversityCommunities(++$scope.current_page);
        }
      });
    };
    $scope.loadMore = function () {
      loadUniversityCommunities(++$scope.current_page);
    };
    //选择社团
    $scope.getCheckedCommunity = function (checked_community) {
      // console.log(checked_community);
      $scope.community_id = checked_community;
      $scope.tableParams.page(1);
      $scope.tableParams.reload();
    };
    //获取集市类型
    var getBazType = function (bazaar_type_api) {
      $http.get(bazaar_type_api).success(function (data) {
        $scope.bazaar_type = data;
        angular.forEach($scope.bazaar_type, function (bazaar) {
          bazaar.chosen = false;
        });
      });
    };
    //选择集市类型条件
    $scope.choseBazaarType = function (type) {
      if (type.chosen) {
        type.chosen = false;
        angular.forEach($scope.bazaar_alias_arr, function (value, index) {
          if (value === type.alias) {
            $scope.bazaar_alias_arr.splice(index, 1);
          }
        });
        console.log($scope.bazaar_alias_arr);
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      } else {
        type.chosen = true;
        $scope.bazaar_alias_arr.push(type.alias);
        console.log($scope.bazaar_alias_arr);
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      }
    };
    //加载集市消息表格
    var loadBazaars = function () {
      // Avoid lint complain
      var NgTableParams = ngTableParams;
      var bazaars = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          var request_param = '?page=' + params.page() + '&per_page=' + params.count();
          if ($scope.community_id !== '') {
            request_param += '&community_id=' + $scope.community_id;
          }
          if ($scope.bazaar_alias_arr.length !== 0) {
            var bazaar_alias = '';
            angular.forEach($scope.bazaar_alias_arr, function (value, index) {
              if (index !== $scope.bazaar_alias_arr.length - 1) {
                bazaar_alias += value + '-';
              } else {
                bazaar_alias += value;
              }
            });
            request_param += '&bazaar_type=' + bazaar_alias;
          }
          console.log($scope.bazaar_list_api + request_param);
          $http.get($scope.bazaar_list_api + request_param).success(function (data) {
            bazaars = data.items;
            params.total(data.total);
            $defer.resolve(bazaars);
          });
        }
      });
    };
    //获取集市消息发布总数
    var getBazCount = function () {
      $http.get('/api/un/university/bazaar/count').success(function (data) {
        console.log(data);
        $scope.org_count = data.admin;
        $scope.personal_count = data.user;
      });
    };
    userService.load(true).then(function (user) {
      var bazaar_type_api = '';
      if (user.admin_type === 'COMMITTEE') {
        $scope.c_type = 'committee';
      } else {
        $scope.c_type = 'union';
      }
      if ($state.current.url === '/bazaar') {
        $scope.bazaar_list_api = '/api/un/community/bazaars';
        bazaar_type_api = '/api/admin/bazaar/type';
        loadUniversityCommunities($scope.current_page);
      } else {
        $scope.bazaar_list_api = '/api/un/bazaar/user';
        bazaar_type_api = '/api/bazaars/type';
      }
      getBazType(bazaar_type_api);
      loadBazaars();
      getBazCount();
    });
    var reloadBazaar = function () {
      $scope.tableParams.reload();
    };
    //取消发布操作
    $scope.unPubBazaar = function (bazaar_id, publisher_id, flag) {
      $modal.open({
        templateUrl: 'partial/common/unpublished_reason.html',
        controller: [
          '$scope',
          '$rootScope',
          '$modalInstance',
          function ($scope, $rootScope, $modalInstance) {
            if (flag === 'USER') {
              $scope.reason_title = '\u5220\u9664\u7406\u7531';
            } else {
              $scope.reason_title = '\u53d6\u6d88\u53d1\u5e03\u7406\u7531';
            }
            $scope.$watch('content', function (value) {
              if (value) {
                $scope.ok_btn = false;
              } else {
                $scope.ok_btn = true;
              }
            });
            $scope.ok = function () {
              $http.post('/api/un/bazaar/' + bazaar_id + '/unpublish?b_type=' + flag, { content: $scope.content }).success(function (data) {
                $modalInstance.dismiss('cancel');
                reloadBazaar();
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //获取发布者信息
    $scope.publisherInfo = function (publisher_id, flag) {
      $modal.open({
        templateUrl: 'partial/bazaar/university/publisher_info.html',
        controller: 'PublisherInfoUnCtrl',
        resolve: {
          publisherId: function () {
            return publisher_id;
          },
          flag: function () {
            return flag;
          }
        }
      });
    };
    $scope.goToBazDetail = function (bazaar_id, bazaar_type) {
      console.log(bazaar_id);
      var root_url = '';
      if (bazaar_type === 'GIVE') {
        root_url = 'sale_bazaar';
      } else if (bazaar_type === 'BUY') {
        root_url = 'purchase_bazaar';
      } else if (bazaar_type === 'LOSE') {
        root_url = 'lost_bazaar';
      } else {
        root_url = 'pick_bazaar';
      }
      $state.go(root_url, { 'id': bazaar_id });
    };
    $scope.$on('flushBazaarList', function () {
      $scope.tableParams.reload();
      getBazCount();
    });
  }
]);
angular.module('iwx').controller('PublisherInfoUnCtrl', [
  '$scope',
  '$http',
  '$modal',
  '$modalInstance',
  'publisherId',
  'flag',
  function ($scope, $http, $modal, $modalInstance, publisherId, flag) {
    $scope.flag = flag;
    $scope.publisher = { publish_title: '' };
    //获取社团信息
    var getCommInfo = function (comm_id) {
      $http.get('/api/communities/' + comm_id).success(function (data) {
        $scope.community = data;
        $scope.publisher.publish_title = $scope.community.name + '\u4fe1\u606f\u9884\u89c8';
      });
    };
    //获取个人信息
    var getPersonalInfo = function (user_id) {
      $http.get('/api/users/' + user_id).success(function (data) {
        $scope.user = data;
        $scope.publisher.publish_title = $scope.user.name + '\u4e2a\u4eba\u4fe1\u606f\u9884\u89c8';
      });
    };
    //获取发布者信息
    var getPublisherInfo = function (publisher_id, flag) {
      if (flag === 'org') {
        //调用获取社团信息接口
        getCommInfo(publisher_id);
      } else {
        //调用获取个人信息接口
        getPersonalInfo(publisher_id);
      }
    };
    getPublisherInfo(publisherId, flag);
    //关闭信息框
    $scope.close = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('BazaarListCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  '$state',
  'userService',
  '$stateParams',
  function ($scope, $rootScope, $http, ngTableParams, eventType, $state, userService, $stateParams) {
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.currentPage = $stateParams.page;
    $scope.act_page = $stateParams.currentPage;
    //集市信息类型id
    $scope.bazaar_alias_array = [];
    //获取校园集市类型
    $http.get('/api/admin/bazaar/type').success(function (data) {
      $scope.bazaar_type = data;
      angular.forEach($scope.bazaar_type, function (bazaar) {
        bazaar.chosen = false;
      });
    });
    //创建校园集市
    $scope.createBazaar = function () {
      $state.go('create_bazaar');
    };
    //加载集市信息表格
    var loadBazaar = function () {
      var NgTableParams = ngTableParams;
      var bazaar = null;
      $scope.tableParams = new NgTableParams({
        page: $scope.currentPage,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $scope.currentPage = params.page();
          var request_param;
          if ($scope.bazaar_alias_array.length !== 0) {
            var bazaar_alias = '';
            for (var i = 0; i < $scope.bazaar_alias_array.length; i++) {
              if (i !== $scope.bazaar_alias_array.length - 1) {
                bazaar_alias += $scope.bazaar_alias_array[i] + '-';
              } else {
                bazaar_alias += $scope.bazaar_alias_array[i];
              }
            }
            request_param = '?page=' + params.page() + '&per_page=' + params.count() + '&bazaar_type=' + bazaar_alias;
          } else {
            request_param = '?page=' + params.page() + '&per_page=' + params.count();
          }
          $http.get('/api/admin/bazaar/' + $stateParams.id + '/me' + request_param).success(function (data) {
            $scope.bazaar_total = data.total;
            bazaar = data.items;
            params.total(data.total);
            $defer.resolve(bazaar);
          });
        }
      });
    };
    loadBazaar();
    //选择集市类型条件
    $scope.choseBazaarType = function (type) {
      if (type.chosen) {
        type.chosen = false;
        for (var i = 0; i < $scope.bazaar_alias_array.length; i++) {
          if ($scope.bazaar_alias_array[i] === type.alias) {
            $scope.bazaar_alias_array.splice(i, 1);
            break;
          }
        }
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      } else {
        type.chosen = true;
        $scope.bazaar_alias_array.push(type.alias);
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      }
      console.log($scope.bazaar_alias_array);
    };
    //确定方法
    $scope.confirm = function () {
      if ($scope.confirm.type === 'DEL_BAZAAR') {
        $http.delete('/api/admin/bazaar/' + $scope.confirm.param + '/delete').success(function () {
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'PUBLISHBAZ') {
        $http.post('/api/admin/bazaar/' + $scope.confirm.param + '/publish').success(function () {
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'UNPUBLISHBAZ') {
        $http.post('/api/admin/bazaar/' + $scope.confirm.param + '/unpublish').success(function () {
          $scope.tableParams.reload();
        });
      }
    };
    //发布或取消集市消息
    $scope.togglePubBaz = function (bazaar_id, publish) {
      var action = publish ? 'unPublishBaz' : 'publishBaz';
      if (action === 'unPublishBaz') {
        $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u53d6\u6d88\u53d1\u5e03\u8be5\u6761\u96c6\u5e02\u6d88\u606f\uff1f';
        $scope.confirm.type = 'UNPUBLISHBAZ';
      } else {
        $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u53d1\u5e03\u8be5\u6761\u96c6\u5e02\u6d88\u606f\uff1f';
        $scope.confirm.type = 'PUBLISHBAZ';
      }
      $scope.confirm.param = bazaar_id;
      $('#confirmModal').modal();
      return;
    };
    //编辑集市消息
    $scope.goToBazDetail = function (bazaar_id, bazaar_type, currentPage, act_page) {
      var root_url = '';
      if (bazaar_type === 'GIVE') {
        root_url = 'sale_bazaar';
      } else if (bazaar_type === 'BUY') {
        root_url = 'purchase_bazaar';
      } else if (bazaar_type === 'LOSE') {
        root_url = 'lost_bazaar';
      } else {
        root_url = 'pick_bazaar';
      }
      $state.go(root_url, {
        'id': bazaar_id,
        'page': currentPage,
        'currentPage': act_page
      });
    };
    //删除集市消息
    $scope.delBazaar = function (bazaar_id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8be5\u6761\u96c6\u5e02\u4fe1\u606f\uff1f';
      $scope.confirm.type = 'DEL_BAZAAR';
      $scope.confirm.param = bazaar_id;
      $('#confirmModal').modal();
    };
    //文章被取消发布日志页面
    $scope.goToUnpubLog = function (type, bazaar_id) {
      $state.go('activity.unpublishLog_bazaar', {
        'type': type,
        'id': bazaar_id
      });
    };
  }
]);
angular.module('iwx').controller('BazaarDetailCtrl', [
  '$scope',
  '$rootScope',
  '$state',
  '$stateParams',
  '$http',
  'eventType',
  'userService',
  '$modal',
  function ($scope, $rootScope, $state, $stateParams, $http, eventType, userService, $modal) {
    $scope.bazaar_id = $stateParams.id;
    $scope.page = $stateParams.page;
    //集市信息对象
    $scope.bazaar = {};
    //原图片字符串
    $scope.bazaar.old_images = '';
    //原图片数组
    $scope.oldImages = [];
    //新建集市消息
    if ($scope.bazaar_id === '-1') {
      $http.get('/api/admin/bazaar/type').success(function (data) {
        $scope.bazaar_type_map = {};
        angular.forEach(data, function (value) {
          $scope.bazaar_type_map[value.alias] = value;
        });
        //根据url判断是什么类型的集市消息
        if ($state.current.name === 'sale_bazaar') {
          $scope.bazaar.type = $scope.bazaar_type_map['GIVE']['id'];
        } else if ($state.current.name === 'purchase_bazaar') {
          $scope.bazaar.type = $scope.bazaar_type_map['BUY']['id'];
        } else if ($state.current.name === 'lost_bazaar') {
          $scope.bazaar.type = $scope.bazaar_type_map['LOSE']['id'];
        } else {
          $scope.bazaar.type = $scope.bazaar_type_map['PICKUP']['id'];
        }
      });
    } else {
      //编辑修改已有的集市信息
      $http.get('/api/admin/bazaar/' + $scope.bazaar_id).success(function (data) {
        $scope.bazaar = data;
        $scope.bazaar.type = $scope.bazaar.bazaar_type.id;
        $scope.bazaar.old_images = $scope.getOldImages($scope.bazaar.images);
        console.log($scope.bazaar);
      });
    }
    //获取登录用户和社团信息
    userService.load(true).then(function (user) {
      $scope.user = user;
    });
    $scope.getOldImages = function (image_arr) {
      var images_str = '';
      angular.forEach(image_arr, function (value, i) {
        var temp = value.substring(8, value.length);
        if (i !== image_arr.length - 1) {
          images_str += temp + ';';
        } else {
          images_str += temp;
        }
      });
      return images_str;
    };
    //删除要上传的图片文件
    $scope.removeImageFile = function (flag, images, index) {
      //创建一个临时的新上传图片数组
      var newImages = [];
      angular.forEach(images, function (value, i) {
        if (i !== index) {
          newImages.push(value);
        }
      });
      if (flag === 'create') {
        $scope.bazaar.images = newImages;
      } else if (flag === 'update') {
        $scope.bazaar.newImages = newImages;
      } else {
        $scope.bazaar.old_images = $scope.getOldImages(newImages);
        console.log($scope.bazaar.old_images);
        $scope.bazaar.images = newImages;
      }
    };
    //验证集市信息
    var validate = function () {
      var price_exp = /^\+?[1-9][0-9]*$/;
      if (!$scope.bazaar.topic || $scope.bazaar.topic.length < 5 || $scope.bazaar.topic.length > 20) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u8f93\u51655~20\u4e2a\u5b57\u7b26\u4f5c\u4e3a\u6807\u9898'
        });
        return false;
      }
      if ($scope.bazaar.type === 6 || $scope.bazaar.type === 7) {
        if (!$scope.bazaar.price || !price_exp.test($scope.bazaar.price)) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u4ef7\u683c'
          });
          return false;
        }
      }
      if (!$scope.bazaar.content) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u8be6\u60c5\u5185\u5bb9'
        });
        return false;
      }
      return true;
    };
    //保存集市信息
    $scope.save_bazaar = function (isPublish) {
      $scope.bazaar.publish = isPublish;
      if (!validate()) {
        return;
      }
      //创建表单数据对象
      var fd = new FormData();
      if ($scope.bazaar_id === '-1') {
        if (!$scope.bazaar.images) {
          $scope.bazaar.images = [];
        }
        if ($scope.bazaar && $scope.bazaar.images && $scope.bazaar.images.length > 6) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u6700\u591a\u4e0a\u4f206\u5f20\u56fe\u7247'
          });
          return;
        }
        console.log($scope.bazaar);
        angular.forEach($scope.bazaar, function (value, key) {
          if (key !== 'images') {
            fd.append(key, value);
          }
        });
        angular.forEach($scope.bazaar.images, function (value, key) {
          fd.append('images', value);
        });
        $http.post('/api/admin/bazaar/create', fd, {
          transformRequest: angular.identity,
          headers: { 'Content-Type': undefined }
        }).success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u606d\u559c\u4f60\uff0c\u521b\u5efa\u6210\u529f\uff01'
          });
          $state.go('activity.bazaar', {
            'id': $scope.user.managed_community.id,
            'currentPage': 1,
            'page': 1
          }, { reload: true });
        });  //修改表单数据对象
      } else {
        if (!$scope.bazaar.newImages) {
          $scope.bazaar.newImages = [];
        }
        if ($scope.bazaar.newImages && $scope.bazaar.newImages.length > 6) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u6700\u591a\u4e0a\u4f206\u5f20\u56fe\u7247'
          });
          return;
        }
        if ($scope.bazaar.images && $scope.bazaar.images.length > 0 && $scope.bazaar.images.length + $scope.bazaar.newImages.length > 6) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u6700\u591a\u4e0a\u4f206\u5f20\u56fe\u7247'
          });
          return;
        }
        var fd_up = new FormData();
        console.log($scope.bazaar);
        fd_up.append('type', $scope.bazaar.bazaar_type.id);
        fd_up.append('topic', $scope.bazaar.topic);
        fd_up.append('content', $scope.bazaar.content);
        fd_up.append('price', $scope.bazaar.price);
        fd_up.append('publish', isPublish);
        fd_up.append('old_images', $scope.bazaar.old_images);
        angular.forEach($scope.bazaar.newImages, function (value) {
          fd_up.append('images', value);
        });
        $http.put('/api/admin/bazaar/' + $scope.bazaar_id + '/update', fd_up, {
          transformRequest: angular.identity,
          headers: { 'Content-Type': undefined }
        }).success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u606d\u559c\u4f60\uff0c\u4fee\u6539\u6210\u529f\uff01'
          });
          $state.go('activity.bazaar', {
            'id': $scope.user.managed_community.id,
            'currentPage': 1,
            'page': $scope.page
          }, { reload: true });
        });
      }
    };
    //查看大图
    $scope.viewImage = function (image_path) {
      $modal.open({
        template: '<div><img style="width:100%" src=' + image_path + '></div>',
        size: 'lg'
      });
    };
  }
]);
angular.module('iwx').controller('ActivityIwxCtrl', [
  '$scope',
  '$http',
  '$state',
  'ngTableParams',
  '$modal',
  'eventType',
  '$rootScope',
  function ($scope, $http, $state, ngTableParams, $modal, eventType, $rootScope) {
    $rootScope.welcome_bg = false;
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //当前页码
    $scope.current_page = 1;
    //查询到的社团
    $scope.communities = [];
    $scope.community_set = {};
    $scope.plugins_config = {
      announcement: {
        'id': 'announcement',
        'name': '\u516c\u544a\u677f',
        'icon_path': '/static/images/announcement_new.png',
        'note': '\u6d3b\u52a8\u5730\u70b9\uff0c\u65f6\u95f4\uff0c\u4e34\u65f6\u7a81\u53d1\u72b6\u51b5\u53ef\u4ee5\u901a\u8fc7\u516c\u544a\u677f\u7b2c\u4e00\u65f6\u95f4\u63a8\u9001\u7ed9\u6240\u6709\u5173\u6ce8\u672c\u6d3b\u52a8\u7684\u5c0f\u4f19\u4f34\u4eec\u3002'
      },
      timeline: {
        'id': 'timeline',
        'name': '\u6d3b\u52a8\u52a8\u6001',
        'icon_path': '/static/images/timeline_new.png',
        'note': '\u901a\u8fc7\u56fe\u7247\u548c\u6587\u5b57\u5f62\u5f0f\u8fd8\u539f\u73b0\u573a\u5b9e\u65f6\u52a8\u6001\uff0c\u6bcf\u4e00\u6761\u52a8\u6001\u53ef\u901a\u8fc7\u5927\u5c4f\u5e55\u5b9e\u65f6\u5c55\u793a\u3002'
      },
      ticket: {
        'id': 'ticket',
        'name': '\u7535\u5b50\u7968',
        'icon_path': '/static/images/ticket_new.png',
        'note': '\u73af\u4fdd\uff0c\u65f6\u5c1a\u7684\u7535\u5b50\u7968\u636e\uff0c\u4f5c\u4e3a\u6d3b\u52a8\u552f\u4e00\u7684\u5165\u573a\u51ed\u8bc1\uff0c\u7535\u5b50\u7968\u9762\u5185\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5e7f\u544a\u4f4d\uff08\u5305\u542b\u7968\u9762\u80cc\u666f\u548c\u8d5e\u52a9\u5546logo\uff09\uff0c\u901a\u8fc7\u540e\u53f0\u53ef\u4ee5\u5b9e\u65f6\u67e5\u770b\u62a2\u7968\u4eba\u6570\uff0c\u5b9e\u9645\u5230\u573a\u9a8c\u7968\u4eba\u6570\uff0c\u5ba2\u89c2\u53cd\u6620\u73b0\u573a\u7684\u70ed\u70c8\u7a0b\u5ea6\uff0c\u6bcf\u4e00\u5f20\u7535\u5b50\u7968\u90fd\u6709\u552f\u4e00\u7684\u7535\u5b50\u7968\u7f16\u53f7\uff0c\u53ef\u88ab\u7528\u4e8e\u540e\u7eed\u7684\u5176\u4ed6\u73af\u8282\u7ee7\u7eed\u4f7f\u7528\u3002'
      },
      vote: {
        'id': 'vote',
        'name': '\u6295\u7968',
        'icon_path': '/static/images/vote_new.png',
        'note': '\u652f\u6301\u81ea\u5b9a\u4e49\u5019\u9009\u9879\uff0c\u53ef\u4ee5\u662f\u5019\u9009\u4eba\uff0c\u4e5f\u53ef\u4ee5\u662f\u5019\u9009\u9898\u76ee\uff0c\u901a\u8fc7\u7075\u6d3b\u8bbe\u7f6e\u6295\u7968\u89c4\u5219\uff0c\u53ef\u4ee5\u6536\u96c6\u5230\u8f83\u4e3a\u7cbe\u786e\u7684\u6295\u7968\u7edf\u8ba1\u6570\u636e\u3002'
      },
      sign_in: {
        'id': 'sign_in',
        'name': '\u7b7e\u5230',
        'icon_path': '/static/images/sign_in_new.png',
        'note': '\u8f7b\u91cf\u5316\u7684\u5165\u573a\u51ed\u8bc1\uff0c\u53ef\u4f5c\u4e3a\u6d3b\u52a8\u552f\u4e00\u7684\u5165\u573a\u65b9\u5f0f\uff0c\u7ae5\u978b\u4eec\u901a\u8fc7\u626b\u63cf\u5165\u573a\u5904\u7684\u4e8c\u7ef4\u7801\u7b7e\u5230\u5165\u573a\uff0c\u6bcf\u4e00\u5f20\u7b7e\u5230\u51ed\u8bc1\u90fd\u6709\u552f\u4e00\u7684\u7b7e\u5230\u53f7\u7801\uff0c\u53ef\u88ab\u7528\u4e8e\u540e\u7eed\u7684\u5176\u4ed6\u73af\u8282\u7ee7\u7eed\u4f7f\u7528\u3002'
      },
      lottery: {
        'id': 'lottery',
        'name': '\u62bd\u5956',
        'icon_path': '/static/images/lottery_new.png',
        'note': '\u6d3b\u8dc3\u73b0\u573a\u5229\u5668\uff0c\u793e\u56e2\u53ef\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u5b89\u6392\u51fa\u5bf9\u5e94\u7684\u5355\u9879\u5956\uff0c\u914d\u5408\u5927\u5c4f\u5e55\u7684\u4f7f\u7528\u53ef\u4ee5\u8ba9\u6d3b\u52a8\u73b0\u573a\u60ac\u5ff5\u611f\u5341\u8db3\uff0c\u52a0\u5f3a\u793e\u56e2\u4e0e\u53c2\u4f1a\u5c0f\u4f19\u4f34\u4eec\u7684\u4e92\u52a8\u3002'
      },
      questionnaire: {
        'id': 'questionnaire',
        'name': '\u95ee\u5377',
        'icon_path': '/static/images/questionnaire.png',
        'note': '\u4fbf\u4e8e\u6536\u96c6\u610f\u89c1\uff0c\u76ee\u524d\u652f\u6301\u56db\u79cd\u95ee\u9898\uff0c\u5355\u9009\u3001\u591a\u9009\u3001\u7b80\u7b54\u4ee5\u53ca\u4e0a\u4f20\u56fe\u7247\uff0c\u6bcf\u4e00\u6b21\u95ee\u5377\u652f\u6301\u6dfb\u52a0\u65e0\u9650\u91cf\u7684\u793c\u5238\uff0c\u793c\u5238\u53ef\u4ee5\u4ece\u7535\u5b50\u51ed\u8bc1\u7ba1\u7406\u4e2d\u8c03\u53d6\uff0c\u56de\u7b54\u5b8c\u6210\u540e\u81ea\u52a8\u83b7\u5f97\u4e00\u79cd\u793c\u5238\u7684\u4e00\u5f20\uff0c\u5148\u5230\u5148\u5f97\uff01\u5177\u4f53\u4f7f\u7528\u7ec6\u8282\u8bf7\u53c2\u9605\u95ee\u5377\u6982\u51b5\u4e2d\u7684\u95ee\u5377\u529f\u80fd\u89e3\u91ca\u3002'
      }
    };
    //条件搜索参数对象
    $scope.search_params = {};
    //获取管理的地域和学校
    $scope.load_geography = function () {
      $http.get('/api/iwx/geography').success(function (data) {
        $scope.geography = data;
        $scope.provinceArray = [];
        angular.forEach($scope.geography, function (value, key) {
          $scope.provinceArray.push(value.obj);
        });
        $scope.search_params.province_scope_id = $scope.provinceArray[0].id;
        $scope.cityArray = [];
        if ($scope.geography) {
          $scope.geography_city = $scope.geography[$scope.search_params.province_scope_id];
          angular.forEach($scope.geography_city, function (value, key) {
            if (value instanceof Array) {
              $scope.cityArray.push(value[0].geography);
            }
          });
        }
        $scope.search_params.city_scope_id = $scope.cityArray[0].id;
        $scope.universityArray = [];
        if ($scope.geography_city) {
          $scope.geography_university = $scope.geography_city[$scope.search_params.city_scope_id];
          angular.forEach($scope.geography_university, function (value, key) {
            $scope.universityArray.push(value.university);
          });
        }
        $scope.search_params.university_scope_id = $scope.universityArray[0].id;
        $scope.activity_list_param = $scope.search_params.university_scope_id + '/u';
        $scope.load_community_activities();
      });
    };
    $scope.load_geography();
    //监控省下拉列表框的value值的改变
    $scope.change_province = function () {
      $scope.cityArray = [];
      if ($scope.geography) {
        $scope.geography_city = $scope.geography[$scope.search_params.province_scope_id];
        angular.forEach($scope.geography_city, function (value, key) {
          if (value instanceof Array) {
            $scope.cityArray.push(value[0].geography);
          }
        });
      }
    };
    //监控市下拉列表框的value值的改变
    $scope.change_city = function () {
      $scope.universityArray = [];
      if ($scope.geography_city) {
        $scope.geography_university = $scope.geography_city[$scope.search_params.city_scope_id];
        angular.forEach($scope.geography_university, function (value, key) {
          $scope.universityArray.push(value.university);
        });
      }
    };
    //监控学校下拉框的value值的改变
    $scope.change_university = function () {
      $scope.show_community = false;
      $scope.activity_list_param = $scope.search_params.university_scope_id + '/u';
      $scope.tableParams.page(1);
      $scope.tableParams.reload();
      $scope.communities = [];
      $scope.community_set = {};
      $scope.current_page = 1;
      load_communities($scope.current_page);
    };
    //加载社团列表
    var load_communities = function (page) {
      $http.get('/api/iwx/' + $scope.search_params.university_scope_id + '/community?page=' + page + '&per_page=12').success(function (data) {
        if (data.items.length === 0) {
          if (page === 1) {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684\u793e\u56e2'
            });
          } else {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u5df2\u52a0\u8f7d\u5168\u90e8\u7b26\u5408\u6761\u4ef6\u7684\u793e\u56e2'
            });
          }
          return;
        }
        $scope.show_community = true;
        var add = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in $scope.community_set)) {
            $scope.community_set[value.community.id] = true;
            $scope.communities.push(value.community);
            add++;
          }
        });
        if (add === 0) {
          load_communities(++$scope.current_page);
        }
      });
    };
    $scope.load_more = function () {
      load_communities(++$scope.current_page);
    };
    //选择社团条件
    $scope.get_checked_community = function (id) {
      $scope.activity_list_param = id + '/c';
      console.log($scope.tableParams);
      $scope.tableParams.page(1);
      $scope.tableParams.reload();
    };
    //获取活动列表
    $scope.load_community_activities = function () {
      // Avoid lint complain
      var NgTableParams = ngTableParams;
      var activities = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/iwx/' + $scope.activity_list_param + '/activity' + '?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            var items = data.items;
            if (items) {
              var len_items = items.length;
              for (var i = 0; i < len_items; i++) {
                var temp_item_plugin = items[i].activity.plugins;
                var len_plugins = temp_item_plugin.length;
                for (var j = 0; j < len_plugins; j++) {
                  var temp_plugin = temp_item_plugin[j];
                  temp_plugin['icon_path'] = $scope.plugins_config[temp_plugin.id].icon_path;
                }
              }
            }
            activities = items;
            params.total(data.total);
            $defer.resolve(activities);
          });
        }
      });
    };
    //调用删除活动接口
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'deleteActivity') {
        $http.delete('/api/admin/activities/' + $scope.confirm.param).success(function () {
          // activities = null;
          $scope.tableParams.reload();
        });
      }
    };
    //删除活动
    $scope.deleteActivity = function (activity_id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e2a\u6d3b\u52a8\u5417?';
      $scope.confirm.type = 'deleteActivity';
      $scope.confirm.param = activity_id;
      $('#confirmModal').modal();
      return;
    };
    //置顶接口调用
    var _to_top = function (activity_id) {
      $http.post('/api/iwx/' + activity_id + '/top').success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u7f6e\u9876\u6210\u529f'
        });
        $scope.tableParams.reload();
      });
    };
    //取消置顶接口调用
    $scope._to_down = function (activityId) {
      $http.post('/api/iwx/' + activityId + '/untop').success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u53d6\u6d88\u7f6e\u9876\u6210\u529f'
        });
        $scope.tableParams.reload();
      });
    };
    //置顶
    $scope.setTop = function (activityId, published) {
      if (!published) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6d3b\u52a8\u5c1a\u672a\u53d1\u5e03\uff0c\u4e0d\u80fd\u8fdb\u884c\u7f6e\u9876\u64cd\u4f5c'
        });
        return;
      }
      var modalInstance = $modal.open({
          templateUrl: 'partial/activity/top_modal_iwx.html',
          size: 'md',
          controller: [
            '$scope',
            '$modalInstance',
            function ($scope, $modalInstance) {
              $scope.ok = function () {
                $modalInstance.close();
              };
              $scope.cancel = function () {
                $modalInstance.dismiss('cancel');
              };
            }
          ]
        });
      modalInstance.result.then(function (selectedItem) {
        _to_top(activityId);
      });
    };
    //取消置顶
    $scope.cancelTop = function (activityId, published) {
      if (!published) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6d3b\u52a8\u5c1a\u672a\u53d1\u5e03\uff0c\u4e0d\u80fd\u8fdb\u884c\u53d6\u6d88\u7f6e\u9876\u64cd\u4f5c'
        });
        return;
      }
      var modalInstance = $modal.open({
          templateUrl: 'partial/activity/down_modal_iwx.html',
          size: 'md',
          controller: [
            '$scope',
            '$modalInstance',
            function ($scope, $modalInstance) {
              $scope.ok = function () {
                $modalInstance.close();
              };
              $scope.cancel = function () {
                $modalInstance.dismiss('cancel');
              };
            }
          ]
        });
      modalInstance.result.then(function () {
        $scope._to_down(activityId);
      });
    };
    var reloadActivity = function () {
      $scope.tableParams.reload();
    };
    //下架操作
    $scope.unpublish_activity = function (activity_id) {
      $modal.open({
        templateUrl: 'partial/common/unpublished_reason.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.reason_title = '\u4e0b\u67b6\u7406\u7531';
            $scope.$watch('content', function (value) {
              if (value) {
                $scope.ok_btn = false;
              } else {
                $scope.ok_btn = true;
              }
            });
            $scope.ok = function () {
              console.log($scope.content);
              $http.post('/api/iwx/' + activity_id + '/unpublish', { content: $scope.content }).success(function (data) {
                $modalInstance.close('ok');
                reloadActivity();
              });
            };
            $scope.cancel = function () {
              console.log($modalInstance);
              $modalInstance.close('ok');
            };
          }
        ]
      });
    };
    //进入插件页面
    $scope.gotoPlugin = function (activityId, pluginId) {
      if (pluginId === '') {
        $state.go('activity_item', { 'id': activityId });
      } else {
        $state.go('activity_item.' + pluginId + '_plugin', { 'id': activityId });
      }
    };
  }
]);
angular.module('iwx').controller('activityIwxCreateCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$filter',
  'eventType',
  function ($scope, $rootScope, $http, $filter, eventType) {
    // $scope.content_regexp = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,20}$|^[\w\s_\x21-\x7e]{0,40}$/;
    $scope.loc_and_sub_regexp = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,15}$|^[\w\s_\x21-\x7e]{0,30}$/;
    $scope.activity = { 'editingActivityId': -1 };
    $scope.saveActivity = function () {
      try {
        if (typeof $scope.activity.start_time === 'number') {
          $scope.activity.start_time = $filter('date')($scope.activity.start_time, 'yyyy-MM-dd HH:mm');
        }
        if (typeof $scope.activity.end_time === 'number') {
          $scope.activity.end_time = $filter('date')($scope.activity.end_time, 'yyyy-MM-dd HH:mm');
        }
        var stTime = new Date($scope.activity.start_time.replace(/-/g, '/'));
        var endTime = new Date($scope.activity.end_time.replace(/-/g, '/'));
        if (Date.parse(stTime) > Date.parse(endTime)) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u7ed3\u675f\u65f6\u95f4\u5fc5\u987b\u5728\u5f00\u59cb\u65f6\u95f4\u4e4b\u540e'
          });
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u9009\u62e9\u6d3b\u52a8\u65f6\u95f4'
        });
        return;
      }
      if (!$scope.activity.location || !$scope.activity.content || !$scope.activity.subject) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u5b8c\u6574\uff0c\u5176\u4e2d\u6d3b\u52a8\u4e3b\u9898\u3001\u6d3b\u52a8\u5730\u70b9\u548c\u6d3b\u52a8\u5185\u5bb9\u4e3a\u5fc5\u586b\u9879\uff01'
        });
        return;
      }
      //限制字数提示
      if (!$scope.loc_and_sub_regexp.test($scope.activity.subject) || !$scope.loc_and_sub_regexp.test($scope.activity.location) || $scope.activity.members && !$scope.content_regexp.test($scope.activity.content)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6ce8\u610f\u586b\u5199\u5185\u5bb9\u5b57\u6570\u9650\u5236\uff01'
        });
        return;
      }
      $http.post('/api/admin/activities').success(function (id) {
        console.log(id);
        $scope.editingActivityId = id;
        var fd = new FormData();
        angular.forEach($scope.activity, function (value, key) {
          fd.append(key, value);
        });
        $http.post('/api/admin/activities/' + $scope.editingActivityId, fd, {
          transformRequest: angular.identity,
          headers: { 'Content-Type': undefined }
        }).success(function (data) {
          $scope.activity = data;
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u4fdd\u5b58\u6210\u529f'
          });
        });
      });
    };
  }
]);
angular.module('iwx').controller('CommunityIwxCtrl', [
  '$scope',
  '$http',
  '$modal',
  '$state',
  'ngTableParams',
  '$rootScope',
  'eventType',
  function ($scope, $http, $modal, $state, ngTableParams, $rootScope, eventType) {
    $rootScope.welcome_bg = false;
    //显示到处表格
    $rootScope.excel = true;
    //使用查询按钮
    $rootScope.search = false;
    //确认框参数
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //定义省、市、学校数组
    $scope.provinceArray = [];
    //条件搜索参数对象
    $scope.search_params = {};
    $scope.org_type_hash = {
      'ORG': '\u6821\u7ea7\u5b66\u751f\u7ec4\u7ec7',
      'ST_UNION': '\u5b66\u751f\u793e\u56e2',
      'TISSUE': '\u9662\u7cfb\u5b66\u751f\u4f1a',
      'COMMITTEE': '\u9662\u7cfb\u56e2\u59d4',
      'POLITICAL': '\u515a\u652f\u90e8'
    };
    //获取管理的地域和学校信息
    $scope.load_geography = function () {
      $http.get('/api/iwx/geography').success(function (data) {
        $scope.geography = data;
        angular.forEach($scope.geography, function (value, key) {
          $scope.provinceArray.push(value.obj);
        });
        $scope.search_params.province_scope_id = $scope.provinceArray[0].id;
        $scope.cityArray = [];
        if ($scope.geography) {
          $scope.geography_city = $scope.geography[$scope.search_params.province_scope_id];
          angular.forEach($scope.geography_city, function (value, key) {
            if (value instanceof Array) {
              $scope.cityArray.push(value[0].geography);
            }
          });
        }
        $scope.search_params.city_scope_id = $scope.cityArray[0].id;
        $scope.universityArray = [];
        if ($scope.geography_city) {
          $scope.geography_university = $scope.geography_city[$scope.search_params.city_scope_id];
          angular.forEach($scope.geography_university, function (value, key) {
            $scope.universityArray.push(value.university);
          });
        }
        $scope.search_params.university_scope_id = $scope.universityArray[0].id;
        console.log($scope.search_params.university_scope_id);
        if ($state.current.name === 'community_iWX' || $state.current.name === 'community_iWX.create_manager') {
          $scope.load_community_table();
        }
      });
    };
    $scope.load_geography();
    //监控省下拉列表框的value值的改变
    $scope.change_province = function () {
      $scope.cityArray = [];
      if ($scope.geography) {
        $scope.geography_city = $scope.geography[$scope.search_params.province_scope_id];
        angular.forEach($scope.geography_city, function (value, key) {
          if (value instanceof Array) {
            $scope.cityArray.push(value[0].geography);
          }
        });
      }
    };
    //监控市下拉列表框的value值的改变
    $scope.change_city = function () {
      $scope.universityArray = [];
      if ($scope.geography_city) {
        $scope.geography_university = $scope.geography_city[$scope.search_params.city_scope_id];
        angular.forEach($scope.geography_university, function (value, key) {
          $scope.universityArray.push(value.university);
        });
      }
    };
    //查询社团信息方法
    $scope.change_university = function () {
      console.log('this is search community infomation for iweixiao manager');
      if ($state.current.name === 'community_iWX.manager_list') {
        $scope.$broadcast('reload_manager_list', $scope.search_params.university_scope_id);
      } else if ($state.current.name === 'community_iWX') {
        console.log($scope.search_params.university_scope_id);
        $scope.$broadcast('reload_community_university', $scope.search_params.university_scope_id);
      } else if ($state.current.name === 'community_iWX.pending') {
        $scope.$broadcast('reload_community_pending', $scope.search_params.university_scope_id);
      } else if ($state.current.name === 'community_iWX.shift') {
        $scope.$broadcast('reload_community_shift', $scope.search_params.university_scope_id);
      } else if ($state.current.name === 'community_iWX.create_manager') {
        console.log($scope.search_params.university_scope_id);
        $scope.$broadcast('reload_community_university', $scope.search_params.university_scope_id);
      }
    };
    //社团信息表格
    $scope.load_community_table = function () {
      $rootScope.university_id_param = $scope.search_params.university_scope_id;
      console.log($rootScope.university_id_param);
      var NgTableParams = ngTableParams;
      var communitys = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/iwx/' + $rootScope.university_id_param + '/community' + '?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            communitys = data.items;
            params.total(data.total);
            $defer.resolve(communitys);
          });
        }
      });
    };
    // $scope.load_community_table();
    //确认操作方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delete_community') {
      } else if ($scope.confirm.type === 'disable_community') {
        $http.post('/api/iwx/manager/' + $scope.confirm.param + '/use').success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u7981\u7528\u793e\u56e2\u6210\u529f\u3002'
          });
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'enable_community') {
        $http.post('/api/iwx/manager/' + $scope.confirm.param + '/use').success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u542f\u7528\u793e\u56e2\u6210\u529f\u3002'
          });
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'verify_approved') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'LONG_INFO',
          'message': '\u5904\u7406\u4e2d...'
        });
        console.log('<\u8981\u6279\u51c6\u7684\u793e\u56e2\u7ba1\u7406\u5458\u90ae\u7bb1\uff1a>' + $scope.confirm.param);
        $http.get('/api/iwx/confirm/' + $scope.confirm.param).success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, null);
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'verify_reject') {
        console.log('verify_reject');
      }
    };
    //给通过审核的社团发私信
    $scope.privateLetter = function (communityId) {
      $modal.open({
        templateUrl: 'partial/community/community_iWX/community_iWX_letter.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.ok = function () {
              var letter = {};
              letter['community_id'] = communityId;
              letter['content'] = $scope.content;
              console.log(letter);
              $http.post('/api/iwx/single/message/create', letter).success(function (data) {
                $modalInstance.close('ok');
                $rootScope.$emit(eventType.NOTIFICATION, {
                  'type': 'POPMSG',
                  'title': '\u6d88\u606f',
                  'message': '\u5df2\u7ecf\u6210\u529f\u5411\u793e\u56e2\u7ba1\u7406\u5458\u53d1\u9001\u79c1\u4fe1\u3002'
                });
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //禁用社团
    $scope.disable_community = function (admin_user_id) {
      $scope.confirm.message = '\u5982\u679c\u7981\u7528\u793e\u56e2\uff0c\u8be5\u793e\u56e2\u7ba1\u7406\u5458\u5c06\u65e0\u6cd5\u767b\u5f55\uff0c\u662f\u5426\u7ee7\u7eed?';
      $scope.confirm.type = 'disable_community';
      $scope.confirm.param = admin_user_id;
      $('#confirmModal').modal();
    };
    //启用社团
    $scope.enable_community = function (admin_user_id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u542f\u7528\u8fd9\u4e2a\u793e\u56e2\u5417\uff1f';
      $scope.confirm.type = 'enable_community';
      $scope.confirm.param = admin_user_id;
      $('#confirmModal').modal();
    };
    //删除社团信息
    $scope.delete_community = function (communityId) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e2a\u793e\u56e2\u5417\uff1f';
      $scope.confirm.type = 'delete_community';
      $scope.confirm.param = communityId;
      $('#confirmModal').modal();
      return;
    };
    //批准社团通过审核
    $scope.approved = function (email) {
      $scope.confirm.message = '\u786e\u5b9a\u6279\u51c6\u8be5\u793e\u56e2\u5ba1\u6838\u901a\u8fc7\uff1f';
      $scope.confirm.type = 'verify_approved';
      $scope.confirm.param = email;
      $('#confirmModal').modal();
    };
    //拒绝社团通过审核
    $scope.reject = function (communityId) {
      $scope.confirm.message = '\u786e\u5b9a\u62d2\u7edd\u8be5\u793e\u56e2\u5ba1\u6838\u901a\u8fc7\uff1f';
      $scope.confirm.type = 'verify_reject';
      $scope.confirm.param = communityId;
      $('#confirmModal').modal();
    };
    //获取大图  /images/images/placeholder.png
    $scope.viewImage = function (image) {
      console.log(image);
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    $scope.$on('reload_community_university', function (event, param) {
      $rootScope.university_id_param = param;
      console.log($scope.tableParams);
      $scope.tableParams.reload();
    });
  }
]);
angular.module('iwx').controller('CreateManagerCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'eventType',
  function ($scope, $rootScope, $http, eventType) {
    $rootScope.excel = false;
    $rootScope.search = true;
    //定义省、市、学校数组
    $scope.provinceArray = [];
    $scope.cityArray = [];
    $scope.universityArray = [];
    //定义角色数组
    $scope.roleArray = [];
    //参数字段标识 role，例如?role = 2
    var role_id_hash = {
        'ADMIN': 2,
        'UN_ADMIN': 5,
        'visitor': 3
      };
    var role_name_hash = {
        'ADMIN': '\u793e\u56e2\u7ba1\u7406\u5458',
        'UN_ADMIN': '\u5b66\u6821\u7ba1\u7406\u5458',
        'visitor': '\u6e38\u5ba2'
      };
    //定义校级管理员类型数组
    $scope.un_Man_type = [];
    var type_name_hash = {
        'union': '\u793e\u56e2\u8054\u5408\u4f1a',
        'committee': '\u5171\u9752\u56e2\u59d4\u5458\u4f1a'
      };
    $scope.manager = {};
    $scope.param = {};
    //获取可创建的校级管理员的类型列表
    $scope.load_un_man_type = function () {
      $http.get('/api/iwx/manager/un_admin/type').success(function (data) {
        angular.forEach(data, function (value, key) {
          var obj = {
              id: '',
              name: ''
            };
          obj.id = value;
          obj.name = type_name_hash[value];
          $scope.un_Man_type.push(obj);
        });
        console.log($scope.un_Man_type);
      });
    };
    $scope.load_un_man_type();
    $scope.type = function () {
      console.log($scope.manager.un_admin_type);
    };
    //获取i微校管理可以创建的角色列表
    $scope.load_role = function () {
      $http.get('/api/iwx/manager/roles').success(function (data) {
        angular.forEach(data, function (value, key) {
          value['id'] = role_id_hash[value.name];
          value['role_name'] = role_name_hash[value.name];
          $scope.roleArray.push(value);
        });
      });
    };
    $scope.load_role();
    //获取管理的地域和学校信息
    $scope.load_geography = function () {
      $http.get('/api/iwx/geography').success(function (data) {
        $scope.geography = data;
        angular.forEach($scope.geography, function (value, key) {
          $scope.provinceArray.push(value.obj);
          $scope.param.province_scope_id = 1;
        });
      });
    };
    $scope.load_geography();
    //监控省下拉列表框的value值的改变
    $scope.change_province = function () {
      if ($scope.geography) {
        $scope.geography_city = $scope.geography[$scope.manager.province_scope_id];
        angular.forEach($scope.geography_city, function (value, key) {
          if (value instanceof Array) {
            $scope.cityArray.push(value[0].geography);
          }
        });
      }
    };
    //监控市下拉列表框的value值的改变
    $scope.change_city = function () {
      if ($scope.geography_city) {
        $scope.geography_university = $scope.geography_city[$scope.manager.city_scope_id];
        angular.forEach($scope.geography_university, function (value, key) {
          $scope.universityArray.push(value.university);
        });
      }
    };
    //监控学校下拉列表框的value值的改变
    $scope.change_university = function () {
      console.log($scope.manager.university_id);
    };
    //监控角色列表的value值的改变
    $scope.change_role = function () {
      if ($scope.manager.role === 2) {
        $scope.show_community = true;
      } else if ($scope.manager.role === 5) {
        $scope.show_community = false;
      }
      console.log($scope.manager.role);
    };
    $scope.$watch('manager.role + manager.email + manager.password + manager.nickname' + 'manager.university_id + manager.community_name + manager.un_admin_type', function () {
      if ($scope.manager.role === 2 && $scope.manager.email && $scope.manager.password && $scope.manager.community_name && $scope.manager.university_id && $scope.manager.nickname) {
        $scope.create_manager_btn = false;
      } else if ($scope.manager.role === 5 && $scope.manager.email && $scope.manager.password && $scope.manager.university_id && $scope.manager.un_admin_type) {
        $scope.create_manager_btn = false;
      } else {
        $scope.create_manager_btn = true;
      }
    });
    //创建管理员方法
    $scope.create_manager = function () {
      $scope.param['nickname'] = $scope.manager.nickname;
      $scope.param['email'] = $scope.manager.email;
      $scope.param['password'] = $scope.manager.password;
      $scope.param['university_id'] = $scope.manager.university_id;
      $scope.param['role'] = $scope.manager.role;
      $scope.param['un_admin_type'] = $scope.manager.un_admin_type;
      if ($scope.manager.community_name) {
        $scope.param['community_name'] = $scope.manager.community_name;
      }
      console.log('this is creat manager param:' + angular.toJson($scope.param));
      $http.post('/api/iwx/manager/create', $scope.param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u521b\u5efa\u6210\u529f'
        });
      });
    };
  }
]);
angular.module('iwx').controller('CommIwxManagerListCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  function ($scope, $rootScope, $http, ngTableParams) {
    $rootScope.excel = false;
    //角色对照表
    $scope.role_hash_table = {
      'UN_ADMIN': '\u5b66\u6821\u7ba1\u7406\u5458',
      'ADMIN': '\u793e\u56e2\u7ba1\u7406\u5458'
    };
    //加载管理员列表
    $scope.load_manager_list = function () {
      var NgTableParams = ngTableParams;
      var manager_list = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/iwx/' + $rootScope.university_id_param + '/admin' + '?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            manager_list = data.items;
            if (params.page() === 1 && data.un_admin) {
              var un_admin = data.un_admin;
              var len = un_admin.length;
              for (var i = 0; i < len; i++) {
                var temp = un_admin[i];
                manager_list.unshift(temp);
              }
            }
            params.total(data.total);
            $defer.resolve(manager_list);
            $scope.load_community_table();
          });
        }
      });
    };
    if ($scope.search_params.university_scope_id) {
      $rootScope.university_id_param = $scope.search_params.university_scope_id;
      $scope.load_manager_list();
    } else {
      $http.get('/api/iwx/geography').success(function (data) {
        $scope.geography = data;
        if ($scope.geography) {
          $scope.geography_city = $scope.geography['1'];
        }
        if ($scope.geography_city) {
          $scope.geography_university = $scope.geography_city['2'];
        }
        $rootScope.university_id_param = $scope.geography_university[0].university.id;
        $scope.load_manager_list();
      });
    }
    $scope.$on('reload_manager_list', function (event, param) {
      $rootScope.university_id_param = param;
      console.log($rootScope.university_id_param);
      $scope.tableParams.reload();
    });
  }
]);
angular.module('iwx').controller('CommIwxPendingCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  function ($scope, $rootScope, $http, ngTableParams, eventType) {
    //加载未审核社团信息列表
    $scope.load_pending_community = function () {
      var NgTableParams = ngTableParams;
      var community_pending = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/iwx/pending_admins' + '?page=' + params.page() + '&per_page=' + params.count() + '&university_id=' + $rootScope.university_id_param).success(function (data) {
            community_pending = data.items;
            params.total(data.total);
            $defer.resolve(community_pending);
            $scope.load_community_table();
          });
        }
      });
    };
    if ($scope.search_params.university_scope_id) {
      $rootScope.university_id_param = $scope.search_params.university_scope_id;
      $scope.load_pending_community();
    } else {
      $http.get('/api/iwx/geography').success(function (data) {
        $scope.geography = data;
        if ($scope.geography) {
          $scope.geography_city = $scope.geography['1'];
        }
        if ($scope.geography_city) {
          $scope.geography_university = $scope.geography_city['2'];
        }
        $rootScope.university_id_param = $scope.geography_university[0].university.id;
        $scope.load_pending_community();
      });
    }
    //确认操作方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'verify_approved') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'LONG_INFO',
          'message': '\u5904\u7406\u4e2d...'
        });
        console.log('\u8981\u6279\u51c6\u7684\u793e\u56e2\u7ba1\u7406\u5458\u90ae\u7bb1\uff1a' + $scope.confirm.param);
        $http.get('/api/iwx/confirm/' + $scope.confirm.param).success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, null);
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'verify_reject') {
        console.log('verify_reject');
      }
    };
    //批准社团通过审核
    $scope.approved = function (email) {
      $scope.confirm.message = '\u786e\u5b9a\u6279\u51c6\u8be5\u793e\u56e2\u5ba1\u6838\u901a\u8fc7\uff1f';
      $scope.confirm.type = 'verify_approved';
      $scope.confirm.param = email;
      $('#confirmModal').modal();
    };
    //拒绝社团通过审核
    $scope.reject = function (communityId) {
      $scope.confirm.message = '\u786e\u5b9a\u62d2\u7edd\u8be5\u793e\u56e2\u5ba1\u6838\u901a\u8fc7\uff1f';
      $scope.confirm.type = 'verify_reject';
      $scope.confirm.param = communityId;
      $('#confirmModal').modal();
    };
    $scope.$on('reload_community_pending', function (event, param) {
      $rootScope.university_id_param = param;
      $scope.tableParams.reload();
    });
  }
]);
angular.module('iwx').controller('CommIwxShiftCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  function ($scope, $rootScope, $http, ngTableParams, eventType) {
    //加载换届社团信息列表
    $scope.load_election_community = function () {
      var NgTableParams = ngTableParams;
      var community_shift = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/iwx/' + $rootScope.university_id_param + '/election' + '?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            community_shift = data.items;
            params.total(data.total);
            $defer.resolve(community_shift);
            $scope.load_community_table();
          });
        }
      });
    };
    if ($scope.search_params.university_scope_id) {
      $rootScope.university_id_param = $scope.search_params.university_scope_id;
      $scope.load_election_community();
    } else {
      $http.get('/api/iwx/geography').success(function (data) {
        $scope.geography = data;
        if ($scope.geography) {
          $scope.geography_city = $scope.geography['1'];
        }
        if ($scope.geography_city) {
          $scope.geography_university = $scope.geography_city['2'];
        }
        $rootScope.university_id_param = $scope.geography_university[0].university.id;
        $scope.load_election_community();
      });
    }
    //确认操作方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'shift_approved') {
        //批准社团换届
        console.log($scope.confirm.param);
        $http.get('/api/iwx/confirm/' + $scope.confirm.param + '/election').success(function (data) {
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'shift_reject') {
        console.log($scope.confirm.param);
        //拒绝社团换届
        $http.post('/api/iwx/' + $scope.confirm.param + '/refuse').success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
    //批准社团换届
    $scope.approved_shift = function (election_id) {
      $scope.confirm.message = '\u786e\u5b9a\u6279\u51c6\u793e\u56e2\u6362\u5c4a\uff1f';
      $scope.confirm.type = 'shift_approved';
      $scope.confirm.param = election_id;
      $('#confirmModal').modal();
    };
    //拒绝社团换届
    $scope.reject_shift = function (election_id) {
      $scope.confirm.message = '\u786e\u5b9a\u62d2\u7edd\u793e\u56e2\u6362\u5c4a\uff1f';
      $scope.confirm.type = 'shift_reject';
      $scope.confirm.param = election_id;
      $('#confirmModal').modal();
    };
    $scope.$on('reload_community_shift', function (event, param) {
      $rootScope.university_id_param = param;
      $scope.tableParams.reload();
    });
  }
]);
angular.module('iwx').controller('certificateCouponsIwxCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'ngTableParams',
  'eventType',
  '$modal',
  '$state',
  function ($scope, $http, $rootScope, ngTableParams, eventType, $modal, $state) {
    //确认框参数
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //条件搜索参数对象
    $scope.search_params = {};
    //获取全国省份信息方法
    $scope.load_province = function () {
      //获取全部省份列表
      $http.get('/api/su/geography/0').success(function (data) {
        $scope.provinceArray = data;
        console.log($scope.provinceArray);
      });
    };
    $scope.load_province();
    //获取省份相应城市方法
    $scope.load_city = function () {
      //获取省份相应的城市列表
      $http.get('/api/su/geography/' + $scope.search_params.province_scope_id).success(function (data) {
        $scope.cityArray = data;
      });
    };
    //获取市相应的学校方法
    $scope.load_university = function () {
      //获取城市相应的学校列表
      $http.get('/api/su/' + $scope.search_params.city_scope_id + '/university').success(function (data) {
        console.log(data);
        $scope.universityArray = data;
      });
    };
    //获取学校相应社团方法
    $scope.load_community = function () {
    };
    //监听省份select列表
    $scope.change_province = function () {
      if ($scope.search_params.province_scope_id) {
        $scope.load_city();
      }
    };
    //监听市select列表
    $scope.change_city = function () {
      if ($scope.search_params.city_scope_id) {
        $scope.load_university();
      }
    };
    //监听学校select列表
    $scope.change_university = function () {
      if ($scope.search_params.university_scope_id) {
        $scope.load_community();
      }
    };
    //电子凭证信息表格
    var NgTableParams = ngTableParams;
    var coupons = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        var url = '/api/admin/community/register/users';
        $http.get(url + '?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          coupons = data.items;
          params.total(data.total);
          $defer.resolve(coupons);
        });
      }
    });
    //操作确认提示
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delete_coupon') {
        var url = '';
        $http.delete(url + $scope.confirm.param).success(function () {
          $scope.tableParams.reload();
        });
      }
    };
    //删除电子凭证
    $scope.delete_coupon = function (coupon_id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e2a\u7535\u5b50\u51ed\u8bc1\u5417?';
      $scope.confirm.type = 'delete_coupon';
      $scope.confirm.param = coupon_id;
      $('#confirmModal').modal();
      return;
    };
    //查看电子礼券使用详情
    $scope.detail_coupon = function (coupon_id) {
      $state.go('certificate_coupons_iWX.coupons_detail', { 'id': '36' }, { reload: true });
    };
    //获取大图  /images/images/placeholder.png
    $scope.viewImage = function (image) {
      image = '/static/images/example.png';
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
  }
]);
angular.module('iwx').controller('certificateIwxCreateCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'ngTableParams',
  'eventType',
  '$filter',
  function ($scope, $http, $rootScope, ngTableParams, eventType, $filter) {
    $scope.coupon = {};
    //验证参数
    $scope.validation = function () {
      console.log($scope.coupon.end_time);
      console.log($filter('date')(new Date(), 'yyyy-MM-dd HH:mm'));
      if ($scope.coupon.title === undefined || $scope.coupon.title === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u540d\u79f0'
        });
        return false;
      }
      if ($scope.coupon.end_time === undefined || $scope.coupon.end_time === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u7ed3\u675f\u65f6\u95f4'
        });
        return false;
      }
      if ($scope.coupon.sponsor_name === undefined || $scope.coupon.sponsor_name === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u8d5e\u52a9\u5546\u540d\u79f0'
        });
        return false;
      }
      if ($scope.coupon.total === undefined || isNaN(parseInt($scope.coupon.total)) || parseInt($scope.coupon.total) <= 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u603b\u6570'
        });
        return false;
      }
      return true;
    };
    //获取表单参数
    var getFormData = function () {
      var fd = new FormData();
      fd.append('end_time', $scope.coupons.end_time);
      fd.append('title', $scope.coupons.title);
      fd.append('sponsor_name', $scope.coupons.sponsor_name);
      fd.append('sponsor_logo', $scope.coupons.sponsor_logo);
      fd.append('image', $scope.coupons.image);
      fd.append('total', $scope.coupons.total);
      return fd;
    };
    //创建电子凭证
    $scope.create = function () {
      if (!$scope.validation()) {
        return;
      }
      var url = '';
      $http.post(url, getFormData(), { headers: { 'Content-Type': undefined } }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6210\u529f\u521b\u5efa\u7535\u5b50\u51ed\u8bc1\u3002'
        });
      });
    };
  }
]);
angular.module('iwx').controller('CouponsDetailIwxCtrl', [
  '$scope',
  '$rootScope',
  '$stateParams',
  'eventType',
  'ngTableParams',
  '$http',
  function ($scope, $rootScope, $stateParams, eventType, ngTableParams, $http) {
    $scope.coupon_id = parseInt($stateParams.id);
    //确认框参数
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //电子凭证使用状态
    $scope.coupon_status = {
      'NEW': {
        'text': '\u672a\u4f7f\u7528',
        'label': 'label label-info'
      },
      'USED': {
        'text': '\u5df2\u4f7f\u7528',
        'label': 'label label-success'
      },
      'EXPIRED': {
        'text': '\u5df2\u8fc7\u671f',
        'label': 'label label-warning'
      },
      'RETRIEVE': {
        'text': '\u5df2\u4f5c\u5e9f',
        'label': 'label label-danger'
      }
    };
    //电子凭证使用详情
    var NgTableParams = ngTableParams;
    var coupon_details = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        var url = '/api/goods/' + $scope.coupon_id + '/users';
        $http.get(url + '?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          console.log(data);
          coupon_details = data.items;
          params.total(data.total);
          $defer.resolve(coupon_details);
        });
      }
    });
    //操作确认提示
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'takeback_coupon') {
        var url = '';
        $scope.tableParams.reload();  /*$http
					.post(url + $scope.confirm.param)
					.success(function (data) {
						$scope.tableParams.reload();
					});*/
      }
    };
    //收回电子礼券
    $scope.takeback_coupon = function (id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u6536\u56de\u8fd9\u4e2a\u7535\u5b50\u51ed\u8bc1\u5417?';
      $scope.confirm.type = 'takeback_coupon';
      $scope.confirm.param = id;
      $('#confirmModal').modal();
      return;
    };
  }
]);
angular.module('iwx').controller('MessageIwxCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$modal',
  'ngTableParams',
  '$state',
  'eventType',
  function ($scope, $rootScope, $http, $modal, ngTableParams, $state, eventType) {
    $rootScope.welcome_bg = false;
    //确认框参数
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //社团id数组
    $scope.community_id_array = [];
    //选中社团的hash对照表
    $scope.community_id_hash = {};
    var hashtable = {};
    //定义变量，用来记录当前页码信息
    var current_page = 1;
    //定义页码和全选状态对照表
    var page_check_all_hash = {};
    //条件搜索参数对象
    $scope.search_params = {};
    //获取管理的地域和学校
    $scope.load_geography = function () {
      $http.get('/api/iwx/geography').success(function (data) {
        $scope.geography = data;
        $scope.provinceArray = [];
        angular.forEach($scope.geography, function (value, key) {
          $scope.provinceArray.push(value.obj);
        });
        $scope.search_params.province_scope_id = $scope.provinceArray[0].id;
        $scope.cityArray = [];
        if ($scope.geography) {
          $scope.geography_city = $scope.geography[$scope.search_params.province_scope_id];
          angular.forEach($scope.geography_city, function (value, key) {
            if (value instanceof Array) {
              $scope.cityArray.push(value[0].geography);
            }
          });
        }
        $scope.search_params.city_scope_id = $scope.cityArray[0].id;
        $scope.universityArray = [];
        if ($scope.geography_city) {
          $scope.geography_university = $scope.geography_city[$scope.search_params.city_scope_id];
          angular.forEach($scope.geography_university, function (value, key) {
            $scope.universityArray.push(value.university);
          });
        }
        $scope.search_params.university_scope_id = $scope.universityArray[0].id;
        load_message_communities();
      });
    };
    $scope.load_geography();
    //监听省份select列表
    $scope.change_province = function () {
      $scope.cityArray = [];
      if ($scope.geography) {
        $scope.geography_city = $scope.geography[$scope.search_params.province_scope_id];
        angular.forEach($scope.geography_city, function (value, key) {
          if (value instanceof Array) {
            $scope.cityArray.push(value[0].geography);
          }
        });
      }
    };
    //监听市select列表
    $scope.change_city = function () {
      $scope.universityArray = [];
      if ($scope.geography_city) {
        $scope.geography_university = $scope.geography_city[$scope.search_params.city_scope_id];
        angular.forEach($scope.geography_university, function (value, key) {
          $scope.universityArray.push(value.university);
        });
      }
    };
    //监听学校下拉列表value值的变化
    $scope.change_university = function () {
      $scope.community_id_array = [];
      $scope.community_id_hash = {};
      var hashtable = {};
      $scope.tableParams.page(1);
      $scope.tableParams.reload();
    };
    //对社团进行全部选择操作
    $scope.get_checked_all = function (is_checked_all) {
      //当社团被全部选中时
      if (is_checked_all) {
        //当选中全选按钮时，进行页码和全选状态的记录
        page_check_all_hash[current_page] = true;
        for (var i = 0; i < $scope.communitys.length; i++) {
          var temp = $scope.communitys[i];
          if (!hashtable[temp.community.id]) {
            hashtable[temp.community.id] = true;
            $scope.community_id_array.push(temp.community.id);
          }
        }
        $scope.community_id_hash = {};
        $scope.is_checked_all = true;
      } else {
        //用来记录要删除的子数组的元素
        var hash = {};
        angular.forEach($scope.communitys, function (value) {
          hash[value.community.id] = true;
        });
        console.log('\u8981\u5220\u9664\u7684\u5b50\u6570\u7ec4hash\u8868\uff1a' + angular.toJson(hash));
        for (var j = 0; j < $scope.community_id_array.length; j++) {
          if (hash[$scope.community_id_array[j]]) {
            delete $scope.community_id_array[j];
          }
        }
        //当取消全选按钮时，进行页码和全选状态的记录
        page_check_all_hash[current_page] = false;
        hashtable = {};
        // $scope.community_id_array.splice(0, $scope.community_id_array.length);
        $scope.is_checked_all = false;
      }
    };
    //对社团进行单个选择操作
    $scope.get_checked_item = function (community_id, is_checked_item) {
      //当社团被选中时
      if (is_checked_item) {
        hashtable[community_id] = true;
        $scope.community_id_hash[community_id] = true;
        $scope.community_id_array.push(community_id);
      } else {
        for (var i = 0; i < $scope.community_id_array.length; i++) {
          var temp = $scope.community_id_array[i];
          if (temp === community_id) {
            hashtable[community_id] = false;
            $scope.community_id_hash[community_id] = false;
            $scope.community_id_array.splice($scope.community_id_array.indexOf(temp), 1);
            break;
          }
        }
      }
    };
    //每条记录的复选框勾选状态
    $scope.is_checked = function (id) {
      if ($scope.is_checked_all) {
        return true;
      } else {
        return $scope.community_id_hash[id];
      }
    };
    //全选复选框勾选状态
    $scope.checked_all = function () {
      return $scope.is_checked_all;
    };
    var load_message_communities = function () {
      //社团信息表格
      var NgTableParams = ngTableParams;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/iwx/message/' + $scope.search_params.university_scope_id + '/university?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            //给当前页码变量赋值
            current_page = params.page();
            //处理服务器返回数据
            $scope.communitys = data.items;
            params.total(data.total);
            $defer.resolve($scope.communitys);
            //控制全选框的选中状态
            if (page_check_all_hash[current_page]) {
              $scope.is_checked_all = true;
            } else {
              $scope.is_checked_all = false;
            }
          });
        }
      });
    };
    //操作确认提示
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delete_information') {
        $http.delete('/api/iwx/' + $scope.confirm.param + '/message/del').success(function () {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u6210\u529f\u5220\u9664\u4e0e\u8be5\u793e\u56e2\u7684\u901a\u4fe1\u8bb0\u5f55\u3002'
          });
          $scope.tableParams.reload();
        });
      }  /* else if ($scope.confirm.type === 'del_private_letter') {
				//删除选中的若干社团的私信记录
				$http
					.delete('url' + $scope.confirm.param)
					.success(function () {
						$scope.tableParams.reload();
					});
			}*/
    };
    //删除通信记录
    $scope.delete_information = function (community_id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e2a\u793e\u56e2\u76f8\u5173\u7684\u79c1\u4fe1\u8bb0\u5f55\uff1f';
      $scope.confirm.type = 'delete_information';
      $scope.confirm.param = community_id;
      $('#confirmModal').modal();
      return;
    };
    //删除所有选中的社团的私信记录
    /*$scope.del_private_letter = function () {
			$scope.confirm.message = '您确定要删除所选中社团的私信记录？';
			$scope.confirm.type = 'del_private_letter';
			$scope.confirm.param = $scope.community_id_array;
			$('#confirmModal').modal();
			return;
		};*/
    //打开私信对话框
    var open_dialog = function (url, community_id, category) {
      $modal.open({
        templateUrl: 'partial/message/message_iWX/message_iWX_letter.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.ok = function () {
              console.log(url);
              var letter = {};
              if (category === 'item') {
                letter['community_id'] = community_id;
              } else {
                letter['communities'] = community_id;
              }
              letter['content'] = $scope.content;
              console.log(letter);
              $http.post(url, letter).success(function () {
                $rootScope.$emit(eventType.NOTIFICATION, {
                  'type': 'POPMSG',
                  'title': '\u6d88\u606f',
                  'message': '\u5df2\u7ecf\u6210\u529f\u5411\u793e\u56e2\u7ba1\u7406\u5458\u53d1\u9001\u4fe1\u606f\u3002'
                });
                $modalInstance.close('ok');
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //向选中的社团发送信息
    $scope.private_letter = function (community_id, category) {
      if (category === 'all') {
        var community_ids_parma = { 'community_ids': [] };
        console.log('\u793e\u56e2id\u539f\u6570\u7ec4\uff1a' + angular.toJson($scope.community_id_array));
        angular.forEach($scope.community_id_array, function (value) {
          if (value) {
            community_ids_parma.community_ids.push(value);
          }
        });
        console.log('\u8981\u53d1\u9001\u7684\u793e\u56e2id\u6570\u7ec4\u53c2\u6570\u4e3a\uff1a' + angular.toJson(community_ids_parma));
        if (community_ids_parma.community_ids.length === 0) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u8bf7\u9009\u62e9\u8981\u53d1\u9001\u79c1\u4fe1\u7684\u793e\u56e2\u3002'
          });
          return;
        }
        open_dialog('/api/iwx/multi/message/create', community_ids_parma.community_ids, category);
      } else if (category === 'item') {
        console.log('\u5411\u67d0\u4e2a\u793e\u56e2\u53d1\u9001\u79c1\u4fe1\uff1a' + community_id);
        open_dialog('/api/iwx/single/message/create', community_id, category);
      }
    };
    $scope.viewImage = function (image) {
      console.log(image);
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    //进入聊天信息页面
    $scope.go_to_message = function (community_id) {
      $state.go('message_iWX.message_iWX_to_community', { 'id': community_id });
    };
  }
]);
angular.module('iwx').controller('CreateLetterIwxCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'eventType',
  function ($scope, $rootScope, $http, eventType) {
    //查询到的社团
    $scope.communitys = [];
    $scope.community_set = {};
    //当前页码
    $scope.current_page = 1;
    //选中的社团id数组
    $scope.community_id_chosen = [];
    //条件搜索参数对象
    $scope.search_params = {};
    //要发送的私信内容
    $scope.message = {};
    //获取管理的地域和学校
    $scope.load_geography = function () {
      $http.get('/api/iwx/geography').success(function (data) {
        $scope.geography = data;
        $scope.provinceArray = [];
        angular.forEach($scope.geography, function (value, key) {
          $scope.provinceArray.push(value.obj);
        });
        $scope.search_params.province_scope_id = $scope.provinceArray[0].id;
        $scope.cityArray = [];
        if ($scope.geography) {
          $scope.geography_city = $scope.geography[$scope.search_params.province_scope_id];
          angular.forEach($scope.geography_city, function (value, key) {
            if (value instanceof Array) {
              $scope.cityArray.push(value[0].geography);
            }
          });
        }
        $scope.search_params.city_scope_id = $scope.cityArray[0].id;
        $scope.universityArray = [];
        if ($scope.geography_city) {
          $scope.geography_university = $scope.geography_city[$scope.search_params.city_scope_id];
          angular.forEach($scope.geography_university, function (value, key) {
            $scope.universityArray.push(value.university);
          });
        }
        $scope.search_params.university_scope_id = $scope.universityArray[0].id;
        load_community($scope.current_page);
      });
    };
    $scope.load_geography();
    //监听省份select列表
    $scope.change_province = function () {
      $scope.cityArray = [];
      if ($scope.geography) {
        $scope.geography_city = $scope.geography[$scope.search_params.province_scope_id];
        angular.forEach($scope.geography_city, function (value, key) {
          if (value instanceof Array) {
            $scope.cityArray.push(value[0].geography);
          }
        });
      }
    };
    //监听市select列表
    $scope.change_city = function () {
      $scope.universityArray = [];
      if ($scope.geography_city) {
        $scope.geography_university = $scope.geography_city[$scope.search_params.city_scope_id];
        angular.forEach($scope.geography_university, function (value, key) {
          $scope.universityArray.push(value.university);
        });
      }
    };
    //监听学校下拉列表框value值变化
    $scope.change_university = function () {
      $scope.choose_all = false;
      $scope.show_community = false;
      $scope.communitys = [];
      $scope.community_set = {};
      $scope.community_id_chosen = [];
      $scope.current_page = 1;
      load_community($scope.current_page);
    };
    //选择要新建私信的社团
    $scope.choose_community = function (community_id, choose_item) {
      console.log(community_id);
      if (choose_item) {
        $scope.community_id_chosen.push(community_id);
        console.log($scope.community_id_chosen);
      } else {
        for (var i = 0; i < $scope.community_id_chosen.length; i++) {
          var temp = $scope.community_id_chosen[i];
          if (temp === community_id) {
            $scope.community_id_chosen.splice($scope.community_id_chosen.indexOf(temp), 1);
          }
        }
        console.log($scope.community_id_chosen);
      }
    };
    //选择查询到的所有社团进行发送私信操作
    $scope.choose_communitys = function (choose_all) {
      if (choose_all) {
        console.log($scope.communitys.length);
        if ($scope.community_id_chosen.length !== 0) {
          $scope.community_id_chosen.splice(0, $scope.community_id_chosen.length);
        }
        for (var i = 0; i < $scope.communitys.length; i++) {
          var temp = $scope.communitys[i];
          $scope.community_id_chosen.push(temp.id);
        }
        console.log($scope.community_id_chosen);
      } else {
        $scope.community_id_chosen.splice(0, $scope.community_id_chosen.length);
        console.log($scope.community_id_chosen);
      }
    };
    //加载查询到的社团
    var load_community = function (page) {
      $http.get('/api/iwx/' + $scope.search_params.university_scope_id + '/community?page=' + page + '&per_page=12').success(function (data) {
        if (data.items.length === 0) {
          if (page !== 1) {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u5df2\u52a0\u8f7d\u5168\u90e8\u7b26\u5408\u6761\u4ef6\u7684\u793e\u56e2'
            });
          }
          return;
        }
        $scope.show_community = true;
        var add = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in $scope.community_set)) {
            $scope.community_set[value.community.id] = true;
            $scope.communitys.push(value.community);
            add++;
          }
        });
        //当全选复选框为选中状态时，添加选中的社团
        if ($scope.choose_all) {
          $scope.choose_communitys($scope.choose_all);
          console.log($scope.communitys.length + '----115');
        }
        if (add === 0) {
          load_community(++$scope.current_page);
        }
      });
    };
    //加载更多
    $scope.load_more = function () {
      load_community(++$scope.current_page);
    };
    //验证方法
    $scope.validate_letter = function () {
      if ($scope.message.content === '' || $scope.message.content === undefined) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u586b\u5199\u8981\u53d1\u9001\u7684\u79c1\u4fe1\u5185\u5bb9\u3002'
        });
        return false;
      }
      if ($scope.community_id_chosen.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u9009\u62e9\u8981\u53d1\u9001\u79c1\u4fe1\u7684\u793e\u56e2\u3002'
        });
        return false;
      }
      return true;
    };
    //向选中的社团发送私信
    $scope.send_letter = function () {
      if (!$scope.validate_letter()) {
        return;
      }
      //群发私信接口
      $scope.message['communities'] = $scope.community_id_chosen;
      console.log($scope.message);
      $http.post('/api/iwx/multi/message/create', $scope.message).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u5df2\u7ecf\u6210\u529f\u7ed9\u9009\u4e2d\u7684\u793e\u56e2\u53d1\u9001\u79c1\u4fe1\u3002'
        });
        $scope.message.content = '';
      });
    };
  }
]);
angular.module('iwx').controller('MessageToCommIwxCtrl', [
  '$scope',
  '$http',
  '$stateParams',
  'userService',
  '$rootScope',
  'eventType',
  function ($scope, $http, $stateParams, userService, $rootScope, eventType) {
    $scope.messages = [];
    var messageSet = {};
    var current_page = 1;
    var loadMessages = function (page) {
      var url = '/api/iwx/message/' + $stateParams.id + '?page=' + page + '&per_page=' + 10;
      $http.get(url).success(function (data) {
        if (data.items.length === 0) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u5df2\u52a0\u8f7d\u5168\u90e8\u804a\u5929\u4fe1\u606f'
          });
          return;
        }
        var added = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in messageSet)) {
            messageSet[value.id] = true;
            $scope.messages.push(value);
            added++;
          }
        });
        if (added === 0) {
          loadMessages(++current_page);
        }
      });
    };
    loadMessages(current_page);
    $scope.loadMore = function () {
      loadMessages(++current_page);
    };
    $scope.send = function () {
      if (!$scope.content) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u586b\u5199\u8981\u53d1\u9001\u7684\u79c1\u4fe1\u5185\u5bb9\u3002'
        });
        return;
      }
      var letter = {};
      letter['community_id'] = $stateParams.id;
      letter['content'] = $scope.content;
      console.log(letter);
      $http.post('/api/iwx/single/message/create', letter).success(function (data) {
        messageSet[data.id] = true;
        $scope.messages.unshift(data);
      });
      $scope.content = '';
    };  /*$http
        .put('/api/admin/messages/' + $stateParams.id)
        .success(function() {
        // $scope.$parent.clearId($stateParams.id);
    });

    userService
        .load()
        .then(function (data) {
            $scope.community = data.managed_community;
            $http
                .get('/api/users/' + $stateParams.id)
                .success(function (data) {
                    $scope.user = data;
            });
        });*/
  }
]);
angular.module('iwx').controller('RoleManageSuperCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'eventType',
  'ngTableParams',
  '$state',
  '$window',
  '$stateParams',
  function ($scope, $rootScope, $http, eventType, ngTableParams, $state, $window, $stateParams) {
    $rootScope.welcome_bg = false;
    $rootScope.roles_table = {
      'SUPER_USER': '\u8d85\u7ea7\u7ba1\u7406\u5458',
      'IWX_ADMIN': 'i\u5fae\u6821\u7ba1\u7406\u5458',
      'UN_ADMIN': '\u6821\u7ba1\u7406\u5458',
      'ADMIN': '\u793e\u56e2\u7ba1\u7406\u5458',
      'USER': '\u666e\u901a\u7528\u6237',
      'visitor': '\u6e38\u5ba2'
    };
    $rootScope.regexp_password = /^[a-zA-Z0-9]\w{3,17}$/;
    $rootScope.regexp_username = /^[a-zA-Z0-9_\u4e00-\u9fa5]{3,100}$/;
    $rootScope.regexp_email = /^([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\_|\.]?)*[a-zA-Z0-9]+\.[a-zA-Z]{2,3}$/;
    $scope.provinceArray = [];
    $scope.user = {};
    $scope.load_roles = function () {
      //获取管理员列表
      $http.get('/api/su/roles').success(function (data) {
        console.log(data);
        for (var i = 0; i < data.length; i++) {
          data[i].name = $rootScope.roles_table[data[i].name];
        }
        $scope.roleArray = data;
      });
    };
    $scope.load_roles();
    //获取角色列表
    var NgTableParams = ngTableParams;
    var roles;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        var url = '/api/su/roles/all';
        $http.get(url).success(function (data) {
          roles = data;
          params.total(data.length);
          $defer.resolve(roles.slice((params.page() - 1) * params.count(), params.page() * params.count()));
        });
      }
    });
    //获取用户列表
    $scope.user_list = function (id) {
      $state.go('role_manage_super.user', { 'manager_type': id }, { reload: true });
    };
    //验证参数
    $scope.validate = function () {
      console.log($scope.user.username + '-----------' + $rootScope.regexp_username.test($scope.user.username));
      if ($scope.user.username === undefined || !$rootScope.regexp_username.test($scope.user.username)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u7528\u6237\u540d\u79f0\u3002'
        });
        return false;
      }
      if ($scope.user.email === undefined || !$rootScope.regexp_email.test($scope.user.email)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u7535\u5b50\u90ae\u7bb1\u3002'
        });
        return false;
      }
      if ($scope.user.password === undefined || !$rootScope.regexp_password.test($scope.user.password)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '',
          'message': '\u8bf7\u6b63\u786e\u586b\u5199\u521d\u59cb\u5bc6\u7801\u3002'
        });
        return false;
      }
      if ($scope.user.rePassword !== $scope.user.password) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '',
          'message': '\u4e24\u6b21\u5bc6\u7801\u8f93\u5165\u5e94\u4e00\u81f4\u3002'
        });
        return false;
      }
      if ($scope.user.role_scope === undefined) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '',
          'message': '\u8bf7\u9009\u62e9\u7528\u6237\u7c7b\u578b\u3002'
        });
        return false;
      }
      return true;
    };
    //创建管理员用户
    $scope.create_user = function () {
      if (!$scope.validate()) {
        console.log('\u6ca1\u6709\u901a\u8fc7\u8868\u5355\u9a8c\u8bc1\uff01');
        return;
      }
      var params = {};
      params['nickname'] = $scope.user.username;
      params['password'] = $scope.user.password;
      params['email'] = $scope.user.email;
      params['roles'] = $scope.user.role_scope;
      console.log($scope.user.role_scope);
      var url = '/api/su/manager/create';
      $http.post(url, params, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        $rootScope.$emit(eventType, {
          'type': 'POPMSG',
          'title': '',
          'message': '\u6210\u529f\u521b\u5efa\u7528\u6237\u3002'
        });
      });
    };
    //取消操作
    $scope.cancel = function () {
      $scope.user = {};
      $scope.load_roles();  // $scope.load_province();
    };
  }
]);
angular.module('iwx').controller('RoleManageSuperUserCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  '$stateParams',
  '$modal',
  function ($scope, $rootScope, $http, ngTableParams, eventType, $stateParams, $modal) {
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //获取角色列表
    $scope.manager_type = $stateParams.manager_type;
    var NgTableParams = ngTableParams;
    var roles;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        var url = '/api/su/managers?page=' + params.page() + '&per_page=' + params.count() + '&manager_type=' + $scope.manager_type;
        $http.get(url).success(function (data) {
          console.log(data);
          roles = data.items;
          params.total(data.total);
          $defer.resolve(roles);
        });
      }
    });
    //操作确认提示
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delete_user') {
        var url = '';
        $http.delete(url + $scope.confirm.param).success(function () {
          $scope.tableParams.reload();
        });
      }
    };
    //删除用户
    $scope.delete_user = function (user_id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8be5\u7528\u6237?';
      $scope.confirm.type = 'delete_user';
      $scope.confirm.param = user_id;
      $('#confirmModal').modal();
    };
    //修改用户基本信息
    $scope.update_user = function (user) {
      $modal.open({
        templateUrl: 'partial/role/super/role_manage_super_user_info.html',
        controller: 'UserInfoCtrl',
        resolve: {
          user_info: function () {
            return user;
          }
        }
      });
    };
    //修改用户管理范围
    $scope.manage_scope = function (user) {
      $modal.open({
        templateUrl: 'partial/role/super/role_manage_super_scope.html',
        controller: 'UserManageScopeCtrl',
        resolve: {
          user: function () {
            return user;
          }
        }
      });
    };
    //绑定reload_user_table事件
    $scope.$on('reload_user_table', function () {
      $scope.tableParams.reload();
    });
  }
]);
angular.module('iwx').controller('UserInfoCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'user_info',
  '$modalInstance',
  'eventType',
  function ($scope, $rootScope, $http, user_info, $modalInstance, eventType) {
    $scope.user_info = {};
    $scope.user_info.id = user_info.id;
    $scope.user_info.username = user_info.nickname;
    $scope.user_info.mail = user_info.email;
    //验证参数
    $scope.validate = function () {
      if ($scope.user_info.username === undefined || !$rootScope.regexp_username.test($scope.user_info.username)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u7528\u6237\u540d\u79f0\u3002'
        });
        return false;
      }
      if ($scope.user_info.mail === undefined || !$rootScope.regexp_email.test($scope.user_info.mail)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u7535\u5b50\u90ae\u7bb1\u3002'
        });
        return false;
      }
      if (!$rootScope.regexp_password.test($scope.user_info.password)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u521d\u59cb\u5bc6\u7801\u3002'
        });
        return false;
      }
      if ($scope.user_info.rePassword !== $scope.user_info.password) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '',
          'message': '\u4e24\u6b21\u5bc6\u7801\u8f93\u5165\u5e94\u4e00\u81f4\u3002'
        });
        return false;
      }
      return true;
    };
    //修改用户
    $scope.update_user = function () {
      if (!$scope.validate()) {
        console.log('\u6ca1\u6709\u901a\u8fc7\u8868\u5355\u9a8c\u8bc1\uff01');
        return;
      }
      var params = {};
      params.nickname = $scope.user_info.username;
      params.email = $scope.user_info.mail;
      if ($scope.user_info.password) {
        params.password = $scope.user_info.password;
      }
      $http.put('/api/su/user/' + $scope.user_info.id + '/update', params, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        $modalInstance.close('ok');
        $rootScope.$broadcast('reload_user_table');
      });
    };
    //取消修改用户
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('UserManageScopeCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'user',
  'eventType',
  '$modalInstance',
  'ngTableParams',
  function ($scope, $rootScope, $http, user, eventType, $modalInstance, ngTableParams) {
    //初始化当前页码
    $scope.current_page = 1;
    //已加载的学校
    $scope.university_set = {};
    $scope.universitys = [];
    //已添加的学校
    $scope.university_hash = {};
    //已经选择的学校的id数组
    $scope.university_id_choosen = [];
    //查询条件对象
    $scope.user = {};
    //加载省份信息
    $scope.load_province = function () {
      $http.get('/api/su/geography/0').success(function (data) {
        $scope.provinceArray = data;
      });
    };
    $scope.load_province();
    //加载市信息
    $scope.load_city = function () {
      $http.get('/api/su/geography/' + $scope.user.province_scope_id).success(function (data) {
        $scope.cityArray = data;
      });
    };
    //监听省级管理范围
    $scope.change_province = function () {
      if ($scope.user.province_scope_id) {
        $scope.load_city();
      }
    };
    //监听市级管理范围
    $scope.change_city = function () {
      if ($scope.user.city_scope_id) {
        $scope.current_page = 1;
        $scope.universitys = [];
        $scope.university_id_choosen = [];
        $scope.university_set = {};
        $scope.more_university = false;
        $scope.choose_all = false;
        $scope.get_universitys($scope.current_page);
      }
    };
    //选择要给管理员添加的学校
    $scope.choose_university = function (university_id, choose_item) {
      if (choose_item) {
        if (!$scope.university_hash[university_id]) {
          $scope.university_id_choosen.push(university_id);
        }
      } else {
        for (var i = 0; i < $scope.university_id_choosen.length; i++) {
          var temp = $scope.university_id_choosen[i];
          if (temp === university_id) {
            $scope.university_id_choosen.splice($scope.university_id_choosen.indexOf(temp), 1);
          }
        }
      }
    };
    //选择全部加载的学校
    $scope.choose_universitys = function (choose_all) {
      if (choose_all) {
        if ($scope.university_id_choosen.length !== 0) {
          $scope.university_id_choosen.splice(0, $scope.university_id_choosen.length);
        }
        for (var i = 0; i < $scope.universitys.length; i++) {
          var temp = $scope.universitys[i];
          //判断该学校是否已经添加了
          if (!$scope.university_hash[temp.id]) {
            $scope.university_id_choosen.push(temp.id);
          }
        }
      } else {
        $scope.university_id_choosen.splice(0, $scope.university_id_choosen.length);
      }
    };
    //加载学校信息，根据市县id进行获取
    $scope.get_universitys = function (page) {
      $http.get('/api/su/' + $scope.user.city_scope_id + '/university' + '?page=' + page + '&per_page=' + 12).success(function (data) {
        if (data.items.length === 0) {
          if ($scope.current_page === 1) {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u6ca1\u6709\u67e5\u8be2\u5230\u7b26\u5408\u6761\u4ef6\u7684\u5b66\u6821'
            });
          } else {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u5df2\u52a0\u8f7d\u5168\u90e8\u7b26\u5408\u6761\u4ef6\u7684\u5b66\u6821'
            });
          }
          return;
        }
        $scope.more_university = true;
        var add = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in $scope.university_set)) {
            $scope.university_set[value.id] = true;
            $scope.universitys.push(value);
          }
          add++;
        });
        if (add === 0) {
          $scope.get_universitys(++$scope.current_page);
        }
      });
    };
    //加载更多学校
    $scope.load_more_university = function () {
      $scope.get_universitys(++$scope.current_page);
    };
    //取消选择管理范围
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
    //已经添加的学校列表，根据用户id获取
    $scope.get_universitys_add = function () {
      var NgTableParams = ngTableParams;
      var university_data;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 5
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          var url = '/api/su/iwx/' + user.id + '?page=' + params.page() + '&per_page=' + params.count();
          $http.get(url).success(function (data) {
            university_data = data.items;
            params.total(data.total);
            $defer.resolve(university_data);
            //将已添加的学校id添加到对照表中
            for (var i = 0; i < university_data.length; i++) {
              var temp = university_data[i];
              $scope.university_hash[temp.university_id] = true;
            }
          });
        }
      });
    };
    $scope.get_universitys_add();
    //删除管理员管理的学校
    $scope.delete_university = function (manage_id, university_id) {
      $http.delete('/api/su/iwx/' + manage_id + '/del').success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6210\u529f\u5220\u9664\u7ba1\u7406\u5458\u4e0e\u8be5\u5b66\u6821\u7684\u5173\u8054\u5173\u7cfb\u3002'
        });
        $scope.university_hash[university_id] = false;
        console.log($scope.university_hash);
        $scope.tableParams.reload();
      });
    };
    //添加管理员要管理的学校
    $scope.add_university = function () {
      console.log('\u9009\u4e2d\u7684\u5b66\u6821id\u6570\u7ec4\uff1a' + angular.toJson($scope.university_id_choosen) + ';\u9009\u4e2d\u7684\u5b66\u6821\u5bf9\u7167set\uff1a' + angular.toJson($scope.university_set));
      var param = { 'universities': '' };
      if ($scope.university_id_choosen.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u672a\u9009\u62e9\u5b66\u6821\u6216\u5b66\u6821\u5df2\u6dfb\u52a0\u5b8c\u6210\u3002'
        });
        return;
      } else {
        param.universities = $scope.university_id_choosen;
      }
      console.log('\u7ed9id\u4e3a' + user.id + '\u7684\u7528\u6237\u6dfb\u52a0\u7684\u5b66\u6821\u53c2\u6570\u4e3a\uff1a' + angular.toJson(param));
      $http.post('/api/su/iwx/' + user.id + '/add', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        console.log(data);
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u5b66\u6821\u6dfb\u52a0\u6210\u529f\u3002'
        });
        $scope.tableParams.reload();
      });
    };
  }
]);
angular.module('iwx').controller('VerManageSuCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  '$state',
  function ($scope, $rootScope, $http, ngTableParams, eventType, $state) {
    console.log($state);
    $rootScope.welcome_bg = false;
    //加载app版本信息表格
    var loadVersions = function (url) {
      var NgTableParams = ngTableParams;
      var versions = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          var requestParam = '&page=' + params.page() + '&per_page=' + params.count();
          $http.get(url + requestParam).success(function (data) {
            if (data.total === 0) {
              $scope.versionList = true;
              $scope.note = '\u672a\u53d1\u5e03\u4efb\u4f55\u7248\u672c';
            } else {
              $scope.versionList = false;
            }
            versions = data.items;
            params.total(data.total);
            $defer.resolve(versions);
          });
        }
      });
    };
    if ($state.current.name === 'version_manage_super') {
      loadVersions('/api/su/version/list?type_v=web');
    } else {
      loadVersions('/api/su/version/list?type_v=app');
    }
  }
]);
angular.module('iwx').controller('VerManageDetCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'eventType',
  '$state',
  function ($scope, $rootScope, $http, eventType, $state) {
    $scope.version = {};
    //发布版本信息
    $scope.publish = function () {
      var publish_version_api = '';
      if ($state.current.name === 'version_manage_super_detail') {
        publish_version_api = '/api/su/web/version/add';
      } else {
        publish_version_api = '/api/su/version/add';
      }
      console.log(publish_version_api);
      $http.post(publish_version_api, $scope.version, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u606d\u559c\uff0c\u7248\u672c\u4fe1\u606f\u53d1\u5e03\u6210\u529f\uff01'
        });
        if ($state.current.name === 'version_manage_super_detail') {
          $state.go('version_manage_super', { reload: true });
        } else {
          $state.go('version_manage_super.app', { reload: true });
        }
      });
    };  /**
			var strRegex = '^((https|http|ftp|rtsp|mms)?://)' 
			+ '?(([0-9a-z_!~*\'().&=+$%-]+: )?[0-9a-z_!~*\'().&=+$%-]+@)?' //ftp的user@ 
			+ '(([0-9]{1,3}.){3}[0-9]{1,3}' // IP形式的URL- 199.194.52.184 
			+ '|' // 允许IP和DOMAIN（域名） 
			+ '([0-9a-z_!~*\'()-]+.)*' // 域名- www. 
			+ '([0-9a-z][0-9a-z-]{0,61})?[0-9a-z].' // 二级域名 
			+ '[a-z]{2,6})' // first level domain- .com or .museum 
			+ '(:[0-9]{1,4})?' // 端口- :80 
			+ '((/?)|' // a slash isn't required if there is no file name 
			+ '(/[0-9a-z_!~*\'().;?:@&=+$,%#-]+)+/?)$'; 
		*/
  }
]);
angular.module('iwx').controller('ActivityUniversityCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  '$modal',
  '$state',
  'userService',
  function ($scope, $rootScope, $http, ngTableParams, eventType, $modal, $state, userService) {
    $rootScope.welcome_bg = false;
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //页码初始值
    $scope.current_page = 1;
    $scope.load_btn = '\u52a0\u8f7d\u66f4\u591a~~';
    //查询到的社团
    $scope.communities = [];
    $scope.community_set = {};
    $scope.plugins_config = {
      announcement: {
        'id': 'announcement',
        'name': '\u516c\u544a\u677f',
        'icon_path': '/static/images/announcement_new.png',
        'note': '\u6d3b\u52a8\u5730\u70b9\uff0c\u65f6\u95f4\uff0c\u4e34\u65f6\u7a81\u53d1\u72b6\u51b5\u53ef\u4ee5\u901a\u8fc7\u516c\u544a\u677f\u7b2c\u4e00\u65f6\u95f4\u63a8\u9001\u7ed9\u6240\u6709\u5173\u6ce8\u672c\u6d3b\u52a8\u7684\u5c0f\u4f19\u4f34\u4eec\u3002'
      },
      timeline: {
        'id': 'timeline',
        'name': '\u6d3b\u52a8\u52a8\u6001',
        'icon_path': '/static/images/timeline_new.png',
        'note': '\u901a\u8fc7\u56fe\u7247\u548c\u6587\u5b57\u5f62\u5f0f\u8fd8\u539f\u73b0\u573a\u5b9e\u65f6\u52a8\u6001\uff0c\u6bcf\u4e00\u6761\u52a8\u6001\u53ef\u901a\u8fc7\u5927\u5c4f\u5e55\u5b9e\u65f6\u5c55\u793a\u3002'
      },
      ticket: {
        'id': 'ticket',
        'name': '\u7535\u5b50\u7968',
        'icon_path': '/static/images/ticket_new.png',
        'note': '\u73af\u4fdd\uff0c\u65f6\u5c1a\u7684\u7535\u5b50\u7968\u636e\uff0c\u4f5c\u4e3a\u6d3b\u52a8\u552f\u4e00\u7684\u5165\u573a\u51ed\u8bc1\uff0c\u7535\u5b50\u7968\u9762\u5185\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5e7f\u544a\u4f4d\uff08\u5305\u542b\u7968\u9762\u80cc\u666f\u548c\u8d5e\u52a9\u5546logo\uff09\uff0c\u901a\u8fc7\u540e\u53f0\u53ef\u4ee5\u5b9e\u65f6\u67e5\u770b\u62a2\u7968\u4eba\u6570\uff0c\u5b9e\u9645\u5230\u573a\u9a8c\u7968\u4eba\u6570\uff0c\u5ba2\u89c2\u53cd\u6620\u73b0\u573a\u7684\u70ed\u70c8\u7a0b\u5ea6\uff0c\u6bcf\u4e00\u5f20\u7535\u5b50\u7968\u90fd\u6709\u552f\u4e00\u7684\u7535\u5b50\u7968\u7f16\u53f7\uff0c\u53ef\u88ab\u7528\u4e8e\u540e\u7eed\u7684\u5176\u4ed6\u73af\u8282\u7ee7\u7eed\u4f7f\u7528\u3002'
      },
      vote: {
        'id': 'vote',
        'name': '\u6295\u7968',
        'icon_path': '/static/images/vote_new.png',
        'note': '\u652f\u6301\u81ea\u5b9a\u4e49\u5019\u9009\u9879\uff0c\u53ef\u4ee5\u662f\u5019\u9009\u4eba\uff0c\u4e5f\u53ef\u4ee5\u662f\u5019\u9009\u9898\u76ee\uff0c\u901a\u8fc7\u7075\u6d3b\u8bbe\u7f6e\u6295\u7968\u89c4\u5219\uff0c\u53ef\u4ee5\u6536\u96c6\u5230\u8f83\u4e3a\u7cbe\u786e\u7684\u6295\u7968\u7edf\u8ba1\u6570\u636e\u3002'
      },
      sign_in: {
        'id': 'sign_in',
        'name': '\u7b7e\u5230',
        'icon_path': '/static/images/sign_in_new.png',
        'note': '\u8f7b\u91cf\u5316\u7684\u5165\u573a\u51ed\u8bc1\uff0c\u53ef\u4f5c\u4e3a\u6d3b\u52a8\u552f\u4e00\u7684\u5165\u573a\u65b9\u5f0f\uff0c\u7ae5\u978b\u4eec\u901a\u8fc7\u626b\u63cf\u5165\u573a\u5904\u7684\u4e8c\u7ef4\u7801\u7b7e\u5230\u5165\u573a\uff0c\u6bcf\u4e00\u5f20\u7b7e\u5230\u51ed\u8bc1\u90fd\u6709\u552f\u4e00\u7684\u7b7e\u5230\u53f7\u7801\uff0c\u53ef\u88ab\u7528\u4e8e\u540e\u7eed\u7684\u5176\u4ed6\u73af\u8282\u7ee7\u7eed\u4f7f\u7528\u3002'
      },
      lottery: {
        'id': 'lottery',
        'name': '\u62bd\u5956',
        'icon_path': '/static/images/lottery_new.png',
        'note': '\u6d3b\u8dc3\u73b0\u573a\u5229\u5668\uff0c\u793e\u56e2\u53ef\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u5b89\u6392\u51fa\u5bf9\u5e94\u7684\u5355\u9879\u5956\uff0c\u914d\u5408\u5927\u5c4f\u5e55\u7684\u4f7f\u7528\u53ef\u4ee5\u8ba9\u6d3b\u52a8\u73b0\u573a\u60ac\u5ff5\u611f\u5341\u8db3\uff0c\u52a0\u5f3a\u793e\u56e2\u4e0e\u53c2\u4f1a\u5c0f\u4f19\u4f34\u4eec\u7684\u4e92\u52a8\u3002'
      },
      questionnaire: {
        'id': 'questionnaire',
        'name': '\u95ee\u5377',
        'icon_path': '/static/images/questionnaire.png',
        'note': '\u4fbf\u4e8e\u6536\u96c6\u610f\u89c1\uff0c\u76ee\u524d\u652f\u6301\u56db\u79cd\u95ee\u9898\uff0c\u5355\u9009\u3001\u591a\u9009\u3001\u7b80\u7b54\u4ee5\u53ca\u4e0a\u4f20\u56fe\u7247\uff0c\u6bcf\u4e00\u6b21\u95ee\u5377\u652f\u6301\u6dfb\u52a0\u65e0\u9650\u91cf\u7684\u793c\u5238\uff0c\u793c\u5238\u53ef\u4ee5\u4ece\u7535\u5b50\u51ed\u8bc1\u7ba1\u7406\u4e2d\u8c03\u53d6\uff0c\u56de\u7b54\u5b8c\u6210\u540e\u81ea\u52a8\u83b7\u5f97\u4e00\u79cd\u793c\u5238\u7684\u4e00\u5f20\uff0c\u5148\u5230\u5148\u5f97\uff01\u5177\u4f53\u4f7f\u7528\u7ec6\u8282\u8bf7\u53c2\u9605\u95ee\u5377\u6982\u51b5\u4e2d\u7684\u95ee\u5377\u529f\u80fd\u89e3\u91ca\u3002'
      }
    };
    // $scope.c_type = 'committee';
    $rootScope.org_type = {
      'committee': '\u9662\u7cfb\u56e2\u59d4',
      'tissue': '\u9662\u7cfb\u5b66\u751f\u4f1a',
      'organization': '\u6821\u7ea7\u5b66\u751f\u7ec4\u7ec7',
      'union': '\u5b66\u751f\u793e\u56e2'
    };
    //活动列表参数
    // $scope.activities_list_param = '/api/un/activity?c_type=' + $scope.c_type + '&';
    $('#org_tab a').click(function (e) {
      e.preventDefault();
      $(this).tab('show');
      var id = $(this).attr('id');
      if (id === 'committee') {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.c_type = 'committee';
          $scope.current_page = 1;
          load_university_communities($scope.current_page);
          $scope.activities_list_param = '/api/un/activity?c_type=' + $scope.c_type + '&';
          $scope.tableParams.page($scope.current_page);
          $scope.tableParams.reload();
        });
      } else if (id === 'union') {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.c_type = 'union';
          $scope.current_page = 1;
          load_university_communities($scope.current_page);
          $scope.activities_list_param = '/api/un/activity?c_type=' + $scope.c_type + '&';
          $scope.tableParams.page($scope.current_page);
          $scope.tableParams.reload();
        });
      } else if (id === 'tissue') {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.c_type = 'tissue';
          $scope.current_page = 1;
          load_university_communities($scope.current_page);
          $scope.activities_list_param = '/api/un/activity?c_type=' + $scope.c_type + '&';
          $scope.tableParams.page($scope.current_page);
          $scope.tableParams.reload();
        });
      } else {
        $scope.$apply(function () {
          $scope.communities = [];
          $scope.community_set = {};
          $scope.c_type = 'organization';
          $scope.current_page = 1;
          load_university_communities($scope.current_page);
          $scope.activities_list_param = '/api/un/activity?c_type=' + $scope.c_type + '&';
          $scope.tableParams.page($scope.current_page);
          $scope.tableParams.reload();
        });
      }
    });
    //加载学校社团
    var load_university_communities = function (page) {
      $http.get('/api/un/community?page=' + page + '&per_page=12&c_type=' + $scope.c_type).success(function (data) {
        if (data.items.length === 0) {
          if (page === 1) {
            $scope.msg = false;
            if ($scope.c_type === 'organization') {
              $scope.load_msg = '\u6682\u65f6\u6ca1\u6709\u66f4\u591a' + $rootScope.org_type[$scope.c_type] + '~~';
            } else {
              $scope.load_msg = '\u6682\u65f6\u6ca1\u6709\u66f4\u591a' + $rootScope.org_type[$scope.c_type] + '\u7ec4\u7ec7~~';
            }
          } else {
            $scope.btn = true;
            $scope.load_btn = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8~~';
          }
          return;
        }
        $scope.btn = false;
        $scope.load_btn = '\u52a0\u8f7d\u66f4\u591a~~';
        $scope.msg = true;
        $scope.show_community = true;
        var add = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in $scope.community_set)) {
            $scope.community_set[value.community.id] = true;
            $scope.communities.push(value.community);
            add++;
          }
        });
        if (add === 0) {
          load_university_communities(++$scope.current_page);
        }
      });
    };
    // load_university_communities($scope.current_page);
    $scope.load_more = function () {
      load_university_communities(++$scope.current_page);
    };
    //选择社团条件
    $scope.get_checked_community = function (id) {
      $scope.activities_list_param = '/api/un/' + id + '/activity?';
      $scope.tableParams.page(1);
      $scope.tableParams.reload();
    };
    //加载社团活动
    var load_activities = function () {
      // Avoid lint complain
      var NgTableParams = ngTableParams;
      var activities = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get($scope.activities_list_param + 'page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            // console.log(data);
            var items = data.items;
            if (items) {
              var len_items = items.length;
              for (var i = 0; i < len_items; i++) {
                var temp_item_plugin = items[i].plugins;
                var len_plugins = temp_item_plugin.length;
                for (var j = 0; j < len_plugins; j++) {
                  var temp_plugin = temp_item_plugin[j];
                  temp_plugin['icon_path'] = $scope.plugins_config[temp_plugin.id].icon_path;
                }
              }
            }
            activities = items;
            params.total(data.total);
            $defer.resolve(activities);
          });
        }
      });
    };
    // load_activities();
    userService.load(true).then(function (user) {
      if (user.admin_type === 'COMMITTEE') {
        $scope.c_type = 'committee';
      } else {
        $scope.c_type = 'union';
      }
      $scope.activities_list_param = '/api/un/activity?c_type=' + $scope.c_type + '&';
      load_university_communities($scope.current_page);
      load_activities();
    });
    //调用删除活动接口
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'deleteActivity') {
        $http.delete('' + $scope.confirm.param).success(function (data) {
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'undercarriage') {
        $http.post('/api/un/' + $scope.confirm.param + '/unpublish').success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
    //删除活动
    $scope.delete_activity = function (activity_id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e2a\u6d3b\u52a8\u5417?';
      $scope.confirm.type = 'deleteActivity';
      $scope.confirm.param = activity_id;
      $('#confirmModal').modal();
      return;
    };
    //置顶接口调用
    var _to_top = function (activity_id) {
      $http.post('/api/un/' + activity_id + '/top').success(function (data) {
        $scope.tableParams.reload();
      });
    };
    //置顶
    $scope.setTop = function (activity_id, published) {
      if (!published) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6d3b\u52a8\u5c1a\u672a\u53d1\u5e03\uff0c\u4e0d\u80fd\u8fdb\u884c\u7f6e\u9876\u64cd\u4f5c'
        });
        return;
      }
      var modalInstance = $modal.open({
          templateUrl: 'partial/activity/item/top_modal.html',
          size: 'md',
          controller: [
            '$scope',
            '$modalInstance',
            function ($scope, $modalInstance) {
              $scope.ok = function () {
                $modalInstance.close();
              };
              $scope.cancel = function () {
                $modalInstance.dismiss('cancel');
              };
            }
          ]
        });
      modalInstance.result.then(function (selectedItem) {
        _to_top(activity_id);
      });
    };
    var reloadActivity = function () {
      $scope.tableParams.reload();
    };
    //下架
    $scope.undercarriage = function (activity_id) {
      $modal.open({
        templateUrl: 'partial/common/unpublished_reason.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.reason_title = '\u4e0b\u67b6\u7406\u7531';
            $scope.$watch('content', function (value) {
              if (value) {
                $scope.ok_btn = false;
              } else {
                $scope.ok_btn = true;
              }
            });
            $scope.ok = function () {
              console.log($scope.content);
              $http.post('/api/un/' + activity_id + '/unpublish', { content: $scope.content }).success(function (data) {
                $modalInstance.close('ok');
                reloadActivity();
              });
            };
            $scope.cancel = function () {
              console.log($modalInstance);
              $modalInstance.close('ok');
            };
          }
        ]
      });
    };
    //进入插件页面
    $scope.gotoPlugin = function (activity_id, plugin_id) {
      if (plugin_id === '') {
        $state.go('activity_item', { 'id': activity_id });
      } else {
        $state.go('activity_item.' + plugin_id + '_plugin', { 'id': activity_id });
      }
    };
    //活动主办方详细信息
    $scope.preview_host = function (hostId) {
      $modal.open({
        templateUrl: 'partial/common/host_detail.html',
        controller: 'HostDetailCtrl',
        resolve: {
          hostId: function () {
            return hostId;
          }
        }
      });
    };
  }
]);
angular.module('iwx').controller('activityUniversityCreateCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$filter',
  'eventType',
  function ($scope, $rootScope, $http, $filter, eventType) {
    // $scope.content_regexp = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,20}$|^[\w\s_\x21-\x7e]{0,40}$/;
    $scope.loc_and_sub_regexp = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,15}$|^[\w\s_\x21-\x7e]{0,30}$/;
    $scope.activity = { 'editingActivityId': -1 };
    $scope.saveActivity = function () {
      try {
        if (typeof $scope.activity.start_time === 'number') {
          $scope.activity.start_time = $filter('date')($scope.activity.start_time, 'yyyy-MM-dd HH:mm');
        }
        if (typeof $scope.activity.end_time === 'number') {
          $scope.activity.end_time = $filter('date')($scope.activity.end_time, 'yyyy-MM-dd HH:mm');
        }
        var stTime = new Date($scope.activity.start_time.replace(/-/g, '/'));
        var endTime = new Date($scope.activity.end_time.replace(/-/g, '/'));
        if (Date.parse(stTime) > Date.parse(endTime)) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u7ed3\u675f\u65f6\u95f4\u5fc5\u987b\u5728\u5f00\u59cb\u65f6\u95f4\u4e4b\u540e'
          });
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u9009\u62e9\u6d3b\u52a8\u65f6\u95f4'
        });
        return;
      }
      if (!$scope.activity.location || !$scope.activity.content || !$scope.activity.subject) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u5b8c\u6574\uff0c\u5176\u4e2d\u6d3b\u52a8\u4e3b\u9898\u3001\u6d3b\u52a8\u5730\u70b9\u548c\u6d3b\u52a8\u5185\u5bb9\u4e3a\u5fc5\u586b\u9879\uff01'
        });
        return;
      }
      //限制字数提示
      if (!$scope.loc_and_sub_regexp.test($scope.activity.subject) || !$scope.loc_and_sub_regexp.test($scope.activity.location) || $scope.activity.members && !$scope.content_regexp.test($scope.activity.content)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6ce8\u610f\u586b\u5199\u5185\u5bb9\u5b57\u6570\u9650\u5236\uff01'
        });
        return;
      }
      $http.post('/api/admin/activities').success(function (id) {
        console.log(id);
        $scope.editingActivityId = id;
        var fd = new FormData();
        angular.forEach($scope.activity, function (value, key) {
          fd.append(key, value);
        });
        $http.post('/api/admin/activities/' + $scope.editingActivityId, fd, {
          transformRequest: angular.identity,
          headers: { 'Content-Type': undefined }
        }).success(function (data) {
          $scope.activity = data;
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u4fdd\u5b58\u6210\u529f'
          });
        });
      });
    };
  }
]);
angular.module('iwx').controller('certificateUniversityCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'ngTableParams',
  'eventType',
  '$modal',
  '$state',
  function ($scope, $http, $rootScope, ngTableParams, eventType, $modal, $state) {
    console.log('certificateUniversityCtrl');
    $scope.university = '\u4e2d\u592e\u6c11\u65cf\u5927\u5b66';
    //确认框参数
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //电子凭证信息表格
    var NgTableParams = ngTableParams;
    var coupons = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        var url = '/api/admin/community/register/users';
        $http.get(url + '?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          coupons = data.items;
          params.total(data.total);
          $defer.resolve(coupons);
        });
      }
    });
    //操作确认提示
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delete_coupon') {
        var url = '';
        $http.delete(url + $scope.confirm.param).success(function () {
          $scope.tableParams.reload();
        });
      }
    };
    //删除电子凭证
    $scope.delete_coupon = function (coupon_id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e2a\u7535\u5b50\u51ed\u8bc1\u5417?';
      $scope.confirm.type = 'delete_coupon';
      $scope.confirm.param = coupon_id;
      $('#confirmModal').modal();
      return;
    };
    //查看电子礼券使用详情
    $scope.detail_coupon = function (coupon_id) {
      $state.go('certificate_coupons_university.details', { 'id': '36' }, { reload: true });
    };
    //获取大图  /images/images/placeholder.png
    $scope.viewImage = function (image) {
      image = '/static/images/example.png';
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
  }
]);
angular.module('iwx').controller('certificateUniversityCreateCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'ngTableParams',
  'eventType',
  '$filter',
  function ($scope, $http, $rootScope, ngTableParams, eventType, $filter) {
    $scope.coupon = {};
    //验证参数
    $scope.validation = function () {
      console.log($scope.coupon.end_time);
      console.log($filter('date')(new Date(), 'yyyy-MM-dd HH:mm'));
      if ($scope.coupon.title === undefined || $scope.coupon.title === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u540d\u79f0'
        });
        return false;
      }
      if ($scope.coupon.end_time === undefined || $scope.coupon.end_time === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u7ed3\u675f\u65f6\u95f4'
        });
        return false;
      }
      if ($scope.coupon.sponsor_name === undefined || $scope.coupon.sponsor_name === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u8d5e\u52a9\u5546\u540d\u79f0'
        });
        return false;
      }
      if ($scope.coupon.total === undefined || isNaN(parseInt($scope.coupon.total)) || parseInt($scope.coupon.total) <= 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u603b\u6570'
        });
        return false;
      }
      return true;
    };
    //获取表单参数
    var getFormData = function () {
      var fd = new FormData();
      fd.append('end_time', $scope.coupons.end_time);
      fd.append('title', $scope.coupons.title);
      fd.append('sponsor_name', $scope.coupons.sponsor_name);
      fd.append('sponsor_logo', $scope.coupons.sponsor_logo);
      fd.append('image', $scope.coupons.image);
      fd.append('total', $scope.coupons.total);
      return fd;
    };
    //创建电子凭证
    $scope.create = function () {
      if (!$scope.validation()) {
        return;
      }
      var url = '';
      $http.post(url, getFormData(), { headers: { 'Content-Type': undefined } }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6210\u529f\u521b\u5efa\u7535\u5b50\u51ed\u8bc1\u3002'
        });
      });
    };
  }
]);
angular.module('iwx').controller('certificateUniversityDetailCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  'ngTableParams',
  'eventType',
  function ($scope, $rootScope, $http, $stateParams, ngTableParams, eventType) {
    $scope.coupon_id = parseInt($stateParams.id);
    //确认框参数
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //电子凭证使用状态
    $scope.coupon_status = {
      'NEW': {
        'text': '\u672a\u4f7f\u7528',
        'label': 'label label-info'
      },
      'USED': {
        'text': '\u5df2\u4f7f\u7528',
        'label': 'label label-success'
      },
      'EXPIRED': {
        'text': '\u5df2\u8fc7\u671f',
        'label': 'label label-warning'
      },
      'RETRIEVE': {
        'text': '\u5df2\u4f5c\u5e9f',
        'label': 'label label-danger'
      }
    };
    //电子凭证使用详情
    var NgTableParams = ngTableParams;
    var coupon_details = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        var url = '/api/goods/' + $scope.coupon_id + '/users';
        $http.get(url + '?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          console.log(data);
          coupon_details = data.items;
          params.total(data.total);
          $defer.resolve(coupon_details);
        });
      }
    });
    //操作确认提示
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'takeback_coupon') {
        var url = '';
        $scope.tableParams.reload();  /*$http
					.post(url + $scope.confirm.param)
					.success(function (data) {
						$scope.tableParams.reload();
					});*/
      }
    };
    //收回电子礼券
    $scope.takeback_coupon = function (id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u6536\u56de\u8fd9\u4e2a\u7535\u5b50\u51ed\u8bc1\u5417?';
      $scope.confirm.type = 'takeback_coupon';
      $scope.confirm.param = id;
      $('#confirmModal').modal();
      return;
    };
  }
]);
angular.module('iwx').controller('communityUniversityCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$modal',
  '$state',
  'ngTableParams',
  'eventType',
  function ($scope, $rootScope, $http, $modal, $state, ngTableParams, eventType) {
    $rootScope.welcome_bg = false;
    //确认框参数
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //确认操作方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delete_community') {
        $http.delete('' + $scope.confirm.param).success(function () {
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'disable_community') {
        $http.post('/api/un/manager/' + $scope.confirm.param + '/use').success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u7981\u7528\u793e\u56e2\u6210\u529f'
          });
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'enable_community') {
        $http.post('/api/un/manager/' + $scope.confirm.param + '/use').success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u542f\u7528\u793e\u56e2\u6210\u529f\u3002'
          });
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'verify_approved') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'LONG_INFO',
          'message': '\u5904\u7406\u4e2d...'
        });
        console.log('<\u8981\u6279\u51c6\u7684\u793e\u56e2\u7ba1\u7406\u5458\u90ae\u7bb1\uff1a>' + $scope.confirm.param);
        $http.get('/api/un/confirm/' + $scope.confirm.param).success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, null);
          $scope.tableParams.reload();
        });
      }
    };
    //社团信息表格
    var load_university_communities = function () {
      var NgTableParams = ngTableParams;
      var communities = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/un/community?page=' + params.page() + '&per_page=' + params.count() + '&c_type=committee').success(function (data) {
            communities = data.items;
            params.total(data.total);
            $defer.resolve(communities);
          });
        }
      });
    };
    load_university_communities();
    //给通过审核的社团发私信
    $scope.privateLetter = function (communityId) {
      $modal.open({
        templateUrl: 'partial/community/community_iWX/community_iWX_letter.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.ok = function () {
              var letter = {};
              letter['community_id'] = communityId;
              letter['content'] = $scope.content;
              console.log(letter);
              $http.post('/api/un/single/message/create', letter).success(function (data) {
                $modalInstance.close('ok');
                $rootScope.$emit(eventType.NOTIFICATION, {
                  'type': 'POPMSG',
                  'title': '\u6d88\u606f',
                  'message': '\u5df2\u7ecf\u6210\u529f\u5411\u793e\u56e2\u7ba1\u7406\u5458\u53d1\u9001\u79c1\u4fe1\u3002'
                });
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //禁用社团
    $scope.disable_community = function (admin_user_id) {
      $scope.confirm.message = '\u5982\u679c\u7981\u7528\u793e\u56e2\uff0c\u8be5\u793e\u56e2\u7ba1\u7406\u5458\u5c06\u65e0\u6cd5\u767b\u5f55\uff0c\u662f\u5426\u7ee7\u7eed?';
      $scope.confirm.type = 'disable_community';
      $scope.confirm.param = admin_user_id;
      $('#confirmModal').modal();
    };
    //启用社团
    $scope.enable_community = function (admin_user_id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u542f\u7528\u8fd9\u4e2a\u793e\u56e2\u5417?';
      $scope.confirm.type = 'enable_community';
      $scope.confirm.param = admin_user_id;
      $('#confirmModal').modal();
    };
    //删除社团信息
    $scope.delete_community = function (communityId) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e2a\u793e\u56e2\u5417?';
      $scope.confirm.type = 'delete_community';
      $scope.confirm.param = communityId;
      $('#confirmModal').modal();
      return;
    };
    //批准社团通过审核
    $scope.approved = function (email) {
      $scope.confirm.message = '\u786e\u5b9a\u6279\u51c6\u8be5\u793e\u56e2\u5ba1\u6838\u901a\u8fc7\uff1f';
      $scope.confirm.type = 'verify_approved';
      $scope.confirm.param = email;
      $('#confirmModal').modal();
    };
    //拒绝社团通过审核
    $scope.reject = function (community_id) {
      $scope.confirm.message = '\u786e\u5b9a\u62d2\u7edd\u8be5\u793e\u56e2\u5ba1\u6838\u901a\u8fc7\uff1f';
      $scope.confirm.type = 'verify_reject';
      $scope.confirm.param = community_id;
      $('#confirmModal').modal();
    };
    //获取大图  /images/images/placeholder.png
    $scope.viewImage = function (image) {
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    //tree option and data
    $scope.treeOptions = {
      nodeChildren: 'children',
      dirSelectable: true,
      injectClasses: {
        ul: 'a1',
        li: 'a2',
        liSelected: 'a7',
        iExpanded: 'a3',
        iCollapsed: 'a4',
        iLeaf: 'a5',
        label: 'a6',
        labelSelected: 'tree_selected'
      }
    };
    //tree data model
    $scope.dataForTheTree = [
      {
        'nickname': '\u793e\u56e2\u4fe1\u606f',
        'id': 1,
        'children': [
          {
            'nickname': '\u793e\u56e2\u5217\u8868',
            'id': 3,
            'parent_id': 1
          },
          {
            'nickname': '\u5f85\u5ba1\u6838\u793e\u56e2',
            'id': 4,
            'parent_id': 1
          }
        ]
      },
      {
        'nickname': '\u793e\u56e2\u6d3b\u52a8\u5ba1\u6279',
        'id': 2,
        'children': [{
            'nickname': '\u5ba1\u6279\u8bbe\u7f6e',
            'id': 5,
            'parent_id': 2
          }]
      }
    ];
    $scope.expandedNodes = [];
    for (var i = 0; i < $scope.dataForTheTree.length; i++) {
      $scope.expandedNodes.push($scope.dataForTheTree[i]);
    }
    $scope.$on('changeMenu', function (obj, param) {
      if (param === 'committee') {
        $scope.menu_name = '\u9662\u7cfb\u56e2\u59d4';
      } else if (param === 'tissue') {
        $scope.menu_name = '\u9662\u7cfb\u5b66\u751f\u4f1a';
      } else if (param === 'organization') {
        $scope.menu_name = '\u6821\u7ea7\u5b66\u751f\u7ec4\u7ec7';
      } else {
        $scope.menu_name = '\u5b66\u751f\u793e\u56e2';
      }
    });
  }
]);
angular.module('iwx').controller('CommUniPendingCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  function ($scope, $rootScope, $http, ngTableParams, eventType) {
    //加载待审核的学校社团列表
    var load_university_pending = function () {
      var NgTableParams = ngTableParams;
      var communities = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/un/pending_admins?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            communities = data.items;
            params.total(data.total);
            $defer.resolve(communities);
          });
        }
      });
    };
    load_university_pending();
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'verify_approved') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'LONG_INFO',
          'message': '\u5904\u7406\u4e2d...'
        });
        console.log('\u8981\u6279\u51c6\u7684\u793e\u56e2\u7ba1\u7406\u5458\u90ae\u7bb1\uff1a' + $scope.confirm.param);
        $http.get('/api/un/confirm/' + $scope.confirm.param).success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, null);
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'verify_reject') {
        console.log('verify_reject');
      }
    };
    //批准社团通过审核
    $scope.approved = function (email) {
      $scope.confirm.message = '\u786e\u5b9a\u6279\u51c6\u8be5\u793e\u56e2\u5ba1\u6838\u901a\u8fc7\uff1f';
      $scope.confirm.type = 'verify_approved';
      $scope.confirm.param = email;
      $('#confirmModal').modal();
    };
    //拒绝社团通过审核
    $scope.reject = function (communityId) {
      $scope.confirm.message = '\u786e\u5b9a\u62d2\u7edd\u8be5\u793e\u56e2\u5ba1\u6838\u901a\u8fc7\uff1f';
      $scope.confirm.type = 'verify_reject';
      $scope.confirm.param = communityId;
      $('#confirmModal').modal();
    };
  }
]);
angular.module('iwx').controller('CommUniElectionCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  function ($scope, $rootScope, $http, ngTableParams) {
    //加载申请换届的学校列表
    var load_university_election = function () {
      var NgTableParams = ngTableParams;
      var communities = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/un/election?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            communities = data.items;
            params.total(data.total);
            $defer.resolve(communities);
          });
        }
      });
    };
    load_university_election();
    //确认操作方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'election_approved') {
        //批准社团换届
        console.log($scope.confirm.param);
        $http.get('/api/un/confirm/' + $scope.confirm.param + '/election').success(function (data) {
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'election_reject') {
        console.log($scope.confirm.param);
        //拒绝社团换届
        $http.post('/api/un/' + $scope.confirm.param + '/refuse').success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
    //批准申请换届
    $scope.approved_election = function (election_id) {
      $scope.confirm.message = '\u786e\u5b9a\u6279\u51c6\u793e\u56e2\u6362\u5c4a\uff1f';
      $scope.confirm.type = 'election_approved';
      $scope.confirm.param = election_id;
      $('#confirmModal').modal();
    };
    //拒绝申请换届
    $scope.refuse_election = function (election_id) {
      $scope.confirm.message = '\u786e\u5b9a\u62d2\u7edd\u793e\u56e2\u6362\u5c4a\uff1f';
      $scope.confirm.type = 'election_reject';
      $scope.confirm.param = election_id;
      $('#confirmModal').modal();
    };
  }
]);
angular.module('iwx').controller('OrgInfoCtrl', [
  '$rootScope',
  '$scope',
  '$http',
  'ngTableParams',
  '$modal',
  'eventType',
  '$state',
  function ($rootScope, $scope, $http, ngTableParams, $modal, eventType, $state) {
    //确认框参数
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //定义组织表格的状态参数对象
    $scope.status_arr = [{
        id: 0,
        name: 'pendding',
        descript: '\u5f85\u5ba1\u6838',
        chosen: false
      }];
    $scope.c_type = '';
    if ($state.current.name === 'community_university.league') {
      $scope.c_type = 'committee';
    } else if ($state.current.name === 'community_university.stu_union') {
      $scope.c_type = 'tissue';
    } else if ($state.current.name === 'community_university.stu_org') {
      $scope.c_type = 'organization';
    } else {
      $scope.c_type = 'union';
      $scope.union = true;
    }
    $rootScope.$broadcast('changeMenu', $scope.c_type);
    $scope.is_verify = true;
    //选择表格状态
    $scope.chose_status = function (status) {
      if (status.chosen) {
        status.chosen = false;
        $scope.is_verify = true;
        //调用待审核组织列表
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      } else {
        status.chosen = true;
        $scope.is_verify = false;
        //调用全部社团组织列表
        $scope.tableParams.page(1);
        $scope.tableParams.reload();
      }
    };
    //创建组织表格
    var load_org = function () {
      var NgTableParams = ngTableParams;
      var communities = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          var request_url;
          if ($scope.is_verify) {
            request_url = '/api/un/community?page=' + params.page() + '&per_page=' + params.count() + '&c_type=' + $scope.c_type;
          } else {
            request_url = '/api/un/pending_admins?page=' + params.page() + '&per_page=' + params.count() + '&c_type=' + $scope.c_type;
          }
          $http.get(request_url).success(function (data) {
            communities = data.items;
            params.total(data.total);
            $defer.resolve(communities);
          });
        }
      });
    };
    load_org();
    //确认操作方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'verify_approved') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'LONG_INFO',
          'message': '\u5904\u7406\u4e2d...'
        });
        console.log('<\u8981\u6279\u51c6\u7684\u793e\u56e2\u7ba1\u7406\u5458\u90ae\u7bb1\uff1a>' + $scope.confirm.param);
        $http.get('/api/un/confirm/' + $scope.confirm.param).success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, null);
          $scope.tableParams.reload();
        });
      }
    };
    //私信
    $scope.private_letter = function (community_id) {
      $modal.open({
        templateUrl: 'partial/community/community_iWX/community_iWX_letter.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.ok = function () {
              var letter = {};
              letter['community_id'] = community_id;
              letter['content'] = $scope.content;
              console.log(letter);
              $http.post('/api/un/single/message/create', letter).success(function (data) {
                $modalInstance.close('ok');
                $rootScope.$emit(eventType.NOTIFICATION, {
                  'type': 'POPMSG',
                  'title': '\u6d88\u606f',
                  'message': '\u5df2\u7ecf\u6210\u529f\u5411\u793e\u56e2\u7ba1\u7406\u5458\u53d1\u9001\u79c1\u4fe1\u3002'
                });
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //批准社团加入
    $scope.approve = function (email) {
      $scope.confirm.message = '\u786e\u5b9a\u6279\u51c6\u8be5\u793e\u56e2\u5ba1\u6838\u901a\u8fc7\uff1f';
      $scope.confirm.type = 'verify_approved';
      $scope.confirm.param = email;
      $('#confirmModal').modal();
    };
    //打开详情页面
    $scope.org_info_detail = function (community, admin) {
      $modal.open({
        templateUrl: 'partial/community/community_university/community_org_info/org_info_detail.html',
        controller: 'OrgInfoDetCtrl',
        resolve: {
          community: function () {
            return community;
          }
        }
      });
    };
  }
]);
angular.module('iwx').controller('OrgInfoDetCtrl', [
  '$scope',
  '$rootScope',
  '$stateParams',
  '$http',
  'community',
  'eventType',
  '$modalInstance',
  function ($scope, $rootScope, $stateParams, $http, community, eventType, $modalInstance) {
    console.log(community);
    $scope.community = community;
    if ($scope.community.admin_user.confirmed_at) {
      $scope.status = true;
    } else {
      $scope.status = false;
    }
    //批准社团
    $scope.approve_org = function (email) {
      $rootScope.$emit(eventType.NOTIFICATION, {
        'type': 'LONG_INFO',
        'message': '\u5904\u7406\u4e2d...'
      });
      $modalInstance.close('ok');
      console.log('<\u8981\u6279\u51c6\u7684\u793e\u56e2\u7ba1\u7406\u5458\u90ae\u7bb1\uff1a>' + email);
      $http.get('/api/un/confirm/' + email).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, null);
        $scope.tableParams.reload();
      });
    };
  }
]);
angular.module('iwx').controller('MessageUniversityCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$modal',
  'ngTableParams',
  'eventType',
  '$state',
  function ($scope, $rootScope, $http, $modal, ngTableParams, eventType, $state) {
    $rootScope.welcome_bg = false;
    //确认框参数
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //社团id数组
    $scope.community_id_array = [];
    //选中社团的hash对照表
    $scope.community_id_hash = {};
    var hashtable = {};
    //定义变量，用来记录当前页码信息
    var current_page = 1;
    //定义页码和全选状态对照表
    var page_check_all_hash = {};
    //加载社团信息表格
    var load_message_communities = function () {
      var NgTableParams = ngTableParams;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 5
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/un/message?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            //给当前页码变量赋值
            current_page = params.page();
            //处理服务器返回数据
            $scope.communitys = data.items;
            params.total(data.total);
            $defer.resolve($scope.communitys);
            //控制全选框的选中状态
            if (page_check_all_hash[current_page]) {
              $scope.is_checked_all = true;
            } else {
              $scope.is_checked_all = false;
            }
          });
        }
      });
    };
    load_message_communities();
    //对社团进行全部选择操作
    $scope.get_checked_all = function (is_checked_all) {
      //当社团被全部选中时
      if (is_checked_all) {
        //当选中全选按钮时，进行页码和全选状态的记录
        page_check_all_hash[current_page] = true;
        for (var i = 0; i < $scope.communitys.length; i++) {
          var temp = $scope.communitys[i];
          if (!hashtable[temp.community.id]) {
            hashtable[temp.community.id] = true;
            $scope.community_id_array.push(temp.community.id);
          }
        }
        $scope.community_id_hash = {};
        $scope.is_checked_all = true;
      } else {
        //用来记录要删除的子数组的元素
        var hash = {};
        angular.forEach($scope.communitys, function (value) {
          hash[value.community.id] = true;
        });
        console.log('\u8981\u5220\u9664\u7684\u5b50\u6570\u7ec4hash\u8868\uff1a' + angular.toJson(hash));
        for (var j = 0; j < $scope.community_id_array.length; j++) {
          if (hash[$scope.community_id_array[j]]) {
            delete $scope.community_id_array[j];
          }
        }
        //当取消全选按钮时，进行页码和全选状态的记录
        page_check_all_hash[current_page] = false;
        hashtable = {};
        // $scope.community_id_array.splice(0, $scope.community_id_array.length);
        $scope.is_checked_all = false;
      }
    };
    //对社团进行单个选择操作
    $scope.get_checked_item = function (community_id, is_checked_item) {
      //当社团被选中时
      if (is_checked_item) {
        hashtable[community_id] = true;
        $scope.community_id_hash[community_id] = true;
        $scope.community_id_array.push(community_id);
      } else {
        for (var i = 0; i < $scope.community_id_array.length; i++) {
          var temp = $scope.community_id_array[i];
          if (temp === community_id) {
            hashtable[community_id] = false;
            $scope.community_id_hash[community_id] = false;
            $scope.community_id_array.splice($scope.community_id_array.indexOf(temp), 1);
            break;
          }
        }
      }
    };
    //每条记录的复选框勾选状态
    $scope.is_checked = function (id) {
      if ($scope.is_checked_all) {
        return true;
      } else {
        return $scope.community_id_hash[id];
      }
    };
    //全选复选框勾选状态
    $scope.checked_all = function () {
      return $scope.is_checked_all;
    };
    //操作确认提示
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delete_information') {
        $http.delete('/api/un/' + $scope.confirm.param + '/message/del').success(function () {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u6210\u529f\u5220\u9664\u4e0e\u8be5\u793e\u56e2\u7684\u901a\u4fe1\u8bb0\u5f55\u3002'
          });
          $scope.tableParams.reload();
        });
      }
    };
    //删除通信记录
    $scope.delete_information = function (community_id) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8fd9\u4e2a\u793e\u56e2\u76f8\u5173\u7684\u901a\u4fe1\u8bb0\u5f55\uff1f';
      $scope.confirm.type = 'delete_information';
      $scope.confirm.param = community_id;
      $('#confirmModal').modal();
      return;
    };
    //打开私信对话框
    var open_dialog = function (url, community_id, category) {
      $modal.open({
        templateUrl: 'partial/message/message_iWX/message_iWX_letter.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.ok = function () {
              console.log(url);
              var letter = {};
              if (category === 'item') {
                letter['community_id'] = community_id;
              } else {
                letter['communities'] = community_id;
              }
              letter['content'] = $scope.content;
              console.log(letter);
              $http.post(url, letter).success(function () {
                $rootScope.$emit(eventType.NOTIFICATION, {
                  'type': 'POPMSG',
                  'title': '\u6d88\u606f',
                  'message': '\u5df2\u7ecf\u6210\u529f\u5411\u793e\u56e2\u7ba1\u7406\u5458\u53d1\u9001\u4fe1\u606f\u3002'
                });
                $modalInstance.close('ok');
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //私信
    //向选中的社团发送信息
    $scope.private_letter = function (community_id, category) {
      if (category === 'all') {
        var community_ids_parma = { 'community_ids': [] };
        console.log('\u793e\u56e2id\u539f\u6570\u7ec4\uff1a' + angular.toJson($scope.community_id_array));
        angular.forEach($scope.community_id_array, function (value) {
          if (value) {
            community_ids_parma.community_ids.push(value);
          }
        });
        console.log('\u8981\u53d1\u9001\u7684\u793e\u56e2id\u6570\u7ec4\u53c2\u6570\u4e3a\uff1a' + angular.toJson(community_ids_parma));
        if (community_ids_parma.community_ids.length === 0) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u8bf7\u9009\u62e9\u8981\u53d1\u9001\u79c1\u4fe1\u7684\u793e\u56e2\u3002'
          });
          return;
        }
        open_dialog('/api/un/multi/message/create', community_ids_parma.community_ids, category);
      } else if (category === 'item') {
        console.log('\u5411\u67d0\u4e2a\u793e\u56e2\u53d1\u9001\u79c1\u4fe1\uff1a' + community_id);
        open_dialog('/api/un/single/message/create', community_id, category);
      }
    };
    $scope.viewImage = function (image) {
      console.log(image);
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    //进入聊天信息页面
    $scope.go_to_message = function (community_id) {
      $state.go('message_university.message_uni_to_community', { 'id': community_id });
    };
  }
]);
angular.module('iwx').controller('CreateLetterUniversityCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'eventType',
  function ($scope, $rootScope, $http, eventType) {
    //查询到的社团
    $scope.communitys = [];
    $scope.community_set = {};
    //当前页码
    $scope.current_page = 1;
    //选中的社团id数组
    $scope.community_id_chosen = [];
    //要发送的私信内容
    $scope.message = {};
    //选择要新建私信的社团
    $scope.choose_community = function (community_id, choose_item) {
      console.log(community_id);
      if (choose_item) {
        $scope.community_id_chosen.push(community_id);
        console.log($scope.community_id_chosen);
      } else {
        for (var i = 0; i < $scope.community_id_chosen.length; i++) {
          var temp = $scope.community_id_chosen[i];
          if (temp === community_id) {
            $scope.community_id_chosen.splice($scope.community_id_chosen.indexOf(temp), 1);
          }
        }
        console.log($scope.community_id_chosen);
      }
    };
    //选择查询到的所有社团进行发送私信操作
    $scope.choose_communitys = function (choose_all) {
      if (choose_all) {
        console.log($scope.communitys.length);
        if ($scope.community_id_chosen.length !== 0) {
          $scope.community_id_chosen.splice(0, $scope.community_id_chosen.length);
        }
        for (var i = 0; i < $scope.communitys.length; i++) {
          var temp = $scope.communitys[i];
          $scope.community_id_chosen.push(temp.id);
        }
        console.log($scope.community_id_chosen);
      } else {
        $scope.community_id_chosen.splice(0, $scope.community_id_chosen.length);
        console.log($scope.community_id_chosen);
      }
    };
    //加载查询到的社团
    var load_community = function (page) {
      $http.get('/api/un/community?page=' + page + '&per_page=12').success(function (data) {
        if (data.items.length === 0) {
          if (page !== 1) {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u5df2\u52a0\u8f7d\u5168\u90e8\u7b26\u5408\u6761\u4ef6\u7684\u793e\u56e2'
            });
          }
          return;
        }
        $scope.show_community = true;
        var add = 0;
        angular.forEach(data.items, function (value) {
          console.log(value);
          if (!(value.id in $scope.community_set)) {
            $scope.community_set[value.community.id] = true;
            $scope.communitys.push(value.community);
            add++;
          }
        });
        //当全选复选框为选中状态时，添加选中的社团
        if ($scope.choose_all) {
          $scope.choose_communitys($scope.choose_all);
          console.log($scope.communitys.length + '----115');
        }
        if (add === 0) {
          load_community(++$scope.current_page);
        }
      });
    };
    load_community($scope.current_page);
    //加载更多
    $scope.load_more = function () {
      load_community(++$scope.current_page);
    };
    //验证方法
    $scope.validate_letter = function () {
      if ($scope.message.content === '' || $scope.message.content === undefined) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u586b\u5199\u8981\u53d1\u9001\u7684\u79c1\u4fe1\u5185\u5bb9\u3002'
        });
        return false;
      }
      if ($scope.community_id_chosen.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u9009\u62e9\u8981\u53d1\u9001\u79c1\u4fe1\u7684\u793e\u56e2\u3002'
        });
        return false;
      }
      return true;
    };
    //向选中的社团发送私信
    $scope.send_letter = function () {
      if (!$scope.validate_letter()) {
        return;
      }
      //群发私信接口
      $scope.message['communities'] = $scope.community_id_chosen;
      console.log($scope.message);
      $http.post('/api/un/multi/message/create', $scope.message).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u5df2\u7ecf\u6210\u529f\u7ed9\u9009\u4e2d\u7684\u793e\u56e2\u53d1\u9001\u79c1\u4fe1\u3002'
        });
        $scope.message.content = '';
      });
    };
  }
]);
angular.module('iwx').controller('MessageToCommUniCtrl', [
  '$scope',
  '$http',
  '$stateParams',
  'userService',
  '$rootScope',
  'eventType',
  function ($scope, $http, $stateParams, userService, $rootScope, eventType) {
    $scope.messages = [];
    var messageSet = {};
    var current_page = 1;
    var loadMessages = function (page) {
      var url = '/api/un/' + $stateParams.id + '/message?page=' + page + '&per_page=' + 10;
      $http.get(url).success(function (data) {
        if (data.items.length === 0) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u5df2\u52a0\u8f7d\u5168\u90e8\u804a\u5929\u4fe1\u606f'
          });
          return;
        }
        var added = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in messageSet)) {
            messageSet[value.id] = true;
            $scope.messages.push(value);
            added++;
          }
        });
        if (added === 0) {
          loadMessages(++current_page);
        }
      });
    };
    loadMessages(current_page);
    $scope.loadMore = function () {
      loadMessages(++current_page);
    };
    $scope.send = function () {
      if (!$scope.content) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u586b\u5199\u8981\u53d1\u9001\u7684\u79c1\u4fe1\u5185\u5bb9\u3002'
        });
        return;
      }
      var letter = {};
      letter['community_id'] = $stateParams.id;
      letter['content'] = $scope.content;
      console.log(letter);
      $http.post('/api/un/single/message/create', letter).success(function (data) {
        messageSet[data.id] = true;
        $scope.messages.unshift(data);
      });
      $scope.content = '';
    };
  }
]);
angular.module('iwx').controller('ActivityItemCtrl', [
  '$scope',
  '$http',
  '$modal',
  '$state',
  '$stateParams',
  '$rootScope',
  '$filter',
  'eventType',
  '$window',
  function ($scope, $http, $modal, $state, $stateParams, $rootScope, $filter, eventType, $window) {
    $scope.page = $stateParams.currentPage;
    /**
        修改内容：将info信息框修改为弹出modal信息框
    */
    $scope.plugins_config = {
      announcement: {
        'id': 'announcement',
        'name': '\u516c\u544a\u677f',
        'icon_path': '/static/images/announcement_new.png',
        'note': '\u6d3b\u52a8\u5730\u70b9\uff0c\u65f6\u95f4\uff0c\u4e34\u65f6\u7a81\u53d1\u72b6\u51b5\u53ef\u4ee5\u901a\u8fc7\u516c\u544a\u677f\u7b2c\u4e00\u65f6\u95f4\u63a8\u9001\u7ed9\u6240\u6709\u5173\u6ce8\u672c\u6d3b\u52a8\u7684\u5c0f\u4f19\u4f34\u4eec\u3002'
      },
      timeline: {
        'id': 'timeline',
        'name': '\u6d3b\u52a8\u52a8\u6001',
        'icon_path': '/static/images/timeline_new.png',
        'note': '\u901a\u8fc7\u56fe\u7247\u548c\u6587\u5b57\u5f62\u5f0f\u8fd8\u539f\u73b0\u573a\u5b9e\u65f6\u52a8\u6001\uff0c\u6bcf\u4e00\u6761\u52a8\u6001\u53ef\u901a\u8fc7\u5927\u5c4f\u5e55\u5b9e\u65f6\u5c55\u793a\u3002'
      },
      ticket: {
        'id': 'ticket',
        'name': '\u7535\u5b50\u7968',
        'icon_path': '/static/images/ticket_new.png',
        'note': '\u73af\u4fdd\uff0c\u65f6\u5c1a\u7684\u7535\u5b50\u7968\u636e\uff0c\u4f5c\u4e3a\u6d3b\u52a8\u552f\u4e00\u7684\u5165\u573a\u51ed\u8bc1\uff0c\u7535\u5b50\u7968\u9762\u5185\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5e7f\u544a\u4f4d\uff08\u5305\u542b\u7968\u9762\u80cc\u666f\u548c\u8d5e\u52a9\u5546logo\uff09\uff0c\u901a\u8fc7\u540e\u53f0\u53ef\u4ee5\u5b9e\u65f6\u67e5\u770b\u62a2\u7968\u4eba\u6570\uff0c\u5b9e\u9645\u5230\u573a\u9a8c\u7968\u4eba\u6570\uff0c\u5ba2\u89c2\u53cd\u6620\u73b0\u573a\u7684\u70ed\u70c8\u7a0b\u5ea6\uff0c\u6bcf\u4e00\u5f20\u7535\u5b50\u7968\u90fd\u6709\u552f\u4e00\u7684\u7535\u5b50\u7968\u7f16\u53f7\uff0c\u53ef\u88ab\u7528\u4e8e\u540e\u7eed\u7684\u5176\u4ed6\u73af\u8282\u7ee7\u7eed\u4f7f\u7528\u3002'
      },
      vote: {
        'id': 'vote',
        'name': '\u6295\u7968',
        'icon_path': '/static/images/vote_new.png',
        'note': '\u652f\u6301\u81ea\u5b9a\u4e49\u5019\u9009\u9879\uff0c\u53ef\u4ee5\u662f\u5019\u9009\u4eba\uff0c\u4e5f\u53ef\u4ee5\u662f\u5019\u9009\u9898\u76ee\uff0c\u901a\u8fc7\u7075\u6d3b\u8bbe\u7f6e\u6295\u7968\u89c4\u5219\uff0c\u53ef\u4ee5\u6536\u96c6\u5230\u8f83\u4e3a\u7cbe\u786e\u7684\u6295\u7968\u7edf\u8ba1\u6570\u636e\u3002'
      },
      sign_in: {
        'id': 'sign_in',
        'name': '\u7b7e\u5230',
        'icon_path': '/static/images/sign_in_new.png',
        'note': '\u8f7b\u91cf\u5316\u7684\u5165\u573a\u51ed\u8bc1\uff0c\u53ef\u4f5c\u4e3a\u6d3b\u52a8\u552f\u4e00\u7684\u5165\u573a\u65b9\u5f0f\uff0c\u7ae5\u978b\u4eec\u901a\u8fc7\u626b\u63cf\u5165\u573a\u5904\u7684\u4e8c\u7ef4\u7801\u7b7e\u5230\u5165\u573a\uff0c\u6bcf\u4e00\u5f20\u7b7e\u5230\u51ed\u8bc1\u90fd\u6709\u552f\u4e00\u7684\u7b7e\u5230\u53f7\u7801\uff0c\u53ef\u88ab\u7528\u4e8e\u540e\u7eed\u7684\u5176\u4ed6\u73af\u8282\u7ee7\u7eed\u4f7f\u7528\u3002'
      },
      lottery: {
        'id': 'lottery',
        'name': '\u62bd\u5956',
        'icon_path': '/static/images/lottery_new.png',
        'note': '\u6d3b\u8dc3\u73b0\u573a\u5229\u5668\uff0c\u793e\u56e2\u53ef\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u5b89\u6392\u51fa\u5bf9\u5e94\u7684\u5355\u9879\u5956\uff0c\u914d\u5408\u5927\u5c4f\u5e55\u7684\u4f7f\u7528\u53ef\u4ee5\u8ba9\u6d3b\u52a8\u73b0\u573a\u60ac\u5ff5\u611f\u5341\u8db3\uff0c\u52a0\u5f3a\u793e\u56e2\u4e0e\u53c2\u4f1a\u5c0f\u4f19\u4f34\u4eec\u7684\u4e92\u52a8\u3002'
      },
      contests: {
        'id': 'contests',
        'name': '\u6253\u5206',
        'icon_path': '/static/images/grade_new.png',
        'note': '\u6253\u5206'
      },
      questionnaire: {
        'id': 'questionnaire',
        'name': '\u95ee\u5377',
        'icon_path': '/static/images/questionnaire.png',
        'note': '\u4fbf\u4e8e\u6536\u96c6\u610f\u89c1\uff0c\u76ee\u524d\u652f\u6301\u56db\u79cd\u95ee\u9898\uff0c\u5355\u9009\u3001\u591a\u9009\u3001\u7b80\u7b54\u4ee5\u53ca\u4e0a\u4f20\u56fe\u7247\uff0c\u6bcf\u4e00\u6b21\u95ee\u5377\u652f\u6301\u6dfb\u52a0\u65e0\u9650\u91cf\u7684\u793c\u5238\uff0c\u793c\u5238\u53ef\u4ee5\u4ece\u7535\u5b50\u51ed\u8bc1\u7ba1\u7406\u4e2d\u8c03\u53d6\uff0c\u56de\u7b54\u5b8c\u6210\u540e\u81ea\u52a8\u83b7\u5f97\u4e00\u79cd\u793c\u5238\u7684\u4e00\u5f20\uff0c\u5148\u5230\u5148\u5f97\uff01\u5177\u4f53\u4f7f\u7528\u7ec6\u8282\u8bf7\u53c2\u9605\u95ee\u5377\u6982\u51b5\u4e2d\u7684\u95ee\u5377\u529f\u80fd\u89e3\u91ca\u3002'
      }
    };
    //验证表达式  /^[a-zA-Z0-9_\u4e00-\u9fa5_\x21-\x7e]{0,15}$/   /^[a-zA-Z0-9_\u4e00-\u9fa5_\x21-\x7e]{0,20}$/
    $scope.content_regexp = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,20}$|^[\w\s_\x21-\x7e]{0,40}$/;
    $scope.sub_regexp = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,25}$|^[\w\s_\x21-\x7e]{0,50}$/;
    $scope.loc_regexp = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,15}$|^[\w\s_\x21-\x7e]{0,30}$/;
    $scope.editingActivityId = parseInt($stateParams.id);
    $scope.voteid = -1;
    $scope.activity = { 'id': $scope.editingActivityId };
    if ($scope.editingActivityId !== -1) {
      $http.get('/api/admin/activities/' + $scope.editingActivityId).success(function (data) {
        $scope.activity = data;
        $scope.act_plugin = [];
        // $scope.activity.plugins.push({'id': 'questionnaire', 'name': '问卷'});
        //find vote id
        if ($scope.activity.plugins && $scope.activity.plugins.length > 0) {
          for (var i = 0; i < $scope.activity.plugins.length; i++) {
            var temp_plugin = $scope.activity.plugins[i];
            temp_plugin['icon_path'] = $scope.plugins_config[temp_plugin.id].icon_path;
            $scope.act_plugin.push(temp_plugin);
            if ($scope.activity.plugins[i].id === 'vote' && $scope.activity.plugins[i].enabled === true && $scope.activity.plugins[i].preview && $scope.activity.plugins[i].preview.id) {
              $scope.voteid = $scope.activity.plugins[i].preview.id;
            }
          }
          console.log($scope.act_plugin);
        }  // console.log($scope.activity);
      });
    }
    /*$scope.$watch('activity.published', function(newVal, oldVal) {
        console.log(newVal);
        console.log(oldVal);
        if (newVal !== undefined &&
            oldVal !== undefined &&
            newVal !== oldVal &&
            $scope.activity.id &&
            $scope.editingActivityId !== -1) {

            var goodToGo = ($scope.activity.subject &&
                    $scope.activity.location &&
                    $scope.activity.start_time &&
                    $scope.activity.end_time &&
                    $scope.activity.content &&
                    $scope.activity.cover &&
                    $scope.activity.poster);

            if (newVal) {
                if (!goodToGo) {
                    $rootScope.$emit(eventType.NOTIFICATION, {
                        'type': 'POPMSG',
                        'title': '消息',
                        'message': '别偷懒，填写完所有内容再发布'
                    });
                    $scope.activity.published = false;
                    return;
                }
            }

            var action = newVal ? 'publish' : 'unpublish';
            var url = '/api/admin/activities/' + $scope.editingActivityId + '/' + action;
            $http.post(url).success(function(){
                if(newVal) {
                   $rootScope.$emit(eventType.NOTIFICATION, {
                        'type': 'POPMSG',
                        'title': '消息',
                        'message': '发布成功'
                    });  
                } else if(goodToGo) {
                   $rootScope.$emit(eventType.NOTIFICATION, {
                        'type': 'POPMSG',
                        'title': '消息',
                        'message': '取消发布成功'
                    });                     
                }
            });
        }
    });*/
    //是否发布活动
    $scope.isPublishActivity = function (id, isPublish, page) {
      var url = '';
      if (isPublish) {
        url = '/api/admin/activities/' + id + '/unpublish';
      } else {
        url = '/api/admin/activities/' + id + '/publish';
      }
      $http.post(url).success(function (data) {
        if (isPublish) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u53d6\u6d88\u53d1\u5e03\u6210\u529f'
          });
        } else {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u53d1\u5e03\u6210\u529f'
          });
        }
        $state.go('activity_item', {
          id: id,
          currentPage: page
        }, { reload: true });
      });
    };
    $scope.delete = function () {
      if ($scope.editingActivityId !== -1) {
        $http.delete('/api/admin/activities/' + $scope.editingActivityId).success(function () {
          $state.go('activity', { currentPage: 1 });
        });
      } else {
        $state.go('activity', { currentPage: 1 });
      }
    };
    if ($scope.editingActivityId !== -1) {
      $http.get('/api/plugins_normal').success(function (data) {
        var tempArr = [];
        for (var i = 0; i < data.length; i++) {
          var temp = $scope.plugins_config[data[i].id];
          tempArr.push(temp);
        }
        $scope.plugins = tempArr;  // console.log($scope.plugins);
      });
    }
    //去除活动内容中的html tag
    $scope.removeHtmlTag = function (str) {
      str = str.replace(/<\/?[^>]*>/g, '');
      //去除HTML tag
      str = str.replace(/[ | ]*\n/g, '\n');
      //去除行尾空白
      //str = str.replace(/\n[\s| | ]*\r/g,'\n'); //去除多余空行
      str = str.replace(/&nbsp;/gi, '');
      //去掉&nbsp;
      return str;
    };
    //提交活动信息，信息提示修改为弹出modal框的形式
    $scope.saveActivity = function () {
      //捕获异常  $scope.activity.start_time.replace(/-/g,"/")
      try {
        if (typeof $scope.activity.start_time === 'number') {
          $scope.activity.start_time = $filter('date')($scope.activity.start_time, 'yyyy-MM-dd HH:mm');
        }
        if (typeof $scope.activity.end_time === 'number') {
          $scope.activity.end_time = $filter('date')($scope.activity.end_time, 'yyyy-MM-dd HH:mm');
        }
        var stTime = new Date($scope.activity.start_time.replace(/-/g, '/'));
        var endTime = new Date($scope.activity.end_time.replace(/-/g, '/'));
        if (Date.parse(stTime) > Date.parse(endTime)) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u7ed3\u675f\u65f6\u95f4\u5fc5\u987b\u5728\u5f00\u59cb\u65f6\u95f4\u4e4b\u540e'
          });
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u9009\u62e9\u6d3b\u52a8\u65f6\u95f4'
        });
        return;
      }
      if (!$scope.activity.location || !$scope.activity.content || !$scope.activity.subject) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u5b8c\u6574\uff0c\u5176\u4e2d\u6d3b\u52a8\u4e3b\u9898\u3001\u6d3b\u52a8\u5730\u70b9\u548c\u6d3b\u52a8\u5185\u5bb9\u4e3a\u5fc5\u586b\u9879\uff01'
        });
        return;
      }
      //限制字数提示
      if (!$scope.sub_regexp.test($scope.activity.subject)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6d3b\u52a8\u4e3b\u9898\u8bf7\u9650\u5236\u572825\u4e2a\u6c49\u5b57\u4ee5\u5185\uff01'
        });
        return;
      }
      if (!$scope.loc_regexp.test($scope.activity.location)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6d3b\u52a8\u5730\u70b9\u8bf7\u9650\u5236\u572815\u4e2a\u6c49\u5b57\u4ee5\u5185\uff01'
        });
        return;
      }
      if ($scope.activity.members && !$scope.content_regexp.test($scope.activity.content)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6d3b\u52a8\u53e3\u53f7\u8bf7\u9650\u5236\u572820\u4e2a\u6c49\u5b57\u4ee5\u5185\uff01'
        });
        return;
      }
      //活动内容
      var contentText = $scope.removeHtmlTag($scope.activity.content);
      if (contentText.length > 2000) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u201c' + contentText.substring(1990, 2000) + '...\u201d\u4e4b\u540e\u7684\u5185\u5bb9\u8d85\u8fc7\u4e862000\u5b57\u6570\u9650\u5236\uff01'
        });
        return;
      }
      //设置图片宽高
      $scope.activity.content = $scope.activity.content.replaceAll('<img', '<img width="480px" height="320px"');
      if ($scope.editingActivityId === -1) {
        $http.post('/api/admin/activities').success(function (id) {
          // console.log(id);
          $scope.editingActivityId = id;
          var fd = new FormData();
          angular.forEach($scope.activity, function (value, key) {
            fd.append(key, value);
          });
          $http.post('/api/admin/activities/' + $scope.editingActivityId, fd, {
            transformRequest: angular.identity,
            headers: { 'Content-Type': undefined }
          }).success(function (data) {
            $scope.activity = data;
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u4fdd\u5b58\u6210\u529f'
            });
            $state.go('activity', { 'currentPage': 1 });  /*$state.go('activity_item', {
                        'id': $scope.editingActivityId,
                        'currentPage': page
                    });*/
          });
        });
      } else {
        // console.log($scope.removeHtmlTag($scope.activity.content));
        var fd = new FormData();
        angular.forEach($scope.activity, function (value, key) {
          fd.append(key, value);
        });
        // console.log($scope.activity.content);
        $http.post('/api/admin/activities/' + $scope.editingActivityId, fd, {
          transformRequest: angular.identity,
          headers: { 'Content-Type': undefined }
        }).success(function (data) {
          $scope.activity = data;
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u4fdd\u5b58\u6210\u529f'
          });
        });
      }
    };
    //添加插件
    $scope.addPlugin = function (plugin_id) {
      if ($scope.activity && $scope.activity.id && $scope.activity.id !== -1) {
        var url = '/api/admin/activities/' + $scope.activity.id + '/plugins';
        $http.post(url, { 'plugin_id': plugin_id }).success(function (data) {
          $scope.activity = data;
          $scope.act_plugin = [];
          angular.forEach(data.plugins, function (value) {
            value['icon_path'] = $scope.plugins_config[value.id].icon_path;
            $scope.act_plugin.push(value);
          });
          //添加插件完成后直接打开新添加的插件页面
          $state.go('activity_item.' + plugin_id + '_plugin');
        });
      }
    };
    //添加“更多功能”，打开modal窗体，显示要添加的插件
    $scope._addPlugin = function (plugin_id) {
      // console.log($scope.plugins);
      // console.log($scope.activity.plugins);
      var arr_temp_plugins = $scope.removeExistPlugin($scope.plugins, $scope.activity.plugins);
      if (arr_temp_plugins.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u63d0\u4f9b\u7684\u6240\u6709\u529f\u80fd\u90fd\u5df2\u6dfb\u52a0'
        });
      } else {
        var plugins_alivable = arr_temp_plugins;
        // console.log(plugins_alivable);
        $modal.open({
          templateUrl: 'partial/activity/plugin/plugin.html',
          controller: 'PluginAdd',
          resolve: {
            activity: function () {
              return $scope.activity;
            },
            plugins_alivable: function () {
              return plugins_alivable;
            }
          }
        });
      }
    };
    $scope.$on('addPlugin', function (event, data) {
      // console.log(data);
      var plugin_id = data;
      $scope.addPlugin(plugin_id);
    });
    //去掉已添加的插件
    $scope.removeExistPlugin = function (arr1, arr2) {
      var arr3 = [];
      var len_arr1 = arr1.length;
      var len_arr2 = arr2.length;
      for (var i = 0; i < len_arr1; i++) {
        var flag = true;
        for (var j = 0; j < len_arr2; j++) {
          if (arr1[i].id === arr2[j].id && arr1[i].id !== 'sign_in' && arr1[i].id !== 'vote' && arr1[i].id !== 'ticket' && arr1[i].id !== 'questionnaire') {
            flag = false;
          }
        }
        if (flag) {
          arr3.push(arr1[i]);
        }
      }
      return arr3;
    };
    //replace all string
    String.prototype.replaceAll = function (targetText, replaceText) {
      return this.replace(new RegExp(targetText, 'gm'), replaceText);
    };
  }
]);
angular.module('iwx').controller('AnnouncementCtrl', [
  '$scope',
  '$http',
  'ngTableParams',
  '$rootScope',
  'eventType',
  function ($scope, $http, ngTableParams, $rootScope, eventType) {
    // Avoid lint complain
    var NgTableParams = ngTableParams;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $http({
          url: '/api/plugins/announcements',
          method: 'GET',
          params: {
            'page': params.page(),
            'per_page': params.count(),
            'activity_id': $scope.$parent.activity.id,
            'rnd': Math.random()
          }
        }).success(function (data) {
          params.total(data.total);
          $defer.resolve(data.data);
        });
      }
    });
    $scope.submit = function () {
      if ($scope.content && $scope.content.length > 0) {
        $http.post('/api/plugins/announcements', {
          'activity_id': $scope.$parent.activity.id,
          'content': $scope.content
        }).success(function () {
          $scope.tableParams.reload();
        });
      } else {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u8981\u53d1\u5e03\u7684\u5185\u5bb9\uff01'
        });
      }
    };
    $scope.delete = function (id) {
      $http.delete('/api/plugins/announcements/' + id).success(function () {
        $scope.tableParams.reload();
      });
    };
  }
]);
angular.module('iwx').controller('PrizeAdd', [
  '$scope',
  '$state',
  '$modalInstance',
  'eventType',
  '$rootScope',
  '$http',
  'ngTableParams',
  'award',
  'activity_id',
  '$modal',
  function ($scope, $state, $modalInstance, eventType, $rootScope, $http, ngTableParams, award, activity_id, $modal) {
    $scope.award = award;
    // console.log($scope.award);
    var NgTableParams = ngTableParams;
    var coupons = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 5
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $http.get('/api/goods/community?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          if (data.total === 0) {
            $scope.note = true;
          }
          coupons = data.items;
          // console.log(coupons);
          params.total(data.total);
          $defer.resolve(coupons);
        });
      }
    });
    //添加奖品数量
    $scope.select = function (prize, coupon) {
      //console.log(angular.toJson(prize)+'-----'+angular.toJson(coupon));
      if (!prize) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u5956\u54c1\u6570\u91cf'
        });
        return;
      }
      if (coupon.remain - (prize.number || 0) * $scope.award.total < 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u5956\u54c1\u6570\u91cf\u4e0d\u591f'
        });
        return false;
      }
      $http.post('/api/lotteries/' + $scope.award.id + '/prize', {
        goods_id: coupon.id,
        number: prize.number,
        awards_id: $scope.award.id
      }).success(function (data) {
        $modalInstance.close('ok');
        $state.go('activity_item.lottery_plugin', { 'id': activity_id }, { reload: true });
      });
    };
    //跳转到电子凭证页面
    $scope.to_certificate = function () {
      $modalInstance.close('ok');
      $state.go('certificate', { reload: true });
    };
    //关闭窗口
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
    //获取原图  /images/images/placeholder.png
    $scope.viewImage = function (image) {
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }  // console.log(tempArr);
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
  }
]).controller('PrizeMinus', [
  '$scope',
  '$state',
  '$modalInstance',
  'eventType',
  '$rootScope',
  '$http',
  'award',
  'activity_id',
  '$modal',
  'award_total',
  function ($scope, $state, $modalInstance, eventType, $rootScope, $http, award, activity_id, $modal, award_total) {
    $scope.award = award;
    // console.log($scope.award);
    $scope.award_total = award_total;
    //减少奖品数量
    $scope.update_number = function (prize) {
      if (!prize) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u5956\u54c1\u6570\u91cf\u4e0d\u80fd\u4e3a\u7a7a'
        });
        return;
      }
      if (prize.number === 0) {
        // console.log($scope.award.number - (prize.number||0));
        $http.delete('/api/lotteries/prize/' + $scope.award.id).success(function (data) {
          $modalInstance.close('ok');
          $state.go('activity_item.lottery_plugin', { 'id': activity_id }, { reload: true });
        });
      } else {
        // console.log(prize.number);
        if (prize.number < 0) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u5956\u54c1\u6570\u91cf\u4e0d\u80fd\u4e3a\u8d1f\u6570'
          });
          return;
        }
        $http.put('/api/lotteries/prize/' + $scope.award.id, {
          goods_id: $scope.award.goods_info.id,
          number: prize.number,
          awards_id: $scope.award.awards_id
        }).success(function (data) {
          // console.log(data);
          $modalInstance.close('ok');
          $state.go('activity_item.lottery_plugin', { 'id': activity_id }, { reload: true });
        });
      }  // console.log(prize);
    };
    //获取大图  /images/images/placeholder.png
    $scope.viewImage = function (image) {
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }  // console.log(tempArr);
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
  }
]);
//抽奖controller
angular.module('iwx').controller('LotteryCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  '$state',
  '$modal',
  'ngTableParams',
  function ($scope, $http, $rootScope, eventType, $state, $modal, ngTableParams) {
    $scope.i = {};
    $scope.lottery = { 'activity_id': $scope.$parent.activity.id };
    $scope.i._lottery = {};
    var initInfo = function () {
      $http.get('/api/admin/activities/' + $scope.$parent.activity.id).success(function (data) {
        $scope.activity = data;
        $scope.lottery_scope = [];
        //抽奖插件基本信息
        $scope.lottery_baseInfo = {};
        $scope.lottery.activity_id = $scope.activity.id;
        //find lottery id
        if ($scope.activity.plugins && $scope.activity.plugins.length > 0) {
          for (var i = 0; i < $scope.activity.plugins.length; i++) {
            if ($scope.activity.plugins[i].id === 'lottery' && $scope.activity.plugins[i].enabled === true && $scope.activity.plugins[i].preview && $scope.activity.plugins[i].preview.id) {
              $scope.lottery.id = $scope.activity.plugins[i].preview.id;
            }
          }
        }
        if ($scope.lottery.id && $scope.lottery.id > 0) {
          $http.get('/api/lotteries/lottery_scope').success(function (data) {
            console.log(data);
            $scope.i._lottery.scope_id = data[0].id;
            $scope.lottery_scopes = data;
          });
          //获取抽奖插件的基本信息
          $http.get('/api/lotteries/plugin/' + $scope.lottery.id).success(function (data) {
            // console.log(data);
            $scope.lottery_baseInfo = data;
          });
          var NgTableParams = ngTableParams;
          var awards = null;
          $scope.tableParams = new NgTableParams({
            page: 1,
            count: 10
          }, {
            counts: [],
            total: 0,
            getData: function ($defer, params) {
              $http.get('/api/lotteries/' + $scope.lottery.id + '/awards?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
                $scope.award_number = data.total;
                awards = data.items;
                // console.log(awards);
                params.total(data.total);
                // $defer.resolve(awards.slice((params.page() - 1) * params.count(), params.page() * params.count()));
                $defer.resolve(awards);
              });
            }
          });
        } else {
          $http.post('/api/lotteries/add', { activity_id: $scope.lottery.activity_id }).success(function (data) {
            initInfo();
          });
        }
      });
    };
    var validationLottery = function (lottery) {
      if (!lottery.name) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u5956\u9879\u540d\u79f0'
        });
        return false;
      }
      if (!lottery.total) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u4e2d\u5956\u4eba\u6570'
        });
        return false;
      }
      if (!lottery.scope_id) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u9009\u62e9\u62bd\u5956\u8303\u56f4'
        });
        return false;
      }
      if (!lottery.exchange_end_time) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u6700\u665a\u5151\u6362\u65f6\u95f4'
        });
        return false;
      }
      return true;
    };
    var getLotteryFormData = function (lottery) {
      console.log(lottery);
      return {
        scope_id: lottery.scope_id,
        name: lottery.name,
        total: lottery.total,
        exchange_end_time: lottery.exchange_end_time
      };
    };
    initInfo();
    // 添加奖项
    $scope._create = function () {
      $scope.i._lottery.show = true;
    };
    $scope._cancel = function () {
      $scope.i._lottery.show = false;
    };
    //保存添加的奖项
    $scope.lotteryCreate = function () {
      if (validationLottery($scope.i._lottery)) {
        $http.post('/api/lotteries/' + $scope.lottery.id + '/lottery', getLotteryFormData($scope.i._lottery)).success(function (data) {
          $state.go('activity_item.lottery_plugin', { 'id': $scope.$parent.activity.id }, { reload: true });
        });
      }
    };
    $scope.lotteryResult = function (award) {
      $state.go('activity_item.lotteryat_plugin', {
        'id': $scope.$parent.activity.id,
        'award_id': award.id
      }, { reload: true });
    };
    $scope.lotteryChange = function (award) {
      if (validationLottery(award)) {
        $http.put('/api/lotteries/' + award.id, getLotteryFormData(award)).success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u4fee\u6539\u5956\u9879\u6210\u529f'
          });
        });
      }
    };
    $scope.lotteryDelete = function (award) {
      $http.delete('/api/lotteries/' + award.id).success(function (data) {
        $state.go('activity_item.lottery_plugin', { 'id': $scope.$parent.activity.id }, { reload: true });
      });
    };
    var activity_id = $scope.$parent.activity.id;
    $scope.prizeCreate = function (award) {
      $modal.open({
        templateUrl: 'partial/activity/plugin/prize.html',
        controller: 'PrizeAdd',
        resolve: {
          award: function () {
            return award;
          },
          activity_id: function () {
            return activity_id;
          }
        }
      });
    };
    $scope.close = function () {
      var url = '/api/admin/activities/' + $scope.$parent.activity.id + '/plugins/lottery';
      $http.delete(url).success(function (data) {
        $scope.$parent.activity = data;
        $state.go('activity_item', { 'id': data.id }, { reload: true });
      });
    };
    $scope.delete = function () {
      var url = '/api/lotteries/plugin/' + $scope.lottery.id;
      $http.delete(url).success(function (data) {
        $scope.$parent.activity = data;
        $state.go('activity_item.lottery_plugin', { 'id': $scope.lottery.activity_id }, { reload: true });
      });
    };
    //获取原图  /images/images/placeholder.png
    $scope.viewImage = function (image) {
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }  // console.log(tempArr);
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    //更新奖品数量
    $scope.updatePrize = function (award) {
      $http.get('/api/lotteries/' + award.awards_id).success(function (data) {
        // console.log(data);
        var award_total = data.total;
        $modal.open({
          templateUrl: 'partial/activity/plugin/prize_minus.html',
          controller: 'PrizeMinus',
          resolve: {
            award: function () {
              return award;
            },
            award_total: function () {
              return award_total;
            },
            activity_id: function () {
              return activity_id;
            }
          }
        });
      });
    };
  }
]);
angular.module('iwx').controller('LotteryatCtrl', [
  '$scope',
  '$stateParams',
  '$http',
  '$rootScope',
  'eventType',
  '$state',
  'ngTableParams',
  function ($scope, $stateParams, $http, $rootScope, eventType, $state, ngTableParams) {
    $scope.lottery = {};
    $scope.returntolottery = function () {
      $state.go('activity_item.lottery_plugin', { 'id': $scope.$parent.activity.id }, { reload: true });
    };
    $scope.award_id = $stateParams.award_id;
    var initInfo = function () {
      $http.get('/api/admin/activities/' + $scope.$parent.activity.id).success(function (data) {
        $scope.activity = data;
        $scope.lottery_scope = [];
        $scope.lottery.activity_id = $scope.activity.id;
        //find lottery id
        if ($scope.activity.plugins && $scope.activity.plugins.length > 0) {
          for (var i = 0; i < $scope.activity.plugins.length; i++) {
            if ($scope.activity.plugins[i].id === 'lottery' && $scope.activity.plugins[i].enabled === true && $scope.activity.plugins[i].preview && $scope.activity.plugins[i].preview.id) {
              $scope.lottery.id = $scope.activity.plugins[i].preview.id;
            }
          }
        }
        if ($scope.lottery.id && $scope.lottery.id > 0) {
          var NgTableParams = ngTableParams;
          var awards = null;
          $scope.tableParams = new NgTableParams({
            page: 1,
            count: 10
          }, {
            counts: [],
            total: 0,
            getData: function ($defer, params) {
              $http.get('/api/lotteries/' + $scope.lottery.id + '/awards', { 'page': params.page() }).success(function (data) {
                awards = data.items;
                params.total(data.total);
                $defer.resolve(awards.slice((params.page() - 1) * params.count(), params.page() * params.count()));
              });
            }
          });
        } else {
          $http.post('/api/lotteries/add', { activity_id: $scope.lottery.activity_id }).success(function (data) {
            initInfo();
          });
        }
      });
    };
    initInfo();
  }
]);
angular.module('iwx').controller('TimelineCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  'ngTableParams',
  function ($scope, $http, $rootScope, eventType, ngTableParams) {
    $scope.comment = {
      'images': [],
      'title': 'PLACEHOLDER'
    };
    // $scope.currentPage = 1;
    // Avoid lint complain
    var NgTableParams = ngTableParams;
    var activities = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $http.get('/api/activities/' + $scope.$parent.activity.id + '/comments_edit?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          var items = data.items;
          $scope.comments = items;
          params.total(data.total);
          $defer.resolve($scope.comments);
        });
      }
    });
    /*$scope.refresh = function() {
    $http.get('/api/activities/' + $scope.$parent.activity.id + '/comments?page=2' + $scope.currentPage).success(
      function(data) {
        // console.log(angular.toJson(data)+'------12');
        $scope.comments = data;
      });
  };*/
    $scope.removeFile = function (index) {
      var newImages = [];
      angular.forEach($scope.comment.images, function (value, i) {
        if (i !== index) {
          newImages.push(value);
        }
      });
      $scope.comment.images = newImages;
    };
    // $scope.refresh();
    $scope.submit = function () {
      if (!$scope.comment.images) {
        $scope.comment.images = [];
      }
      if ($scope.comment && $scope.comment.images && $scope.comment.images.length > 6) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6700\u591a6\u5f20\u56fe\u7247'
        });
        return;
      }
      $scope.comment.title = 'PLACEHOLDER';
      if (!$scope.comment.title || $scope.comment.title.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'ERROR',
          'message': '\u8bf7\u586b\u5199\u6807\u9898'
        });
        return;
      }
      if (!$scope.comment.content || $scope.comment.content.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u8981\u7206\u6599\u7684\u5185\u5bb9'
        });
        return;
      }
      var fd = new FormData();
      fd.append('title', $scope.comment.title);
      fd.append('content', $scope.comment.content);
      angular.forEach($scope.comment.images, function (value, key) {
        fd.append('images', value);
      });
      /*$rootScope.$emit(eventType.NOTIFICATION, {
        'type': 'LONG_INFO',
        'message': '正在上传。。。'
      });*/
      // console.log($scope.comment);
      $http.post('/api/activities/' + $scope.$parent.activity.id + '/comments', fd, {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u53d1\u5e03\u6210\u529f'
        });
        // console.log($scope.comments);
        // $scope.comments.unshift(data);
        $scope.tableParams.reload();
        $scope.comment = {};
      });
    };
  }
]);
angular.module('iwx').controller('TicketCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  '$state',
  '$modal',
  '$filter',
  function ($scope, $http, $rootScope, eventType, $state, $modal, $filter) {
    $scope.ticket = {};
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.update = false;
    //赞助商名称正则表达式
    $scope.sponsor_name_regexp = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,10}$|^[\w\s_\x21-\x7e]{0,25}$/;
    $http.get('/api/tickets/activity/' + $scope.$parent.activity.id).success(function (data) {
      if (data) {
        $scope.ticket_view = true;
        // console.log(data);
        $scope.ticket = data;
        //生成电子票示意图
        $scope.ticket_cover = $scope.ticket.cover.substring(0);
        $scope.ticket_logo = $scope.ticket.logo.substring(0);
        $scope.update = true;
        $scope.ticket_big_screen = true;
      } else {
        $scope.ticket_view = false;
        $scope.ticket = {};
        $scope.ticket.activity_id = $scope.$parent.activity.id;
        $scope.ticket.location = $scope.$parent.activity.location;
        $scope.ticket.start_time = $scope.$parent.activity.start_time;
        $scope.ticket.end_time = $scope.$parent.activity.end_time;
        $scope.update = false;
      }
    });
    $scope.viewImage = function (image) {
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    /**
      修改信息提示为modal
    */
    $scope.validation = function () {
      if ($scope.ticket.total == null || isNaN(parseInt($scope.ticket.total)) || parseInt($scope.ticket.total) <= 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u4eba\u6570'
        });
        return false;
      }
      if ($scope.ticket.start_time == null || $scope.ticket.start_time === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u5f00\u59cb\u65f6\u95f4'
        });
        return false;
      }
      if ($scope.ticket.end_time == null || $scope.ticket.end_time === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u7ed3\u675f\u65f6\u95f4'
        });
        return false;
      }
      if ($scope.ticket.content == null || $scope.ticket.content === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5b8c\u6574\u586b\u5199\u4ecb\u7ecd'
        });
        return false;
      }
      if ($scope.ticket.location == null || $scope.ticket.location === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5b8c\u6574\u586b\u5199\u5730\u70b9'
        });
        return false;
      }
      if (!$scope.sponsor_name_regexp.test($scope.ticket.sponsor_name)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6ce8\u610f\u586b\u5199\u5185\u5bb9\u5b57\u6570\u9650\u5236\uff01'
        });
        return false;
      }
      return true;
    };
    $scope.create = function () {
      if (!$scope.validation()) {
        return;
      }
      var fd = new FormData();
      angular.forEach($scope.ticket, function (value, key) {
        fd.append(key, value);
      });
      $http.post('/api/tickets', fd, {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (data) {
        $scope.ticket = data;
        $scope.update = true;
        $scope.ticket_view = true;
        $scope.ticket_big_screen = true;
        //生成电子票示意图
        $scope.ticket_cover = $scope.ticket.cover.substring(0);
        $scope.ticket_logo = $scope.ticket.logo.substring(0);
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u521b\u5efa\u6210\u529f'
        });
      });
    };
    $scope.close = function () {
      var url = '/api/admin/activities/' + $scope.$parent.activity.id + '/plugins/ticket';
      // console.log(url);
      $http.delete(url).success(function (data) {
        // console.log(data);
        $scope.$parent.activity = data;
        $state.go('activity_item', { 'id': data.id }, { reload: true });
      });
    };
    $scope.change = function () {
      if (!$scope.validation()) {
        return;
      }
      if (typeof $scope.ticket.start_time === 'number') {
        $scope.ticket.start_time = $filter('date')($scope.ticket.start_time, 'yyyy-MM-dd HH:mm');
      }
      if (typeof $scope.ticket.end_time === 'number') {
        $scope.ticket.end_time = $filter('date')($scope.ticket.end_time, 'yyyy-MM-dd HH:mm');
      }
      // console.log($scope.ticket);
      var fd = new FormData();
      angular.forEach($scope.ticket, function (value, key) {
        fd.append(key, value);
      });
      // console.log(fd);
      $http.put('/api/tickets/' + $scope.ticket.id, fd, {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u66f4\u65b0\u6210\u529f'
        });
        $scope.ticket = data;
        $scope.ticket_cover = '/static/images/loading-4.jpg';
        $scope.ticket_logo = '/static/images/loading-5.jpg';
        $('#ticket_image').bind('load', function () {
          $scope.ticket_cover = $scope.ticket.cover.substring(0);
          $scope.ticket_logo = $scope.ticket.logo.substring(0);
        });
      });
    };
    //停用电子票插件
    $scope.complete_ticket = function () {
      // console.log($scope.ticket.id);
      if ($scope.ticket.id === undefined) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5148\u521b\u5efa\u7535\u5b50\u7968'
        });
        return;
      }
      $http.post('/api/tickets/' + $scope.ticket.id + '/done').success(function (data) {
        // console.log(data);
        if (data.is_done) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u6210\u529f\u505c\u7528\u7535\u5b50\u7968'
          });
          $state.go('activity_item', { 'id': $scope.activity.id });
        } else {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u672a\u6210\u529f\u505c\u7528\u7535\u5b50\u7968'
          });
        }
      });
    };
    //查看历史电子票情况
    $scope.history_ticket = function () {
      $http.get('/api/tickets/' + $scope.activity.id + '/all').success(function (data) {
        // console.log(data);
        var history_ticket = data;
        $modal.open({
          templateUrl: 'partial/activity/plugin/history_ticket.html',
          controller: 'HistoryTicketCtrl',
          resolve: {
            history_ticket: function () {
              return history_ticket;
            }
          }
        });
      });
    };
  }
]).controller('HistoryTicketCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  'history_ticket',
  function ($scope, $http, $rootScope, eventType, history_ticket) {
    var tickets = [];
    if (history_ticket !== undefined) {
      var len = history_ticket.length;
      for (var i = 0; i < len; i++) {
        if (history_ticket[i].is_done) {
          tickets.push(history_ticket[i]);
        }
      }
    }
    $scope.history_ticket = tickets;
  }
]);
angular.module('iwx').controller('VoteCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  '$state',
  '$modal',
  '$filter',
  'ngTableParams',
  function ($scope, $http, $rootScope, eventType, $state, $modal, $filter, ngTableParams) {
    $scope.rangeArray = [];
    $http.get('/api/votes/scope').success(function (data) {
      $scope.rangeArray = data;
    });
    $scope.confirm = {};
    $scope.newcandi = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.update = false;
    $scope.vote = { 'activity_id': $scope.$parent.activity.id };
    $scope.viewresult = function () {
      $state.go('activity_item.votestat_plugin', { 'id': $scope.$parent.activity.id }, { reload: true });
    };
    $http.get('/api/admin/activities/' + $scope.$parent.activity.id).success(function (data) {
      $scope.activity = data;
      // console.log($scope.activity);
      //find vote id
      if ($scope.activity.plugins && $scope.activity.plugins.length > 0) {
        for (var i = 0; i < $scope.activity.plugins.length; i++) {
          if ($scope.activity.plugins[i].id === 'vote' && $scope.activity.plugins[i].enabled === true && $scope.activity.plugins[i].preview && $scope.activity.plugins[i].preview.id) {
            $scope.vote.id = $scope.activity.plugins[i].preview.id;
          }
        }
      }
      if ($scope.vote.id && $scope.vote.id > 0) {
        $http.get('/api/votes/' + $scope.vote.id).success(function (data) {
          if (data) {
            $scope.vote = data;
            // $scope.vote.vote_end_time = $scope.vote.vote_end_time;
            $scope.update = true;
            $scope.tableParams.reload();
          } else {
            // console.log($scope.$parent.activity.start_time + '------' + $scope.$parent.activity.end_time);
            $scope.vote = {};
            $scope.vote.vote_start_time = $scope.$parent.activity.start_time;
            $scope.vote.vote_end_time = $scope.$parent.activity.end_time;
            $scope.update = false;
          }
        });
      }
    });
    $scope.viewImage = function (image) {
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    $scope.validation = function () {
      //验证开始时间不早于结束时间
      // console.log($scope.vote.vote_start_time);
      // console.log($scope.vote.vote_end_time);
      try {
        if (typeof $scope.vote.vote_start_time === 'number') {
          $scope.vote.vote_start_time = $filter('date')($scope.vote.vote_start_time, 'yyyy-MM-dd HH:mm');
        }
        if (typeof $scope.vote.vote_end_time === 'number') {
          $scope.vote.vote_end_time = $filter('date')($scope.vote.vote_end_time, 'yyyy-MM-dd HH:mm');
        }
        var stTime = new Date($scope.vote.vote_start_time.replace(/-/g, '/'));
        var endTime = new Date($scope.vote.vote_end_time.replace(/-/g, '/'));
        if (Date.parse(stTime) > Date.parse(endTime)) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u7ed3\u675f\u65f6\u95f4\u5fc5\u987b\u5728\u5f00\u59cb\u65f6\u95f4\u4e4b\u540e'
          });
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u91cd\u65b0\u9009\u62e9\u5f00\u59cb\u65f6\u95f4\u6216\u7ed3\u675f\u65f6\u95f4'
        });
        return;
      }
      if ($scope.vote.vote_start_time == null || $scope.vote.vote_start_time === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u5f00\u59cb\u65f6\u95f4'
        });
        return false;
      }
      if ($scope.vote.vote_end_time == null || $scope.vote.vote_end_time === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u7ed3\u675f\u65f6\u95f4'
        });
        return false;
      }
      if ($scope.vote.vote_description == null || $scope.vote.vote_description === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5b8c\u6574\u586b\u5199\u6295\u7968\u8bf4\u660e'
        });
        return false;
      }
      //添加投票标题验证
      if ($scope.vote.title === undefined) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u6295\u7968\u6807\u9898'
        });
        return false;
      }
      return true;
    };
    $scope.create = function () {
      if (!$scope.validation()) {
        return;
      }
      // console.log($scope.vote);
      $http.post('/api/votes', $scope.vote, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        $scope.vote = data;
        $scope.update = true;
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u521b\u5efa\u6210\u529f'
        });
      });
    };
    /*$scope.___create = function() {
    if(!$scope.validation()) {
      return;
    }
    var fd = new FormData();
    angular.forEach($scope.vote, function(value, key) {
      fd.append(key, value);
    });
    $http.post('/api/votes', fd, {
      transformRequest: angular.identity,
      headers: {
        'Content-Type': undefined
      }
    }).success(function(data) {
      $scope.vote = data;
      $scope.update = true;
      $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '消息',
          'message': '创建成功'
      });
    });
  };*/
    $scope.close = function () {
      var url = '/api/admin/activities/' + $scope.$parent.activity.id + '/plugins/vote';
      $http.delete(url).success(function (data) {
        $scope.$parent.activity = data;
        $state.go('activity_item', { 'id': data.id }, { reload: true });
      });
    };
    $scope.delete = function () {
      var url = '/api/votes/' + $scope.vote.id;
      $http.delete(url).success(function (data) {
        $scope.$parent.activity = data;
        $state.go('activity_item.vote_plugin', { 'id': $scope.vote.activity_id }, { reload: true });
      });
    };
    $scope.deletecandi = function (candi) {
      var url = '/api/votes/candidate/' + candi.id;
      $http.delete(url).success(function (data) {
        // $scope.reloadVoteInfo();
        $scope.tableParams.reload();
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u5220\u9664\u6210\u529f'
        });
      });
    };
    //原加载候选人方法
    /*$scope.reloadVoteInfo = function() {
    $http.get('/api/votes/' + $scope.vote.id + '/candidates').success(function(data) {
      console.log(data);
      if (data) {
        if (data.items !== undefined) {
          data.items.reverse();
        }
        $scope.vote.candidates = data.items;
        $scope.safeApply();
      }
    });
  };*/
    //分页加载候选人
    var NgTableParams = ngTableParams;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 5
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        if ($scope.vote.id) {
          $http.get('/api/votes/' + $scope.vote.id + '/candidates?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            $scope.vote.candidates = data.items;
            params.total(data.total);
            $defer.resolve($scope.vote.candidates);
          });
        }
      }
    });
    $scope.updatecandi = function (candi) {
      if (!candi.newimages) {
        candi.newimages = [];
      }
      if (candi && candi.newimages && candi.newimages.length > 6) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6700\u591a6\u5f20\u56fe\u7247'
        });
        return;
      }
      if (candi.images && candi.images.length > 0 && candi.images.length + candi.newimages.length > 6) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6700\u591a6\u5f20\u56fe\u7247'
        });
        return;
      }
      if (!candi || !candi.title || candi.title === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u5019\u9009\u4eba\u6807\u9898'
        });
        return;
      }
      if (!candi.describe || candi.describe === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u5019\u9009\u4eba\u63cf\u8ff0'
        });
        return;
      }
      var fd = new FormData();
      fd.append('title', candi.title);
      fd.append('describe', candi.describe);
      angular.forEach(candi.newimages, function (value, key) {
        fd.append('images', value);
      });
      $http.put('/api/votes/' + $scope.vote.id + '/candidate_detail/' + candi.id, fd, {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (data) {
        candi = data;
        $scope.safeApply();
        //重新加载更新候选项目页面
        // $scope.reloadVoteInfo();
        $scope.tableParams.reload();
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u4fee\u6539\u6210\u529f'
        });
      });
    };
    $scope.addcandi = function () {
      if (!$scope.newcandi.images) {
        $scope.newcandi.images = [];
      }
      if ($scope.newcandi && $scope.newcandi.images && $scope.newcandi.images.length > 6) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6700\u591a6\u5f20\u56fe\u7247'
        });
        return;
      }
      if (!$scope.newcandi || !$scope.newcandi.title || $scope.newcandi.title === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u5019\u9009\u4eba\u6807\u9898'
        });
        return;
      }
      if (!$scope.newcandi.describe || $scope.newcandi.describe === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u5019\u9009\u4eba\u63cf\u8ff0'
        });
        return;
      }
      var fd = new FormData();
      fd.append('title', $scope.newcandi.title);
      fd.append('describe', $scope.newcandi.describe);
      angular.forEach($scope.newcandi.images, function (value, key) {
        fd.append('images', value);
      });
      $http.post('/api/votes/' + $scope.vote.id + '/candidate_detail', fd, {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (data) {
        $scope.newcandi.title = '';
        $scope.newcandi.describe = '';
        $scope.newcandi.images = [];
        // $scope.reloadVoteInfo();
        $scope.tableParams.reload();
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6dfb\u52a0\u6210\u529f'
        });
      });
    };
    $scope.removeFile = function (index) {
      var newImages = [];
      angular.forEach($scope.newcandi.images, function (value, i) {
        if (i !== index) {
          newImages.push(value);
        }
      });
      $scope.newcandi.images = newImages;
    };
    $scope.removeCandiFile = function (candi, index) {
      var newImages = [];
      angular.forEach(candi.newimages, function (value, i) {
        if (i !== index) {
          newImages.push(value);
        }
      });
      candi.newimages = newImages;
    };
    $scope.removeExistCandiFile = function (candi, image) {
      var url = '/api/votes/candidate/images/' + image.id;
      $http.delete(url).success(function (data) {
        // $scope.reloadVoteInfo();
        $scope.tableParams.reload();
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u5220\u9664\u6210\u529f'
        });
      });
    };
    $scope.change = function () {
      if (!$scope.validation()) {
        return;
      }
      console.log($scope.vote.vote_start_time + '-----------' + $scope.vote.vote_end_time);
      $http.put('/api/votes/' + $scope.vote.id, $scope.vote, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        $scope.vote = data;
        // $scope.reloadVoteInfo();
        $scope.tableParams.reload();
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u66f4\u65b0\u6210\u529f'
        });
      });
    };
    /*$scope.___change = function() {
    if(!$scope.validation()) {
      return;
    }

    var fd = new FormData();
    angular.forEach($scope.vote, function(value, key) {
      fd.append(key, value);
    });
    $http.put('/api/votes/' + $scope.vote.id, fd, {
      transformRequest: angular.identity,
      headers: {
        'Content-Type': undefined
      }
    }).success(function(data) {
      $scope.vote = data;
      $scope.reloadVoteInfo();
      $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '消息',
          'message': '更新成功'
      });
    });
  };*/
    //结束本次投票方法
    $scope.complete_vote = function () {
      // console.log($scope.vote.id);
      if ($scope.vote.id === undefined) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5148\u521b\u5efa\u672c\u6b21\u6295\u7968'
        });
        return;
      }
      $http.post('/api/votes/' + $scope.vote.id + '/done').success(function (data) {
        // console.log(angular.toJson(data));
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6210\u529f\u7ed3\u675f\u6295\u7968'
        });
        $state.go('activity_item', { 'id': $scope.activity.id });
      });
    };
    //查看历史投票方法
    $scope.history_vote = function () {
      // console.log($scope.activity.id);
      $state.go('activity_item.history_vote_plugin', { 'id': $scope.activity.id }, { reload: true });
    };
  }
]);
angular.module('iwx').controller('StatCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  '$state',
  '$modal',
  function ($scope, $http, $rootScope, eventType, $state, $modal) {
    var activityid = $scope.$parent.activity.id;
    $scope.plugin_exist = {
      'announcement': true,
      'timeline': true,
      'ticket': true,
      'vote': true,
      'sign_in': true,
      'lottery': true,
      'questionnaire': true
    };
    //获取该活动的插件
    $http.get('/api/admin/activities/' + activityid).success(function (data) {
      var plugins = data.plugins;
      var len = plugins.length;
      for (var i = 0; i < len; i++) {
        $scope.plugin_exist[plugins[i].id] = false;
      }
    });
    $http.get('/api/activities/' + activityid + '/summary').success(function (data) {
      //{"comment_count":1,"fav_count":2,"ticket_claimed_count":3,"ticket_used_count":0}
      //http://localhost:9000/api/activities/123/summary
      $scope.summary = data;
      console.log($scope.summary);
    });
  }
]);
angular.module('iwx').controller('VoteStatCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  '$state',
  '$modal',
  function ($scope, $http, $rootScope, eventType, $state, $modal) {
    $scope.returntovote = function () {
      $state.go('activity_item.vote_plugin', { 'id': $scope.$parent.activity.id }, { reload: true });
    };
    /*$scope.accMul = function(arg1,arg2){
    var m=0,s1=arg1.toString(),s2=arg2.toString();
    try{
      m+=s1.split('.')[1].length;
      m+=s2.split('.')[1].length;
    }catch(e){}
    return Number(s1.replace('.',''))*Number(s2.replace('.',''))/Math.pow(10,m);
  };*/
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.vote = { 'activity_id': $scope.$parent.activity.id };
    $http.get('/api/admin/activities/' + $scope.$parent.activity.id).success(function (data) {
      $scope.activity = data;
      //find vote id
      if ($scope.activity.plugins && $scope.activity.plugins.length > 0) {
        for (var i = 0; i < $scope.activity.plugins.length; i++) {
          if ($scope.activity.plugins[i].id === 'vote' && $scope.activity.plugins[i].enabled === true && $scope.activity.plugins[i].preview && $scope.activity.plugins[i].preview.id) {
            $scope.vote.id = $scope.activity.plugins[i].preview.id;
          }
        }
      }
      if ($scope.vote.id && $scope.vote.id > 0) {
        $http.get('/api/votes/' + $scope.vote.id).success(function (data) {
          if (data) {
            $scope.vote = data;
            if ($scope.vote.candidates_num === 0) {
              $rootScope.$emit(eventType.NOTIFICATION, {
                'type': 'POPMSG',
                'title': '\u6d88\u606f',
                'message': '\u672a\u6dfb\u52a0\u5019\u9009\u9879'
              });
              return;
            }
            //图表部分
            // $scope.type = 'PolarArea';
            $scope.labels_bar = [];
            $scope.color = ['#000000'];
            $scope.labels_pie = [];
            $scope.series_bar = [];
            $scope.series_pie = [];
            $scope.data_bar = [];
            $scope.data_pie = [];
            //柱状图配置options
            $scope.options_bar = { scaleOverlay: true };
            //拼图配置options
            $scope.option_pie = {
              animateRotate: true,
              animateScale: true
            };
            $scope.colours = [
              '#00FF7F',
              '#FFD700',
              '#FF7F50',
              '#OOFFOO',
              '#00BFFF',
              '#949FB1',
              '#FF6347'
            ];
            //候选项得票数组
            var vote_num_arr = [];
            //支持率数组
            var suppose_rate = [];
            //总的投票数
            var vote_num_sum = $scope.vote.vote_num;
            var candidates = $scope.vote.candidates;
            var len = candidates.length;
            for (var i = 0; i < len; i++) {
              var temp = candidates[i];
              $scope.labels_bar.push(temp.title);
              $scope.labels_pie.push(temp.title);
              vote_num_arr.push(temp.vote_num);
              suppose_rate.push(Math.round(temp.vote_num * 100 / vote_num_sum));
            }
            $scope.data_bar.push(vote_num_arr);
            $scope.data_pie = suppose_rate;  /*$scope.toggle = function () {
              $scope.type = $scope.type === 'PolarArea' ?
                'Pie' : 'PolarArea';
            };*/
          }
        });
      }
    });
    $scope.viewImage = function (image) {
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
  }
]);
angular.module('iwx').controller('SignInCtrl', [
  '$filter',
  '$scope',
  '$rootScope',
  '$http',
  '$state',
  'eventType',
  '$modal',
  function ($filter, $scope, $rootScope, $http, $state, eventType, $modal) {
    $scope.sign_in = {};
    $scope.sponser_name = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,15}$|^[\w\s_\x21-\x7e]{0,30}$/;
    $http.get('/api/admin/activities/' + $scope.$parent.activity.id).success(function (data) {
      $scope.activity = data;
      $scope.sign_in.activity_id = $scope.activity.id;
      //find sign_in id
      if ($scope.activity.plugins && $scope.activity.plugins.length > 0) {
        for (var i = 0; i < $scope.activity.plugins.length; i++) {
          if ($scope.activity.plugins[i].id === 'sign_in' && $scope.activity.plugins[i].enabled === true && $scope.activity.plugins[i].preview && $scope.activity.plugins[i].preview.id) {
            $scope.sign_in.id = $scope.activity.plugins[i].preview.id;
            $scope.sign_big_screen = true;
          }
        }
      }
      if ($scope.sign_in.id && $scope.sign_in.id > 0) {
        $http.get('/api/signs/' + $scope.sign_in.id).success(function (data) {
          if (data) {
            $scope.sign_in = data;
            $scope.update = true;
            $scope.sign_in_qrcode = true;
          } else {
            $scope.sign_in_qrcode = false;
            $scope.sign_in = {};
            $scope.sign_in.activity_id = $scope.activity.id;
            $scope.sign_in.sign_in_start_time = $scope.activity.start_time;
            $scope.sign_in.sign_in_end_time = $scope.activity.end_time;
            $scope.update = false;
          }
        });
      } else {
        $scope.sign_in.sign_in_start_time = $scope.activity.start_time;
        $scope.sign_in.sign_in_end_time = $scope.activity.end_time;
      }
    });
    $scope.viewresult = function () {
      $state.go('activity_item.sign_in_at_plugin', { 'id': $scope.$parent.activity.id }, { reload: true });
    };
    $scope.close = function () {
      var url = '/api/admin/activities/' + $scope.$parent.activity.id + '/plugins/sign_in';
      $http.delete(url).success(function (data) {
        $scope.$parent.activity = data;
        $state.go('activity_item', { 'id': data.id }, { reload: true });
      });
    };
    $scope.delete = function () {
      var url = '/api/signs/' + $scope.sign_in.id;
      $http.delete(url).success(function (data) {
        $scope.$parent.activity = data;
        $state.go('activity_item.sign_in_plugin', { 'id': $scope.sign_in.activity_id }, { reload: true });
      });
    };
    $scope.validation = function () {
      if ($scope.sign_in.sign_in_end_time == null || $scope.sign_in.sign_in_end_time === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u7ed3\u675f\u65f6\u95f4'
        });
        return false;
      }
      if (!$scope.sponser_name.test($scope.sign_in.sponsor_name)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u5c06\u8d5e\u52a9\u5546\u540d\u79f0\u9650\u5236\u572815\u4e2a\u6c49\u5b57\u4ee5\u5185\uff01'
        });
        return false;
      }
      //添加title验证
      /*if ($scope.sign_in.title === undefined) {
      $rootScope.$emit(eventType.NOTIFICATION, {
          // 'type': 'ERROR',
          'type': 'POPMSG',
          'title': '消息',
          'message': '请正确输入签到标题'
      });
      return false;
    }*/
      return true;
    };
    var getSignFormData = function () {
      var fd = new FormData();
      fd.append('activity_id', $scope.sign_in.activity_id);
      // console.log($scope.sign_in.title);
      // fd.append('title', $scope.sign_in.title);
      fd.append('sign_in_start_time', $filter('date')($scope.sign_in.sign_in_start_time, 'yyyy-MM-dd HH:mm'));
      fd.append('sign_in_end_time', $scope.sign_in.sign_in_end_time);
      fd.append('sponsor_name', $scope.sign_in.sponsor_name);
      fd.append('sponsor_logo', $scope.sign_in.sponsor_logo);
      return fd;
    };
    $scope.create = function () {
      if (!$scope.validation()) {
        return;
      }
      $http.post('/api/signs', getSignFormData(), { headers: { 'Content-Type': undefined } }).success(function (data) {
        $scope.sign_in_qrcode = true;
        $scope.sign_big_screen = true;
        $scope.sign_in = data;
        $scope.update = true;
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u521b\u5efa\u6210\u529f'
        });
      });
    };
    $scope.change = function () {
      if (!$scope.validation()) {
        return;
      }
      $http.put('/api/signs/' + $scope.sign_in.id, getSignFormData(), { headers: { 'Content-Type': undefined } }).success(function (data) {
        $scope.sign_big_screen = true;
        $scope.sign_in = data;
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u66f4\u65b0\u6210\u529f'
        });
      });
    };
    //完成本次签到方法
    $scope.complete_sign_in = function () {
      // console.log($scope.sign_in.id);
      if (!$scope.sign_in.id) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5148\u4fdd\u5b58\u672c\u6b21\u7b7e\u5230'
        });
        return;
      }
      //请求结束本次签到
      var url = '/api/signs/' + $scope.sign_in.id + '/done';
      $http.post(url).success(function (data) {
        // console.log(data);
        if (data.is_done) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u6210\u529f\u7ed3\u675f\u7b7e\u5230'
          });
          $state.go('activity_item', { 'id': $scope.activity.id });
        }
      });
    };
    //查看历史签到列表方法
    $scope.history_sign_in = function () {
      // console.log($scope.activity.id);
      //获取全部签到插件
      var url = '/api/signs/' + $scope.activity.id + '/all';
      $http.get(url).success(function (data) {
        // console.log(angular.toJson(data));
        var history_sign_in = data;
        $modal.open({
          templateUrl: 'partial/activity/plugin/history_sign_in.html',
          controller: 'HistorySignInCtrl',
          resolve: {
            history_sign_in: function () {
              return history_sign_in;
            }
          }
        });
      });
    };
  }
]);
angular.module('iwx').filter('signNumber', function () {
  return function (input, value) {
    input = '' + input;
    if (input.length === 1 && input !== '0') {
      return '00' + input;
    }
    if (input.length === 2) {
      return '0' + input;
    }
    return input;
  };
}).controller('SignInStatCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  '$state',
  'ngTableParams',
  function ($scope, $http, $rootScope, eventType, $state, ngTableParams) {
    $scope.sign_in = {};
    $scope.returntosignin = function () {
      $state.go('activity_item.sign_in_plugin', { 'id': $scope.$parent.activity.id }, { reload: true });
    };
    var NgTableParams = ngTableParams;
    var signins = null;
    $http.get('/api/admin/activities/' + $scope.$parent.activity.id).success(function (data) {
      $scope.activity = data;
      $scope.sign_in.activity_id = $scope.activity.id;
      //find sign_in id
      if ($scope.activity.plugins && $scope.activity.plugins.length > 0) {
        for (var i = 0; i < $scope.activity.plugins.length; i++) {
          if ($scope.activity.plugins[i].id === 'sign_in' && $scope.activity.plugins[i].enabled === true && $scope.activity.plugins[i].preview && $scope.activity.plugins[i].preview.id) {
            $scope.sign_in.id = $scope.activity.plugins[i].preview.id;
          }
        }
      }
      if ($scope.sign_in.id && $scope.sign_in.id > 0) {
        $scope.tableParams = new NgTableParams({
          page: 1,
          count: 10
        }, {
          counts: [],
          total: 0,
          getData: function ($defer, params) {
            $http.get('/api/signs/' + $scope.sign_in.id + '/users?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
              signins = data.items;
              params.total(data.total);
              // $defer.resolve(signins.slice((params.page() - 1) * params.count(), params.page() * params.count()));
              $defer.resolve(signins);
            });
          }
        });
        $scope.tableParams.reload();
      }
    });
  }
]);
//签到历史查看controller
angular.module('iwx').controller('HistorySignInCtrl', [
  '$scope',
  '$rootScope',
  'history_sign_in',
  function ($scope, $rootScope, history_sign_in) {
    var sign_in = [];
    // console.log(history_sign_in);
    var len = history_sign_in.length;
    for (var i = 0; i < len; i++) {
      if (history_sign_in[i].is_done) {
        sign_in.push(history_sign_in[i]);
      }
    }
    $scope.history_sign_in = sign_in;
  }
]);
angular.module('iwx').controller('HistoryVoteCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  '$state',
  '$modal',
  '$stateParams',
  function ($scope, $http, $rootScope, eventType, $state, $modal, $stateParams) {
    //get history vote infomations
    $http.get('/api/votes/' + $stateParams.id + '/all').success(function (data) {
      var len = data.length;
      var tempArr = [];
      for (var i = 0; i < len; i++) {
        if (data[i].is_done) {
          tempArr.push(data[i]);
        }
      }
      $scope.historyVote = tempArr;
      if ($scope.historyVote.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6ca1\u6709\u5386\u53f2\u6295\u7968\u4fe1\u606f'
        });
      }  // console.log($scope.historyVote);
    });
    //return to vote
    $scope.returnToVote = function () {
      // console.log($stateParams.id);
      // console.log($scope.$parent.activity.id);
      $state.go('activity_item.vote_plugin', { 'id': $stateParams.id }, { reload: true });
    };
    //get history candidates infomations
    $scope.candidateList = function (vote_id) {
      // console.log(vote_id);
      $state.go('activity_item.history_candidate_plugin', {
        'id': $scope.activity.id,
        'vote_id': vote_id
      }, { reload: true });
    };
  }
]).controller('HistoryCandiCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  '$state',
  '$stateParams',
  'ngTableParams',
  '$modal',
  function ($scope, $http, $rootScope, eventType, $state, $stateParams, ngTableParams, $modal) {
    // console.log($stateParams.vote_id);
    var NgTableParams = ngTableParams;
    var candidates = null;
    $scope.tableParams = new NgTableParams({
      page: 1,
      count: 10
    }, {
      counts: [],
      total: 0,
      getData: function ($defer, params) {
        $http.get('/api/votes/' + $stateParams.vote_id + '/candidates?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
          if (data.total === 0) {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u6ca1\u6709\u5386\u53f2\u5019\u9009\u9879\u4fe1\u606f'
            });
            return;
          }
          candidates = data.items;
          // console.log(data);
          params.total(data.total);
          // $defer.resolve(candidates.slice((params.page() - 1) * params.count(), params.page() * params.count()));
          $defer.resolve(candidates);
        });
      }
    });
    //return to history vote
    $scope.returnToVote = function () {
      // console.log($scope.$parent.activity.id);
      $state.go('activity_item.history_vote_plugin', { 'id': $scope.$parent.activity.id }, { reload: true });
    };
    //查看大图
    $scope.viewImage = function (image) {
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
  }
]);
//添加插件controller
angular.module('iwx').controller('PluginAdd', [
  '$scope',
  '$rootScope',
  'plugins_alivable',
  '$modalInstance',
  'activity',
  'eventType',
  '$state',
  function ($scope, $rootScope, plugins_alivable, $modalInstance, activity, eventType, $state) {
    // console.log(activity);
    var plugins = activity.plugins;
    var len = plugins.length;
    $scope.plugins_alivable = plugins_alivable;
    //各个插件添加方法，例如抽奖
    $scope.addPlugin = function (plugin_id) {
      //当活动已有该插件时，提示不能添加
      for (var j = 0; j < len; j++) {
        var temp = plugins[j];
        if (plugin_id === temp.id) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u8bf7\u5148\u7ed3\u675f\u5f53\u524d\u7684' + temp.name + '\u529f\u80fd\uff0c\u518d\u8fdb\u884c\u6dfb\u52a0\uff01'
          });
          $modalInstance.close('ok');
          $state.go('activity_item.' + plugin_id + '_plugin');
          return;
        }
      }
      $modalInstance.close('ok');
      // console.log(plugin_id);
      $rootScope.$broadcast('addPlugin', plugin_id);
      //删除已添加的插件
      var len_plugin = $scope.plugins_alivable.length;
      for (var i = 0; i < len_plugin; i++) {
        if ($scope.plugins_alivable[i].id === plugin_id && $scope.plugins_alivable[i].id !== 'sign_in' && $scope.plugins_alivable[i].id !== 'vote' && $scope.plugins_alivable[i].id !== 'ticket' && $scope.plugins_alivable[i].id !== 'questionnaire') {
          $scope.plugins_alivable.splice(i, 1);
          return;
        }
      }
    };
  }
]);
angular.module('iwx').controller('QuestionnaireCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  '$state',
  '$modal',
  '$filter',
  'ngTableParams',
  'userService',
  function ($scope, $http, $rootScope, eventType, $state, $modal, $filter, ngTableParams, userService) {
    //bootstrap toggle event
    $scope.$on('toggle:change', function (event, data) {
      $scope.question.answer_type = data;
    });
    //确认框信息
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.update = false;
    //问卷对象
    $scope.questionnaire = { activity_id: $scope.$parent.activity.id };
    //问题数组
    $scope.questions = [];
    //问题类型对照表
    $scope.question_type_table = {
      'RCQ': 'single',
      'MCQ': 'multiple',
      'SAQ': 'short',
      'PUP': 'upload'
    };
    $scope.answer_type_map = {
      'NORMAL': 'normal',
      'OTHER': 'other'
    };
    $scope.answer_type_hash = {
      'NORMAL': '\u5426',
      'OTHER': '\u662f'
    };
    //获取问题类型数组
    var getQuestionTypes = function () {
      $http.get('/api/questionnaires/rubric_type').success(function (data) {
        $scope.typeArray = data;
      });
    };
    getQuestionTypes();
    var getSomeDay = function (date, count) {
      date.setDate(date.getDate() + count);
      return date;
    };
    // console.log($scope.$parent.activity);
    //获取活动的问卷插件
    var getActQuestionnaire = function () {
      $http.get('/api/questionnaires/' + $scope.$parent.activity.id + '/plugin').success(function (data) {
        // console.log(data);
        $scope.questionnaire = data;
        $scope.update = true;
        loadQuestions($scope.questionnaire.id);
        var gift_etime = [];
        angular.forEach(data.prizes, function (value) {
          gift_etime.push(value.goods.end_time);
        });
        // console.log(gift_etime);
        $scope.min_gift_etime = Math.min.apply(Math, gift_etime);  // console.log($scope.min_gift_etime);
      }).error(function (data) {
        if (data) {
          userService.load().then(function (data) {
            console.log(data);
            var user = data;
            if (user.role.name === 'ADMIN' || user.role.name === 'USER') {
              $rootScope.$emit(eventType.NOTIFICATION, {
                'type': 'POPMSG',
                'title': '\u6d88\u606f',
                'message': '\u8bf7\u7f16\u8f91\u95ee\u5377\u8be6\u7ec6\u5185\u5bb9\u3002'
              });
              $scope.questionnaire.start_time = $scope.$parent.activity.start_time;
              $scope.questionnaire.end_time = $scope.$parent.activity.end_time;
              if ($scope.questionnaire.end_time) {
                var exchange_time = getSomeDay(new Date($scope.$parent.activity.end_time), 1).getTime();
                $scope.questionnaire.exchange_time = exchange_time;
              }
              $scope.update = false;
            } else {
              $rootScope.$emit(eventType.NOTIFICATION, {
                'type': 'POPMSG',
                'title': '\u6d88\u606f',
                'message': '\u8be5\u793e\u56e2\u7ba1\u7406\u5458\u672a\u521b\u5efa\u65b0\u7684\u6d3b\u52a8\u95ee\u5377\u3002'
              });
            }
          });
        }
      });
    };
    userService.load(true).then(function () {
      getActQuestionnaire();
    });
    //操作确认框
    $scope.confirm = function () {
      if ($scope.confirm.type === 'pubQuestionnaire') {
        $http.post('/api/questionnaires/' + $scope.confirm.param + '/publish').success(function (data) {
          $scope.questionnaire = data;
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u606d\u559c\uff0c\u95ee\u5377\u53d1\u5e03\u6210\u529f\u3002'
          });
        });
      } else if ($scope.confirm.type === 'finishQuestionnaire') {
        $http.post('/api/questionnaires/' + $scope.confirm.param + '/done').success(function (data) {
          $state.go('activity_item.questionnaire_plugin', {}, { reload: true });
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u6210\u529f\u7ed3\u675f\u8be5\u95ee\u5377\u3002'
          });
        });
      } else if ($scope.confirm.type === 'delQuestionnaire') {
        $http.delete('/api/questionnaires/' + $scope.confirm.param + '/del').success(function (data) {
          $state.go('activity_item.questionnaire_plugin', {}, { reload: true });
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u6210\u529f\u5220\u9664\u8be5\u95ee\u5377\u3002'
          });
        });
      } else if ($scope.confirm.type === 'removeQuestion') {
        $http.delete('/api/questionnaires/rubric/' + $scope.confirm.param + '/del').success(function (data) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u95ee\u9898\u5220\u9664\u6210\u529f\u3002'
          });
          //重新加载问题分页列表
          // $state.go('activity_item.questionnaire_plugin', {}, {reload: true});
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'delCertificate') {
        $http.delete('/api/questionnaires/' + $scope.confirm.params.questionnaire_id + '/del/' + $scope.confirm.params.certificate_id + '/prize').success(function (data) {
          $state.go('activity_item.questionnaire_plugin', {}, { reload: true });
        });
      }
    };
    //定义一个初始化问题
    $scope.question = {
      rubric_type: 'RCQ',
      rubric: '',
      answers: [],
      answer_type: 'OTHER'
    };
    //验证问题
    var validateQuestion = function (data, flag) {
      if (!data.rubric || data.rubric.length > 100) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u95ee\u9898\u5185\u5bb9\uff0c\u5e76\u4e14\u5185\u5bb9\u4e0d\u8d85\u8fc7100\u4e2a\u5b57\u7b26\u3002'
        });
        return false;
      }
      if (data.rubric_type === 'single' || data.rubric_type === 'multiple') {
        if (flag === 'add') {
          if (data.answer.length === 0) {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u8b66\u544a',
              'message': '\u8bf7\u6dfb\u52a0\u5355\u9009\u6216\u591a\u9009\u95ee\u9898\u7684\u9009\u9879\u3002'
            });
            return false;
          } else {
            return loop(data.answer);
          }
        } else {
          if (data.answer.add) {
            if (data.answer.add.length === 0 && data.answers.length === 0) {
              $rootScope.$emit(eventType.NOTIFICATION, {
                'type': 'POPMSG',
                'title': '\u8b66\u544a',
                'message': '\u8bf7\u6dfb\u52a0\u5355\u9009\u6216\u591a\u9009\u95ee\u9898\u7684\u9009\u9879\u3002'
              });
              return false;
            } else {
              if (data.answer.add.length === 0) {
                return true;
              } else {
                return loop(data.answer.add);
              }
            }
          } else {
            if (data.answers.length === 0) {
              $rootScope.$emit(eventType.NOTIFICATION, {
                'type': 'POPMSG',
                'title': '\u8b66\u544a',
                'message': '\u8bf7\u6dfb\u52a0\u5355\u9009\u6216\u591a\u9009\u95ee\u9898\u7684\u9009\u9879\u3002'
              });
              return false;
            }
          }
        }
      }
      return true;
    };
    var loop = function (data) {
      console.log(data);
      for (var j = 0; j < data.length; j++) {
        if (data[j] === '' || data[j].length > 50) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u8bf7\u586b\u5199\u9009\u9879\u5185\u5bb9\uff0c\u5e76\u4e14\u5185\u5bb9\u4e0d\u8d85\u8fc750\u4e2a\u5b57\u7b26\u3002'
          });
          return false;
        }
      }
      return true;
    };
    //添加问题
    $scope.addQuestion = function () {
      var params_add = {};
      params_add['rubric_type'] = $scope.question_type_table[$scope.question.rubric_type];
      params_add['rubric'] = $scope.question.rubric;
      if ($scope.question.rubric_type === 'RCQ' || $scope.question.rubric_type === 'MCQ') {
        params_add['answer_type'] = $scope.answer_type_map[$scope.question.answer_type];
        params_add['answer'] = $scope.question.answers;
      } else {
        params_add['answer_type'] = 'normal';
      }
      if (!validateQuestion(params_add, 'add')) {
        return;
      }
      console.log(params_add);
      $http.post('/api/questionnaires/' + $scope.questionnaire.id + '/add/rubric', params_add, { 'headers': { 'Content-Type': 'application/json' } }).success(function (data) {
        // console.log(data);
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u95ee\u9898\u6dfb\u52a0\u6210\u529f\u3002'
        });
        $state.go('activity_item.questionnaire_plugin', {}, { reload: true });  // $scope.tableParams.reload();
      });
    };
    //修改问题
    $scope.updateQuestion = function (rubric) {
      var params_upd = {};
      params_upd['rubric_type'] = $scope.question_type_table[rubric.rubric_type];
      params_upd['rubric'] = rubric.rubric;
      params_upd['answers'] = rubric.answers;
      if (rubric.rubric_type === 'RCQ' || rubric.rubric_type === 'MCQ') {
        console.log('rubric.answer_type:' + rubric.answer_type);
        params_upd['answer_type'] = $scope.answer_type_map[rubric.answer_type];
        params_upd['answer'] = {};
        params_upd['answer']['add'] = rubric.newOptions;
        params_upd['answer']['delete'] = rubric.delOption;
      } else {
        params_upd['answer_type'] = 'normal';
      }
      if (!validateQuestion(params_upd, 'update')) {
        return;
      }
      console.log(params_upd);
      $http.put('/api/questionnaires/rubric/' + rubric.id + '/update', params_upd, { 'headers': { 'Content-Type': 'application/json' } }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u95ee\u9898\u4fee\u6539\u6210\u529f\u3002'
        });
        //重新加载问题分页列表
        // $state.go('activity_item.questionnaire_plugin', {}, {reload: true});
        $scope.tableParams.reload();
      });
    };
    //删除问题
    $scope.removeQuestion = function (rubric_id) {
      $scope.confirm.type = 'removeQuestion';
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8be5\u95ee\u9898\u5417\uff1f';
      $scope.confirm.param = rubric_id;
      $('#confirm').modal();
      return;
    };
    //添加多选题或单选题问题选项
    $scope.addOption = function () {
      $scope.question.answers.push('');
    };
    //添加已存在问题的选项
    $scope.addOptionUpd = function (parentIndex) {
      if (!$scope.exist_questions[parentIndex].newOptions) {
        $scope.exist_questions[parentIndex]['newOptions'] = [];
      }
      $scope.exist_questions[parentIndex]['newOptions'].push('');  // console.log($scope.exist_questions[parentIndex]);
    };
    //删除存在问题的新增选项
    $scope.delOption = function (parentIndex, index) {
      console.log(parentIndex);
      console.log(index);
      $scope.exist_questions[parentIndex].newOptions.splice(index, 1);
    };
    //删除多选题或单选题问题选项
    $scope.removeOption = function (index) {
      $scope.question.answers.splice(index, 1);
    };
    //删除已存在问题的选项
    /*$scope.removeOptionUpd = function (parentIndex, index, optionId) {
			//要删除的选项
			console.log('parentIndex:'+parentIndex);
			console.log('index:'+index);
			console.log('optionId:'+optionId);

			if (!$scope.exist_questions[parentIndex].delOption) {
				$scope.exist_questions[parentIndex]['delOption'] = [];
			}
			$scope.exist_questions[parentIndex]['delOption'].push(optionId);
			$scope.exist_questions[parentIndex].answers.splice(index, 1);
			// console.log($scope.exist_questions[parentIndex]);
		};*/
    $scope.removeOptionUpd = function (question, index, optionId) {
      //要删除的选项
      if (!question.delOption) {
        question['delOption'] = [];
      }
      question['delOption'].push(optionId);
      question.answers.splice(index, 1);
    };
    //问卷统计
    $scope.statView = function () {
      $state.go('activity_item.questionnaire_stat_plugin', {}, { reload: true });
    };
    //验证问卷信息
    var validateQuestionnaire = function () {
      //验证问卷标题，不能为空或者不能超过50个字符
      if (!$scope.questionnaire.title || $scope.questionnaire.title.length > 50) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u95ee\u5377\u6807\u9898\u4e0d\u80fd\u4e3a\u7a7a\u6216\u8d85\u8fc750\u4e2a\u5b57\u7b26\u3002'
        });
        return false;
      }
      if (!$scope.questionnaire.describe || $scope.questionnaire.describe.length > 100) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u95ee\u5377\u63cf\u8ff0\u4e0d\u80fd\u4e3a\u7a7a\u6216\u8d85\u8fc7100\u4e2a\u5b57\u7b26\u3002'
        });
        return false;
      }
      if (!$scope.questionnaire.notice || $scope.questionnaire.notice.length > 100) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u95ee\u5377\u987b\u77e5\u4e0d\u80fd\u4e3a\u7a7a\u6216\u8d85\u8fc7100\u4e2a\u5b57\u7b26\u3002'
        });
        return false;
      }
      //验证时间
      try {
        if (typeof $scope.questionnaire.start_time === 'number') {
          $scope.questionnaire.start_time = $filter('date')($scope.questionnaire.start_time, 'yyyy-MM-dd HH:mm');
        }
        if (typeof $scope.questionnaire.end_time === 'number') {
          $scope.questionnaire.end_time = $filter('date')($scope.questionnaire.end_time, 'yyyy-MM-dd HH:mm');
        }
        //最晚兑奖时间
        if (typeof $scope.questionnaire.exchange_time === 'number') {
          $scope.questionnaire.exchange_time = $filter('date')($scope.questionnaire.exchange_time, 'yyyy-MM-dd HH:mm');
        }
        // console.log($scope.questionnaire.start_time);
        // console.log($scope.questionnaire.start_time.replace(/-/g,'/'));
        var exTime = new Date($scope.questionnaire.exchange_time.replace(/-/g, '/'));
        var sTime = new Date($scope.questionnaire.start_time.replace(/-/g, '/'));
        var eTime = new Date($scope.questionnaire.end_time.replace(/-/g, '/'));
        var actStartTime = $scope.$parent.activity.start_time;
        var actEndTime = $scope.$parent.activity.end_time;
        // console.log(sTime);
        // console.log(Date.parse(sTime));
        if (Date.parse(sTime) > Date.parse(eTime)) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u7ed3\u675f\u65f6\u95f4\u5fc5\u987b\u5728\u5f00\u59cb\u65f6\u95f4\u4e4b\u540e\u3002'
          });
          return false;
        }
        if (Date.parse(eTime) > actEndTime) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u95ee\u5377\u7ed3\u675f\u65f6\u95f4\u4e0d\u80fd\u665a\u4e8e\u6d3b\u52a8\u7ed3\u675f\u65f6\u95f4\u3002'
          });
          return false;
        }
        //判断最晚兑奖时间和问卷结束时间
        if (Date.parse(exTime) <= Date.parse(eTime)) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u6700\u665a\u5151\u5956\u65f6\u95f4\u5fc5\u987b\u665a\u4e8e\u95ee\u5377\u7ed3\u675f\u65f6\u95f4\u3002'
          });
          return false;
        }
        //最晚兑奖时间不能大于所有奖券中有效时间的最小值
        if (Date.parse(exTime) > $scope.min_gift_etime) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u4fee\u6539\u7684\u6700\u665a\u5151\u5956\u65e5\u671f\u665a\u4e8e\u793c\u5238\u6700\u65e9\u6709\u6548\u65e5\u671f\uff0c\u8bf7\u68c0\u67e5\uff01'
          });
          return false;
        }
      } catch (e) {
        // console.log(e);
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u9009\u62e9\u5f00\u59cb\u65f6\u95f4\u6216\u7ed3\u675f\u65f6\u95f4\u3002'
        });
        return;
      }
      return true;
    };
    //创建问卷插件
    $scope.createQuestionnaire = function () {
      if (!validateQuestionnaire()) {
        return;
      }
      // console.log($scope.questionnaire);
      $http.post('/api/questionnaires/add', $scope.questionnaire, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        $scope.questionnaire = data;
        $scope.update = true;
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u521b\u5efa\u95ee\u5377\u6210\u529f\u3002'
        });
      });
    };
    //修改问卷插件
    $scope.updateQuestionnaire = function () {
      if (!validateQuestionnaire()) {
        return;
      }
      var upd_param = {};
      upd_param['activity_id'] = $scope.questionnaire.activity_id;
      upd_param['title'] = $scope.questionnaire.title;
      upd_param['describe'] = $scope.questionnaire.describe;
      upd_param['notice'] = $scope.questionnaire.notice;
      upd_param['start_time'] = $scope.questionnaire.start_time;
      upd_param['end_time'] = $scope.questionnaire.end_time;
      upd_param['exchange_time'] = $scope.questionnaire.exchange_time;
      console.log(upd_param);
      $http.put('/api/questionnaires/' + $scope.questionnaire.id + '/update', upd_param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        $scope.questionnaire = data;
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u4fee\u6539\u95ee\u5377\u6210\u529f\u3002'
        });
      });
    };
    //发布本次问卷
    $scope.pubQuestionnaire = function (questionnaire_id) {
      var isActivityPublish = $scope.$parent.activity.published;
      if (!isActivityPublish) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u9700\u8981\u5148\u53d1\u5e03\u6d3b\u52a8\uff0c\u624d\u80fd\u53d1\u5e03\u95ee\u5377\u529f\u80fd\u3002'
        });
        $state.go('activity_item', { id: $scope.$parent.activity.id }, { reload: true });
        return;
      }
      $scope.confirm.type = 'pubQuestionnaire';
      $scope.confirm.message = '\u95ee\u5377\u53d1\u5e03\u540e\u4e0d\u80fd\u66f4\u6539\uff0c\u60a8\u786e\u5b9a\u53d1\u5e03\u8be5\u95ee\u5377\u5417\uff1f';
      $scope.confirm.param = questionnaire_id;
      $('#confirm').modal();
      return;
    };
    //结束本次问卷
    $scope.finishQuestionnaire = function (questionnaire_id) {
      $scope.confirm.type = 'finishQuestionnaire';
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u7ed3\u675f\u672c\u6b21\u95ee\u5377\u5417\uff1f';
      $scope.confirm.param = questionnaire_id;
      $('#confirm').modal();
      return;
    };
    //删除本次问卷
    $scope.delQuestionnaire = function (questionnaire_id) {
      $scope.confirm.type = 'delQuestionnaire';
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u5220\u9664\u672c\u6b21\u95ee\u5377\u5417\uff1f';
      $scope.confirm.param = questionnaire_id;
      $('#confirm').modal();
      return;
    };
    //添加礼券
    $scope.addCertificate = function (questionnaire_id) {
      $modal.open({
        templateUrl: 'partial/activity/plugin/qn_prize_add.html',
        controller: 'QnPrizeAddCtrl',
        resolve: {
          questionnaire_id: function () {
            return questionnaire_id;
          },
          activity_id: function () {
            return $scope.questionnaire.activity_id;
          }
        }
      });
    };
    //修改礼券数量
    $scope.modifyCerNumber = function (questionnaire_id, gift) {
      $modal.open({
        templateUrl: 'partial/activity/plugin/qn_prize_minus.html',
        controller: 'QnPrizeMinusCtrl',
        resolve: {
          questionnaire_id: function () {
            return questionnaire_id;
          },
          gift: function () {
            return gift;
          },
          activity_id: function () {
            return $scope.questionnaire.activity_id;
          }
        }
      });
    };
    //删除与该问卷绑定的礼券
    $scope.delCertificate = function (questionnaire_id, certificate_id) {
      $scope.confirm.type = 'delCertificate';
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u8be5\u793c\u5238\u5417\uff1f';
      $scope.confirm.params = {};
      $scope.confirm.params['questionnaire_id'] = questionnaire_id;
      $scope.confirm.params['certificate_id'] = certificate_id;
      $('#confirm').modal();
      return;
    };
    //放大物品图片
    $scope.viewImage = function (image) {
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    //分页获取已添加到问卷的问题
    var loadQuestions = function (questionnaire_id) {
      var NgTableParams = ngTableParams;
      $scope.exist_questions = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 5
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/questionnaires/' + questionnaire_id + '/rubric/list?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            // console.log(data);
            if (data.items.length === 0 && params.page() !== 1) {
              $scope.tableParams.page(params.page() - 1);
              return;
            }
            $scope.exist_questions = data.items;
            params.total(data.total);
            $defer.resolve($scope.exist_questions);
          });
        }
      });
    };
  }
]);
angular.module('iwx').controller('QueStatCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  '$modal',
  'eventType',
  function ($scope, $rootScope, $http, ngTableParams, $modal, eventType) {
    $scope.activityId = $scope.$parent.activity.id;
    $scope.currentPage = 1;
    $scope.questions = [];
    var questionSet = {};
    $scope.loadQuestionBtn = '\u52a0\u8f7d\u95ee\u5377\u66f4\u591a\u95ee\u9898~~';
    $scope.loadMoreBtn = false;
    $scope.genderMap = {
      MALE: '\u7537',
      FEMALE: '\u5973'
    };
    //选择的问卷id
    $scope.$on('select:change', function (event, data) {
      $scope.questionnaire_id = data;
      $scope.questions = [];
      questionSet = {};
      $scope.currentPage = 1;
      $scope.loadQuestionBtn = '\u52a0\u8f7d\u95ee\u5377\u66f4\u591a\u95ee\u9898~~';
      $scope.loadMoreBtn = false;
      getQuestionnaire($scope.questionnaire_id);
      loadQuesAndAnswer($scope.questionnaire_id, $scope.currentPage);
    });
    //获取问卷信息
    var getQuestionnaire = function (questionnaire_id) {
      $http.get('/api/questionnaires/' + questionnaire_id).success(function (data) {
        $scope.people = true;
        $scope.number = data.ques.people;
        $scope.questionnaire = data.ques;
      });
    };
    //获取问题类型数组
    var getQuestionTypes = function () {
      $http.get('/api/questionnaires/rubric_type').success(function (data) {
        $scope.typeArray = data;
        $scope.typeMap = {};
        angular.forEach(data, function (value) {
          $scope.typeMap[value.id] = value.name;
        });
        console.log($scope.typeMap);
      });
    };
    getQuestionTypes();
    //加载问题及答案
    var loadQuesAndAnswer = function (questionnaire_id, currentPage) {
      // questionnaire_id = 1;
      $http.get('/api/questionnaires/' + questionnaire_id + '/data?page=' + currentPage + '&per_page=5').success(function (data) {
        console.log(data);
        $scope.loadMore = true;
        if (data.items.length === 0) {
          $scope.loadQuestionBtn = '\u5df2\u7ecf\u52a0\u8f7d\u95ee\u5377\u5168\u90e8\u95ee\u9898~~';
          $scope.loadMoreBtn = true;
          return;
        }
        var added = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.rubric.id in questionSet)) {
            questionSet[value.rubric.id] = true;
            $scope.questions.push(value);
            added++;
          }
        });
        console.log($scope.questions);
        if (added === 0) {
          loadQuesAndAnswer($scope.questionnaire_id, ++$scope.currentPage);
        }
      });
    };
    //加载更多问题
    $scope.loadMoreQuestion = function () {
      loadQuesAndAnswer($scope.questionnaire_id, ++$scope.currentPage);
    };
    $scope.viewImage = function (image) {
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.auth_token = response.auth_token;
    });
  }
]);
angular.module('iwx').controller('QnPrizeAddCtrl', [
  '$scope',
  '$state',
  '$modalInstance',
  'eventType',
  '$rootScope',
  '$http',
  'ngTableParams',
  'questionnaire_id',
  'activity_id',
  '$modal',
  function ($scope, $state, $modalInstance, eventType, $rootScope, $http, ngTableParams, questionnaire_id, activity_id, $modal) {
    //如果没有任何电子礼券，则跳转至礼券模块进行添加
    $scope.goToCertificate = function () {
      $modalInstance.close('ok');
      $state.go('certificate', { reload: true });
    };
    //取消添加礼券
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
    //放大物品图片
    $scope.viewImage = function (image) {
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    //获取问卷信息
    var getQuestionnaire = function (questionnaire_id) {
      $http.get('/api/questionnaires/' + questionnaire_id).success(function (data) {
        $scope.questionnaire = data.ques;
      });
    };
    getQuestionnaire(questionnaire_id);
    //分页获取电子礼券列表
    var loadCouponList = function () {
      var NgTableParams = ngTableParams;
      var coupons = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 5
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/goods/community?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            // data = {items:[],total:0};
            if (data.total === 0) {
              $scope.note = true;
            }
            coupons = data.items;
            params.total(data.total);
            $defer.resolve(coupons);
          });
        }
      });
    };
    loadCouponList();
    //更改奖品数量
    $scope.add = function (prize, coupon) {
      if (!prize) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u793c\u5238\u6570\u91cf'
        });
        return;
      }
      console.log(coupon.total + '-----' + prize.number);
      if (coupon.remain - (prize.number || 0) < 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u793c\u5238\u6570\u91cf\u4e0d\u591f'
        });
        return;
      }
      //判断礼券有效日期和问卷设置的最后兑奖日期
      console.log(coupon.end_time);
      console.log($scope.questionnaire.exchange_time);
      if (coupon.end_time < $scope.questionnaire.exchange_time) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8be5\u793c\u5238\u7684\u6709\u6548\u65e5\u671f\u65e9\u4e8e\u95ee\u5377\u7684\u6700\u540e\u5151\u5956\u65e5\u671f\uff0c\u4e0d\u80fd\u6dfb\u52a0\u3002'
        });
        return;
      }
      //将礼券和问卷进行绑定
      $http.post('/api/questionnaires/' + questionnaire_id + '/add/' + coupon.id + '/prize', { num: prize.number }).success(function (data) {
        $modalInstance.close('ok');
        //跳转问卷插件页并进行刷新
        $state.go('activity_item.questionnaire_plugin', {}, { reload: true });
      });
    };
  }
]);
angular.module('iwx').controller('QnPrizeMinusCtrl', [
  '$scope',
  '$state',
  '$modalInstance',
  'eventType',
  '$rootScope',
  '$http',
  'gift',
  'activity_id',
  '$modal',
  'questionnaire_id',
  function ($scope, $state, $modalInstance, eventType, $rootScope, $http, gift, activity_id, $modal, questionnaire_id) {
    $scope.gift = gift;
    $scope.cer_remain = $scope.gift.goods.remain;
    //放大物品图片
    $scope.viewImage = function (image) {
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    //更新奖品数量
    $scope.updateNumber = function (prize) {
      if (!prize) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u793c\u5238\u6570\u91cf\u4e0d\u80fd\u4e3a\u7a7a\u3002'
        });
        return;
      }
      if (prize.number <= $scope.gift.remain) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u793c\u5238\u6570\u91cf\u5e94\u5927\u4e8e\u5df2\u9886\u53d6\u6570\u91cf\u3002'
        });
        return;
      }
      if (prize.number > $scope.cer_remain + $scope.gift.num) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u793c\u5238\u6570\u91cf\u5e94\u5c0f\u4e8e\u5e93\u5b58\u793c\u5238\u6570\u91cf\u3002'
        });
        return;
      }
      $http.put('/api/questionnaires/' + questionnaire_id + '/update/' + $scope.gift.id + '/prize', { num: prize.number }).success(function (data) {
        $modalInstance.close('ok');
        $state.go('activity_item.questionnaire_plugin', {}, { reload: true });
      });
    };
  }
]);
angular.module('iwx').controller('RegisterCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  '$state',
  'eventType',
  function ($scope, $http, $rootScope, $state, eventType) {
    $rootScope.welcome_bg = false;
    $scope.user = {};
    $scope.community = {};
    $scope.community_scope = {};
    $scope.universities = [];
    //定义类型map
    /*
    "organization": "ORG",   组织 ---校级学生组织
    "tissue": "TISSUE",    --- 院系学生会
    "union": "ST_UNION",  社联的公会 （就是普通社团）
    "committee": "COMMITTEE"} 委员会 --院系团委
  */
    var type_name_hash = {
        'union': '\u5b66\u751f\u793e\u56e2',
        'organization': '\u6821\u7ea7\u5b66\u751f\u7ec4\u7ec7',
        'tissue': '\u9662\u7cfb\u5b66\u751f\u4f1a',
        'committee': '\u9662\u7cfb\u56e2\u59d4',
        'political': '\u515a\u652f\u90e8'
      };
    $scope.manager_type = [];
    //加载社团管理员类型信息
    $scope.load_type = function () {
      $http.get('/api/auth/admin/type').success(function (data) {
        angular.forEach(data, function (value, key) {
          var obj = {
              id: '',
              name: ''
            };
          obj.id = value;
          obj.name = type_name_hash[value];
          $scope.manager_type.push(obj);
        });
      });
    };
    $scope.load_type();
    $scope.type = function () {
      $scope.prefix_name = type_name_hash[$scope.community.admin_type];
    };
    //加载省份信息
    $scope.load_province = function () {
      $http.get('/api/su/geography/0').success(function (data) {
        $scope.provinceArray = data;
      });
    };
    $scope.load_province();
    //加载市信息
    $scope.load_city = function () {
      $http.get('/api/su/geography/' + $scope.community_scope.province_scope_id).success(function (data) {
        $scope.cityArray = data;
      });
    };
    //加载学校信息
    $scope.load_university = function () {
      $http.get('/api/university/' + $scope.community_scope.city_scope_id + '/universities').success(function (data) {
        $scope.universities = data;
      });
    };
    //监听省级管理范围
    $scope.change_province = function () {
      if ($scope.community_scope.province_scope_id) {
        $scope.load_city();
      }
    };
    //监听市级管理范围
    $scope.change_city = function () {
      if ($scope.community_scope.city_scope_id) {
        $scope.load_university();
      }
    };
    //监控社团描述
    $scope.$watch('community.description', function (str) {
      if (str) {
        var arr = [];
        for (var i = 0; i < str.length; i++) {
          if (str.charAt(i) !== ' ') {
            console.log('-----' + str.charAt(i));
            arr.push(str.charAt(i));
          }
        }
        console.log(arr.length);
        if (arr.length > 200) {
          $scope.show_description = true;
        } else {
          $scope.show_description = false;
        }
      }
    });
    //test
    $scope.select_un = function (value) {
      console.log(value);
    };
    console.log($scope.community_name);
    $scope.submit = function () {
      var fd = new FormData();
      angular.forEach($scope.user, function (value, key) {
        fd.append(key, value);
      });
      console.log($scope.community);
      angular.forEach($scope.community, function (value, key) {
        console.log('key:' + key + '-----value:' + value);
        fd.append(key, value);
      });
      $http.post('/api/auth/admin/register', fd, {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'LONG_INFO',
          'message': '\u6ce8\u518c\u6210\u529f\uff0c\u7b49\u5f85\u4eba\u5de5\u6838\u5bf9\u4fe1\u606f. \u6211\u4eec\u5c06\u4f1a\u4ee5\u90ae\u4ef6\u65b9\u5f0f\u901a\u77e5\u60a8\u6838\u5bf9\u7684\u7ed3\u679c, \u8bf7\u8010\u5fc3\u7b49\u5019...'
        });
        $state.go('welcome');
      });
    };  /*$http.get('/api/universities').success(function(universities) {
    $scope.universities = universities;
  });*/
  }
]);
angular.module('iwx').controller('ResetPasswordCtrl', [
  '$scope',
  '$modalInstance',
  function ($scope, $modalInstance) {
    $scope.reset = { 'email': '' };
    $scope.reset = function () {
      $modalInstance.close($scope.reset.email);
    };
  }
]);
angular.module('iwx').controller('LoginCtrl', [
  '$scope',
  '$rootScope',
  '$stateParams',
  '$modal',
  'userService',
  function ($scope, $rootScope, $stateParams, $modal, userService) {
    $rootScope.welcome_bg = false;
    $scope.user = {};
    $scope.submit = function () {
      userService.login($scope.user, $stateParams.next);
    };
    $scope.resetPassword = function () {
      var modalInstance = $modal.open({
          templateUrl: 'partial/admin/reset.html',
          controller: 'ResetPasswordCtrl',
          size: 'sm'
        });
      modalInstance.result.then(function (email) {
        if (email) {
          userService.resetPassword(email);
        }
      });
    };
  }
]);
angular.module('iwx').controller('CarouselCtrl', [
  '$scope',
  'items',
  function ($scope, items) {
    $scope.interval = 5000;
    var slides = $scope.slides = [];
    $scope.addSlide = function (url) {
      slides.push({ image: url });
    };
    angular.forEach(items, function (url) {
      $scope.addSlide(url);
    });
  }
]);
angular.module('iwx').controller('MessagesCtrl', [
  '$scope',
  '$http',
  '$state',
  '$rootScope',
  'eventType',
  'userService',
  function ($scope, $http, $state, $rootScope, eventType, userService) {
    $rootScope.welcome_bg = false;
    $rootScope.mes_note = false;
    $scope.messages = [];
    //非社团成员数组
    $scope.noncommMembers = [];
    $scope.message = {};
    //集市主题数组
    // $scope.topics = [];
    //tree option and data
    $scope.treeOptions = {
      nodeChildren: 'children',
      dirSelectable: true,
      injectClasses: {
        ul: 'a1',
        li: 'a2',
        liSelected: 'a7',
        iExpanded: 'a3',
        iCollapsed: 'a4',
        iLeaf: 'a5',
        label: 'a6',
        labelSelected: 'tree_selected'
      }
    };
    /*$scope.dataForTheTree =[{ 'nickname' : '对话列表', 'id' : 0, 'children' : [
    {'nickname' : 'i微校管理员', 'id' : 1, 'children': []},
    {'nickname' : '学校管理员', 'id' : 2, 'children': []},
    {'nickname' : '社团成员', 'id' : 3, 'children' : []}
  ]}];*/
    $scope.dataForTheTree = [
      {
        'nickname': 'i\u5fae\u6821\u7ba1\u7406\u5458',
        'id': 1,
        'parent_id': 0,
        'children': []
      },
      {
        'nickname': '\u5b66\u6821\u7ba1\u7406\u5458',
        'id': 2,
        'parent_id': 0,
        'children': []
      },
      {
        'nickname': '\u672c\u793e\u6210\u5458',
        'id': 3,
        'parent_id': 0,
        count: 0,
        'children': []
      },
      {
        'nickname': '\u975e\u672c\u793e\u6210\u5458',
        'id': 4,
        'parent_id': 0,
        count: 0,
        'children': []
      },
      {
        'nickname': '\u96c6\u5e02\u6d88\u606f',
        'id': 5,
        'parent_id': 0,
        count: 0,
        'children': []
      }
    ];
    $scope.expandedNodes = [];
    //向树形列表添加成员数据
    var addMembersToTree = function (members, nodeNumber) {
      var len = members.length;
      if (nodeNumber === 4) {
        $scope.dataForTheTree[nodeNumber].children = [];
        $scope.dataForTheTree[nodeNumber].count = 0;
      }
      var tree_children = $scope.dataForTheTree[nodeNumber].children;
      for (var i = 0; i < len; i++) {
        tree_children.push(members[i]);
        tree_children[i]['parent_id'] = $scope.dataForTheTree[nodeNumber].id;
        // $scope.dataForTheTree[nodeNumber].count += tree_children[i].count;
        if (nodeNumber === 4) {
          $scope.dataForTheTree[nodeNumber].count += tree_children[i].count;
          var topic_len = members[i].topic.length;
          for (var j = 0; j < topic_len; j++) {
            var temp_topic = members[i].topic[j];
            temp_topic['user_id'] = members[i].id;  // $scope.topics.push(temp_topic);
          }
          tree_children[i]['children'] = members[i].topic;
        }
      }
      console.log($scope.dataForTheTree);
      $scope.expandedNodes.push($scope.dataForTheTree[nodeNumber]);
    };
    //获取社团成员
    var getCommMembers = function (commMember) {
      $scope.messages = commMember.member;
      addMembersToTree(commMember.member, 2);
    };
    //获取非本社成员但有过通信记录的手机用户
    var getNoncommMembers = function (nonCommMember) {
      $scope.noncommMembers = nonCommMember.non_member;
      addMembersToTree(nonCommMember.non_member, 3);
    };
    //获取有集市消息人员列表
    var getBazaarMembers = function () {
      $http.get('/api/admin/bazaar/message/users').success(function (data) {
        $scope.bazaarMembers = data;
        console.log($scope.bazaarMembers);
        addMembersToTree($scope.bazaarMembers, 4);
      });  /*$scope.bazaarMembers = [{count: 1, name: '星女神', id: 99, topic: [{id: 1, topic: '转让iphone 5s', count: 1}]},
        {count: 3, name: 'Idiot', id: 10, topic: [{id: 2, topic: '求购ipad mini', count: 1}]}];
      addMembersToTree($scope.bazaarMembers, 4);*/
    };
    getBazaarMembers();
    //集市事件
    $scope.$on('bazaarEvent', function () {
      getBazaarMembers();
    });
    //获取通信列表成员
    var getMessMembers = function () {
      $http.get('/api/admin/community/message/members').success(function (data) {
        getCommMembers(data);
        getNoncommMembers(data);
      });
    };
    getMessMembers();
    //通信事件
    /*$scope.$on('messageEvent', function () {
    getMessMembers();
  });*/
    //获取学校管理员
    $scope.getUniManager = function () {
      userService.load().then(function (data) {
        var uniManager = {};
        uniManager['nickname_full'] = data.university.name;
        // uniManager['parent_id'] = $scope.dataForTheTree[0].children[1].id;
        uniManager['parent_id'] = $scope.dataForTheTree[1].id;
        uniManager['university_id'] = data.university.id;
        if (uniManager.nickname_full.length > 7) {
          uniManager['nickname'] = uniManager.nickname_full.substring(0, 7) + '...';
        } else {
          uniManager['nickname'] = uniManager.nickname_full;
        }
        // $scope.dataForTheTree[0].children[1].children.push(uniManager);
        $scope.dataForTheTree[1].children.push(uniManager);
        $scope.expandedNodes.push($scope.dataForTheTree[1]);
      });
    };
    $scope.getUniManager();
    //获取iwx管理员
    $scope.getIwxManager = function () {
      $http.get('/api/admin/iwx/users').success(function (data) {
        var len = data.length;
        // var tree_children = $scope.dataForTheTree[0].children[0].children;
        var tree_children = $scope.dataForTheTree[0].children;
        for (var i = 0; i < len; i++) {
          tree_children.push(data[i]);
          tree_children[i]['nickname_full'] = data[i].nickname;
          // tree_children[i]['parent_id'] = $scope.dataForTheTree[0].children[0].id;
          tree_children[i]['parent_id'] = $scope.dataForTheTree[0].id;
          if (tree_children[i].nickname.length > 7) {
            tree_children[i].nickname = tree_children[i].nickname.substring(0, 7) + '...';
          }
        }
        $scope.expandedNodes.push($scope.dataForTheTree[0]);
      });
    };
    $scope.getIwxManager();
    $scope.clearId = function (id) {
      var users = $scope.messages.concat($scope.noncommMembers);
      angular.forEach(users, function (value) {
        if (value.user_id === parseInt(id)) {
          value.count = 0;
        }
      });
    };
    $scope.send = function () {
      // console.log($scope.message);
      $http.post('/api/admin/messages/members', $scope.message).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u53d1\u9001\u6210\u529f'
        });
      }).error(function (data) {
      });
    };
    //获取社团部门
    $scope.getCommDep = function () {
      $http.get('/api/admin/department').success(function (data) {
        for (var i = 0; i < data.length; i++) {
          data[i].chosen = false;
        }
        $scope.departments = data;
      });
    };
    $scope.getCommDep();
  }
]);
angular.module('iwx').controller('MessageCtrl', [
  '$scope',
  '$http',
  '$stateParams',
  'userService',
  '$rootScope',
  'eventType',
  '$modal',
  '$state',
  function ($scope, $http, $stateParams, userService, $rootScope, eventType, $modal, $state) {
    if ($state.current.name === 'message.user') {
      //获取信息列表的接口
      $scope.messages_url = '/api/admin/messages/' + $stateParams.id;
      //发送消息的接口
      $scope.mes_send_url = '/api/admin/messages/' + $stateParams.id;
      //调用父级方法清除未读消息提醒count
      $http.put('/api/admin/messages/' + $stateParams.id).success(function () {
        $scope.$parent.clearId($stateParams.id);
      });
    } else {
      $scope.messages_url = '/api/admin/bazaar/message/' + $stateParams.id + '/list';
      $scope.mes_send_url = '/api/admin/bazaar/message/' + $stateParams.id + '/send';  //获取和该用户有关的聊天主题
                                                                                       /*$http.get('/api/admin/bazaar/message/' + $stateParams.id + '/topic')
            .success(function (data) {
                console.log(data);
                $scope.items = ['/static/images/3.jpg', '/static/images/4.jpg', '/static/images/5.jpg', '/static/images/ticket.jpg', '/static/images/login_before.jpg',
                 '/static/images/1.jpg', '/static/images/6.jpg', '/static/images/7.jpg', '/static/images/8.jpg', 
                 '/static/images/9.jpg', '/static/images/10.jpg', '/static/images/11.jpg'];
                $scope.topic = true;
            });*/
    }
    $scope.messages = [];
    $scope.load_btn_content = '\u52a0\u8f7d\u66f4\u591a\u6d88\u606f';
    $scope.load_more_btn = false;
    var messageSet = {};
    $scope.messageStatus = {
      'NEW': '\u672a\u67e5\u770b',
      'READ': '\u5df2\u67e5\u770b'
    };
    var current_page = 1;
    var loadMessages = function (page) {
      var url = $scope.messages_url + '?page=' + page + '&per_page=' + 10;
      $http.get(url).success(function (data) {
        if (data.items.length === 0) {
          /*$rootScope.$emit(eventType.NOTIFICATION, {
                'type': 'POPMSG',
                'title': '消息',
                'message': '已加载全部聊天信息'
            });*/
          $scope.load_btn_content = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8\u4fe1\u606f';
          $scope.load_more_btn = true;
          return;
        }
        //广播通信事件
        // $rootScope.$broadcast('messageEvent');
        var added = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in messageSet)) {
            messageSet[value.id] = true;
            $scope.messages.push(value);
            added++;
          }
        });
        if (added === 0) {
          loadMessages(++current_page);
        }
      });
    };
    loadMessages(current_page);
    $scope.loadMore = function () {
      loadMessages(++current_page);
    };
    $scope.send = function () {
      if (!$scope.content) {
        return;
      }
      $http.post($scope.mes_send_url, { 'content': $scope.content }).success(function (data) {
        messageSet[data.id] = true;
        $scope.messages.unshift(data);
      });
      $scope.content = '';
    };
    $scope.viewImage = function (image) {
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }  // console.log(tempArr);
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    userService.load().then(function (data) {
      $scope.community = data.managed_community;
      $http.get('/api/users/' + $stateParams.id).success(function (data) {
        $scope.user = data;
      });
    });
  }
]);
angular.module('iwx').controller('MessMemberInfoCtrl', [
  '$scope',
  '$http',
  '$stateParams',
  '$rootScope',
  'eventType',
  function ($scope, $http, $stateParams, $rootScope, eventType) {
    console.log($stateParams.id);
    $scope.unique = function (arr) {
      var hash = {}, result_arr = [], elem;
      for (var i = 0; (elem = arr[i]) != null; i++) {
        if (!hash[elem]) {
          result_arr.push(elem);
          hash[elem] = true;
        }
      }
      return result_arr;
    };
    $http.get('/api/admin/community/register/users/' + $stateParams.id).success(function (data) {
      angular.forEach(data.answers, function (value) {
        value.question.options = $scope.unique(value.question.options);
      });
      $scope.user = data;
    });
    $scope.print = function () {
      window.print();
    };
  }
]);
angular.module('iwx').controller('MessAdminIwxCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  'userService',
  'eventType',
  function ($scope, $rootScope, $http, $stateParams, userService, eventType) {
    console.log('this is message between admin manager and iwx manager!');
    $scope.messages = [];
    var messageSet = {};
    var current_page = 1;
    var loadMessages = function (page) {
      var url = '/api/admin/message/iwx/' + $stateParams.id + '?page=' + page + '&per_page=' + 10;
      $http.get(url).success(function (data) {
        if (data.items.length === 0) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u5df2\u52a0\u8f7d\u5168\u90e8\u804a\u5929\u4fe1\u606f'
          });
          return;
        }
        var added = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in messageSet)) {
            messageSet[value.id] = true;
            $scope.messages.push(value);
            added++;
          }
        });
        if (added === 0) {
          loadMessages(++current_page);
        }
      });
    };
    loadMessages(current_page);
    $scope.loadMore = function () {
      loadMessages(++current_page);
    };
    $scope.send = function () {
      if (!$scope.content) {
        return;
      }
      var param = {};
      // param['community_id'] = $scope.community.id;
      param['user_id'] = $stateParams.id;
      param['content'] = $scope.content;
      $http.post('/api/admin/message/iwx/reply', param).success(function (data) {
        messageSet[data.id] = true;
        $scope.messages.unshift(data);
      });
      $scope.content = '';
    };
    /*$http.put('/api/admin/messages/' + $stateParams.id).success(function() {
			$scope.$parent.clearId($stateParams.id);
		});*/
    userService.load().then(function (data) {
      $scope.community = data.managed_community;
    });
  }
]);
angular.module('iwx').controller('MessAdminUniCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  'userService',
  'eventType',
  function ($scope, $rootScope, $http, $stateParams, userService, eventType) {
    console.log('this is message between admin manager and university manager!');
    $scope.messages = [];
    var messageSet = {};
    var current_page = 1;
    var loadMessages = function (page) {
      var url = '/api/admin/message/un?page=' + page + '&per_page=' + 10;
      $http.get(url).success(function (data) {
        if (data.items.length === 0) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u5df2\u52a0\u8f7d\u5168\u90e8\u804a\u5929\u4fe1\u606f'
          });
          return;
        }
        var added = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in messageSet)) {
            messageSet[value.id] = true;
            $scope.messages.push(value);
            added++;
          }
        });
        if (added === 0) {
          loadMessages(++current_page);
        }
      });
    };
    loadMessages(current_page);
    $scope.loadMore = function () {
      loadMessages(++current_page);
    };
    $scope.send = function () {
      if (!$scope.content) {
        return;
      }
      var param = {};
      // param['community_id'] = $scope.community.id;
      // param['user_id'] = $stateParams.id;
      param['content'] = $scope.content;
      $http.post('/api/admin/message/un/reply', param).success(function (data) {
        messageSet[data.id] = true;
        $scope.messages.unshift(data);
      });
      $scope.content = '';
    };
    /*$http.put('/api/admin/messages/' + $stateParams.id).success(function() {
			$scope.$parent.clearId($stateParams.id);
		});*/
    userService.load().then(function (data) {
      $scope.community = data.managed_community;
    });
  }
]);
angular.module('iwx').controller('MessagesMemCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'eventType',
  function ($scope, $rootScope, $http, eventType) {
    //部门id数组
    $scope.dep_id_array = [];
    //查询到的社团成员
    $scope.members = [];
    $scope.member_set = {};
    //当前页码
    $scope.current_page = 1;
    //选中的社团id数组
    $scope.member_id_chosen = [];
    //是否显示“加载更多”按钮
    $scope.show_member = false;
    $scope.message = {};
    //获取社团部门
    $scope.getCommDep = function () {
      $http.get('/api/admin/department').success(function (data) {
        for (var i = 0; i < data.length; i++) {
          data[i].chosen = false;
        }
        $scope.departments = data;
      });
    };
    $scope.getCommDep();
    //发送消息
    $scope.send = function () {
      console.log($scope.member_id_chosen);
      console.log($scope.message.content);
      if ($scope.member_id_chosen.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u9009\u62e9\u8981\u53d1\u9001\u79c1\u4fe1\u7684\u793e\u5458\u3002'
        });
        return;
      }
      if (!$scope.message.content) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u586b\u5199\u8981\u53d1\u9001\u7684\u79c1\u4fe1\u5185\u5bb9\u3002'
        });
        return;
      }
      $scope.message['users'] = $scope.member_id_chosen;
      $http.post('/api/admin/messages/multi/members', $scope.message).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u5df2\u7ecf\u6210\u529f\u7ed9\u9009\u4e2d\u7684\u793e\u5458\u53d1\u9001\u79c1\u4fe1\u3002'
        });
        $scope.message.content = '';
      });
    };
    //选择部门条件
    $scope.chose_department = function (department) {
      if (department.chosen) {
        department.chosen = false;
        //将选中的部门从过滤条件中删除
        for (var i = 0; i < $scope.dep_id_array.length; i++) {
          if ($scope.dep_id_array[i] === department.id) {
            $scope.dep_id_array.splice(i, 1);
            break;
          }
        }
        //加载社员
        $scope.member_set = {};
        $scope.members = [];
        $scope.current_page = 1;
        load_members($scope.current_page);
      } else {
        department.chosen = true;
        //将选中的部门添加到过滤条件中
        $scope.dep_id_array.push(department.id);
        //加载社员
        $scope.member_set = {};
        $scope.members = [];
        $scope.current_page = 1;
        load_members($scope.current_page);
      }
    };
    //选择要发送信息的社团成员
    $scope.choose_member = function (member_id, choose_item) {
      if (choose_item) {
        $scope.member_id_chosen.push(member_id);
      } else {
        for (var i = 0; i < $scope.member_id_chosen.length; i++) {
          var temp = $scope.member_id_chosen[i];
          if (temp === member_id) {
            $scope.member_id_chosen.splice($scope.member_id_chosen.indexOf(temp), 1);
          }
        }
      }
    };
    //选择查询到的所有社团进行发送私信操作
    $scope.choose_members = function (choose_all) {
      if (choose_all) {
        if ($scope.member_id_chosen.length !== 0) {
          $scope.member_id_chosen.splice(0, $scope.member_id_chosen.length);
        }
        for (var i = 0; i < $scope.members.length; i++) {
          var temp = $scope.members[i];
          $scope.member_id_chosen.push(temp.id);
        }
      } else {
        $scope.member_id_chosen.splice(0, $scope.member_id_chosen.length);
      }
    };
    //加载查询到的社团
    var load_members = function (page) {
      //请求参数
      var request_param;
      if ($scope.dep_id_array.length !== 0) {
        var dep_id_str = '';
        for (var i = 0; i < $scope.dep_id_array.length; i++) {
          if (i !== $scope.dep_id_array.length - 1) {
            dep_id_str += $scope.dep_id_array[i] + '-';
          } else {
            dep_id_str += $scope.dep_id_array[i] + '';
          }
        }
        request_param = '?page=' + page + '&per_page=12&department_type=' + dep_id_str;
      } else {
        request_param = '?page=' + page + '&per_page=12';
      }
      $http.get('/api/admin/community/members' + request_param).success(function (data) {
        if (data.items.length === 0) {
          if (page !== 1) {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u5df2\u52a0\u8f7d\u5168\u90e8\u7b26\u5408\u6761\u4ef6\u7684\u793e\u5458\u3002'
            });
          }
          return;
        }
        $scope.show_member = true;
        var add = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.user.id in $scope.member_set)) {
            $scope.member_set[value.user.id] = true;
            $scope.members.push(value.user);
            add++;
          }
        });
        //当全选复选框为选中状态时，添加选中的社团
        if ($scope.choose_all) {
          $scope.choose_members($scope.choose_all);
        }
        if (add === 0) {
          load_members(++$scope.current_page);
        }
      });
    };
    load_members($scope.current_page);
    //加载更多
    $scope.load_more = function () {
      load_members(++$scope.current_page);
    };
    $scope.ok = function () {
      console.log($scope.input_value);
      console.log($('#input').val());
    };
  }
]);
angular.module('iwx').controller('MesBazUserCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  '$stateParams',
  '$modal',
  function ($scope, $http, $rootScope, $stateParams, $modal) {
    $scope.bazaar_user_id = $stateParams.id;
    console.log($scope.bazaar_user_id);
    $scope.load_topic_content = '\u52a0\u8f7d\u66f4\u591a\u6d88\u606f';
    $scope.more_topic = false;
    //和该用户相关的主题数组
    $scope.topics = [];
    //已经加载的主题对象
    var topicSet = {};
    //当前页数
    var curr_page = 1;
    //加载和该用户相关的主题信息
    var loadTopics = function (page) {
      $http.get('/api/admin/bazaar/message/' + $stateParams.id + '/topic?page=' + page + '&per_page=6').success(function (data) {
        console.log(data);
        if (data.items.length === 0) {
          $scope.load_topic_content = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8\u76f8\u5173\u4e3b\u9898';
          $scope.more_topic = true;
          return;
        }
        var added = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.topic.id in topicSet)) {
            topicSet[value.topic.id] = true;
            $scope.topics.push(value.topic);
            added++;
          }
        });
        if (added === 0) {
          loadTopics(++curr_page);
        }
      });
    };
    loadTopics(curr_page);
    //加载更多主题
    $scope.loadMoreTopic = function () {
      loadTopics(++curr_page);
    };
    //查看大图
    $scope.imageView = function (image) {
      if (image) {
        $modal.open({
          template: '<div><img style="width:100%" src=' + image + '></div>',
          size: 'lg'
        });
      }
    };
  }
]);
angular.module('iwx').controller('MesBazTopicCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  '$stateParams',
  '$modal',
  'eventType',
  function ($scope, $http, $rootScope, $stateParams, $modal, eventType) {
    $scope.messages = [];
    $scope.load_btn_content = '\u52a0\u8f7d\u66f4\u591a\u6d88\u606f';
    $scope.load_more_btn = false;
    var messageSet = {};
    $scope.messageStatus = {
      'NEW': '\u672a\u67e5\u770b',
      'READ': '\u5df2\u67e5\u770b'
    };
    var current_page = 1;
    //获取主题信息
    var loadTopic = function (topic_id) {
      $http.get('/api/admin/bazaar/' + topic_id).success(function (data) {
        $scope.topic = data;
        if (data.images.length !== 0) {
          $scope.items = data.images;
        }
      });
    };
    loadTopic($stateParams.id);
    var loadMessages = function (page) {
      $http.get('/api/admin/bazaar/message/' + $stateParams.id + '/' + $stateParams.user_id + '/list?page=' + page + '&per_page=10').success(function (data) {
        if (data.items.length === 0) {
          $scope.load_btn_content = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8\u4fe1\u606f';
          $scope.load_more_btn = true;
          return;
        }
        //重新调用人员和主题接口
        $rootScope.$broadcast('bazaarEvent');
        var added = 0;
        angular.forEach(data.items, function (value) {
          if (!(value.id in messageSet)) {
            messageSet[value.id] = true;
            $scope.messages.push(value);
            added++;
          }
        });
        if (added === 0) {
          loadMessages(++current_page);
        }
      });
    };
    loadMessages(current_page);
    $scope.loadMore = function () {
      loadMessages(++current_page);
    };
    $scope.send = function () {
      if (!$scope.content) {
        return;
      }
      $http.post('/api/admin/bazaar/message/' + $stateParams.id + '/send', {
        'content': $scope.content,
        'user_id': $stateParams.user_id
      }).success(function (data) {
        messageSet[data.id] = true;
        $scope.messages.unshift(data);
      });
      $scope.content = '';
    };
    $scope.viewImage = function (image) {
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }  // console.log(tempArr);
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
  }
]);
angular.module('iwx').controller('HostDetailCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  'hostId',
  function ($scope, $rootScope, $http, $stateParams, hostId) {
    $scope.commId = hostId;
    $http.get('/api/un/' + $scope.commId + '/admin_user').success(function (data) {
      console.log(data);
      $scope.admin_user = data;
      $scope.community = data.managed_community;
    });
  }
]);
angular.module('iwx').controller('shareQrcodeCtrl', [
  '$scope',
  'shareUrl',
  function ($scope, shareUrl) {
    console.log(shareUrl);
    var data = shareUrl;
    var set_qrcode = function (data) {
      $scope.qrcode = {
        v: parseInt(6 + 14 * Math.random(), 10),
        data: data
      };
    };
    set_qrcode(data);
  }
]);
angular.module('iwx').controller('PartyBranchCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  function ($scope, $http, $rootScope, eventType) {
    console.log('\u8fd9\u662f\u515a\u652f\u90e8\u793e\u56e2\u4fe1\u606f\u63a7\u5236\u5668');
    $rootScope.welcome_bg = false;
    if (!$rootScope.mes_note) {
      $rootScope.message();
    }
    //获取党支部社团组织信息
    $http.get('/api/admin/community').success(function (data) {
      $scope.community = data;
    });
    //监听组织描述
    $scope.$watch('community.description', function (string) {
      if (string) {
        var arr = [];
        angular.forEach(string, function (value, index) {
          if (value !== ' ') {
            arr.push(value);
          }
        });
        if (arr.length > 200) {
          $scope.show_description = true;
        } else {
          $scope.show_description = false;
        }
      }
    });
    $scope.submit = function () {
      var fd = new FormData();
      angular.forEach($scope.community, function (value, key) {
        fd.append(key, value);
      });
      $http.post('/api/admin/community', fd, {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (data) {
        $scope.community = data;
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u4fdd\u5b58\u6210\u529f'
        });
        $rootScope.$broadcast('flushLoginUser', data);
      });
    };
  }
]);
angular.module('iwx').controller('PartyPersonCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'ngTableParams',
  'eventType',
  '$modal',
  '$state',
  'userService',
  '$filter',
  function ($scope, $http, $rootScope, ngTableParams, eventType, $modal, $state, userService, $filter) {
    //人员查询条件
    var allGrades = [];
    var partGrades = [];
    var allGroups = [];
    var partGroups = [];
    $scope.date = $filter('date')(new Date(), 'yyyy-MM-dd');
    //获取学年查询条件
    var getGrades = function () {
      $http.get('/api/political/years?page=1&per_page=1000').success(function (data) {
        console.log(data.items);
        if (data.total > 12) {
          partGrades = data.items.slice(0, 12);
        } else {
          partGrades = data.items;
        }
        allGrades = data.items;
        $scope.grades = partGrades;
      });
    };
    //获取分组查询条件
    var getGroups = function () {
      $http.get('/api/political/groups?page=1&per_page=1000').success(function (data) {
        console.log(data.items);
        if (data.total > 12) {
          partGroups = data.items.slice(0, 12);
        } else {
          partGroups = data.items;
        }
        allGroups = data.items;
        $scope.groups = partGroups;
      });
    };
    $scope.operGrade = '\u5c55\u5f00\u5b66\u5e74';
    $scope.operGroup = '\u5c55\u5f00\u5206\u7ec4';
    var isGradeExpand = true;
    var isGroupExpand = true;
    $scope.exOratrGrade = function () {
      if (isGradeExpand) {
        $scope.grades = allGrades;
        $scope.operGrade = '\u6536\u8d77\u5b66\u5e74';
        isGradeExpand = false;
      } else {
        $scope.grades = partGrades;
        $scope.operGrade = '\u5c55\u5f00\u5b66\u5e74';
        isGradeExpand = true;
      }
    };
    $scope.exOratrGroup = function () {
      if (isGroupExpand) {
        $scope.groups = allGroups;
        $scope.operGroup = '\u6536\u8d77\u5206\u7ec4';
        isGroupExpand = false;
      } else {
        $scope.groups = partGroups;
        $scope.operGroup = '\u5c55\u5f00\u5206\u7ec4';
        isGroupExpand = true;
      }
    };
    //选择学年查询条件
    $scope.get_checked_grade = function (grade_id) {
      $scope.gradeId = grade_id;
      $scope.tableParams.reload();
    };
    //选择分组查询条件
    $scope.get_checked_group = function (group_id) {
      $scope.groupId = group_id;
      $scope.tableParams.reload();
    };
    var getPersonList = function () {
      //人员列表
      var NgTableParams = ngTableParams;
      var persons = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          var url = '/api/political/users/approved?page=' + params.page() + '&per_page=' + params.count();
          if ($scope.gradeId) {
            url += '&year=' + $scope.gradeId;
          }
          if ($scope.groupId) {
            url += '&group=' + $scope.groupId;
          }
          console.log(url);
          $http.get(url).success(function (data) {
            persons = data.items;
            params.total(data.total);
            $defer.resolve(persons);
          });
        }
      });
    };
    //获取人员身份
    var getMemberType = function () {
      $http.get('/api/political/type').success(function (data) {
        var identity = {};
        angular.forEach(data, function (value, key) {
          console.log(typeof key);
          var temp_key = key.toUpperCase();
          identity[temp_key] = value;
        });
        $scope.identity = identity;
        console.log($scope.identity);
        getPersonList();
      });
    };
    userService.load(true).then(function () {
      getGrades();
      getGroups();
      getMemberType();
    });
    //变更身份
    $scope.change = function (person) {
      $modal.open({
        templateUrl: 'partial/community/party_branch/party_persons/change.html',
        controller: 'ChangeCtrl',
        resolve: {
          person: function () {
            return person;
          }
        }
      });
    };
    //设置职务
    $scope.duty = function () {
      $state.go('party_info.duty', { reload: true });
    };
    //设置学年
    $scope.grade = function () {
      $state.go('party_info.grade', { reload: true });
    };
    //设置分组
    $scope.group = function () {
      $state.go('party_info.group', { reload: true });
    };
    //党建历程
    $scope.course = function (person_id) {
      $state.go('party_info.course', {
        personId: person_id,
        summaryId: 'null'
      }, { reload: true });
    };
    //发送私信
    $scope.letter = function (person) {
      $modal.open({
        templateUrl: 'partial/common/unpublished_reason.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.reason_title = '\u586b\u5199\u79c1\u4fe1\u5185\u5bb9';
            $scope.receive = 'To: ' + person.user_obj.nickname;
            $scope.ok_btn = true;
            $scope.$watch('content', function (newValue) {
              if ($scope.content) {
                $scope.ok_btn = false;
              } else {
                $scope.ok_btn = true;
              }
            });
            $scope.ok = function () {
              $http.post('/api/admin/messages/' + person.user_obj.id, { 'content': $scope.content }).success(function (data) {
                $rootScope.$emit(eventType.NOTIFICATION, {
                  'type': 'POPMSG',
                  'title': '\u6d88\u606f',
                  'message': '\u5df2\u7ecf\u6210\u529f\u53d1\u9001\u79c1\u4fe1\u3002'
                });
                $modalInstance.close('ok');
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    $scope.$on('change', function () {
      console.log('this is change event');
      $scope.tableParams.reload();
    });
  }
]);
angular.module('iwx').controller('infoConllectCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  '$state',
  'eventType',
  function ($scope, $http, $rootScope, $state, eventType) {
    //确认框信息
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.types = [
      {
        name: '\u95ee\u7b54\u9898',
        id: 'TEXT'
      },
      {
        name: '\u5355\u9009\u9898',
        id: 'SINGLE_CHOICE'
      },
      {
        name: '\u591a\u9009\u9898',
        id: 'MULTI_CHOICE'
      },
      {
        name: '\u56fe\u7247\u4e0a\u4f20',
        id: 'IMAGES'
      }
    ];
    $scope.questions = [];
    //定义一个选择部门问题
    /*$scope.dep_question = {
			title: 'PLACEHOLDER',
			type: 'MULTI_CHOICE',
			question: '你想加入我们哪个部门？',
			options: []
		};*/
    $http.get('/api/admin/community/register/form').success(function (data) {
      if (data) {
        $scope.questions = data;
        console.log($scope.questions);
      }  /*if (data) {
					$scope.questions = data;
					console.log($scope.dep_question);
				} else {
					$http.get('/api/admin/department')
						.success(function (data) {
							$scope.departments = data;
							for (var i=0;i<$scope.departments.length;i++) {
								$scope.dep_question.options.push($scope.departments[i].name);
							}
							$scope.questions.unshift($scope.dep_question);
						});
				}*/
    });
    $scope.addQuestion = function () {
      console.log(typeof $scope.questions);
      $scope.questions.push({
        title: 'PLACEHOLDER',
        type: 'TEXT',
        question: '',
        options: []
      });
    };
    //删除问题
    $scope.remove_question = function (index) {
      var question = index + 1;
      $scope.confirm.message = '\u786e\u5b9a\u8981\u5220\u9664\u95ee\u9898 ' + question + '\uff1f';
      $scope.confirm.type = 'remove_question';
      $scope.confirm.param = index;
      $('#confirmModal').modal();
      return;
    };
    $scope.addOption = function (index) {
      $scope.questions[index].options.push('');
    };
    $scope.removeOption = function (questionIndex, index) {
      $scope.questions[questionIndex].options.splice(index, 1);
    };
    //确认框
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'remove_question') {
        $('#question' + ($scope.confirm.param + 1)).slideUp(1000, function () {
          $scope.questions.splice($scope.confirm.param, 1);
        });
      }
    };
    //验证招新问题
    $scope.validate_question = function () {
      var questions_len = $scope.questions.length;
      var question, option;
      for (var i = 0; i < questions_len; i++) {
        question = $scope.questions[i];
        if (question.question === '') {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u8bf7\u586b\u5199\u95ee\u9898\u7684\u5185\u5bb9\u3002'
          });
          return false;
        } else {
          if (question.type === 'SINGLE_CHOICE' || question.type === 'MULTI_CHOICE') {
            if (question.options.length === 0) {
              $rootScope.$emit(eventType.NOTIFICATION, {
                'type': 'POPMSG',
                'title': '\u6d88\u606f',
                'message': '\u8bf7\u6dfb\u52a0\u5355\u9009\u6216\u591a\u9009\u95ee\u9898\u7684\u9009\u9879\u3002'
              });
              return false;
            } else {
              for (var j = 0; j < question.options.length; j++) {
                option = question.options[j];
                if (option === '') {
                  $rootScope.$emit(eventType.NOTIFICATION, {
                    'type': 'POPMSG',
                    'title': '\u6d88\u606f',
                    'message': '\u8bf7\u5b8c\u6574\u586b\u5199\u5355\u9009\u6216\u591a\u9009\u95ee\u9898\u7684\u9009\u9879\u3002'
                  });
                  return false;
                }
              }
            }
          }
        }
      }
      return true;
    };
    $scope.submit = function () {
      if (!$scope.validate_question()) {
        return;
      }
      console.log($scope.questions);
      $http.post('/api/admin/community/register/form', { register_form: angular.toJson($scope.questions) }).success(function () {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u4fdd\u5b58\u6210\u529f'
        });
      });
    };
    /*$scope.create_activity = function() {
				$http.post('/api/admin/activities?register=1')
					.success(function(id) {
						$state.go('activity_item', {
							'id': id,
							'currentPage': 1
						});
					});
			};*/
    $scope.$parent.$watch('community.enable_register', function (newVal, oldVal) {
      if (newVal !== undefined && oldVal !== undefined && newVal !== oldVal) {
        if (newVal) {
          $http.post('/api/admin/community/register').success(function () {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u4fdd\u5b58\u6210\u529f'
            });
          });
        } else {
          $http.delete('/api/admin/community/register').success(function () {
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u4fdd\u5b58\u6210\u529f'
            });
          });
        }
      }
    });
  }
]);
angular.module('iwx').controller('ChangeCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'person',
  '$modalInstance',
  function ($scope, $rootScope, $http, person, $modalInstance) {
    $scope.person = person;
    $scope.changeObj = { status: person.status.toLowerCase() };
    if ($scope.person.duty_obj) {
      $scope.changeObj['duty'] = $scope.person.duty_obj.id;
    } else {
      $scope.changeObj['duty'] = -1;
    }
    if ($scope.person.year_obj) {
      $scope.changeObj['year'] = $scope.person.year_obj.id;
    } else {
      $scope.changeObj['year'] = -1;
    }
    if ($scope.person.group_obj) {
      $scope.changeObj['group'] = $scope.person.group_obj.id;
    } else {
      $scope.changeObj['group'] = -1;
    }
    //获取职务信息
    var getDuties = function () {
      $http.get('/api/political/duties?page=1&per_page=1000').success(function (data) {
        $scope.dutyArray = data.items;
      });
    };
    getDuties();
    //获取学年信息
    var getGrades = function () {
      $http.get('/api/political/years?page=1&per_page=1000').success(function (data) {
        $scope.gradeArray = data.items;
      });
    };
    getGrades();
    //获取分组信息
    var getGroups = function () {
      $http.get('/api/political/groups?page=1&per_page=1000').success(function (data) {
        $scope.groupArray = data.items;
      });
    };
    getGroups();
    //获取身份信息
    /*var getIdentities = function () {
			$scope.identityArray = [{id: 1, name: '正式党员'},
				{id: 2, name: '预备党员'},
				{id: 3, name: '积极分子'}];
		};
		getIdentities();*/
    //获取党员类型
    var getMemberType = function () {
      $http.get('/api/political/type').success(function (data) {
        $scope.identityArray = [];
        angular.forEach(data, function (value, key) {
          var obj = {};
          obj['id'] = key;
          obj['name'] = value;
          $scope.identityArray.push(obj);
        });
        console.log($scope.identityArray);
      });
    };
    getMemberType();
    $scope.ok = function () {
      var param = {};
      if ($scope.changeObj.duty !== -1) {
        param['duty'] = $scope.changeObj.duty;
      }
      if ($scope.changeObj.year !== -1) {
        param['year'] = $scope.changeObj.year;
      }
      if ($scope.changeObj.group !== -1) {
        param['group'] = $scope.changeObj.group;
      }
      if ($scope.changeObj.status !== 'nullify') {
        param['status'] = $scope.changeObj.status;
      }
      console.log(param);
      $http.put('/api/political/user/' + $scope.person.user_obj.id + '/update', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        $modalInstance.close('ok');
        $rootScope.$broadcast('change');
      });
    };
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('DutyCtrl', [
  '$scope',
  '$http',
  '$modal',
  'ngTableParams',
  'userService',
  function ($scope, $http, $modal, ngTableParams, userService) {
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //新建职务
    $scope.createDuty = function () {
      $modal.open({
        templateUrl: 'partial/community/party_branch/duty_detail/edit_duty.html',
        controller: 'EditDutyCtrl',
        resolve: {
          duty: function () {
            return { id: -1 };
          }
        }
      });
    };
    var getDuties = function () {
      var NgTableParams = ngTableParams;
      var duties = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/political/duties?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            /*var data = {
								items: [{id: 1, name: '部长', describe: '这是最高官职', createtime: 1442991218000, number: 5}],
								total: 1
							};*/
            duties = data.items;
            params.total(data.total);
            $defer.resolve(duties);
          });
        }
      });
    };
    userService.load(true).then(function () {
      getDuties();
    });
    //查看成员
    $scope.members = function (duty) {
      $modal.open({
        templateUrl: 'partial/community/party_branch/members.html',
        controller: 'MembersCtrl',
        resolve: {
          obj: function () {
            return duty;
          },
          type: function () {
            return { description: 'duty' };
          }
        }
      });
    };
    //编辑职务
    $scope.edit = function (duty) {
      $modal.open({
        templateUrl: 'partial/community/party_branch/duty_detail/edit_duty.html',
        controller: 'EditDutyCtrl',
        resolve: {
          duty: function () {
            return duty;
          }
        }
      });
    };
    //删除职务
    $scope.delete = function (duty_id) {
      $scope.confirm.message = '\u786e\u5b9a\u8981\u5220\u9664\u8be5\u804c\u52a1\uff1f';
      $scope.confirm.type = 'delDuty';
      $scope.confirm.param = duty_id;
      $('#confirmModal').modal();
    };
    //确认框方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delDuty') {
        $http.delete('/api/political/duty/' + $scope.confirm.param + '/del').success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
    //刷新职务表格
    $scope.$on('flushDutyList', function () {
      $scope.tableParams.reload();
    });
  }
]);
angular.module('iwx').controller('EditDutyCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  '$modalInstance',
  'duty',
  function ($scope, $http, $rootScope, $modalInstance, duty) {
    $scope.duty = duty;
    //创建或者修改职务
    $scope.creOrUdpDuty = function () {
      var param = {};
      param.name = $scope.duty.name;
      param.describe = $scope.duty.describe;
      if ($scope.duty.id === -1) {
        $http.post('/api/political/duty/add', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $modalInstance.close('ok');
          $rootScope.$broadcast('flushDutyList');
        });
      } else {
        $http.put('/api/political/duty/' + $scope.duty.id + '/update', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $modalInstance.close('ok');
          $rootScope.$broadcast('flushDutyList');
        });
      }
    };
    //关闭
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('MembersCtrl', [
  '$scope',
  '$http',
  'ngTableParams',
  '$modalInstance',
  'obj',
  'type',
  function ($scope, $http, ngTableParams, $modalInstance, obj, type) {
    console.log(type);
    $scope.obj = obj;
    $scope.isHasMembers = true;
    var getMembers = function (url) {
      var NgTableParams = ngTableParams;
      var members = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 5
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get(url + '?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            console.log(data);
            /*data = {items:[{id: 1, nickname: '麻衣库怡', name: '王静', icon: '/images/user/5/icon/4b910af4-3bf7-11e5-8ac7-00163e002e66.jpg', 
								identity: { id: 1, name: '党员'}},
								{id: 1, nickname: '出版界', name: '郭德纲', icon: '/images/user/15/icon/d749432c-3995-11e5-8ac7-00163e002e66.jpg', 
								identity: { id: 1, name: '积极分子'}}],
								total: 2};*/
            if (data.total === 0) {
              $scope.isHasMembers = false;
            } else {
              $scope.isHasMembers = true;
              members = data.items;
              params.total(data.total);
              $defer.resolve(members);
            }
          });
        }
      });
    };
    var loadMembers = function (type, obj) {
      if (type === 'duty') {
        getMembers('/api/political/duty/' + obj.id + '/user');
      } else if (type === 'grade') {
        getMembers('/api/political/year/' + obj.id + '/user');
      } else {
        getMembers('/api/political/group/' + obj.id + '/user');
      }
    };
    loadMembers(type.description, $scope.obj);
    //关闭
    $scope.close = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('GroupCtrl', [
  '$scope',
  '$http',
  '$modal',
  'ngTableParams',
  'userService',
  function ($scope, $http, $modal, ngTableParams, userService) {
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //获取列表
    var getGroups = function () {
      var NgTableParams = ngTableParams;
      var groups = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/political/groups?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            /*var data = {
								items: [{id: 1, name: '党建一队', describe: '这是第一支党建活动小组', createtime: 1442991218000, number: 2}],
								total: 1
							};*/
            groups = data.items;
            params.total(data.total);
            $defer.resolve(groups);
          });
        }
      });
    };
    userService.load(true).then(function () {
      getGroups();
    });
    //新建小组
    $scope.createGroup = function () {
      $modal.open({
        templateUrl: 'partial/community/party_branch/group_detail/edit_group.html',
        controller: 'EditGroupCtrl',
        resolve: {
          group: function () {
            return { id: -1 };
          }
        }
      });
    };
    //编辑小组
    $scope.edit = function (group) {
      $modal.open({
        templateUrl: 'partial/community/party_branch/group_detail/edit_group.html',
        controller: 'EditGroupCtrl',
        resolve: {
          group: function () {
            return group;
          }
        }
      });
    };
    //查看成员
    $scope.members = function (group) {
      $modal.open({
        templateUrl: 'partial/community/party_branch/members.html',
        controller: 'MembersCtrl',
        resolve: {
          obj: function () {
            return group;
          },
          type: function () {
            return { description: 'group' };
          }
        }
      });
    };
    //删除小组
    $scope.delete = function (group_id) {
      $scope.confirm.message = '\u786e\u5b9a\u8981\u5220\u9664\u8be5\u5c0f\u7ec4\uff1f';
      $scope.confirm.type = 'delGroup';
      $scope.confirm.param = group_id;
      $('#confirmModal').modal();
    };
    //确认框方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delGroup') {
        $http.delete('/api/political/group/' + $scope.confirm.param + '/del').success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
    //刷新小组表格
    $scope.$on('flushGroupList', function () {
      $scope.tableParams.reload();
    });
  }
]);
angular.module('iwx').controller('EditGroupCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  '$modalInstance',
  'group',
  function ($scope, $http, $rootScope, $modalInstance, group) {
    $scope.group = group;
    //创建或者修改职务
    $scope.creOrUdpGroup = function () {
      var param = {};
      param.name = $scope.group.name;
      param.describe = $scope.group.describe;
      if ($scope.group.id === -1) {
        $http.post('/api/political/group/add', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $modalInstance.close('ok');
          $rootScope.$broadcast('flushGroupList');
        });
      } else {
        $http.put('/api/political/group/' + $scope.group.id + '/update', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $modalInstance.close('ok');
          $rootScope.$broadcast('flushGroupList');
        });
      }
    };
    //关闭
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('GradeCtrl', [
  '$scope',
  '$http',
  '$modal',
  'ngTableParams',
  'userService',
  function ($scope, $http, $modal, ngTableParams, userService) {
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //获取学年列表
    var getGrades = function () {
      var NgTableParams = ngTableParams;
      var grades = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/political/years?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            /*var data = {
								items: [{id: 1, name: '2016级', describe: '2016级当所有党员', createtime: 1442991218000, number: 2, starttime: 1442991218000, 
									endtime: 1442991218000}],
								total: 1
							};*/
            grades = data.items;
            params.total(data.total);
            $defer.resolve(grades);
          });
        }
      });
    };
    userService.load(true).then(function () {
      getGrades();
    });
    //新建学年
    $scope.createGrade = function () {
      $modal.open({
        templateUrl: 'partial/community/party_branch/grade_detail/edit_grade.html',
        controller: 'EditGradeCtrl',
        resolve: {
          grade: function () {
            return { id: -1 };
          }
        }
      });
    };
    //编辑学年
    $scope.edit = function (grade) {
      console.log(grade);
      $modal.open({
        templateUrl: 'partial/community/party_branch/grade_detail/edit_grade.html',
        controller: 'EditGradeCtrl',
        resolve: {
          grade: function () {
            return grade;
          }
        }
      });
    };
    //查看成员
    $scope.members = function (grade) {
      $modal.open({
        templateUrl: 'partial/community/party_branch/members.html',
        controller: 'MembersCtrl',
        resolve: {
          obj: function () {
            return grade;
          },
          type: function () {
            return { description: 'grade' };
          }
        }
      });
    };
    //删除学年
    $scope.delete = function (grade_id) {
      $scope.confirm.message = '\u786e\u5b9a\u8981\u5220\u9664\u8be5\u5b66\u5e74\uff1f';
      $scope.confirm.type = 'delGrade';
      $scope.confirm.param = grade_id;
      $('#confirmModal').modal();
    };
    //确认框方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delGrade') {
        $http.delete('/api/political/year/' + $scope.confirm.param + '/del').success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
    //刷新学年列表
    $scope.$on('flushGradeList', function () {
      $scope.tableParams.reload();
    });
  }
]);
angular.module('iwx').controller('EditGradeCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  '$modalInstance',
  'grade',
  function ($scope, $http, $rootScope, $modalInstance, grade) {
    if (grade.id !== -1) {
      var starttime = new Date(grade.start_year.toString());
      var endtime = new Date(grade.end_year.toString());
      grade.starttime = starttime.getTime();
      grade.endtime = endtime.getTime();
    }
    $scope.grade = grade;
    //创建或者修改学年
    $scope.creOrUdpGrade = function () {
      var param = {};
      param.name = $scope.grade.name;
      param.start_y = $scope.grade.starttime;
      param.end_y = $scope.grade.endtime;
      if ($scope.grade.id === -1) {
        console.log(param);
        $http.post('/api/political/year/add', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $modalInstance.close('ok');
          $rootScope.$broadcast('flushGradeList');
        });
      } else {
        console.log(param);
        $http.put('/api/political/year/' + $scope.grade.id + '/update', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
          $modalInstance.close('ok');
          $rootScope.$broadcast('flushGradeList');
        });
      }
    };
    //关闭
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('CourseCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  '$filter',
  '$state',
  'eventType',
  'userService',
  function ($scope, $rootScope, $http, $stateParams, $filter, $state, eventType, userService) {
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.personId = $stateParams.personId;
    $scope.summaryId = $stateParams.summaryId;
    //党建历程信息数组
    $scope.courses = [];
    //已加载的历程信息id
    var courseSet = {};
    $scope.loadCourseBtn = '\u52a0\u8f7d\u66f4\u591a~~';
    $scope.loadMoreBtn = false;
    $scope.loadMore = true;
    $scope.currentPage = 1;
    //获取认证
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.auth_token = response.auth_token;
    });
    //获取人员信息
    var getPerson = function () {
      $http.get('/api/political/' + $scope.personId + '/user').success(function (data) {
        $scope.person = data;
      });
    };
    getPerson();
    //加载历程信息
    var loadCourses = function (currentPage) {
      $http.get('/api/political/undergo/' + $scope.personId + '/list?per_page=10&page=' + currentPage).success(function (data) {
        $scope.loadMore = true;
        if (data.items.length === 0) {
          $scope.loadCourseBtn = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8~~';
          $scope.loadMoreBtn = true;
          return;
        }
        var added = 0;
        angular.forEach(data.items, function (value, key) {
          if ($scope.summaryId === 'null') {
            if (key === 0) {
              value.isDisplay = true;
            } else {
              value.isDisplay = false;
            }
          } else {
            if (value.id === parseInt($scope.summaryId)) {
              value.isDisplay = true;
            } else {
              value.isDisplay = false;
            }
          }
          if (!(value.id in courseSet)) {
            courseSet[value.id] = true;
            $scope.courses.push(value);
            added++;
          }
        });
        if (added === 0) {
          loadCourses(++$scope.currentPage);
        }
      });
    };
    loadCourses($scope.currentPage);
    //加载更多公告信息
    $scope.loadMoreCourses = function () {
      loadCourses(++$scope.currentPage);
    };
    //删除历程
    $scope.delCourse = function (course) {
      $scope.confirm.message = '\u786e\u5b9a\u8981\u5220\u9664\u201c' + $filter('date')(course.create_time, 'yyyy-MM-dd HH:mm') + '\u201d\u7684\u515a\u5efa\u4fe1\u606f\uff1f';
      $scope.confirm.type = 'delCourse';
      $scope.confirm.param = course.id;
      $('#confirmModal').modal();
    };
    //确认框方法
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delCourse') {
        $http.delete('/api/political/undergo/' + $scope.confirm.param + '/delete').success(function (data) {
          /*$scope.courses = [];
						courseSet = {};
						$scope.currentPage = 1;
						loadCourses($scope.currentPage);*/
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u5220\u9664\u6210\u529f\uff01'
          });
          $state.go('party_info.course', {
            personId: $scope.personId,
            summaryId: 'null'
          }, { reload: true });
        });
      }
    };
    //添加活动总结
    $scope.addActSummary = function (person_id) {
      console.log(person_id);
      $state.go('party_info.activity', { personId: person_id }, { reload: true });
    };
    //添加党建历程
    $scope.addCourseSummary = function (person_id) {
      $state.go('party_info.course_summary', { personId: person_id }, { reload: true });
    };
    $scope.print = function () {
      window.print();
    };
  }
]);
angular.module('iwx').controller('PartyActCtrl', [
  '$scope',
  '$http',
  'ngTableParams',
  'eventType',
  '$stateParams',
  '$state',
  function ($scope, $http, ngTableParams, eventType, $stateParams, $state) {
    $scope.plugins_config = {
      discuss: {
        'id': 'discuss',
        'name': '\u7ebf\u4e0a\u8ba8\u8bba',
        'icon_path': '/static/images/timeline_new.png',
        'note': '\u4e0d\u5fc5\u518d\u534f\u8c03\u6240\u6709\u4eba\u7684\u65f6\u95f4\uff0c\u518d\u6ca1\u6709\u573a\u5730\u7684\u9650\u5236\uff0c\u5728\u7ebf\u8ba8\u8bba\uff0c\u968f\u65f6\u968f\u5730\u3002'
      },
      political_sign_in: {
        'id': 'political_sign_in',
        'name': '\u6d3b\u52a8\u7b7e\u5230',
        'icon_path': '/static/images/sign_in_new.png',
        'note': '\u652f\u6301\u7ebf\u4e0a\u7b7e\u5230\u548c\u7ebf\u4e0b\u7b7e\u5230\uff0c\u6839\u636e\u6240\u9700\u8981\u7684\u6570\u636e\u7cbe\u51c6\u5ea6\uff0c\u81ea\u7531\u9009\u62e9\u7b7e\u5230\u6a21\u5f0f\u3002'
      }
    };
    $scope.personId = $stateParams.personId;
    console.log('\u4eba\u5458id\uff1a' + $scope.personId);
    //加载活动
    var loadActivities = function () {
      console.log('PartyActCtrl');
      var NgTableParams = ngTableParams;
      var activities = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/political/undergo/' + $scope.personId + '/activity?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            $scope.activity_sum = data.total;
            var items = data.items;
            if (items) {
              var len_items = items.length;
              for (var i = 0; i < len_items; i++) {
                var temp_item_plugin = items[i].activity_obj.activity.plugins;
                var len_plugins = temp_item_plugin.length;
                for (var j = 0; j < len_plugins; j++) {
                  var temp_plugin = temp_item_plugin[j];
                  temp_plugin['icon_path'] = $scope.plugins_config[temp_plugin.id].icon_path;
                }
              }
            }
            activities = items;
            params.total(data.total);
            $defer.resolve(activities);
          });
        }
      });
    };
    loadActivities();
    //添加总结
    $scope.addSummary = function (activity_id, summary_id, person_id) {
      $state.go('party_info.activity_summary', {
        activityId: activity_id,
        summaryId: summary_id,
        personId: person_id
      }, { reload: true });
    };
    //编辑总结
    $scope.editSummary = function (activity_id, summary_id, person_id) {
      $state.go('party_info.activity_summary', {
        activityId: activity_id,
        summaryId: summary_id,
        personId: person_id
      }, { reload: true });
    };
  }
]);
angular.module('iwx').controller('VerifyCtrl', [
  '$scope',
  '$http',
  'ngTableParams',
  'eventType',
  '$modal',
  '$state',
  'userService',
  function ($scope, $http, ngTableParams, eventType, $modal, $state, userService) {
    //人员查询条件
    var allGrades = [];
    var partGrades = [];
    //获取学年查询条件
    var getGrades = function () {
      $http.get('/api/political/years?page=1&per_page=1000').success(function (data) {
        console.log(data.items);
        if (data.total > 12) {
          partGrades = data.items.slice(0, 12);
        } else {
          partGrades = data.items;
        }
        allGrades = data.items;
        $scope.grades = partGrades;
      });
    };
    $scope.operGrade = '\u5c55\u5f00\u5b66\u5e74';
    var isGradeExpand = true;
    $scope.exOratrGrade = function () {
      if (isGradeExpand) {
        $scope.grades = allGrades;
        $scope.operGrade = '\u6536\u8d77\u5b66\u5e74';
        isGradeExpand = false;
      } else {
        $scope.grades = partGrades;
        $scope.operGrade = '\u5c55\u5f00\u5b66\u5e74';
        isGradeExpand = true;
      }
    };
    //选择学年查询条件
    $scope.get_checked_grade = function (grade_id) {
      $scope.gradeId = grade_id;
      $scope.tableParams.reload();
    };
    var loadApplyPerson = function () {
      //人员列表
      var NgTableParams = ngTableParams;
      var persons = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          var url = '/api/political/users/pending?page=' + params.page() + '&per_page=' + params.count();
          if ($scope.gradeId) {
            url += '&year=' + $scope.gradeId;
          }
          if ($scope.identityId) {
            url += '&status=' + $scope.identityId;
          }
          console.log(url);
          $http.get(url).success(function (data) {
            /*data = {
								items:[{id:1, nickname: '坏叔叔', name: '黄渤', sex: 'MALE', major: '计算机科学与技术', admission_date: '2013-7-7',
									identity: 'POSITIVE', phone: '13927658341', apply_time: 1403576402000,
									duty: {id: 1, name: '部长'}, 
									group: {id: 1, name: '党建一队'}, 
									grade: {id: 3, name: '2016'}}],
								total: 1
							};*/
            $scope.person_sum = data.total;
            persons = data.items;
            params.total(data.total);
            $defer.resolve(persons);
          });
        }
      });
    };
    //获取人员身份
    var getMemberType = function () {
      $http.get('/api/political/type').success(function (data) {
        var identity = {};
        $scope.identities = [];
        angular.forEach(data, function (value, key) {
          console.log(typeof key);
          var temp = {};
          temp['id'] = key;
          temp['name'] = value;
          $scope.identities.push(temp);
          var temp_key = key.toUpperCase();
          identity[temp_key] = value;
        });
        $scope.identity = identity;
        console.log($scope.identity);
        loadApplyPerson();
      });
    };
    //选择身份筛选条件
    $scope.get_checked_identity = function (identity_id) {
      $scope.identityId = identity_id;
      $scope.tableParams.reload();
    };
    userService.load(true).then(function () {
      getGrades();
      getMemberType();
    });
    //刷新表格
    var reloadTable = function () {
      $scope.tableParams.reload();
    };
    //录入
    $scope.approve = function (person_id) {
      $http.post('/api/political/user/' + person_id + '/approve').success(function (data) {
        reloadTable();
      });
    };
    //信息有误
    $scope.refuse = function (id, person) {
      $modal.open({
        templateUrl: 'partial/common/unpublished_reason.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.reason_title = '\u586b\u5199\u4fe1\u606f\u6709\u8bef\u7406\u7531';
            $scope.receive = 'To: ' + person.nickname;
            $scope.ok_btn = true;
            $scope.$watch('content', function (newValue) {
              if ($scope.content) {
                $scope.ok_btn = false;
              } else {
                $scope.ok_btn = true;
              }
            });
            $scope.ok = function () {
              //拒绝录入
              $http.post('/api/political/user/' + id + '/reject').success(function (data) {
                //拒绝成功发送私信给该用户
                $http.post('/api/admin/messages/' + person.id, { 'content': $scope.content }).success(function (data) {
                  $modalInstance.close('ok');
                  reloadTable();
                });
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
  }
]);
angular.module('iwx').controller('ApplyPerInCtrl', [
  '$scope',
  '$http',
  '$stateParams',
  '$rootScope',
  'eventType',
  '$modal',
  '$state',
  function ($scope, $http, $stateParams, $rootScope, eventType, $modal, $state) {
    $scope.userId = $stateParams.id;
    //处理答案选项
    $scope.unique = function (arr) {
      var hash = {}, result_arr = [], elem;
      for (var i = 0; (elem = arr[i]) != null; i++) {
        if (!hash[elem]) {
          result_arr.push(elem);
          hash[elem] = true;
        }
      }
      return result_arr;
    };
    //获取申请人信息
    var getUserInfo = function () {
      $http.get('/api/political/user/' + $scope.userId + '/pending').success(function (data) {
        /*$scope.user = {
						user: {id:1, nickname: '坏叔叔', name: '黄渤', sex: 'MALE', major: '计算机科学与技术', admission_date: '2013-7-7',
								identity: {id: 1, name: '正式党员'}, phone: '13927658341', apply_time: 1403576402000, 
								icon: '/images/user/5/icon/4b910af4-3bf7-11e5-8ac7-00163e002e66.jpg',
								university: {id: 1, name: '中央民族大学'},
								duty: {id: 1, name: '部长'}, 
								group: {id: 1, name: '党建一队'}, 
								grade: {id: 3, name: '2016'}},
						answers: [{
							answer: ['乔布斯'],
							question: {
								options: ['乔布斯', '科比', '科比', '乔丹', '皮蓬'],
								question: '第一届奥斯卡得主？',
								title: '常识题',
								type: 'SINGLE_CHOICE'
							}
						}, {
							answer: ['要不是的确实话题材质检讨论文化学生日本人生日志愿望你好像'],
							question: {
								options: [],
								question: '老罗邀请方舟子共进晚餐，请你用你的理解，描述一下当时会发生的情况（500字以内）',
								title: '常识题',
								type: 'TEXT'
							}
						}, {
							answer: ['/images/user/64/community_register/3/images/b3df52a0-de82-11e4-8ac7-00163e002e66.jpg'],
							question: {
								options: [],
								question: '请上传一张你最满意的近照，让我们快速认识你！',
								title: '常识题',
								type: 'IMAGES'
							}
						}, {
							answer: ['王泽'],
							question: {
								options: ['王石', '汪小菲', '泷泽秀明', '小泽马里奥', '山本小太郎', '王泽'],
								question: '和郭美美有关的有哪几个人？',
								title: '常识题',
								type: 'MULTI_CHOICE'
							}
						}]
					};*/
        angular.forEach(data.answers, function (value) {
          value.question.options = $scope.unique(value.question.options);
        });
        $scope.user = data;
      });
    };
    getUserInfo();
    //录入
    $scope.approve = function (user) {
      $http.post('/api/political/user/' + user.id + '/approve').success(function (data) {
        $state.go('party_info.verify', { reload: true });
      });
    };
    //信息有误
    $scope.refuse = function (user) {
      console.log(user);
      $modal.open({
        templateUrl: 'partial/common/unpublished_reason.html',
        controller: [
          '$scope',
          '$modalInstance',
          function ($scope, $modalInstance) {
            $scope.reason_title = '\u586b\u5199\u4fe1\u606f\u6709\u8bef\u7406\u7531';
            $scope.receive = 'To: ' + user.user_obj.nickname;
            $scope.ok_btn = true;
            $scope.$watch('content', function (newValue) {
              if ($scope.content) {
                $scope.ok_btn = false;
              } else {
                $scope.ok_btn = true;
              }
            });
            $scope.ok = function () {
              //拒绝录入
              $http.post('/api/political/user/' + user.id + '/reject').success(function (data) {
                //拒绝成功发送私信给该用户
                $http.post('/api/admin/messages/' + user.user_obj.id, { 'content': $scope.content }).success(function (data) {
                  $modalInstance.close('ok');
                  $state.go('party_info.verify', { reload: true });
                });
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
  }
]);
angular.module('iwx').controller('ActSummaryCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  '$modal',
  'userService',
  '$state',
  'eventType',
  function ($scope, $rootScope, $http, $stateParams, $modal, userService, $state, eventType) {
    //活动id
    $scope.activityId = $stateParams.activityId;
    //总结id
    $scope.summaryId = $stateParams.summaryId;
    //人员id
    $scope.personId = $stateParams.personId;
    $scope.summary = { id: $scope.summaryId };
    //要添加的标签id数组
    $scope.label_id_array = [];
    //要删除的标签id数组
    // $scope.label_id_remove = [];
    //已存在的总结的标签hash
    $scope.summary_exist_labels = {};
    //获取标签库数据
    $scope.getLabels = function () {
      $http.get('/api/political/label/list').success(function (data) {
        angular.forEach(data, function (value, key) {
          value['chosen'] = false;
        });
        $scope.labels = data;
        $scope.chosenExistLabels();
      });
    };
    //记录已存在的总结的标签
    $scope.recordExistLabels = function (summary) {
      angular.forEach(summary.label, function (value, key) {
        $scope.summary_exist_labels[value.id] = value;
      });
      $scope.getLabels();
    };
    //选中已存在的标签
    $scope.chosenExistLabels = function () {
      console.log($scope.summary_exist_labels);
      console.log($scope.labels);
      angular.forEach($scope.labels, function (value, key) {
        if ($scope.summary_exist_labels[value.id]) {
          value.chosen = true;
          $scope.label_id_array.push(value.id);
        }
      });
    };
    //获取活动数据
    $scope.getActivity = function () {
      $http.get('/api/political/' + $scope.activityId + '/undergo').success(function (data) {
        $scope.browse_num = data.activity_obj.browse_num;
        $scope.activity = data.activity_obj.activity;
        $scope.signIn = data.activity_obj.sign_in;
        if (data.join_undergo_obj) {
          $scope.summary = data.join_undergo_obj;
          $scope.recordExistLabels($scope.summary);
        } else {
          var temp = [];
          $scope.recordExistLabels(temp);
        }
      });
    };
    userService.load(true).then(function () {
      $scope.getActivity();
    });
    //选择标签
    $scope.choseLabel = function (label) {
      if (label.chosen) {
        label.chosen = false;
        angular.forEach($scope.label_id_array, function (value, key) {
          if (value === label.id) {
            $scope.label_id_array.splice(key, 1);
          }
        });  /*if ($scope.summary_exist_labels[label.id]) {
					$scope.label_id_remove.push(label.id);
				}*/
      } else {
        label.chosen = true;
        // if (!$scope.summary_exist_labels[label.id]) {
        $scope.label_id_array.push(label.id);  // }
                                               /*if ($scope.summary_exist_labels[label.id]) {
					angular.forEach($scope.label_id_remove, function (value, key) {
						if (value === label.id) {
							$scope.label_id_remove.splice(key, 1);
						}
					});
				}*/
      }
      console.log('\u8981\u6dfb\u52a0\u5230\u603b\u7ed3\u4e2d\u7684label id\uff1a' + $scope.label_id_array);
    };
    //添加标签
    $scope.addLabel = function () {
      $modal.open({
        templateUrl: 'partial/community/party_branch/party_persons/course/add_label.html',
        controller: 'AddLabelCtrl',
        resolve: {}
      });
    };
    $scope.$on('addLabel', function (event, value) {
      $scope.getLabels();
    });
    //保存活动总结，保存成功跳转至个人党建历程页面
    $scope.saveSummary = function () {
      if ($scope.label_id_array.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u9009\u62e9\u6807\u7b7e\uff01'
        });
        return;
      }
      if (!$scope.summary.content) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6dfb\u5199\u603b\u7ed3\u5185\u5bb9\uff01'
        });
        return;
      }
      var params = {};
      if (parseInt($scope.summary.id) === -1) {
        params['user_id'] = $scope.personId;
        params['activity_id'] = $scope.activity.id;
      }
      params['label'] = $scope.label_id_array;
      params['content'] = $scope.summary.content;
      /*if ($scope.label_id_remove.length !== 0) {
				params['label_del'] = $scope.label_id_remove;
			}*/
      console.log(params);
      if (parseInt($scope.summary.id) !== -1) {
        console.log('update activity summary!');
        $http.put('/api/political/undergo/' + $scope.summary.id + '/update', params).success(function (data) {
          $state.go('party_info.course', {
            personId: $scope.personId,
            summaryId: $scope.summary.id
          }, { reload: true });
        });
      } else {
        console.log('create activity summary!');
        $http.post('/api/political/undergo/create', params).success(function (data) {
          $state.go('party_info.course', {
            personId: $scope.personId,
            summaryId: data.id
          }, { reload: true });
        });
      }
    };
  }
]);
angular.module('iwx').controller('AddLabelCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$modalInstance',
  function ($scope, $rootScope, $http, $modalInstance) {
    $scope.label = {};
    //创建标签
    $scope.createLabel = function () {
      var param = {};
      param.name = $scope.label.name;
      $http.post('/api/political/label/create', param, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        $modalInstance.close('ok');
        $rootScope.$broadcast('addLabel');
      });
    };
    //关闭
    $scope.cancel = function () {
      $modalInstance.close('ok');
    };
  }
]);
angular.module('iwx').controller('CouSummaryCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  '$modal',
  'userService',
  '$state',
  'eventType',
  function ($scope, $rootScope, $http, $stateParams, $modal, userService, $state, eventType) {
    $scope.personId = $stateParams.personId;
    //选中的标签id
    $scope.label_id_array = [];
    $scope.summary = {};
    //获取标签库数据
    $scope.getLabels = function () {
      $http.get('/api/political/label/list').success(function (data) {
        angular.forEach(data, function (value, key) {
          value['chosen'] = false;
        });
        $scope.labels = data;
      });
    };
    userService.load(true).then(function () {
      $scope.getLabels();
    });
    //选择标签
    $scope.choseLabel = function (label) {
      if (label.chosen) {
        label.chosen = false;
        for (var i = 0; i < $scope.label_id_array.length; i++) {
          if ($scope.label_id_array[i] === label.id) {
            $scope.label_id_array.splice(i, 1);
            break;
          }
        }
      } else {
        label.chosen = true;
        $scope.label_id_array.push(label.id);
      }
      console.log($scope.label_id_array);
    };
    //添加标签
    $scope.addLabel = function () {
      $modal.open({
        templateUrl: 'partial/community/party_branch/party_persons/course/add_label.html',
        controller: 'AddLabelCtrl',
        resolve: {}
      });
    };
    //保存文字总结
    $scope.saveSummary = function () {
      if ($scope.label_id_array.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u9009\u62e9\u6807\u7b7e\uff01'
        });
        return;
      }
      if (!$scope.summary.content) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6dfb\u5199\u603b\u7ed3\u5185\u5bb9\uff01'
        });
        return;
      }
      var params = {};
      params['user_id'] = $scope.personId;
      params['label'] = $scope.label_id_array;
      params['content'] = $scope.summary.content;
      $http.post('/api/political/undergo/create', params).success(function (data) {
        $state.go('party_info.course', {
          personId: $scope.personId,
          summaryId: data.id
        }, { reload: true });
      });
    };
    $scope.$on('addLabel', function (event, value) {
      $scope.getLabels();
    });
  }
]);
angular.module('iwx').controller('PartyActListCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$modal',
  'ngTableParams',
  '$stateParams',
  '$state',
  function ($scope, $rootScope, $http, $modal, ngTableParams, $stateParams, $state) {
    $rootScope.welcome_bg = false;
    $scope.confirm = {};
    $scope.confirm.title = '\u8bf7\u786e\u5b9a\u60a8\u7684\u64cd\u4f5c';
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.plugins_config = {
      discuss: {
        'id': 'discuss',
        'name': '\u7ebf\u4e0a\u8ba8\u8bba',
        'icon_path': '/static/images/timeline_new.png',
        'note': '\u4e0d\u5fc5\u518d\u534f\u8c03\u6240\u6709\u4eba\u7684\u65f6\u95f4\uff0c\u518d\u6ca1\u6709\u573a\u5730\u7684\u9650\u5236\uff0c\u5728\u7ebf\u8ba8\u8bba\uff0c\u968f\u65f6\u968f\u5730\u3002'
      },
      political_sign_in: {
        'id': 'political_sign_in',
        'name': '\u6d3b\u52a8\u7b7e\u5230',
        'icon_path': '/static/images/sign_in_new.png',
        'note': '\u652f\u6301\u7ebf\u4e0a\u7b7e\u5230\u548c\u7ebf\u4e0b\u7b7e\u5230\uff0c\u6839\u636e\u6240\u9700\u8981\u7684\u6570\u636e\u7cbe\u51c6\u5ea6\uff0c\u81ea\u7531\u9009\u62e9\u7b7e\u5230\u6a21\u5f0f\u3002'
      }
    };
    $scope.currentPage = $stateParams.page;
    console.log($stateParams.page);
    //加载党支部活动
    var loadPartyAct = function () {
      var NgTableParams = ngTableParams;
      var activities = null;
      $scope.tableParams = new NgTableParams({
        page: $scope.currentPage,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $scope.currentPage = params.page();
          $http.get('/api/admin/activities?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            /*data = {items: [{
								id: 1, subject: '由 Microsoft Edge 创建', content: '<blockquote><div><i>卓越法律人才培养/div>', published: true,
								start_time: 1420095480000, end_time: 1442079600000, location: '人民大会堂河北厅', range: 'ALL',
								poster: '/images/activity/336/poster/1a74563a-419f-11e5-8ac7-00163e002e66.jpg',
								plugins: [{
									id: 'discuss', name: '线上讨论', enabled: true,
									preview: {}},{id: 'political_sign_in', name: '活动签到', enabled: true, preview: {}}]
								}],
								total: 1
							};*/
            var items = data.items;
            if (items) {
              var len_items = items.length;
              for (var i = 0; i < len_items; i++) {
                var temp_item_plugin = items[i].plugins;
                var len_plugins = temp_item_plugin.length;
                for (var j = 0; j < len_plugins; j++) {
                  var temp_plugin = temp_item_plugin[j];
                  temp_plugin['icon_path'] = $scope.plugins_config[temp_plugin.id].icon_path;
                }
              }
            }
            activities = items;
            params.total(data.total);
            $defer.resolve(activities);
          });
        }
      });
    };
    loadPartyAct();
    //创建活动
    $scope.createActivity = function () {
      $state.go('party_act_item', {
        id: -1,
        page: $scope.currentPage
      });
    };
    //确认方法
    $scope.confirmModal = function () {
      var url = '/api/admin/activities/' + $scope.confirm.param + '/' + $scope.confirm.type;
      if ($scope.confirm.type === 'del_activity') {
        $http.delete('/api/admin/activities/' + $scope.confirm.param).success(function (data) {
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'publish') {
        $http.post(url).success(function (data) {
          $scope.tableParams.reload();
        });
      } else if ($scope.confirm.type === 'unpublish') {
        $http.post(url).success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
    //删除活动
    $scope.deleteActivity = function (activity) {
      $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u5220\u9664\u201c' + activity.subject + '\u201d\u6d3b\u52a8\u5417\uff1f';
      $scope.confirm.type = 'del_activity';
      $scope.confirm.param = activity.id;
      $('#confirmModal').modal();
      return;
    };
    //发布或取消发布活动
    $scope.invTogglePublish = function (activity) {
      var action = activity.published ? 'unpublish' : 'publish';
      if (action === 'unpublish') {
        $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u53d6\u6d88\u53d1\u5e03\u201c' + activity.subject + '\u201d\u6d3b\u52a8\u5417?';
        $scope.confirm.type = 'unpublish';
      } else {
        $scope.confirm.message = '\u60a8\u786e\u5b9a\u8981\u53d1\u5e03\u201c' + activity.subject + '\u201d\u6d3b\u52a8\u5417?';
        $scope.confirm.type = 'publish';
      }
      $scope.confirm.param = activity.id;
      $('#confirmModal').modal();
      return;
    };
    $scope.gotoPlugin = function (activityId, pluginId) {
      if (pluginId === '') {
        $state.go('party_act_item', {
          'id': activityId,
          'page': $scope.currentPage
        });
      } else {
        $state.go('party_act_item.' + pluginId + '_plugin', {
          'id': activityId,
          'page': $scope.currentPage
        });
      }
    };
  }
]);
angular.module('iwx').controller('PartyActItemCtrl', [
  '$scope',
  '$http',
  '$modal',
  '$state',
  '$stateParams',
  '$rootScope',
  '$filter',
  'eventType',
  '$window',
  function ($scope, $http, $modal, $state, $stateParams, $rootScope, $filter, eventType, $window) {
    $scope.page = $stateParams.page;
    $scope.plugins_config = {
      discuss: {
        'id': 'discuss',
        'name': '\u7ebf\u4e0a\u8ba8\u8bba',
        'icon_path': '/static/images/timeline_new.png',
        'note': '\u4e0d\u5fc5\u518d\u534f\u8c03\u6240\u6709\u4eba\u7684\u65f6\u95f4\uff0c\u518d\u6ca1\u6709\u573a\u5730\u7684\u9650\u5236\uff0c\u5728\u7ebf\u8ba8\u8bba\uff0c\u968f\u65f6\u968f\u5730\u3002'
      },
      political_sign_in: {
        'id': 'political_sign_in',
        'name': '\u6d3b\u52a8\u7b7e\u5230',
        'icon_path': '/static/images/sign_in_new.png',
        'note': '\u652f\u6301\u7ebf\u4e0a\u7b7e\u5230\u548c\u7ebf\u4e0b\u7b7e\u5230\uff0c\u6839\u636e\u6240\u9700\u8981\u7684\u6570\u636e\u7cbe\u51c6\u5ea6\uff0c\u81ea\u7531\u9009\u62e9\u7b7e\u5230\u6a21\u5f0f\u3002'
      }
    };
    //验证正则表达式
    $scope.content_regexp = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,20}$|^[\w\s_\x21-\x7e]{0,40}$/;
    $scope.sub_regexp = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,25}$|^[\w\s_\x21-\x7e]{0,50}$/;
    $scope.loc_regexp = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,15}$|^[\w\s_\x21-\x7e]{0,30}$/;
    //活动id political_show为1==true表示仅党支部可见
    $scope.editingActivityId = parseInt($stateParams.id);
    $scope.activity = {
      'id': $scope.editingActivityId,
      'political_show': 'all'
    };
    //选择活动可见范围
    $scope.getCheckedRange = function (political_show) {
      $scope.activity.political_show = political_show;
    };
    //获取活动信息
    if ($scope.editingActivityId !== -1) {
      $http.get('/api/admin/activities/' + $scope.editingActivityId).success(function (data) {
        /*data = {id: 272, subject: '由 Microsoft Edge 创建', content: '<blockquote><div><i>卓越法律人才培养/div>', published: true,
							start_time: 1420095480000, end_time: 1442079600000, location: '人民大会堂河北厅', range: 'ALL',
							poster: '/images/activity/336/poster/1a74563a-419f-11e5-8ac7-00163e002e66.jpg',
							plugins: [{
								id: 'discuss', name: '线上讨论', enabled: true,
								preview: {}},{id: 'political_sign_in', name: '活动签到', enabled: true, preview: {
									community_logo: "/images/community/3/logo/e81ad6f0-dea2-11e4-8ac7-00163e002e66.jpg",
									end_time: 1437847980000, has_signed_in: false, id: 79, sponsor_logo: "/images/images/placeholder.png",
									sponsor_name: "黄焖鸡"
								}}]
							};*/
        $scope.activity = data;
        if ($scope.activity.political_show) {
          $scope.activity.political_show = 'party';
        } else {
          $scope.activity.political_show = 'all';
        }
        $scope.act_plugin = [];
        if ($scope.activity.plugins && $scope.activity.plugins.length > 0) {
          for (var i = 0; i < $scope.activity.plugins.length; i++) {
            var temp_plugin = $scope.activity.plugins[i];
            temp_plugin['icon_path'] = $scope.plugins_config[temp_plugin.id].icon_path;
            $scope.act_plugin.push(temp_plugin);
          }
        }
      });
    }
    //获取所有插件
    if ($scope.editingActivityId !== -1) {
      $http.get('/api/plugins').success(function (data) {
        /*data = [{id: 'discuss', name: '线上讨论', enabled: true},
							{id: 'political_sign_in', name: '活动签到', enabled: true}];*/
        var tempArr = [];
        for (var i = 0; i < data.length; i++) {
          var temp = $scope.plugins_config[data[i].id];
          tempArr.push(temp);
        }
        $scope.plugins = tempArr;
      });
    }
    //是否发布活动
    $scope.isPublishActivity = function (id, isPublish, page) {
      var url = '';
      if (isPublish) {
        url = '/api/admin/activities/' + id + '/unpublish';
      } else {
        url = '/api/admin/activities/' + id + '/publish';
      }
      $http.post(url).success(function (data) {
        if (isPublish) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u53d6\u6d88\u53d1\u5e03\u6210\u529f'
          });
        } else {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u53d1\u5e03\u6210\u529f'
          });
        }
        $state.go('party_act_item', {
          id: id,
          currentPage: page
        }, { reload: true });
      });
    };
    //删除活动
    $scope.delete = function () {
      if ($scope.editingActivityId !== -1) {
        $http.delete('/api/admin/activities/' + $scope.editingActivityId).success(function () {
          $state.go('party_act_list', { currentPage: 1 });
        });
      } else {
        $state.go('party_act_list', { currentPage: 1 });
      }
    };
    $scope.removeHtmlTag = function (str) {
      str = str.replace(/<\/?[^>]*>/g, '');
      //去除HTML tag
      str = str.replace(/[ | ]*\n/g, '\n');
      //去除行尾空白
      str = str.replace(/&nbsp;/gi, '');
      //去掉&nbsp;
      return str;
    };
    //保存活动
    $scope.saveActivity = function () {
      try {
        if (typeof $scope.activity.start_time === 'number') {
          $scope.activity.start_time = $filter('date')($scope.activity.start_time, 'yyyy-MM-dd HH:mm');
        }
        if (typeof $scope.activity.end_time === 'number') {
          $scope.activity.end_time = $filter('date')($scope.activity.end_time, 'yyyy-MM-dd HH:mm');
        }
        var stTime = new Date($scope.activity.start_time.replace(/-/g, '/'));
        var endTime = new Date($scope.activity.end_time.replace(/-/g, '/'));
        if (Date.parse(stTime) > Date.parse(endTime)) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u7ed3\u675f\u65f6\u95f4\u5fc5\u987b\u5728\u5f00\u59cb\u65f6\u95f4\u4e4b\u540e'
          });
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u6b63\u786e\u9009\u62e9\u6d3b\u52a8\u65f6\u95f4'
        });
        return;
      }
      if (!$scope.activity.location || !$scope.activity.content || !$scope.activity.subject) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u5b8c\u6574\uff0c\u5176\u4e2d\u6d3b\u52a8\u4e3b\u9898\u3001\u6d3b\u52a8\u5730\u70b9\u548c\u6d3b\u52a8\u5185\u5bb9\u4e3a\u5fc5\u586b\u9879\uff01'
        });
        return;
      }
      //限制字数提示
      if (!$scope.sub_regexp.test($scope.activity.subject)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6d3b\u52a8\u4e3b\u9898\u8bf7\u9650\u5236\u572825\u4e2a\u6c49\u5b57\u4ee5\u5185\uff01'
        });
        return;
      }
      if (!$scope.loc_regexp.test($scope.activity.location)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6d3b\u52a8\u5730\u70b9\u8bf7\u9650\u5236\u572815\u4e2a\u6c49\u5b57\u4ee5\u5185\uff01'
        });
        return;
      }
      if ($scope.activity.members && !$scope.content_regexp.test($scope.activity.content)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u6d3b\u52a8\u53e3\u53f7\u8bf7\u9650\u5236\u572820\u4e2a\u6c49\u5b57\u4ee5\u5185\uff01'
        });
        return;
      }
      //活动内容
      var contentText = $scope.removeHtmlTag($scope.activity.content);
      if (contentText.length > 2000) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u201c' + contentText.substring(1990, 2000) + '...\u201d\u4e4b\u540e\u7684\u5185\u5bb9\u8d85\u8fc7\u4e862000\u5b57\u6570\u9650\u5236\uff01'
        });
        return;
      }
      //设置图片宽高
      $scope.activity.content = $scope.activity.content.replaceAll('<img', '<img width="480px" height="320px"');
      //设置可见范围
      if ($scope.activity.political_show === 'all') {
        $scope.activity.political_show = false;
      } else {
        $scope.activity.political_show = true;
      }
      console.log($scope.activity);
      if ($scope.editingActivityId === -1) {
        $http.post('/api/admin/activities').success(function (id) {
          $scope.editingActivityId = id;
          var fd = new FormData();
          angular.forEach($scope.activity, function (value, key) {
            fd.append(key, value);
          });
          $http.post('/api/admin/activities/' + $scope.editingActivityId, fd, {
            transformRequest: angular.identity,
            headers: { 'Content-Type': undefined }
          }).success(function (data) {
            $scope.activity = data;
            $rootScope.$emit(eventType.NOTIFICATION, {
              'type': 'POPMSG',
              'title': '\u6d88\u606f',
              'message': '\u4fdd\u5b58\u6210\u529f'
            });
            $state.go('party_act_list', { 'page': 1 });
          });
        });
      } else {
        var fd = new FormData();
        angular.forEach($scope.activity, function (value, key) {
          fd.append(key, value);
        });
        $http.post('/api/admin/activities/' + $scope.editingActivityId, fd, {
          transformRequest: angular.identity,
          headers: { 'Content-Type': undefined }
        }).success(function (data) {
          if (data.political_show) {
            data.political_show = 'party';
          } else {
            data.political_show = 'all';
          }
          $scope.activity = data;
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u66f4\u65b0\u6210\u529f'
          });
          $state.go('party_act_item', { 'currentPage': 1 });
        });
      }
    };
    //添加插件
    $scope.addPlugin = function (plugin_id) {
      if ($scope.activity && $scope.activity.id && $scope.activity.id !== -1) {
        var url = '/api/admin/activities/' + $scope.activity.id + '/plugins';
        console.log(plugin_id);
        $http.post(url, { 'plugin_id': plugin_id }).success(function (data) {
          $scope.activity = data;
          $scope.act_plugin = [];
          angular.forEach(data.plugins, function (value) {
            value['icon_path'] = $scope.plugins_config[value.id].icon_path;
            $scope.act_plugin.push(value);
          });
          //添加插件完成后直接打开新添加的插件页面
          $state.go('party_act_item.' + plugin_id + '_plugin');
        });
      }
    };
    //添加“更多功能”，打开modal窗体，显示要添加的插件
    $scope._addPlugin = function (plugin_id) {
      var arr_temp_plugins = $scope.removeExistPlugin($scope.plugins, $scope.activity.plugins);
      if (arr_temp_plugins.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u63d0\u4f9b\u7684\u6240\u6709\u529f\u80fd\u90fd\u5df2\u6dfb\u52a0'
        });
      } else {
        var plugins_alivable = arr_temp_plugins;
        $modal.open({
          templateUrl: 'partial/activity/party_branch/plugins/add_plugin.html',
          controller: 'AddPartyPlugin',
          resolve: {
            party_act: function () {
              return $scope.activity;
            },
            party_plu_a: function () {
              return plugins_alivable;
            }
          }
        });
      }
    };
    $scope.$on('addPartyPlugin', function (event, data) {
      var plugin_id = data;
      $scope.addPlugin(plugin_id);
    });
    //去掉已添加的插件
    $scope.removeExistPlugin = function (arr1, arr2) {
      var arr3 = [];
      var len_arr1 = arr1.length;
      var len_arr2 = 0;
      if (arr2) {
        len_arr2 = arr2.length;
      }
      for (var i = 0; i < len_arr1; i++) {
        var flag = true;
        for (var j = 0; j < len_arr2; j++) {
          if (arr1[i].id === arr2[j].id) {
            flag = false;
          }
        }
        if (flag) {
          arr3.push(arr1[i]);
        }
      }
      return arr3;
    };
    //replace all string
    String.prototype.replaceAll = function (targetText, replaceText) {
      return this.replace(new RegExp(targetText, 'gm'), replaceText);
    };
  }
]);
angular.module('iwx').controller('PartyStatCtrl', [
  '$scope',
  '$http',
  function ($scope, $http) {
    var activityid = $scope.$parent.activity.id;
    $scope.page = $scope.$parent.page;
    console.log($scope.page);
    $scope.plugin_exist = {
      timeline: false,
      sign_in: false
    };
    //获取该活动的插件
    var getActPlugins = function (activity_id) {
      $http.get('' + activity_id).success(function (data) {
        var plugins = data.plugins;
        var len = plugins.length;
        for (var i = 0; i < len; i++) {
          $scope.plugin_exist[plugins[i].id] = false;
        }
      });
    };
    //获取统计数据
    var getSummary = function (activity_id) {
      var data = {
          browse_count: 10,
          fav_count: 5,
          sign_in_count: 10,
          sign_in_special: 5,
          sign_in_total: 5,
          person_num: 10,
          speak_num: 100,
          speaker_num: 5
        };
      $scope.summary = data;
    };
    getSummary(activityid);
  }
]);
angular.module('iwx').controller('PartySigninCtrl', [
  '$scope',
  '$http',
  'userService',
  '$state',
  'eventType',
  '$rootScope',
  '$filter',
  function ($scope, $http, userService, $state, eventType, $rootScope, $filter) {
    //当前页
    $scope.currentPage = 1;
    $scope.loadBtn = '\u52a0\u8f7d\u66f4\u591a';
    $scope.saveBtn = '\u521b\u5efa';
    $scope.persons = [];
    $scope.personSet = {};
    //选中的人员id， 即要添加的人员id数组
    $scope.personIdChosen = [];
    //取消选中的人员id，即可能要删除的人员id数组，要和已保存在数据库中的参与人员id进行对比
    $scope.personIdRemove = [];
    //人员查询条件
    var allDuties = [];
    var partDuties = [];
    var allGroups = [];
    var partGroups = [];
    $scope.persons = [];
    //签到信息
    $scope.signIn = {};
    $scope.sponser_name = /^[\u4e00-\u9fa5_\x21-\x7e_\u0b7-\uff1f_\s]{0,15}$|^[\w\s_\x21-\x7e]{0,30}$/;
    //获取活动信息
    $http.get('/api/admin/activities/' + $scope.$parent.activity.id).success(function (data) {
      $scope.activity = data;
      $scope.signIn['activity_id'] = $scope.activity.id;
      angular.forEach($scope.activity.plugins, function (value, key) {
        if (value.id === 'political_sign_in' && value.enabled === true && value.preview && value.preview.id) {
          $scope.signIn.id = value.preview.id;
        }
      });
      if ($scope.signIn.id) {
        $http.get('/api/political_sign/' + $scope.signIn.id).success(function (data) {
          $scope.signIn = data;
          // $scope.update = true;
          $scope.saveBtn = '\u66f4\u65b0';
          if ($scope.signIn.participant) {
            $scope.signIn.participant = 'isPart';
            getParticipant();
          } else {
            $scope.signIn.participant = 'isNotPart';
          }
          if ($scope.signIn.online) {
            $scope.signIn['modal'] = 'online';
          } else {
            $scope.signIn['modal'] = 'offline';
          }
        });
      } else {
        $scope.signIn.sign_in_start_time = $scope.activity.start_time;
        $scope.signIn.end_time = $scope.activity.end_time;
      }
    });
    //组装签到插件参数
    var getSignFormData = function (flag) {
      var fd = new FormData();
      fd.append('activity_id', $scope.signIn.activity_id);
      console.log($scope.signIn.end_time);
      console.log(typeof $scope.signIn.end_time);
      if (typeof $scope.signIn.end_time === 'number') {
        fd.append('end_time', $filter('date')($scope.signIn.end_time, 'yyyy-MM-dd HH:mm'));
      } else {
        fd.append('end_time', $scope.signIn.end_time);
      }
      fd.append('sponsor_name', $scope.signIn.sponsor_name);
      fd.append('sponsor_logo', $scope.signIn.sponsor_logo);
      if (flag === 'update') {
        if ($scope.signIn.participant === 'isPart') {
          fd.append('participant', 1);
        } else {
          fd.append('participant', 0);
        }
        if ($scope.signIn.modal === 'online') {
          fd.append('online', 1);
        } else {
          fd.append('online', 0);
        }
      }
      return fd;
    };
    $scope.validation = function () {
      if ($scope.signIn.end_time == null || $scope.signIn.end_time === '') {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u6b63\u786e\u8f93\u5165\u7ed3\u675f\u65f6\u95f4'
        });
        return false;
      }
      if (!$scope.sponser_name.test($scope.signIn.sponsor_name)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u8bf7\u5c06\u8d5e\u52a9\u5546\u540d\u79f0\u9650\u5236\u572815\u4e2a\u6c49\u5b57\u4ee5\u5185\uff01'
        });
        return false;
      }
      return true;
    };
    //保存签到插件
    $scope.save = function () {
      console.log($scope.signIn.id);
      if ($scope.signIn.id && $scope.signIn.id !== -1) {
        $scope.change();
      } else {
        $scope.create();
      }
    };
    //创建签到插件
    $scope.create = function () {
      if (!$scope.validation()) {
        return;
      }
      $http.post('/api/political_sign/sign/create', getSignFormData('create'), { headers: { 'Content-Type': undefined } }).success(function (data) {
        if (data.participant) {
          data.participant = 'isPart';
        } else {
          data.participant = 'isNotPart';
        }
        if (data.online) {
          data.modal = 'online';
        } else {
          data.modal = 'offline';
        }
        // $scope.update = true;
        $scope.saveBtn = '\u66f4\u65b0';
        $scope.signIn = data;
      });
    };
    //修改插件
    $scope.change = function () {
      //此处可以根据$scope.signIn.participant判断是否调用绑定指定参与人接口
      console.log($scope.signIn.participant);
      if (!$scope.validation()) {
        return;
      }
      $http.put('/api/political_sign/sign/' + $scope.signIn.id + '/update', getSignFormData('update'), { headers: { 'Content-Type': undefined } }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u529f\u80fd\u66f4\u65b0\u5b8c\u6bd5\uff01'
        });
        $scope.signIn = data;
        if ($scope.signIn.participant) {
          $scope.signIn.participant = 'isPart';
          $scope.currentPage = 1;
          getParticipant();
        } else {
          $scope.signIn.participant = 'isNotPart';
        }
        if ($scope.signIn.online) {
          $scope.signIn['modal'] = 'online';
        } else {
          $scope.signIn['modal'] = 'offline';
        }
      });
    };
    //获取学年查询条件
    var getDuties = function () {
      $http.get('/api/political/duties?page=1&per_page=1000').success(function (data) {
        data.items.unshift({
          id: -1,
          name: '\u5168\u90e8',
          checked: true
        });
        if (data.total > 7) {
          partDuties = data.items.slice(0, 7);
        } else {
          partDuties = data.items;
        }
        allDuties = data.items;
        $scope.duties = partDuties;
      });
    };
    //选中职务
    $scope.getCheckedDuty = function (duty_id) {
      $scope.dutyId = duty_id;
      $scope.persons = [];
      $scope.personSet = {};
      $scope.currentPage = 1;
      getPersons($scope.currentPage);
    };
    //获取分组查询条件
    var getGroups = function () {
      $http.get('/api/political/groups?page=1&per_page=1000').success(function (data) {
        data.items.unshift({
          id: -1,
          name: '\u5168\u90e8',
          checked: true
        });
        if (data.total > 7) {
          partGroups = data.items.slice(0, 7);
        } else {
          partGroups = data.items;
        }
        allGroups = data.items;
        $scope.groups = partGroups;
      });
    };
    //选中分组
    $scope.getCheckedGroup = function (group_id) {
      $scope.groupId = group_id;
      $scope.persons = [];
      $scope.personSet = {};
      $scope.currentPage = 1;
      getPersons($scope.currentPage);
    };
    //获取身份信息
    var getMemberType = function () {
      $http.get('/api/political/type').success(function (data) {
        $scope.identityArray = [];
        angular.forEach(data, function (value, key) {
          var obj = {};
          obj['id'] = key;
          obj['name'] = value;
          $scope.identityArray.push(obj);
        });
        $scope.identityArray.unshift({
          id: 'all',
          name: '\u5168\u90e8',
          checked: true
        });
      });
    };
    //选中身份
    $scope.getCheckedIdentity = function (identity_id) {
      $scope.identityId = identity_id;
      $scope.persons = [];
      $scope.personSet = {};
      $scope.currentPage = 1;
      getPersons($scope.currentPage);
    };
    $scope.operDuty = '\u5c55\u5f00\u804c\u52a1';
    $scope.operGroup = '\u5c55\u5f00\u5206\u7ec4';
    var isDutyExpand = true;
    var isGroupExpand = true;
    $scope.exOratrDuty = function () {
      if (isDutyExpand) {
        $scope.duties = allDuties;
        $scope.operDuty = '\u6536\u8d77\u804c\u52a1';
        isDutyExpand = false;
      } else {
        $scope.duties = partDuties;
        $scope.operDuty = '\u5c55\u5f00\u804c\u52a1';
        isDutyExpand = true;
      }
    };
    $scope.exOratrGroup = function () {
      if (isGroupExpand) {
        $scope.groups = allGroups;
        $scope.operGroup = '\u6536\u8d77\u5206\u7ec4';
        isGroupExpand = false;
      } else {
        $scope.groups = partGroups;
        $scope.operGroup = '\u5c55\u5f00\u5206\u7ec4';
        isGroupExpand = true;
      }
    };
    userService.load(true).then(function () {
      getDuties();
      getGroups();
      getMemberType();
    });
    //根据筛选条件获取人员
    var getPersons = function (page) {
      var url = '/api/political/users/approved/list?page=' + page + '&per_page=12';
      if ($scope.dutyId && $scope.dutyId !== '-1') {
        url += '&duty=' + $scope.dutyId;
      }
      if ($scope.groupId && $scope.groupId !== '-1') {
        url += '&group=' + $scope.groupId;
      }
      if ($scope.identityId && $scope.identityId !== 'all') {
        url += '&status=' + $scope.identityId;
      }
      $http.get(url).success(function (data) {
        if (data.items.length === 0) {
          $scope.btn = true;
          $scope.loadBtn = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8';
          return;
        }
        $scope.btn = false;
        $scope.loadBtn = '\u52a0\u8f7d\u66f4\u591a';
        angular.forEach(data.items, function (value, key) {
          if (!(value.user_obj.id in $scope.personSet)) {
            if ($scope.participantHash[value.user_obj.id]) {
              value.user_obj['checked'] = true;
            } else {
              value.user_obj['checked'] = false;
            }
            $scope.personSet[value.user_obj.id] = true;
            $scope.persons.push(value.user_obj);
          }
        });
      });
    };
    //在更新签到插件时，获取已经添加的指定签到人员
    var getParticipant = function () {
      $http.get('/api/political_sign/' + $scope.signIn.id + '/participant/users').success(function (data) {
        console.log(data);
        $scope.participants = data;
        $scope.participantHash = {};
        angular.forEach($scope.participants, function (value, key) {
          $scope.participantHash[value.user_obj.user_obj.id] = value;
        });
        console.log($scope.participantHash);
        getPersons($scope.currentPage);
      });
    };
    //加载更多人员
    $scope.loadMore = function () {
      getPersons(++$scope.currentPage);
    };
    //选中人员
    $scope.getCheckedPerson = function (person_id, checked_person) {
      if (checked_person) {
        $scope.personIdChosen.push(person_id);
      } else {
        //从添加人员id数组中去掉取消勾选的人员
        angular.forEach($scope.personIdChosen, function (value, key) {
          if (value === person_id) {
            $scope.personIdChosen.splice(key, 1);
          }
        });
        //将取消勾选的人员添加多要删除的人员数组中
        if ($scope.participantHash[person_id]) {
          $scope.personIdRemove.push(person_id);
        }
      }
      console.log('\u8981\u6dfb\u52a0\u7684\u4eba\u5458id\u6570\u7ec4\uff1a' + $scope.personIdChosen);
      console.log('\u53ef\u80fd\u8981\u5220\u9664\u7684\u4eba\u5458id\u6570\u7ec4\uff1a' + $scope.personIdRemove);
    };
    //保存选中的人员
    $scope.savePersons = function () {
      //新添加的人员参数
      var personParam = {};
      if ($scope.personIdChosen.length !== 0) {
        personParam['users_add'] = $scope.personIdChosen;
      }
      if ($scope.personIdRemove.length !== 0) {
        personParam['users_del'] = $scope.personIdRemove;
      }
      console.log(personParam);
      $http.post('/api/political_sign/' + $scope.signIn.id + '/modify/users', personParam).success(function (data) {
        //调用更新方法更新插件
        $scope.change();
        getParticipant();
        $scope.personIdRemove = [];
        $scope.personIdChosen = [];
      });
    };
    //选择签到模式
    $scope.signInModal = function (sign_in_modal) {
      console.log(sign_in_modal);
      $scope.signIn.modal = sign_in_modal;
    };
    //选择是否指定参与者
    $scope.isSpecifyPerson = function (participant) {
      console.log(participant);
      $scope.signIn.participant = participant;
      getParticipant();
    };
    //查看签到结果
    $scope.result = function () {
      $state.go('party_act_item.political_sign_in_at_plugin', {
        signInId: $scope.signIn.id,
        isSpecify: $scope.signIn.participant
      }, { reload: true });
    };
    //结束签到插件
    $scope.finishSignIn = function () {
      $http.post('/api/political_sign/finish/' + $scope.signIn.id).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6210\u529f\u7ed3\u675f\u7b7e\u5230\uff01'
        });
        $state.go('party_act_item', { id: $scope.activity.id });
      });
    };
    //暂时关闭签到
    $scope.closeSignIn = function () {
      $http.post('/api/political_sign/suspend/' + $scope.signIn.id).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6210\u529f\u5173\u95ed\u7b7e\u5230\uff01'
        });
        $state.go('party_act_item', { id: $scope.activity.id });
      });
    };
    //删除签到
    $scope.deleteSignIn = function () {
      $http.delete('/api/political_sign/delete/' + $scope.signIn.id).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u6210\u529f\u5220\u9664\u7b7e\u5230\uff01'
        });
        $state.go('party_act_item', { id: $scope.activity.id });
      });
    };
  }
]);
angular.module('iwx').controller('PartyTimelineCtrl', [
  '$scope',
  '$http',
  '$rootScope',
  'eventType',
  'ngTableParams',
  '$modal',
  function ($scope, $http, $rootScope, eventType, ngTableParams, $modal) {
    $scope.comment = { images: [] };
    //获取评论内容
    var getComments = function () {
      var NgTableParams = ngTableParams;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get('/api/activities/' + $scope.$parent.activity.id + '/comments_edit?page=' + params.page() + '&per_page=' + params.count()).success(function (data) {
            $scope.comments = data.items;
            params.total(data.total);
            $defer.resolve($scope.comments);
          });
        }
      });
    };
    //删除添加的爆料图片
    $scope.removeFile = function (index) {
      var newImages = [];
      angular.forEach($scope.comment.images, function (value, key) {
        if (key !== index) {
          newImages.push(value);
        }
      });
      $scope.comment.images = newImages;
    };
    //提交爆料信息
    $scope.submit = function () {
      if (!$scope.comment.images) {
        $scope.comment.images = [];
      }
      if ($scope.comment && $scope.comment.images && $scope.comment.images.length > 6) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          type: 'POPMSG',
          title: '\u8b66\u544a',
          message: '\u6700\u591a\u4e0a\u4f206\u5f20\u56fe\u7247'
        });
        return;
      }
      if (!$scope.comment.content || $scope.comment.content.length === 0) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          type: 'POPMSG',
          title: '\u8b66\u544a',
          message: '\u8bf7\u586b\u5199\u8981\u7206\u6599\u7684\u5185\u5bb9'
        });
        return;
      }
      var fd = new FormData();
      fd.append('content', $scope.comment.content);
      angular.forEach($scope.comment.images, function (value, key) {
        fd.append('images', value);
      });
      $http.post('/api/activities/' + $scope.$parent.activity.id + '/comments', fd, {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          type: 'POPMSG',
          title: '\u6d88\u606f',
          message: '\u53d1\u5e03\u6210\u529f'
        });
        $scope.tableParams.reload();
        $scope.comment = {};
      });
    };
    //选择参与者
    $scope.participator = function () {
      $modal.open({
        templateUrl: 'partial/activity/party_branch/plugins/participator.html',
        controller: 'ParticipatorCtrl',
        size: 'lg',
        resolve: { activityId: $scope.$parent.activity.id }
      });
    };
  }
]);
angular.module('iwx').controller('AddPartyPlugin', [
  '$scope',
  '$rootScope',
  'party_plu_a',
  '$modalInstance',
  'party_act',
  'eventType',
  '$state',
  function ($scope, $rootScope, party_plu_a, $modalInstance, party_act, eventType, $state) {
    var plugins = party_act.plugins;
    $scope.plugins_alivable = party_plu_a;
    $scope.addPlugin = function (plugin_id) {
      angular.forEach(plugins, function (value, key) {
        if (plugin_id === value.id) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u8bf7\u5148\u7ed3\u675f\u5f53\u524d\u7684' + value.name + '\u529f\u80fd\uff0c\u518d\u8fdb\u884c\u6dfb\u52a0\uff01'
          });
          $modalInstance.close('ok');
          $state.go('party_act_item.' + plugin_id + '_plugin');
          return;
        }
      });
      $modalInstance.close('ok');
      $rootScope.$broadcast('addPartyPlugin', plugin_id);
      //删除已添加的插件
      angular.forEach($scope.plugins_alivable, function (value, key) {
        console.log('value=' + angular.toJson(value) + ';key=' + key);
        if (value.id === plugin_id) {
          $scope.plugins_alivable.splice(key, 1);
          return;
        }
      });
    };
  }
]);
angular.module('iwx').controller('SignInAtCtrl', [
  '$scope',
  '$http',
  'ngTableParams',
  'userService',
  '$stateParams',
  '$filter',
  'actService',
  'memberService',
  function ($scope, $http, ngTableParams, userService, $stateParams, $filter, actService, memberService) {
    console.log($stateParams);
    $scope.isSpecify = $stateParams.isSpecify;
    $scope.signInId = $stateParams.signInId;
    $scope.current = $filter('date')(new Date(), 'yyyy-MM-dd');
    //获取指定参与人员数据
    var getSpecifyPersons = function () {
      actService.getSpecifyPersons($stateParams.signInId).then(function (data) {
        $scope.person_sum = data.length;
        $scope.signin_person_sum = 0;
        angular.forEach(data, function (value, key) {
          if (value.sign_in_time) {
            $scope.signin_person_sum++;
          }
        });
        $scope.specifyPersons = data;
      });
    };
    //获取实时签到人员
    var getActualPersons = function () {
      var NgTableParams = ngTableParams;
      var actualPersons = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          actService.getActualPersons($stateParams.signInId, params.page(), params.count()).then(function (data) {
            console.log(data);
            actualPersons = data.items;
            params.total(data.total);
            $defer.resolve(actualPersons);
          });
        }
      });
    };
    //获取人员身份
    var getMemberType = function () {
      memberService.getMemberType().then(function (data) {
        var identity = {};
        angular.forEach(data, function (value, key) {
          var temp_key = key.toUpperCase();
          identity[temp_key] = value;
        });
        $scope.identity = identity;
        if ($scope.isSpecify === 'isPart') {
          getSpecifyPersons();
        }
        getActualPersons();
      });
    };
    //获取活动信息
    var getActivity = function () {
      actService.getActivity($stateParams.id).then(function (data) {
        $scope.activity = data;
      }, function (data) {
      });
    };
    userService.load(true).then(function () {
      getMemberType();
      getActivity();
    });
  }
]);
angular.module('iwx').controller('ParticipatorCtrl', [
  '$scope',
  '$http',
  function ($scope, $http) {
    //被选中的成员id
    $scope.checkedMembers = [];
    //别选中的参与讨论的成员id
    $scope.checkedPart = [];
    //被选中的成员hash
    $scope.memberHash = {};
    //根据小队，职务，身份筛选条件获取党支部人员
    $scope.getMembers = function (condition) {
      var param = '';
      if (condition === 'group') {
        param = 'condition=group';
      } else if (condition === 'duty') {
        param = 'condition=duty';
      } else {
        param = 'condition=status';
      }
      $http.get('/api/plugins').success(function (data) {
        if (condition === 'group') {
          data = [
            {
              id: 1,
              name: '\u9ec4\u6e24'
            },
            {
              id: 2,
              name: '\u8303\u51b0\u51b0'
            },
            {
              id: 3,
              name: '\u9093\u8d85'
            },
            {
              id: 4,
              name: '\u5b59\u4fea'
            }
          ];
        } else if (condition === 'duty') {
          data = [
            {
              id: 5,
              name: '\u5218\u5fb7\u534e'
            },
            {
              id: 6,
              name: '\u59da\u660e'
            }
          ];
        } else {
          data = [];
        }
        angular.forEach(data, function (value, key) {
          if ($scope.partHash[value.id] || $scope.memberHash[value.id]) {
            value['checked'] = true;
            if ($scope.partHash[value.id]) {
              value['isPart'] = true;
            }
          } else {
            value['checked'] = false;
            if ($scope.partHash[value.id]) {
              value['isPart'] = false;
            }
          }
        });
        $scope.members = data;
      });
    };
    //获取获取参与讨论的人员
    $scope.getParticipators = function () {
      $http.get('/api/plugins').success(function (data) {
        $scope.participators = [
          {
            id: 1,
            name: '\u9ec4\u6e24'
          },
          {
            id: 6,
            name: '\u59da\u660e'
          },
          {
            id: 3,
            name: '\u9093\u8d85'
          }
        ];
        //参与讨论的成员hash
        $scope.partHash = {};
        angular.forEach($scope.participators, function (value, key) {
          $scope.partHash[value.id] = value;
        });
        $scope.getMembers('group');
      });
    };
    $scope.getParticipators();
    //选中党支部成员
    $scope.getCheckedMem = function (member, checked_member) {
      console.log(checked_member);
      if (checked_member) {
        $scope.checkedMembers.push(member.id);
        $scope.memberHash[member.id] = member;
      } else {
        angular.forEach($scope.checkedMembers, function (value, key) {
          if (value === member.id) {
            $scope.checkedMembers.splice(key, 1);
            delete $scope.memberHash[value];
          }
        });
      }
      console.log($scope.checkedMembers);
    };
    //选中讨论区成员
    $scope.getCheckedPar = function (member_id, checked_member) {
      console.log('member_id:' + member_id + '---checked_member:' + checked_member);
      if (checked_member) {
        $scope.checkedPart.push(member_id);
      } else {
        angular.forEach($scope.checkedPart, function (value, key) {
          if (value === member_id) {
            $scope.checkedPart.splice(key, 1);
          }
        });
      }
      console.log($scope.checkedPart);
    };
    //添加参加讨论的人员
    $scope.addParticipator = function () {
      console.log($scope.checkedMembers);
      $scope.getParticipators();
    };
    //删除参加讨论的人员
    $scope.delParticipator = function () {
      console.log($scope.checkedPart);
      $scope.getParticipators();
    };
  }
]);
angular.module('iwx').controller('ScreenCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  '$modal',
  '$state',
  '$stateParams',
  'origin',
  'userService',
  function ($scope, $rootScope, $http, ngTableParams, eventType, $modal, $state, $stateParams, origin, userService) {
    $rootScope.welcome_bg = false;
    $scope.confirm = {};
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.currentPage = $stateParams.page;
    // console.log($scope.currentPage);
    $scope.getScreens = function () {
      //创建分页表格
      var NgTableParams = ngTableParams;
      var screens = null;
      $scope.tableParams = new NgTableParams({
        page: $scope.currentPage,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $scope.currentPage = params.page();
          $http.get(origin.DESTINATION.name + '/v1/customer/' + $scope.user.university.id + '/editor/' + $scope.user.id + '/contents?page=' + params.page() + '&per_page=' + params.count(), {
            'Origin': origin.ORIGIN,
            'headers': { 'Authentication-Token': $scope.auth_token }
          }).success(function (data) {
            // data = {items: [], total: 0};
            $scope.total = data.total;
            screens = data.items;
            params.total(data.total);
            $defer.resolve(screens);
          });
        }
      });
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.user = response.user;
      $scope.auth_token = response.auth_token;
      $scope.getScreens();
    });
    //确定操作
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delete') {
        $http.delete('', { 'Origin': origin.ORIGIN }).success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
    //删除展板信息
    $scope.delete = function (screen) {
      $scope.confirm.message = '\u786e\u5b9a\u8981\u5220\u9664\u201c' + screen.title + '\u201d\u7684\u4fe1\u606f\uff1f';
      $scope.confirm.type = 'delete';
      $scope.confirm.param = screen.id;
      $('#confirmModal').modal();
      return;
    };
    //新建展板
    $scope.createScreen = function () {
      $state.go('screen.screen_edit', {
        id: -1,
        page: $scope.currentPage
      });
    };
    //修改展板
    $scope.applyScreen = function (screen) {
      $state.go('screen.screen_edit', {
        id: screen.id,
        page: $scope.currentPage
      });
    };
    //查看拒绝原因
    $scope.refuseReason = function (screen) {
      $modal.open({
        templateUrl: 'partial/screen/refuse_reason.html',
        controller: [
          '$scope',
          '$modalInstance',
          'origin',
          function ($scope, $modalInstance) {
            /*$http.get('', {
						'Origin' : origin.ORIGIN
					}).success(function (data) {
						$scope.content = data;
					});*/
            $scope.content = screen.decline_message;
            $scope.cancel = function () {
              $modalInstance.close('ok');
            };
          }
        ]
      });
    };
  }
]);
angular.module('iwx').controller('ScreenEditCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  'origin',
  'userService',
  'eventType',
  '$filter',
  '$state',
  '$modal',
  function ($scope, $rootScope, $http, $stateParams, origin, userService, eventType, $filter, $state, $modal) {
    $scope.page = $stateParams.page;
    $scope.server = origin.DESTINATION.name;
    $scope.editScreenId = parseInt($stateParams.id);
    var currentDate = new Date().getTime();
    var current = $filter('date')(currentDate, 'yyyy-MM-dd HH:mm');
    $scope.screen = {
      id: $scope.editScreenId,
      current: currentDate
    };
    //获取已安装的电子展板数量信息
    var getScreensNum = function () {
      $http.get(origin.DESTINATION.name + '/v1/customer/screens/numbers', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        $scope.screenInfo = '\u672c\u6821\u652f\u6301\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\uff1a' + data.h + '\u5757\uff0c\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\uff1a' + data.v + '\u5757';
      });
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.auth_token = response.auth_token;
      $scope.user = response.user;
      getScreensNum();
      //如果id !== -1
      if ($scope.editScreenId !== -1) {
        $http.get(origin.DESTINATION.name + '/v1/customer/contents/' + $scope.editScreenId, {
          'Origin': origin.ORIGIN,
          'headers': { 'Authentication-Token': $scope.auth_token }
        }).success(function (data) {
          $scope.screen = data;
        });
      }
    });
    //验证
    var validate = function () {
      if (!$scope.screen.landscape_poster) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u4e0a\u4f20\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u3002'
        });
        return false;
      } else if ($scope.screen.landscape_poster.size > 1024 * 1024 * 3) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5c06\u4e0a\u4f20\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u5927\u5c0f\u63a7\u5236\u57283M\u4ee5\u5185\u3002'
        });
        return false;
      }
      if (!$scope.screen.portrait_poster) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u4e0a\u4f20\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u3002'
        });
        return false;
      } else if ($scope.screen.portrait_poster.size > 1024 * 1024 * 3) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5c06\u4e0a\u4f20\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u5927\u5c0f\u63a7\u5236\u57283M\u4ee5\u5185\u3002'
        });
        return false;
      }
      if (!$scope.screen.title) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u5c55\u677f\u9879\u76ee\u540d\u79f0\u3002'
        });
        return false;
      }
      var sTime = new Date($scope.screen.start_time.replace(/-/g, '/'));
      var eTime = new Date($scope.screen.end_time.replace(/-/g, '/'));
      if (Date.parse(sTime) > Date.parse(eTime)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u7ed3\u675f\u65f6\u95f4\u5fc5\u987b\u5728\u5f00\u59cb\u65f6\u95f4\u4e4b\u540e\u3002'
        });
        return false;
      }
      if (Date.parse(sTime) === Date.parse(eTime)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u5f00\u59cb\u6216\u7ed3\u675f\u65f6\u95f4\u3002'
        });
        return false;
      }
      return true;
    };
    console.log(origin.DESTINATION.name);
    //编辑
    $scope.save = function () {
      console.log($scope.screen);
      if (!validate()) {
        return;
      }
      var fd = new FormData();
      fd.append('title', $scope.screen.title);
      fd.append('start_time', $scope.screen.start_time);
      fd.append('end_time', $scope.screen.end_time);
      fd.append('landscape_poster', $scope.screen.landscape_poster);
      fd.append('portrait_poster', $scope.screen.portrait_poster);
      if ($scope.editScreenId === -1) {
        $http.post(origin.DESTINATION.name + '/v1/customer/' + $scope.user.university.id + '/editor/' + $scope.user.id + '/contents', fd, {
          'Origin': origin.ORIGIN,
          'headers': {
            'Authentication-Token': $scope.auth_token,
            'Content-Type': undefined
          }
        }).success(function (data) {
          $scope.screen = data;
          $state.go('screen', { reload: true }, { page: $scope.page });
        });
      } else {
        $http.put(origin.DESTINATION.name + '/v1/customer/' + $scope.user.university.id + '/editor/' + $scope.user.id + '/contents/' + $scope.editScreenId, fd, {
          'Origin': origin.ORIGIN,
          'headers': {
            'Authentication-Token': $scope.auth_token,
            'Content-Type': undefined
          }
        }).success(function (data) {
          $state.go('screen', { reload: true }, { page: $scope.page });
        });
      }
    };
    $scope.showDemo = function (image, type) {
      var modalSize = 'md';
      if (type === 'portrait_poster') {
        modalSize = 'sm';
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: modalSize
      });
    };
  }
]);
angular.module('iwx').controller('TerminalCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  '$modal',
  '$state',
  '$stateParams',
  'origin',
  'userService',
  function ($scope, $rootScope, $http, ngTableParams, eventType, $modal, $state, $stateParams, origin, userService) {
    $rootScope.welcome_bg = false;
    $scope.server = origin.DESTINATION.name;
    //获取审核列表
    $scope.getVerifyScreens = function () {
      var NgTableParams = ngTableParams;
      var screens = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get(origin.DESTINATION.name + '/v1/customer/' + $scope.user.university.id + '/contents?s=p&page=' + params.page() + '&per_page=' + params.count(), {
            'Origin': origin.ORIGIN,
            'headers': { 'Authentication-Token': $scope.auth_token }
          }).success(function (data) {
            screens = data.items;
            params.total(data.total);
            $defer.resolve(screens);
          });
        }
      });
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.user = response.user;
      $scope.auth_token = response.auth_token;
      $scope.getVerifyScreens();
    });
    //重新加载分页列表
    var reloadTable = function () {
      $scope.tableParams.reload();
    };
    //通过
    $scope.approve = function (screen, auth_token, nickname) {
      $modal.open({
        templateUrl: 'partial/screen/university/terminal/approve_time.html',
        controller: [
          '$scope',
          '$modalInstance',
          '$filter',
          'origin',
          function ($scope, $modalInstance, $filter, origin) {
            $scope.title = '\u8bbe\u7f6e\u5141\u8bb8\u64ad\u653e\u65f6\u95f4';
            var current = $filter('date')(new Date(), 'yyyy-MM-dd HH:mm');
            screen['current'] = current;
            $scope.screen = screen;
            $scope.ok = function () {
              var fd = new FormData();
              fd.append('start_time', $scope.screen.start_time);
              fd.append('end_time', $scope.screen.end_time);
              $http.post(origin.DESTINATION.name + '/v1/customer/' + screen.region.id + '/contents/' + screen.id, fd, {
                'Origin': origin.ORIGIN,
                'headers': {
                  'Authentication-Token': auth_token,
                  'Content-Type': undefined
                }
              }).success(function (data) {
                //成功通过后向申请社团发送私信
                var letter = {};
                letter['community_id'] = data.community_id;
                letter['content'] = '\u4f60\u7533\u8bf7\u7684\u201c' + data.title + '\u201d\u5df2\u88ab\u201c' + nickname + '\u201d\u5ba1\u6838\u901a\u8fc7\uff0c\u6279\u51c6\u64ad\u653e\u65f6\u95f4\u4e3a\uff1a' + $filter('date')(data.approved_start_time, 'yyyy-MM-dd HH:mm') + '~' + $filter('date')(data.approved_end_time, 'yyyy-MM-dd HH:mm');
                console.log('letter:' + angular.toJson(letter));
                $http.post('/api/un/single/message/create', letter).success(function (data) {
                });
                $modalInstance.close('ok');
                reloadTable();
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //拒绝
    $scope.refuse = function (screen, auth_token) {
      $modal.open({
        templateUrl: 'partial/common/unpublished_reason.html',
        controller: [
          '$scope',
          '$modalInstance',
          'origin',
          function ($scope, $modalInstance, origin) {
            $scope.reason_title = '\u586b\u5199\u62d2\u7edd\u7406\u7531';
            $scope.receive = 'To: ' + screen.author_name;
            $scope.ok_btn = true;
            $scope.$watch('content', function (newValue) {
              if ($scope.content) {
                $scope.ok_btn = false;
              } else {
                $scope.ok_btn = true;
              }
            });
            $scope.ok = function () {
              console.log($scope.content);
              /*var param = {};
						param['message'] = $scope.content;*/
              $http.delete(origin.DESTINATION.name + '/v1/customer/' + screen.region.id + '/contents/' + screen.id + '?message=' + $scope.content, {
                'Origin': origin.ORIGIN,
                'headers': { 'Authentication-Token': auth_token }
              }).success(function (data) {
                $modalInstance.dismiss('cancel');
                reloadTable();
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    $scope.viewImage = function (image) {
      console.log(image);
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
  }
]);
angular.module('iwx').controller('ApproveCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  '$modal',
  '$state',
  '$stateParams',
  'origin',
  'userService',
  function ($scope, $rootScope, $http, ngTableParams, eventType, $modal, $state, $stateParams, origin, userService) {
    $scope.server = origin.DESTINATION.name;
    //获取已通过的列表
    $scope.getApproveScreens = function () {
      var NgTableParams = ngTableParams;
      var screens = null;
      $scope.tableParams = new NgTableParams({
        page: 1,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $http.get(origin.DESTINATION.name + '/v1/customer/' + $scope.user.university.id + '/contents?s=a&page=' + params.page() + '&per_page=' + params.count(), {
            'Origin': origin.ORIGIN,
            'headers': { 'Authentication-Token': $scope.auth_token }
          }).success(function (data) {
            screens = data.items;
            params.total(data.total);
            $defer.resolve(screens);
          });
        }
      });
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.user = response.user;
      $scope.auth_token = response.auth_token;
      $scope.getApproveScreens();
    });
    //添加至播放列表
    $scope.addToDisplayList = function (screen) {
      $http.post('', {}, {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u5df2\u6210\u529f\u6dfb\u52a0\u81f3\u64ad\u653e\u5217\u8868\u3002'
        });
      });
    };
    $scope.remove = function (screen) {
      $http.delete(origin.DESTINATION.name + '/v1/customer/' + $scope.user.university.id + '/contents/' + screen.id, {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        $scope.tableParams.reload();
      });
    };
    $scope.viewImage = function (image) {
      console.log(image);
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
  }
]);
angular.module('iwx').controller('DisplayListCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'eventType',
  '$modal',
  '$state',
  '$stateParams',
  'origin',
  'userService',
  function ($scope, $rootScope, $http, eventType, $modal, $state, $stateParams, origin, userService) {
    $scope.server = origin.DESTINATION.name;
    $scope.currentPage = $stateParams.page;
    $scope.confirm = {};
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.getDisplayScreens = function () {
      $http.get(origin.DESTINATION.name + '/v1/customer/playlist/contents/', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        $scope.screens = data;
      });
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.user = response.user;
      $scope.auth_token = response.auth_token;
      $scope.getDisplayScreens();
    });
    //确定操作
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'remove') {
        $http.delete(origin.DESTINATION.name + '/v1/customer/playlist/contents/?contents=' + $scope.confirm.param, {
          'Origin': origin.ORIGIN,
          'headers': { 'Authentication-Token': $scope.auth_token }
        }).success(function (data) {
          $scope.getDisplayScreens();
        });
      }
    };
    //从列表中移除
    $scope.remove = function (screen) {
      $scope.confirm.message = '\u786e\u5b9a\u8981\u79fb\u9664\u201c' + screen.title + '\u201d?';
      $scope.confirm.type = 'remove';
      $scope.confirm.param = screen.id;
      $('#confirmModal').modal();
      return;
    };
    //紧急插播
    $scope.urgentInterCut = function () {
      $state.go('terminal_university.inter_cut', {
        page: $scope.currentPage,
        id: -1
      }, { reload: true });
    };
    //编辑播放列表
    $scope.editDisplayList = function () {
      $modal.open({
        templateUrl: 'partial/screen/university/schedule/display_list_edit.html',
        controller: 'DisplayEditCtrl',
        size: 'lg',
        resolve: {
          authToken: function () {
            return $scope.auth_token;
          },
          universityId: function () {
            return $scope.user.university.id;
          },
          total: function () {
            return $scope.total;
          }
        }
      });
    };
    $scope.viewImage = function (image) {
      console.log(image);
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    //获取正在播放的展板列表
    $scope.displaying = function (auth_token) {
      $modal.open({
        templateUrl: 'partial/screen/university/schedule/displaying.html',
        size: 'lg',
        controller: [
          '$scope',
          '$modalInstance',
          'origin',
          function ($scope, $modalInstance, origin) {
            $scope.server = origin.DESTINATION.name;
            $http.get(origin.DESTINATION.name + '/v1/customer/playlist/contents/?s=playing', {
              'Origin': origin.ORIGIN,
              'headers': { 'Authentication-Token': auth_token }
            }).success(function (data) {
              $scope.screens = data;
            });
            $scope.cancel = function () {
              $modalInstance.close('ok');
            };
          }
        ]
      });
    };
    var reloadTable = function () {
      $scope.getDisplayScreens();
    };
    //修改播放时间
    $scope.updDisplayTime = function (screen, auth_token) {
      $modal.open({
        templateUrl: 'partial/screen/university/schedule/upd_display_time.html',
        controller: [
          '$scope',
          '$modalInstance',
          '$filter',
          'origin',
          function ($scope, $modalInstance, $filter, origin) {
            $scope.title = '\u4fee\u6539\u64ad\u653e\u65f6\u95f4';
            var current = $filter('date')(new Date(), 'yyyy-MM-dd HH:mm');
            screen['current'] = current;
            $scope.screen = screen;
            $scope.ok = function () {
              var fd = new FormData();
              fd.append('start_time', $scope.screen.approved_start_time);
              fd.append('end_time', $scope.screen.approved_end_time);
              $http.put(origin.DESTINATION.name + '/v1/customer/' + screen.region.id + '/contents/' + screen.id, fd, {
                'Origin': origin.ORIGIN,
                'headers': {
                  'Authentication-Token': auth_token,
                  'Content-Type': undefined
                }
              }).success(function (data) {
                $modalInstance.close('ok');
                $rootScope.$emit(eventType.NOTIFICATION, {
                  'type': 'POPMSG',
                  'title': '\u4fe1\u606f',
                  'message': '\u6210\u529f\u4fee\u6539\u64ad\u653e\u65f6\u95f4\u4e3a\uff1a' + $filter('date')(data.approved_start_time, 'yyyy-MM-dd HH:mm') + '~' + $filter('date')(data.approved_end_time, 'yyyy-MM-dd HH:mm')
                });
                reloadTable();
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //修改播放等级
    $scope.updDisplayLevel = function (screen, level, auth_token) {
      $http.get(origin.DESTINATION.name + '/v1/customer/priorities/?page=1&per_page=100', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': auth_token }
      }).success(function (data) {
        var priorities = data.items;
        $modal.open({
          templateUrl: 'partial/screen/university/schedule/add_display_level.html',
          controller: [
            '$scope',
            '$modalInstance',
            'origin',
            function ($scope, $modalInstance, origin) {
              $scope.levelArray = priorities;
              $scope.btnOk = false;
              $scope.param = { priority_id: level.id };
              $scope.ok = function () {
                console.log($scope.param);
                $http.put(origin.DESTINATION.name + '/v1/customer/playlist/contents/' + screen.id, $scope.param, {
                  'Origin': origin.ORIGIN,
                  'headers': { 'Authentication-Token': auth_token }
                }).success(function (data) {
                  $modalInstance.close('ok');
                  $rootScope.$emit(eventType.NOTIFICATION, {
                    'type': 'POPMSG',
                    'title': '\u4fe1\u606f',
                    'message': '\u6210\u529f\u4fee\u6539\u64ad\u653e\u7b49\u7ea7\u3002'
                  });
                  reloadTable();
                });
              };
              $scope.cancel = function () {
                $modalInstance.close('ok');
              };
            }
          ]
        });
      });
    };
    //监听刷新播放列表事件
    $scope.$on('updateDisplayList', function () {
      $scope.getDisplayScreens();
    });
  }
]);
angular.module('iwx').controller('InterCutCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$state',
  '$stateParams',
  'origin',
  'userService',
  'eventType',
  '$filter',
  '$modal',
  function ($scope, $rootScope, $http, $state, $stateParams, origin, userService, eventType, $filter, $modal) {
    console.log($state);
    $scope.page = $stateParams.page;
    $scope.router = $stateParams.router;
    $scope.screen = {};
    //获取等级列表
    var getLevels = function () {
      $http.get(origin.DESTINATION.name + '/v1/customer/priorities/?page=1&per_page=100', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        $scope.levels = data.items;
      });
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.user = response.user;
      $scope.auth_token = response.auth_token;
      getLevels();
    });
    var validate = function () {
      if (!$scope.screen.title) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u5c55\u677f\u9879\u76ee\u540d\u79f0\u3002'
        });
        return false;
      }
      if (!$scope.screen.priority) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u9009\u62e9\u64ad\u653e\u7b49\u7ea7\u3002'
        });
        return false;
      }
      if (!$scope.screen.landscape_poster) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u4e0a\u4f20\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u3002'
        });
        return false;
      } else if ($scope.screen.landscape_poster.size > 1024 * 1024 * 3) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5c06\u4e0a\u4f20\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u5927\u5c0f\u63a7\u5236\u57283M\u4ee5\u5185\u3002'
        });
        return false;
      }
      if (!$scope.screen.portrait_poster) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u4e0a\u4f20\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u3002'
        });
        return false;
      } else if ($scope.screen.portrait_poster.size > 1024 * 1024 * 3) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5c06\u4e0a\u4f20\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u5927\u5c0f\u63a7\u5236\u57283M\u4ee5\u5185\u3002'
        });
        return false;
      }
      return true;
    };
    $scope.save = function () {
      console.log($scope.screen);
      if (!validate()) {
        return;
      }
      // var currentTime = new Date();
      var fd = new FormData();
      fd.append('title', $scope.screen.title);
      // fd.append('start_time', $filter('date')(currentTime, 'yyyy-MM-dd HH:mm'));
      // fd.append('end_time', $filter('date')(currentTime, 'yyyy-MM-dd HH:mm'));
      fd.append('landscape_poster', $scope.screen.landscape_poster);
      fd.append('portrait_poster', $scope.screen.portrait_poster);
      fd.append('to', 'spots');
      fd.append('priority_id', $scope.screen.priority.id);
      $http.post(origin.DESTINATION.name + '/v1/customer/' + $scope.user.university.id + '/chief_editor/' + $scope.user.id + '/contents', fd, {
        'Origin': origin.ORIGIN,
        'headers': {
          'Authentication-Token': $scope.auth_token,
          'Content-Type': undefined
        }
      }).success(function (data) {
        //为创建插播，跳转至播放列表
        $state.go('terminal_university.display_log', { page: 1 }, { reload: true });
      });
    };
    $scope.showDemo = function (image, type) {
      var modalSize = 'md';
      if (type === 'portrait_poster') {
        modalSize = 'sm';
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: modalSize
      });
    };
  }
]);
angular.module('iwx').controller('DisplayEditCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'authToken',
  'universityId',
  'total',
  '$modalInstance',
  'origin',
  function ($scope, $rootScope, $http, authToken, universityId, total, $modalInstance, origin) {
    //素材库展板列表
    $scope.currentPage = 1;
    $scope.loadBtn = '\u52a0\u8f7d\u66f4\u591a~~';
    $scope.sourceScreens = [];
    $scope.sourceScreensSet = {};
    //选中的素材展板
    $scope.sourScreenChosen = [];
    //播放展板列表
    $scope.displayScreens = [];
    //选中的播放展板
    $scope.disScreenChosen = [];
    if (total === 0) {
      $scope.modalTitle = '\u65b0\u5efa\u64ad\u653e\u5217\u8868';
    } else {
      $scope.modalTitle = '\u66f4\u65b0\u64ad\u653e\u5217\u8868';
    }
    $scope.close = function () {
      $modalInstance.close('ok');
    };
    //分页获取素材库展板列表
    $scope.getSourceScreenList = function (page) {
      $http.get(origin.DESTINATION.name + '/v1/customer/' + universityId + '/contents?s=usable&page=' + page + '&per_page=20', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': authToken }
      }).success(function (data) {
        if (data.items.length === 0) {
          if (page === 1) {
            $scope.message = true;
            $scope.loadMsg = '\u6682\u65f6\u6ca1\u6709\u53ef\u7528\u7684\u5c55\u677f\u7d20\u6750\uff0c\u8bf7\u5728\u7d20\u6750\u5e93\u4e2d\u8fdb\u884c\u6dfb\u52a0\uff01';
          } else {
            $scope.btn = true;
            $scope.loadBtn = '\u5df2\u7ecf\u52a0\u8f7d\u5168\u90e8~~';
          }
          return;
        }
        $scope.btn = false;
        $scope.loadBtn = '\u52a0\u8f7d\u66f4\u591a~~';
        $scope.message = false;
        var add = 0;
        angular.forEach(data.items, function (value, key) {
          if (!(value.id in $scope.sourceScreensSet)) {
            value['chosen'] = false;
            value['isDisabled'] = false;
            $scope.sourceScreensSet[value.id] = true;
            $scope.sourceScreens.push(value);
            add++;
          }
        });
        if (add === 0) {
          $scope.getSourceScreenList(++$scope.currentPage);
        }
      });
    };
    //获取下一页素材库展板信息
    $scope.getMoreScreens = function () {
      $scope.getSourceScreenList(++$scope.currentPage);
    };
    $scope.getSourceScreenList($scope.currentPage);
    //选择素材展板
    $scope.choseScreen = function (screen) {
      if (screen.chosen) {
        screen.chosen = false;
        angular.forEach($scope.sourScreenChosen, function (value, key) {
          if (value.id === screen.id) {
            $scope.sourScreenChosen.splice(key, 1);
          }
        });
      } else {
        screen.chosen = true;
        $scope.sourScreenChosen.push(screen);
      }
      console.log($scope.sourScreenChosen);
    };
    //获取播放展板列表
    $scope.getDisplayScreenList = function () {
      $http.get(origin.DESTINATION.name + '/v1/customer/playlist/contents/', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': authToken }
      }).success(function (data) {
        angular.forEach(data, function (value, key) {
          value['content']['chosen'] = false;
          value['content']['isDisabled'] = false;
          $scope.displayScreens.push(value);
        });
      });
    };
    $scope.getDisplayScreenList();
    //选择播放展板
    $scope.choseDisplayScreen = function (screen) {
      if (screen.chosen) {
        screen.chosen = false;
        angular.forEach($scope.disScreenChosen, function (value, key) {
          if (value === screen.id) {
            $scope.disScreenChosen.splice(key, 1);
          }
        });
      } else {
        screen.chosen = true;
        $scope.disScreenChosen.push(screen.id);
      }
    };
    //获取播放等级列表
    $scope.getLevels = function () {
      $http.get(origin.DESTINATION.name + '/v1/customer/priorities/?page=1&per_page=100', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': authToken }
      }).success(function (data) {
        $scope.levels = data.items;
      });
    };
    $scope.getLevels();
    //将选中的素材展板添加到播放列表
    $scope.addToDisList = function () {
      var hash = {};
      var temp = [];
      //要添加到播放列表中的选中的展板
      var add = [];
      angular.forEach($scope.sourScreenChosen, function (value, key) {
        value.chosen = false;
        value.isDisabled = true;
        hash[value.id] = value;
        var screen = {};
        screen['content'] = value;
        add.push(screen);
      });
      angular.forEach($scope.sourceScreens, function (value, key) {
        if (!hash[value.id]) {
          temp.push(value);
        }
      });
      $scope.sourScreenChosen = [];
      $scope.sourceScreens = temp;
      $scope.displayScreens = add.concat($scope.displayScreens);
    };
    //给要添加的展板选择播放等级
    $scope.selectLevel = function (content_id, priority_id, flag) {
      console.log(priority_id);
      console.log(flag);
      if (flag) {
        //添加
        var addParam = {};
        addParam['content_id'] = content_id;
        addParam['priority_id'] = priority_id;
        $http.post(origin.DESTINATION.name + '/v1/customer/playlist/contents/', addParam, {
          'Origin': origin.ORIGIN,
          'headers': { 'Authentication-Token': authToken }
        }).success(function (data) {
          data['content']['chosen'] = false;
          data['content']['isDisabled'] = false;
          angular.forEach($scope.displayScreens, function (value, key) {
            if (value.content.id === data.content.id) {
              $scope.displayScreens.splice(key, 1, data);
            }
          });
          //广播通知刷新播放列表
          $rootScope.$broadcast('updateDisplayList');
        });
      } else {
        //修改
        var updParam = {};
        updParam['priority_id'] = priority_id;
        $http.put(origin.DESTINATION.name + '/v1/customer/playlist/contents/' + content_id, updParam, {
          'Origin': origin.ORIGIN,
          'headers': { 'Authentication-Token': authToken }
        }).success(function (data) {
          data['content']['chosen'] = false;
          data['content']['isDisabled'] = false;
          angular.forEach($scope.displayScreens, function (value, key) {
            if (value.content.id === data.content.id) {
              $scope.displayScreens.splice(key, 1, data);
            }
          });
          $rootScope.$broadcast('updateDisplayList');
        });
      }
    };
    //将播放的展板从播放列表移除
    $scope.removeFromDisList = function () {
      console.log(JSON.stringify($scope.disScreenChosen));
      $http.delete(origin.DESTINATION.name + '/v1/customer/playlist/contents/?contents=' + $scope.disScreenChosen.toString(), {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': authToken }
      }).success(function (data) {
        var displaySet = {};
        var displayTemp = [];
        angular.forEach(data, function (value, key) {
          displaySet[value] = value;
        });
        angular.forEach($scope.displayScreens, function (value, key) {
          if (!displaySet[value.content.id]) {
            displayTemp.push(value);
          }
        });
        $scope.displayScreens = displayTemp;
        $scope.disScreenChosen = [];
        $scope.currentPage = 1;
        $scope.getSourceScreenList($scope.currentPage);
        //将删除成功的展板从播放展板列表中删除
        $rootScope.$broadcast('updateDisplayList');
      });
    };
    //通知广告屏幕刷新
    $scope.update = function () {
      $http.post(origin.DESTINATION.name + '/v1/customer/playlist/notification', {}, {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': authToken }
      }).success(function (data) {
        $modalInstance.close('ok');
      });
    };
  }
]);
angular.module('iwx').controller('SourceCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  '$modal',
  '$state',
  '$stateParams',
  'origin',
  'userService',
  function ($scope, $rootScope, $http, ngTableParams, eventType, $modal, $state, $stateParams, origin, userService) {
    $scope.server = origin.DESTINATION.name;
    $scope.confirm = {};
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    $scope.currentPage = $stateParams.page;
    //获取素材库列表
    $scope.getSourceScreens = function () {
      var NgTableParams = ngTableParams;
      var screens = null;
      $scope.tableParams = new NgTableParams({
        page: $scope.currentPage,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $scope.currentPage = params.page();
          $http.get(origin.DESTINATION.name + '/v1/customer/' + $scope.user.university.id + '/contents?s=l&page=' + params.page() + '&per_page=' + params.count(), {
            'Origin': origin.ORIGIN,
            'headers': { 'Authentication-Token': $scope.auth_token }
          }).success(function (data) {
            screens = data.items;
            params.total(data.total);
            $defer.resolve(screens);
          });
        }
      });
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.user = response.user;
      $scope.auth_token = response.auth_token;
      $scope.getSourceScreens();
    });
    var reloadTable = function () {
      $scope.tableParams.reload();
    };
    //确定操作
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delete') {
        $http.delete('', {
          'Origin': origin.ORIGIN,
          'headers': { 'Authentication-Token': $scope.auth_token }
        }).success(function (data) {
          $scope.tableParams.reload();
        });
      }
    };
    //添加到播放列表
    $scope.addToDisplay = function (screen, auth_token) {
      $http.get(origin.DESTINATION.name + '/v1/customer/priorities/?page=1&per_page=100', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        var priorities = data.items;
        if (priorities.length === 0) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u5f53\u524d\u65e0\u81ea\u5b9a\u4e49\u64ad\u653e\u7b49\u7ea7\uff0c\u8bf7\u5148\u8fdb\u884c\u64ad\u653e\u7b49\u7ea7\u8bbe\u7f6e\u3002'
          });
          return;
        }
        $modal.open({
          templateUrl: 'partial/screen/university/schedule/add_display_level.html',
          controller: [
            '$scope',
            '$modalInstance',
            'origin',
            function ($scope, $modalInstance, origin) {
              $scope.levelArray = priorities;
              // $scope.levelArray = [{id : 1, name : '常规的', length : 30}, {id : 2, name : '需长时间的', length : 60}, 
              // 	{id : 3, name : '短暂的', length : 15}];
              $scope.btnOk = true;
              $scope.param = {
                priority_id: 0,
                content_id: screen.id
              };
              $scope.$watch('param.priority_id', function (value) {
                if (value !== 0) {
                  $scope.btnOk = false;
                }
              });
              $scope.ok = function () {
                console.log($scope.param);
                $http.post(origin.DESTINATION.name + '/v1/customer/playlist/contents/', $scope.param, {
                  'Origin': origin.ORIGIN,
                  'headers': { 'Authentication-Token': auth_token }
                }).success(function (data) {
                  $modalInstance.close('ok');
                  $rootScope.$emit(eventType.NOTIFICATION, {
                    'type': 'POPMSG',
                    'title': '\u4fe1\u606f',
                    'message': '\u5df2\u6210\u529f\u6dfb\u52a0\u81f3\u64ad\u653e\u5217\u8868\u3002'
                  });
                  reloadTable();
                });
              };
              $scope.cancel = function () {
                $modalInstance.close('ok');
              };
            }
          ]
        });
      });
    };
    //从库中删除展板
    $scope.delete = function (screen) {
      $scope.confirm.message = '\u786e\u5b9a\u8981\u4ece\u5e93\u4e2d\u5220\u9664\u201c' + screen.title + '\u201d\u7684\u4fe1\u606f?';
      $scope.confirm.type = 'delete';
      $scope.confirm.param = screen.id;
      $('#confirmModal').modal();
      return;
    };
    //本地上传
    $scope.nativeUpload = function () {
      $state.go('terminal_university.native_upload', { page: $scope.currentPage }, { reload: true });
    };
    //设置等级
    $scope.setLevels = function () {
      $state.go('terminal_university.set_levels', { page: $scope.currentPage }, { reload: true });
    };
    $scope.viewImage = function (image) {
      console.log(image);
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
    //修改播放时间
    $scope.updDisplayTime = function (screen, auth_token) {
      $modal.open({
        templateUrl: 'partial/screen/university/schedule/upd_display_time.html',
        controller: [
          '$scope',
          '$modalInstance',
          '$filter',
          'origin',
          function ($scope, $modalInstance, $filter, origin) {
            $scope.title = '\u4fee\u6539\u64ad\u653e\u65f6\u95f4';
            var current = $filter('date')(new Date(), 'yyyy-MM-dd HH:mm');
            screen['current'] = current;
            $scope.screen = screen;
            $scope.ok = function () {
              var fd = new FormData();
              fd.append('start_time', $scope.screen.approved_start_time);
              fd.append('end_time', $scope.screen.approved_end_time);
              $http.put(origin.DESTINATION.name + '/v1/customer/' + screen.region.id + '/contents/' + screen.id, fd, {
                'Origin': origin.ORIGIN,
                'headers': {
                  'Authentication-Token': auth_token,
                  'Content-Type': undefined
                }
              }).success(function (data) {
                $modalInstance.close('ok');
                $rootScope.$emit(eventType.NOTIFICATION, {
                  'type': 'POPMSG',
                  'title': '\u4fe1\u606f',
                  'message': '\u6210\u529f\u4fee\u6539\u64ad\u653e\u65f6\u95f4\u3002'
                });
                reloadTable();
              });
            };
            $scope.cancel = function () {
              $modalInstance.dismiss('cancel');
            };
          }
        ]
      });
    };
    //插播
    $scope.interCut = function (screen, auth_token) {
      $http.get(origin.DESTINATION.name + '/v1/customer/priorities/?page=1&per_page=100', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        var priorities = data.items;
        if (priorities.length === 0) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u5f53\u524d\u65e0\u81ea\u5b9a\u4e49\u64ad\u653e\u7b49\u7ea7\uff0c\u8bf7\u5148\u8fdb\u884c\u64ad\u653e\u7b49\u7ea7\u8bbe\u7f6e\u3002'
          });
          return;
        }
        $modal.open({
          templateUrl: 'partial/screen/university/schedule/add_display_level.html',
          controller: [
            '$scope',
            '$modalInstance',
            'origin',
            function ($scope, $modalInstance, origin) {
              $scope.levelArray = priorities;
              $scope.btnOk = true;
              $scope.param = { priority_id: 0 };
              $scope.$watch('param.priority_id', function (value) {
                if (value !== 0) {
                  $scope.btnOk = false;
                }
              });
              $scope.ok = function () {
                console.log($scope.param);
                $http.post(origin.DESTINATION.name + '/v1/customer/contents/' + screen.id + '/spot', $scope.param, {
                  'Origin': origin.ORIGIN,
                  'headers': { 'Authentication-Token': auth_token }
                }).success(function (data) {
                  $modalInstance.close('ok');
                  $state.go('terminal_university.display_log', { page: 1 }, { reload: true });
                });
              };
              $scope.cancel = function () {
                $modalInstance.close('ok');
              };
            }
          ]
        });
      });
    };
  }
]);
angular.module('iwx').controller('DisplayLogCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'ngTableParams',
  'eventType',
  '$modal',
  '$state',
  '$stateParams',
  'origin',
  'userService',
  function ($scope, $rootScope, $http, ngTableParams, eventType, $modal, $state, $stateParams, origin, userService) {
    $scope.server = origin.DESTINATION.name;
    $scope.currentPage = $stateParams.page;
    $scope.getDisplayLog = function () {
      var NgTableParams = ngTableParams;
      var screens = null;
      $scope.tableParams = new NgTableParams({
        page: $scope.currentPage,
        count: 10
      }, {
        counts: [],
        total: 0,
        getData: function ($defer, params) {
          $scope.currentPage = params.page();
          $http.get(origin.DESTINATION.name + '/v1/customer/spots/?page=' + params.page() + '&per_page=' + params.count(), {
            'Origin': origin.ORIGIN,
            'headers': { 'Authentication-Token': $scope.auth_token }
          }).success(function (data) {
            // data = {items: [], total: 0};
            $scope.total = data.total;
            screens = data.items;
            params.total(data.total);
            $defer.resolve(screens);
          });
        }
      });
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.user = response.user;
      $scope.auth_token = response.auth_token;
      $scope.getDisplayLog();
    });
    var reloadTable = function () {
      $scope.tableParams.reload();
    };
    //再次插播
    $scope.interCut = function (screen, auth_token) {
      $http.get(origin.DESTINATION.name + '/v1/customer/priorities/?page=1&per_page=100', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        var priorities = data.items;
        if (priorities.length === 0) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': '\u5f53\u524d\u65e0\u81ea\u5b9a\u4e49\u64ad\u653e\u7b49\u7ea7\uff0c\u8bf7\u5148\u8fdb\u884c\u64ad\u653e\u7b49\u7ea7\u8bbe\u7f6e\u3002'
          });
          return;
        }
        $modal.open({
          templateUrl: 'partial/screen/university/schedule/add_display_level.html',
          controller: [
            '$scope',
            '$modalInstance',
            'origin',
            function ($scope, $modalInstance, origin) {
              $scope.levelArray = priorities;
              $scope.btnOk = true;
              $scope.param = { priority_id: 0 };
              $scope.$watch('param.priority_id', function (value) {
                if (value !== 0) {
                  $scope.btnOk = false;
                }
              });
              $scope.ok = function () {
                console.log($scope.param);
                $http.post(origin.DESTINATION.name + '/v1/customer/contents/' + screen.id + '/spot', $scope.param, {
                  'Origin': origin.ORIGIN,
                  'headers': { 'Authentication-Token': auth_token }
                }).success(function (data) {
                  $modalInstance.close('ok');
                  reloadTable();
                });
              };
              $scope.cancel = function () {
                $modalInstance.close('ok');
              };
            }
          ]
        });
      });
    };
    $scope.viewImage = function (image) {
      console.log(image);
      try {
        var tempArr = image.split('/');
        if (tempArr[tempArr.length - 1] === 'placeholder.png') {
          return;
        }
      } catch (e) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u56fe\u7247\u8def\u5f84\u4e0d\u6b63\u786e'
        });
        return;
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: 'lg'
      });
    };
  }
]);
angular.module('iwx').controller('NativeUploadCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$stateParams',
  'origin',
  'eventType',
  '$filter',
  '$state',
  '$modal',
  function ($scope, $rootScope, $http, $stateParams, origin, eventType, $filter, $state, $modal) {
    $scope.page = $stateParams.page;
    // $scope.type = 'interCut';
    $scope.screen = {};
    //获取安装的展板数量信息
    var getScreensNum = function () {
      $http.get(origin.DESTINATION.name + '/v1/customer/screens/numbers', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        $scope.screenInfo = '\u672c\u6821\u652f\u6301\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\uff1a' + data.h + '\u5757\uff0c\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\uff1a' + data.v + '\u5757';
      });  // $scope.screenInfo = '本校支持横装电子展板：8块，竖装电子展板：12块';
    };
    //获取自定义的播放等级信息
    var getLevels = function () {
      $http.get(origin.DESTINATION.name + '/v1/customer/priorities/?page=1&per_page=100', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        $scope.levels = data.items;
      });  /*$scope.levels = [{id : 1, name : '常规的', length : 30}, {id : 2, name : '需长时间的', length : 60}, 
									{id : 3, name : '短暂的', length : 15}];*/
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.auth_token = response.auth_token;
      $scope.user = response.user;
      getScreensNum();
      getLevels();
    });
    //选择展板用途
    /*$scope.getCheckedUse = function (type) {
			console.log(type);
			$scope.type = type;
		};*/
    var validate = function () {
      if (!$scope.screen.title) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u5c55\u677f\u9879\u76ee\u540d\u79f0\u3002'
        });
        return false;
      }
      /*if ($scope.type === 'interCut') {
				if (!$scope.screen.priority_id) {
					$rootScope.$emit(eventType.NOTIFICATION, {
						'type': 'POPMSG',
						'title': '警告',
						'message': '请选择播放等级。'
					});
					return false;
				}
			}*/
      if (!$scope.screen.landscape_poster) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u4e0a\u4f20\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u3002'
        });
        return false;
      } else if ($scope.screen.landscape_poster.size > 1024 * 1024 * 3) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5c06\u4e0a\u4f20\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u5927\u5c0f\u63a7\u5236\u57283M\u4ee5\u5185\u3002'
        });
        return false;
      }
      if (!$scope.screen.portrait_poster) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u4e0a\u4f20\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u3002'
        });
        return false;
      } else if ($scope.screen.portrait_poster.size > 1024 * 1024 * 3) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u5c06\u4e0a\u4f20\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\u5927\u5c0f\u63a7\u5236\u57283M\u4ee5\u5185\u3002'
        });
        return false;
      }
      var sTime = new Date($scope.screen.start_time.replace(/-/g, '/'));
      var eTime = new Date($scope.screen.end_time.replace(/-/g, '/'));
      if (Date.parse(sTime) > Date.parse(eTime)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u7ed3\u675f\u65f6\u95f4\u5fc5\u987b\u5728\u5f00\u59cb\u65f6\u95f4\u4e4b\u540e\u3002'
        });
        return false;
      }
      if (Date.parse(sTime) === Date.parse(eTime)) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u8b66\u544a',
          'message': '\u8bf7\u586b\u5199\u5f00\u59cb\u6216\u7ed3\u675f\u65f6\u95f4\u3002'
        });
        return false;
      }
      return true;
    };
    $scope.save = function () {
      if (!validate()) {
        return;
      }
      var currentTime = new Date();
      var fd = new FormData();
      fd.append('title', $scope.screen.title);
      fd.append('landscape_poster', $scope.screen.landscape_poster);
      fd.append('portrait_poster', $scope.screen.portrait_poster);
      //添加到素材库
      fd.append('start_time', $scope.screen.start_time);
      fd.append('end_time', $scope.screen.end_time);
      fd.append('to', 'library');
      fd.forEach(function (value) {
        console.log(value);
      });
      $http.post(origin.DESTINATION.name + '/v1/customer/' + $scope.user.university.id + '/chief_editor/' + $scope.user.id + '/contents', fd, {
        'Origin': origin.ORIGIN,
        'headers': {
          'Authentication-Token': $scope.auth_token,
          'Content-Type': undefined
        }
      }).success(function (data) {
        //跳转至素材库列表
        $state.go('terminal_university.source', { page: 1 }, { reload: true });
      });
    };
    $scope.showDemo = function (image, type) {
      var modalSize = 'md';
      if (type === 'portrait_poster') {
        modalSize = 'sm';
      }
      $modal.open({
        template: '<div><img style="width:100%" src=' + image + '></div>',
        size: modalSize
      });
    };
  }
]);
angular.module('iwx').controller('SetLevelsCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  '$state',
  '$stateParams',
  'origin',
  '$modal',
  function ($scope, $rootScope, $http, $state, $stateParams, origin, $modal) {
    $scope.page = $stateParams.page;
    $scope.confirm = {};
    $scope.confirm.message = 'MESSAGE';
    $scope.confirm.type = '';
    $scope.confirm.param = '';
    //获取等级列表
    var getLevels = function () {
      $http.get(origin.DESTINATION.name + '/v1/customer/priorities/?page=1&per_page=100', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        $scope.levels = data.items;
      });  /*$scope.levels = [{id : 1, name : '常规的', length : 30}, {id : 2, name : '需长时间的', length : 60}, 
				{id : 3, name : '短暂的', length : 15}];*/
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.user = response.user;
      $scope.auth_token = response.auth_token;
      getLevels();
    });
    //确定操作
    $scope.confirmModal = function () {
      if ($scope.confirm.type === 'delLevel') {
        $http.delete(origin.DESTINATION.name + '/v1/customer/priorities/' + $scope.confirm.param, {
          'Origin': origin.ORIGIN,
          'headers': { 'Authentication-Token': $scope.auth_token }
        }).success(function (data) {
          getLevels();
        });
      }
    };
    //新建等级
    $scope.createLevel = function (auth_token) {
      $modal.open({
        templateUrl: 'partial/screen/university/schedule/create_level.html',
        controller: [
          '$scope',
          '$modalInstance',
          'origin',
          function ($scope, $modalInstance, origin) {
            $scope.btnOk = true;
            $scope.error = false;
            $scope.level = { length: 15 };
            $scope.$watch('level.name', function (value) {
              if (value) {
                $scope.btnOk = false;
              }
            });
            $scope.$watch('level.length', function (value) {
              console.log(typeof value);
              if (value < 15 || !value) {
                $scope.error = true;
              } else {
                $scope.error = false;
              }
            });
            $scope.ok = function () {
              console.log($scope.level);
              if (!$scope.level.length) {
                return;
              }
              $http.post(origin.DESTINATION.name + '/v1/customer/priorities/', $scope.level, {
                'Origin': origin.ORIGIN,
                'headers': { 'Authentication-Token': auth_token }
              }).success(function (data) {
                $modalInstance.close('ok');
                getLevels();
              });
            };
            $scope.cancel = function () {
              $modalInstance.close('ok');
            };
          }
        ]
      });
    };
    //删除播放等级
    $scope.delLevel = function (level) {
      $scope.confirm.message = '\u786e\u5b9a\u8981\u5220\u9664\u201c' + level.name + '\u201d\u64ad\u653e\u7b49\u7ea7\uff1f';
      $scope.confirm.type = 'delLevel';
      $scope.confirm.param = level.id;
      $('#confirmModal').modal();
      return;
    };
  }
]);
angular.module('iwx').controller('DeviceNormalCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'origin',
  function ($scope, $rootScope, $http, origin) {
    console.log('DeviceNormalCtrl');
    var getDeviceInfo = function () {
      $http.get(origin.DESTINATION.name + '/v1/customer/screens/', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        $scope.screenInfo = '\u672c\u6821\u652f\u6301\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\uff1a' + data.h + '\u5757\uff0c\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\uff1a' + data.v + '\u5757';
      });
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.auth_token = response.auth_token;
      $scope.user = response.user;  // getDeviceInfo();
    });
  }
]);
angular.module('iwx').controller('DeviceExceptionCtrl', [
  '$scope',
  '$rootScope',
  '$http',
  'origin',
  function ($scope, $rootScope, $http, origin) {
    console.log('DeviceExceptionCtrl');
    var getDeviceInfo = function () {
      $http.get(origin.DESTINATION.name + '/v1/customer/screens/', {
        'Origin': origin.ORIGIN,
        'headers': { 'Authentication-Token': $scope.auth_token }
      }).success(function (data) {
        $scope.screenInfo = '\u672c\u6821\u652f\u6301\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\uff1a' + data.h + '\u5757\uff0c\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\uff1a' + data.v + '\u5757';
      });
    };
    $http.get('/api/auth/refreshtoken').success(function (response) {
      $scope.auth_token = response.auth_token;
      $scope.user = response.user;  // getDeviceInfo();
    });
  }
]);
angular.module('iwx').directive('dSref', [
  '$compile',
  '$state',
  function ($compile, $state) {
    return {
      restrict: 'A',
      scope: { dSref: '=' },
      link: function (scope, element) {
        /*element.html($compile('<a ui-sref="{{ dSref }}">{{name}}</a>')(scope))*/
        function update() {
          console.log($state.current.name + '-------------' + scope.dSref);
          if ($state.current.name === scope.dSref || $state.current.name === 'activity.unpublishLog' && scope.dSref === 'activity' || $state.current.name === 'activity.unpublishLog_art' && scope.dSref === 'activity.article' || $state.current.name === 'activity.unpublishLog_bazaar' && scope.dSref === 'activity.bazaar' || $state.current.name === 'community.approved' && scope.dSref === 'community.members' || $state.current.name === 'community.pending' && scope.dSref === 'community.members' || $state.current.name === 'community.verify_members' && scope.dSref === 'community.register' || $state.current.name === 'community_university.pending' && scope.dSref === 'community_university' || $state.current.name === 'community_university.league' && scope.dSref === 'community_university' || $state.current.name === 'community_university.stu_union' && scope.dSref === 'community_university' || $state.current.name === 'community_university.stu_org' && scope.dSref === 'community_university' || $state.current.name === 'community_university.stu_community' && scope.dSref === 'community_university' || $state.current.name === 'activity_iWX.bazaar.personal' && scope.dSref === 'activity_iWX.bazaar' && element.attr('id') && element.attr('id') === 'left' || $state.current.name === 'activity_university.bazaar.personal' && scope.dSref === 'activity_university.bazaar' && element.attr('id') && element.attr('id') === 'left_un' || $state.current.name === 'party_info.duty' && scope.dSref === 'party_info.party_persons' || $state.current.name === 'party_info.grade' && scope.dSref === 'party_info.party_persons' || $state.current.name === 'party_info.group' && scope.dSref === 'party_info.party_persons' || $state.current.name === 'party_info.course' && scope.dSref === 'party_info.party_persons' || $state.current.name === 'party_info.activity' && scope.dSref === 'party_info.party_persons' || $state.current.name === 'party_info.verify' && scope.dSref === 'party_info.info_conllection' || $state.current.name === 'party_info.apply_person_info' && scope.dSref === 'party_info.info_conllection' || $state.current.name === 'party_info.activity_summary' && scope.dSref === 'party_info.party_persons' || $state.current.name === 'party_info.course_summary' && scope.dSref === 'party_info.party_persons' || $state.current.name === 'party_act_item.political_sign_in_at_plugin' && scope.dSref === 'party_act_item.political_sign_in_plugin' || $state.current.name === 'screen.screen_edit' && scope.dSref === 'screen' || $state.current.name === 'terminal_university.approve' && scope.dSref === 'terminal_university' || $state.current.name === 'terminal_university.inter_cut' && scope.dSref === 'terminal_university.schedule' || $state.current.name === 'terminal_university.source' && scope.dSref === 'terminal_university.schedule' || $state.current.name === 'terminal_university.display_log' && scope.dSref === 'terminal_university.schedule' || $state.current.name === 'terminal_university.device_exception' && scope.dSref === 'terminal_university.device' || $state.current.name === 'terminal_university.native_upload' && scope.dSref === 'terminal_university.schedule' || $state.current.name === 'terminal_university.set_levels' && scope.dSref === 'terminal_university.schedule') {
            element.addClass('active');
          } else {
            element.removeClass('active');
          }
        }
        scope.$on('$stateChangeSuccess', update);
        update();
      }
    };
  }
]);
angular.module('iwx').directive('formInput', [
  '$compile',
  function ($compile) {
    return {
      restrict: 'E',
      scope: {
        name: '=',
        title: '='
      },
      transclude: true,
      templateUrl: 'directive/form-input/form-input.html',
      link: function (scope, element, attrs) {
      }
    };
  }
]);
angular.module('iwx').directive('imageFixed', [
  '$timeout',
  '$http',
  function ($timeout, $http) {
    return {
      restrict: 'A',
      link: function (scope, element, attrs) {
        var $el = $(element), $parent = $el.parent();
        $el.load(function () {
          $parent.addClass('image-fixed-warp');
          if ($el.width() / $parent.width() > $el.height() / $parent.height()) {
            $el.css({ 'height': '100%' });
          } else {
            $el.css({ 'width': '100%' });
          }
          $el.addClass('show');
        });
      }
    };
  }
]);
angular.module('iwx').factory('httpinterceptor', [
  '$q',
  '$rootScope',
  'eventType',
  function ($q, $rootScope, eventType) {
    var auth_token;
    return {
      'request': function (config) {
        if (config.url.indexOf('api') === -1 || config.url.indexOf('v1') === -1) {
          return config || $q.when(config);
        }
        // clear notifiation bar
        // $rootScope.$emit(eventType.NOTIFICATION, null);
        // $rootScope.$emit(eventType.NOTIFICATION, {
        // 		'type': 'INFO',
        // 		'message': '加载中...'
        // });
        // console.log(config);
        // console.log(auth_token);
        if (config && auth_token) {
          // console.log(auth_token);
          // console.log(config);
          config.headers['Authentication-Token'] = auth_token;
        }
        return config || $q.when(config);
      },
      'requestError': function (rejection) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'message': rejection
        });
        return $q.reject(rejection);
      },
      'response': function (response) {
        if (response && response.data && response.data.status === 'error') {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': response.data.message,
            'payload': response.data.payload
          });
          return $q.reject(response);
        }
        if (response && response.data && response.data.status === 'success') {
          response.data = response.data.data;
          return response;
        }
        return response || $q.when(response);
      },
      'responseError': function (rejection) {
        // Handle Unauthorized error in user service
        if (rejection.status !== 401) {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'ERROR',
            'title': '\u8b66\u544a',
            'message': rejection.statusText ? rejection.statusText : '\u672a\u77e5\u9519\u8bef'
          });
        }
        return $q.reject(rejection);
      },
      'setAuthToken': function (token) {
        auth_token = token;  // console.log(auth_token);
      }
    };
  }
]);
angular.module('iwx').service('userService', [
  '$rootScope',
  '$q',
  '$http',
  'httpinterceptor',
  '$state',
  'eventType',
  function ($rootScope, $q, $http, httpinterceptor, $state, eventType) {
    // For now, we will always load user object, even if we just need parts of it.
    // If bandwidth is the problem, we can improve it.
    // 修改提示信息方式为modal弹出窗体
    var that = this;
    this.user = null;
    this.login = function (user, next) {
      $http.post('/api/auth/admin/login', user).success(function (response) {
        httpinterceptor.setAuthToken(response.auth_token);
        that.user = response.user;
        $rootScope.$emit(eventType.LOGIN, that.user);
        $state.go(next);
      });
    };
    this.logout = function () {
      $http.post('/api/auth/admin/logout').success(function () {
        that.user = null;
        httpinterceptor.setAuthToken(null);
        $rootScope.$emit(eventType.LOGOUT);
        $state.go('welcome');
      });
    };
    this.load = function (noLogin) {
      // console.log(this.user);
      if (this.user) {
        return $q.when(this.user);
      }
      var deferred = $q.defer();
      $http.get('/api/auth/refreshtoken').success(function (response) {
        that.user = response.user;
        // console.log(response.auth_token);
        httpinterceptor.setAuthToken(response.auth_token);
        deferred.resolve(that.user);
      }).error(function (e) {
        $rootScope.$emit(eventType.NOTIFICATION, null);
        if (noLogin) {
          $state.go('welcome');
        }
      });
      return deferred.promise;
    };
    this.resetPassword = function (email) {
      $rootScope.$emit(eventType.NOTIFICATION, {
        'type': 'LONG_INFO',
        'message': '\u52a0\u8f7d\u4e2d...'
      });
      $http.post('/api/auth/reset', { 'email': email }).success(function () {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u5df2\u53d1\u9001\u90ae\u4ef6\u5230' + email + '\uff0c \u8bf7\u6839\u636e\u6307\u793a\u627e\u56de\u5bc6\u7801.'
        });
      });
    };
    this.changePassword = function (data) {
      /*$rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'LONG_INFO',
            'message': '加载中...'
        });*/
      $http.post('/api/auth/change', data).success(function (result) {
        if (result.response.errors) {
          var errors = result.response.errors;
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u8b66\u544a',
            'message': errors[_.keys(errors)[0]][0]
          });
        } else {
          $rootScope.$emit(eventType.NOTIFICATION, {
            'type': 'POPMSG',
            'title': '\u6d88\u606f',
            'message': '\u5bc6\u7801\u4fee\u6539\u6210\u529f\uff0c\u8bf7\u91cd\u65b0\u767b\u5f55\u3002'
          });
          that.user = null;
          httpinterceptor.setAuthToken(null);
          $rootScope.$emit(eventType.LOGOUT);
          $state.go('welcome');
        }
      });
    };
    this.update = function (data) {
      $http.put('/api/iwx_un/update/me', data, {
        transformRequest: angular.identity,
        headers: { 'Content-Type': undefined }
      }).success(function (result) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u4fe1\u606f\u4fee\u6539\u6210\u529f\uff0c\u8bf7\u91cd\u65b0\u767b\u5f55\u3002'
        });
        $http.post('/api/auth/admin/logout').success(function () {
          that.user = null;
          httpinterceptor.setAuthToken(null);
          $rootScope.$emit(eventType.LOGOUT);
          $state.go('welcome');
        });
      });
    };
    this.update_password = function (data) {
      $http.post('/api/iwx_un/change_password', data, { headers: { 'Content-Type': 'application/json' } }).success(function (data) {
        $rootScope.$emit(eventType.NOTIFICATION, {
          'type': 'POPMSG',
          'title': '\u6d88\u606f',
          'message': '\u5bc6\u7801\u4fee\u6539\u6210\u529f\uff0c\u8bf7\u91cd\u65b0\u767b\u5f55\u3002'
        });
        that.user = null;
        httpinterceptor.setAuthToken(null);
        $rootScope.$emit(eventType.LOGOUT);
        $state.go('welcome');
      });
    };
  }
]);
angular.module('iwx').service('partiService', [
  '$scope',
  '$rootScope',
  '$http',
  '$q',
  function ($scope, $rootScope, $http, $q) {
    //get all party members
    this.getMembers = function (condition) {
      $http.get('/api/plugins').success(function (data) {
        return data;
      });
    };
    //get participators
    this.getParticipators = function () {
      $http.get('/api/plugins').success(function (data) {
        return data;
      });
    };
  }
]);
angular.module('iwx').service('actService', [
  '$rootScope',
  '$http',
  '$q',
  function ($rootScope, $http, $q) {
    //get activity info
    this.getActivity = function (id) {
      var deferred = $q.defer();
      $http.get('/api/admin/activities/' + id).success(function (data) {
        deferred.resolve(data);
      });
      return deferred.promise;
    };
    //get actual signin persons
    this.getActualPersons = function (id, page, per_page) {
      var deferred = $q.defer();
      $http.get('/api/political_sign/' + id + '/participant/user_list?page=' + page + '&per_page=' + per_page).success(function (data) {
        deferred.resolve(data);
      });
      return deferred.promise;
    };
    //get specify signin persons
    this.getSpecifyPersons = function (id) {
      var deferred = $q.defer();
      $http.get('/api/political_sign/' + id + '/participant/users').success(function (data) {
        deferred.resolve(data);
      });
      return deferred.promise;
    };
  }
]);
angular.module('iwx').service('memberService', [
  '$rootScope',
  '$http',
  '$q',
  function ($rootScope, $http, $q) {
    //get person identify info
    this.getMemberType = function () {
      var deferred = $q.defer();
      $http.get('/api/political/type').success(function (data) {
        deferred.resolve(data);
      });
      return deferred.promise;
    };
  }
]);
angular.module('iwx').directive('file', function () {
  return {
    restrict: 'A',
    scope: { file: '=' },
    link: function (scope, element, attrs) {
      element.bind('change', function (event) {
        var files = event.target.files || event.dataTransfer.files;
        var file = files[0];
        scope.file = file;
        scope.$apply();
      });
    }
  };
});
angular.module('iwx').directive('files', function () {
  return {
    restrict: 'A',
    scope: { files: '=' },
    link: function (scope, element, attrs) {
      element.bind('change', function (event) {
        var files = event.target.files || event.dataTransfer.files;
        scope.files = files;
        scope.$apply();
      });
    }
  };
});
angular.module('monospaced.qrcode', []).directive('qrcode', [
  '$window',
  function ($window) {
    var canvas2D = !!$window.CanvasRenderingContext2D, levels = {
        'L': 'Low',
        'M': 'Medium',
        'Q': 'Quartile',
        'H': 'High'
      }, draw = function (context, qr, modules, tile) {
        for (var row = 0; row < modules; row++) {
          for (var col = 0; col < modules; col++) {
            var w = Math.ceil((col + 1) * tile) - Math.floor(col * tile), h = Math.ceil((row + 1) * tile) - Math.floor(row * tile);
            context.fillStyle = qr.isDark(row, col) ? '#000' : '#fff';
            context.fillRect(Math.round(col * tile) + 10, Math.round(row * tile) + 10, w, h);
            context.lineWidth = 20;
            context.strokeStyle = '#fff';
            context.strokeRect(0, 0, 320, 320);
          }
        }
      };
    return {
      restrict: 'E',
      template: '<canvas class="qrcode"></canvas>',
      link: function (scope, element, attrs) {
        var domElement = element[0], $canvas = element.find('canvas'), canvas = $canvas[0], context = canvas2D ? canvas.getContext('2d') : null, download = 'download' in attrs, href = attrs.href, link = download || href ? document.createElement('a') : '', trim = /^\s+|\s+$/g, error, version, errorCorrectionLevel, data, size, modules, tile, qr, $img,
          /*qrcode = function () {

            },*/
          setVersion = function (value) {
            version = Math.max(1, Math.min(parseInt(value, 10), 10)) || 4;
          }, setErrorCorrectionLevel = function (value) {
            errorCorrectionLevel = value in levels ? value : 'M';
          }, setData = function (value) {
            if (!value) {
              return;
            }
            data = value.replace(trim, '');
            qr = $window.qrcode(version, errorCorrectionLevel);
            qr.addData(data);
            try {
              qr.make();
            } catch (e) {
              error = e.message;
              return;
            }
            error = false;
            modules = qr.getModuleCount();
          }, setSize = function (value) {
            size = parseInt(value, 10) || modules * 2;
            tile = size / modules;
            canvas.width = canvas.height = size + 20;
          }, render = function () {
            if (!qr) {
              return;
            }
            if (error) {
              if (link) {
                link.removeAttribute('download');
                link.title = '';
                link.href = '#_';
              }
              if (!canvas2D) {
                domElement.innerHTML = '<img src width="' + size + '"' + 'height="' + size + '"' + 'class="qrcode">';
              }
              scope.$emit('qrcode:error', error);
              return;
            }
            if (download) {
              domElement.download = 'qrcode.png';
              domElement.title = 'Download QR code';
            }
            if (canvas2D) {
              draw(context, qr, modules, tile);
              if (download) {
                domElement.href = canvas.toDataURL('image/png');
                console.log(domElement);
                return;
              }
            } else {
              domElement.innerHTML = qr.createImgTag(tile, 0);
              $img = element.find('img');
              $img.addClass('qrcode');
              if (download) {
                domElement.href = $img[0].src;
                return;
              }
            }
            if (href) {
              domElement.href = href;
            }
          };
        if (link) {
          link.className = 'qrcode-link';
          $canvas.wrap(link);
          domElement = link;
        }
        setVersion(attrs.version);
        setErrorCorrectionLevel(attrs.errorCorrectionLevel);
        setSize(attrs.size);
        attrs.$observe('version', function (value) {
          if (!value) {
            return;
          }
          setVersion(value);
          setData(data);
          setSize(size);
          render();
        });
        attrs.$observe('errorCorrectionLevel', function (value) {
          if (!value) {
            return;
          }
          setErrorCorrectionLevel(value);
          setData(data);
          setSize(size);
          render();
        });
        attrs.$observe('data', function (value) {
          if (!value) {
            return;
          }
          setData(value);
          setSize(size);
          render();
        });
        attrs.$observe('size', function (value) {
          if (!value) {
            return;
          }
          setSize(value);
          render();
        });
        attrs.$observe('href', function (value) {
          if (!value) {
            return;
          }
          href = value;
          render();
        });
      }
    };
  }
]);
angular.module('iwx').directive('iQrcode', [
  '$timeout',
  '$http',
  '$rootScope',
  'eventType',
  function ($timeout, $http, $rootScope, eventType) {
    return {
      restrict: 'E',
      scope: {
        'data': '=',
        'user': '='
      },
      templateUrl: 'directive/qrcode.html',
      link: function (scope, element, attrs) {
        scope.qrcode = null;
        var reset = function (data) {
          scope.qrcode = {
            v: parseInt(6 + 14 * Math.random(), 10),
            data: data
          };
          $timeout(function () {
            var canvas = element.find('canvas')[0];
            element.find('.qrcode-import').attr({
              download: 'qrcode.png',
              title: '\u5bfc\u51fa\u4e8c\u7ef4\u7801',
              href: canvas.toDataURL('image/png')
            });
          }, 100);
        };
        scope.$watch('data.qr_code', function () {
          if (scope.data.qr_code) {
            reset(window.location.origin + '/k/' + scope.data.qr_code);
          }
        });
        scope.createQrcode = function () {
          if (scope.data.qr_code) {
            reset(window.location.origin + '/k/' + scope.data.qr_code);
          } else {
            //添加判断
            if (!scope.data.id) {
              $rootScope.$emit(eventType.NOTIFICATION, {
                'type': 'POPMSG',
                'title': '\u8b66\u544a',
                'message': '\u8bf7\u5148\u521b\u5efa\u672c\u6b21\u7b7e\u5230'
              });
              return;
            }
            $http.post('/api/signs/' + scope.data.id + '/qrcode').success(function (data) {
              reset(window.location.origin + '/k/' + data.qr_code);
            });
          }
        };
      }
    };
  }
]);
angular.module('iwx').directive('signInQrcode', [
  '$timeout',
  '$http',
  '$rootScope',
  'eventType',
  function ($timeout, $http, $rootScope, eventType) {
    return {
      restrict: 'AE',
      scope: {
        'data': '=',
        'user': '='
      },
      templateUrl: 'directive/qrcode/qrcode.html',
      link: function (scope, element, attrs) {
        scope.qrcode = null;
        var reset = function (data) {
          scope.qrcode = {
            v: parseInt(6 + 14 * Math.random(), 10),
            data: data
          };
          $timeout(function () {
            var canvas = element.find('canvas')[0];
            element.find('.qrcode-import').attr({
              download: 'qrcode.png',
              title: '\u5bfc\u51fa\u4e8c\u7ef4\u7801',
              href: canvas.toDataURL('image/png')
            });
          }, 100);
        };
        scope.$watch('data.code', function () {
          if (scope.data.code) {
            reset(scope.data.code);
          }
        });
        scope.createQrcode = function () {
          if (scope.data.code) {
            reset(scope.data.code);
          } else {
            //添加判断
            if (!scope.data.id) {
              $rootScope.$emit(eventType.NOTIFICATION, {
                'type': 'POPMSG',
                'title': '\u8b66\u544a',
                'message': '\u8bf7\u5148\u521b\u5efa\u672c\u6b21\u7b7e\u5230'
              });
              return;
            }
            $http.post('/api/political_sign/' + scope.data.id + '/qrcode').success(function (data) {
              reset(data.code);
            });
          }
        };
      }
    };
  }
]);
angular.module('iwx').directive('post', [
  '$http',
  '$modal',
  '$state',
  function ($http, $modal, $state) {
    return {
      restrict: 'E',
      scope: {
        comment: '=',
        user: '='
      },
      templateUrl: 'directive/post/post.html',
      link: function (scope, element, attrs) {
        scope.editing = false;
        scope.replyText = '';
        scope.viewmore = false;
        scope.submit = function () {
          var url = '/api/activities/' + scope.$parent.activity.id + '/comments/' + scope.comment.id + '/reply';
          var data = {};
          data.content = scope.replyText;
          if (scope.replyTo) {
            data.reply_to = scope.replyTo.id;
          }
          scope.replyText = '';
          scope.editing = false;
          $http.post(url, data).success(function (comment) {
            scope.comment = comment;
          });
        };
        scope.getIcon = function (user) {
          if (!user) {
            return '';
          }
          if (user.managed_community) {
            return user.managed_community.logo;
          } else {
            return user.icon;
          }
        };
        scope.getName = function (user) {
          if (!user) {
            return '';
          }
          if (user.managed_community) {
            return user.managed_community.name;
          } else {
            return user.nickname;
          }
        };
        scope.replyReply = function (r) {
          scope.replyTo = r.user;
          scope.editing = true;
        };
        scope.removeComment = function () {
          var url = '/api/activities/' + scope.$parent.activity.id + '/comments/' + scope.comment.id;
          $http.delete(url).success(function () {
            // scope.$parent.refresh();
            scope.$parent.tableParams.reload();
          });
        };
        scope.upComment = function () {
          $http.post('/api/activities/comment/' + scope.comment.id + '/up').success(function () {
            scope.$parent.tableParams.reload();
          });
        };
        scope.downComment = function () {
          $http.post('/api/activities/comment/' + scope.comment.id + '/down').success(function () {
            scope.$parent.tableParams.reload();
          });
        };
        scope.expand = function () {
          scope.viewmore = true;
        };
        scope.viewImage = function (image) {
          $modal.open({
            template: '<div><img style="width:100%" src=' + image + '></div>',
            size: 'lg'
          });
        };
        scope.sendMessage = function (user) {
          if (user.managed_community) {
            // Do not support send comunity to community message
            return;
          }
          $state.go('message.user', { 'id': user.id });
        };
        scope.viewAllImages = function (index) {
          var items = scope.comment.images;
          items = items.slice(index).concat(items.slice(0, index));
          $modal.open({
            templateUrl: 'partial/util/carousel.html',
            controller: 'CarouselCtrl',
            size: 'lg',
            resolve: {
              items: function () {
                return items;
              }
            }
          });
        };
      }
    };
  }
]);
angular.module('iwx').directive('partyPost', [
  '$http',
  '$modal',
  '$state',
  function ($http, $modal, $state) {
    return {
      restrict: 'E',
      scope: {
        comment: '=',
        user: '='
      },
      templateUrl: 'directive/post/party_post.html',
      link: function (scope, element, attrs) {
        scope.editing = false;
        scope.replyText = '';
        scope.viewmore = false;
        scope.submit = function () {
          var url = '/api/activities/' + scope.$parent.activity.id + '/comments/' + scope.comment.id + '/reply';
          var data = {};
          data.content = scope.replyText;
          if (scope.replyTo) {
            data.reply_to = scope.replyTo.id;
          }
          scope.replyText = '';
          scope.editing = false;
          $http.post(url, data).success(function (comment) {
            scope.comment = comment;
          });
        };
        scope.getIcon = function (user) {
          if (!user) {
            return '';
          }
          if (user.managed_community) {
            return user.managed_community.logo;
          } else {
            return user.icon;
          }
        };
        scope.getName = function (user) {
          if (!user) {
            return '';
          }
          if (user.managed_community) {
            return user.managed_community.name;
          } else {
            return user.nickname;
          }
        };
        scope.replyReply = function (r) {
          scope.replyTo = r.user;
          scope.editing = true;
        };
        scope.removeComment = function () {
          var url = '/api/activities/' + scope.$parent.activity.id + '/comments/' + scope.comment.id;
          $http.delete(url).success(function () {
            // scope.$parent.refresh();
            scope.$parent.tableParams.reload();
          });
        };
        scope.upComment = function () {
          $http.post('/api/activities/comment/' + scope.comment.id + '/up').success(function () {
            scope.$parent.tableParams.reload();
          });
        };
        scope.downComment = function () {
          $http.post('/api/activities/comment/' + scope.comment.id + '/down').success(function () {
            scope.$parent.tableParams.reload();
          });
        };
        scope.expand = function () {
          scope.viewmore = true;
        };
        scope.viewImage = function (image) {
          $modal.open({
            template: '<div><img style="width:100%" src=' + image + '></div>',
            size: 'lg'
          });
        };
        scope.sendMessage = function (user) {
          if (user.managed_community) {
            // Do not support send comunity to community message
            return;
          }
          $state.go('message.user', { 'id': user.id });
        };
        scope.viewAllImages = function (index) {
          var items = scope.comment.images;
          items = items.slice(index).concat(items.slice(0, index));
          $modal.open({
            templateUrl: 'partial/util/carousel.html',
            controller: 'CarouselCtrl',
            size: 'lg',
            resolve: {
              items: function () {
                return items;
              }
            }
          });
        };
      }
    };
  }
]);
angular.module('iwx').directive('datetimepicker', [
  '$filter',
  function ($filter) {
    return {
      restrict: 'E',
      scope: {
        datetime: '=',
        starttime: '=',
        endtime: '='
      },
      templateUrl: 'directive/datetimepicker/datetimepicker.html',
      replace: true,
      link: function (scope, elem, attr, ctrl) {
        $(elem).datetimepicker({
          icons: {
            time: 'fa fa-clock-o',
            date: 'fa fa-calendar',
            up: 'fa fa-arrow-up',
            down: 'fa fa-arrow-down'
          },
          language: 'zh-CN',
          sideBySide: false,
          useCurrent: false,
          format: 'YYYY-MM-DD HH:mm'
        });
        $(elem).on('dp.change', function (e) {
          elem.find('input').trigger('change');  // elem.data("DateTimePicker").hide();
        });
        scope.$watch('datetime', function (newVal) {
          if (typeof newVal === 'number') {
            scope._datetime = $filter('date')(scope.datetime, 'yyyy-MM-dd HH:mm');
          }
        });
        scope.$watch('_datetime', function (newVal) {
          if (newVal && window.escape(newVal).indexOf('%u') < 0) {
            scope.datetime = newVal;
          } else {
            if ($(elem).data('DateTimePicker')) {
              scope.datetime = $(elem).data('DateTimePicker').date.format('YYYY-MM-DD HH:mm');
            }
          }  /* if ($(elem).data("DateTimePicker")) {
          console.log($(elem).data('DateTimePicker').date.format("YYYY-MM-DD HH:mm"));
          scope.datetime = $(elem).data("DateTimePicker").date.format("YYYY-MM-DD HH:mm");
        }*/
        });
        scope.$watch('starttime', function (newVal) {
          if (newVal) {
            $(elem).data('DateTimePicker').setMinDate(moment(newVal));
          }
        });
        scope.$watch('endtime', function (newVal) {
          if (newVal) {
            $(elem).data('DateTimePicker').setMaxDate(moment(newVal));
          }
        });
      }
    };
  }
]);
angular.module('iwx').directive('datePicker', [
  '$filter',
  function ($filter) {
    return {
      restrict: 'E',
      scope: {
        date: '=',
        starttime: '=',
        endtime: '=',
        minviewmode: '=',
        format: '=',
        dateformat: '='
      },
      templateUrl: 'directive/datepicker/datepicker.html',
      replace: true,
      link: function (scope, elem, attr, ctrl) {
        $(elem).datetimepicker({
          icons: {
            time: 'fa fa-clock-o',
            date: 'fa fa-calendar',
            up: 'fa fa-arrow-up',
            down: 'fa fa-arrow-down'
          },
          language: 'zh-CN',
          sideBySide: false,
          useCurrent: false,
          viewMode: 'years',
          minViewMode: attr.minviewmode,
          format: attr.format
        });
        $(elem).on('dp.change', function (e) {
          elem.find('input').trigger('change');  // elem.data("DateTimePicker").hide();
        });
        scope.$watch('date', function (newVal) {
          if (typeof newVal === 'number') {
            scope._date = $filter('date')(scope.date, attr.dateformat);
          }
        });
        scope.$watch('_date', function (newVal) {
          if (newVal && window.escape(newVal).indexOf('%u') < 0) {
            scope.date = newVal;
          } else {
            if ($(elem).data('DateTimePicker')) {
              scope.date = $(elem).data('DateTimePicker').date.format(attr.format);
            }
          }
        });
        scope.$watch('starttime', function (newVal) {
          if (newVal) {
            $(elem).data('DateTimePicker').setMinDate(moment(newVal));
          }
        });
        scope.$watch('endtime', function (newVal) {
          if (newVal) {
            $(elem).data('DateTimePicker').setMaxDate(moment(newVal));
          }
        });
      }
    };
  }
]);
angular.module('iwx').directive('toolTip', function () {
  return {
    restrict: 'A',
    link: function (scope, element, attrs) {
      element.tooltip();
    }
  };
});
angular.module('iwx').directive('blur', [
  '$compile',
  function ($compile) {
    return {
      restrict: 'AE',
      scope: { regexp: '=' },
      link: function (scope, element, attrs) {
        element.on('blur', function () {
          var flag;
          if (scope.regexp) {
            flag = scope.regexp.test(element.val());
          }
          if (!flag) {
            element.css('border-color', 'red');
          } else {
            element.css('border-color', '');
          }
        });
      }
    };
  }
]).directive('ngBlur', [
  '$compile',
  function ($compile) {
    return {
      restrict: 'AE',
      scope: {
        regexp: '=',
        repassword: '='
      },
      link: function (scope, element, attrs) {
        /*scope.$watch('user.username+user.password+user.rePassword', function () {
          console.log('user.username+user.password+user.rePassword');
          if (scope.username === undefined && scope.password === undefined && scope.rePassword === undefined) {
            console.log('user.username+user.password+user.rePassword');
          }
        });*/
        element.on('blur', function () {
          var flag;
          if (scope.regexp) {
            flag = scope.regexp.test(element.val());
          }
          console.log(element.val() === '');
          if (element.val() === '') {
            return;
          }
          if (flag) {
            element.parent().removeClass('has-error has-feedback').addClass('has-success has-feedback').children('span').removeClass('glyphicon glyphicon-remove form-control-feedback').addClass('glyphicon glyphicon-ok form-control-feedback');
          } else {
            element.parent().removeClass('has-success has-feedback').addClass('has-error has-feedback').children('span').removeClass('glyphicon glyphicon-ok form-control-feedback').addClass('glyphicon glyphicon-remove form-control-feedback');
          }
        });
      }
    };
  }
]).directive('ngRepassword', [
  '$compile',
  function ($compile) {
    return {
      restrict: 'AE',
      scope: { 'password': '=' },
      link: function (scope, element, attrs) {
        element.on('blur', function () {
          if (!scope.password || element.val() !== scope.password) {
            element.parent().removeClass('has-success has-feedback').addClass('has-error has-feedback').children('span').removeClass('glyphicon glyphicon-ok form-control-feedback').addClass('glyphicon glyphicon-remove form-control-feedback');
          } else {
            element.parent().removeClass('has-error has-feedback').addClass('has-success has-feedback').children('span').removeClass('glyphicon glyphicon-remove form-control-feedback').addClass('glyphicon glyphicon-ok form-control-feedback');
          }
        });
      }
    };
  }
]).directive('ngReset', [
  '$compile',
  function ($compile) {
    return {
      restrict: 'AE',
      scope: {},
      link: function (scope, element, attrs) {
        element.on('click', function () {
          $('span').removeClass('glyphicon glyphicon-remove form-control-feedback').removeClass('glyphicon glyphicon-ok form-control-feedback');
          $('.form-group').children('div').removeClass('has-error has-feedback').removeClass('has-success has-feedback');
        });
      }
    };
  }
]);
angular.module('iwx').directive('mouse', [
  '$compile',
  function ($compile) {
    return {
      restrict: 'AE',
      scope: { role: '=' },
      link: function (scope, element, attrs) {
        element.children('label').hide();
        element.parent().mouseenter(function () {
          if (scope.role === 'IWX_ADMIN' || scope.role === 'UN_ADMIN') {
            //隐藏创建时间
            element.children('font').hide();
            //显示操作按钮
            element.children('label').show();
          }
        }).mouseleave(function () {
          //隐藏操作按钮
          element.children('label').hide();
          //显示创建时间
          element.children('font').show();
        });
      }
    };
  }
]);
angular.module('iwx').directive('opacity', [
  '$compile',
  function ($compile) {
    return {
      restrict: 'AE',
      link: function (scope, element, attrs) {
        $(window).scroll(function () {
          element.css('opacity', '0.5');
        });
        element.css('opacity', '1.0').mouseover(function () {
          element.css('opacity', '1.0');
        });
      }
    };
  }
]).directive('scroll', [
  '$compile',
  function ($compile) {
    return {
      restrict: 'AE',
      link: function ($scope, element, attrs) {
        element.css('opacity', '0.5');
        $(window).scroll(function () {
          element.css('opacity', '1.0');
        });
      }
    };
  }
]).directive('display', [
  '$compile',
  function ($compile) {
    return {
      restrict: 'AE',
      link: function ($scope, element, attrs) {
        element.children('nav').hide();
        element.mouseover(function () {
          console.log('mouse is coming!');
          element.children('nav').slideDown(1000);
        }).mouseout(function () {
          console.log('mouse is leaving!');
          element.children('nav').slideUp(1000);
        });
      }
    };
  }
]);
angular.module('iwx').directive('chosen', [
  '$compile',
  '$state',
  function ($compile, $state) {
    return {
      restrict: 'AE',
      scope: { chosenStatus: '=' },
      link: function (scope, element, attribute) {
        scope.$watch(scope.chosenStatus, function () {
          if (scope.chosenStatus) {
            element.css('borderColor', 'green').children('span').css('color', 'green').append('<i class="fa fa-check"></i>');
          }
        });
        element.click(function () {
          if (!scope.chosenStatus) {
            element.css('borderColor', '#3CBBDC').children('span').css('color', '#3CBBDC').children('i').remove();
          } else {
            element.css('borderColor', 'green').children('span').css('color', 'green').append('<i class="fa fa-check"></i>');
          }
        });
      }
    };
  }
]);
angular.module('iwx').directive('owlcarousel', [
  '$compile',
  '$state',
  function ($compile, $state) {
    return {
      restrict: 'AE',
      scope: {},
      link: function (scope, element, attribute) {
        element.owlCarousel();
      }
    };
  }
]).directive('repeatFinish', function () {
  return {
    link: function (scope, element, attr) {
      console.log(scope.$index);
      if (scope.$last === true) {
        element.parent().owlCarousel({
          items: 3,
          lazyLoad: false,
          dots: true,
          nav: false,
          navText: [
            '\u5411 \u5de6',
            '\u5411 \u53f3'
          ],
          margin: 10,
          autoplay: false,
          autoplayTimeout: 5000,
          autoplayHoverPause: true,
          autoWidth: false,
          loop: false
        }).on('mousewheel', '.owl-stage', function (e) {
          if (e.originalEvent.deltaY > 0) {
            element.parent().trigger('next.owl');
          } else {
            element.parent().trigger('prev.owl');
          }
          e.preventDefault();
        });
      }
    }
  };
});
angular.module('iwx').directive('myCollapse', [
  '$compile',
  function ($compile) {
    return {
      restrict: 'AE',
      link: function (scope, element, attribute) {
        element.children('span:first').click(function () {
          var $panelBody = element.children('.panel-body');
          var $collapseBtn = element.children('span:first');
          var ishide = $panelBody.is(':hidden');
          if (ishide) {
            $panelBody.slideDown(500, function () {
              $panelBody.css('display', 'hide');
            });
            $collapseBtn.html('').html('<i class="fa fa-chevron-up"></i>&nbsp;\u6536\u8d77');
          } else {
            $panelBody.slideUp(500, function () {
              $panelBody.css('display', 'show');
            });
            $collapseBtn.html('').html('<i class="fa fa-chevron-down"></i>&nbsp;\u5c55\u5f00');
          }
        });
      }
    };
  }
]).directive('mySelect2', [
  '$compile',
  '$filter',
  '$http',
  function ($compile, $filter, $http) {
    return {
      restrict: 'AE',
      scope: { activityId: '=activityId' },
      link: function (scope, element, attribute) {
        $http.get('/api/auth/refreshtoken').success(function (response) {
          loadSelect(response.auth_token);
        });
        var loadSelect = function (auth_token) {
          var $select = element.select2({
              placeholder: {
                id: '-1',
                text: '\u8bf7\u9009\u62e9\u95ee\u5377'
              },
              minimumResultsForSearch: Infinity,
              selectOnClose: true,
              tags: true,
              ajax: {
                url: '/api/questionnaires/' + scope.activityId + '/q/list',
                delay: 1000,
                dataType: 'json',
                headers: { 'Authentication-Token': auth_token },
                data: function (params) {
                  var query = {
                      page: params.page || 1,
                      per_page: params.per_page || 10
                    };
                  return query;  //request params ?page = [page] & per_page = [per_page]
                },
                processResults: function (data, params) {
                  //deal with params
                  params.page = params.page || 1;
                  params.per_page = params.per_page || 10;
                  var select2_data = [];
                  angular.forEach(data.data, function (value) {
                    var obj = {
                        id: '',
                        text: ''
                      };
                    obj.id = value.id;
                    obj.text = value.title + ' ' + $filter('date')(new Date(value.start_time), 'yyyy-MM-dd HH:mm');
                    select2_data.push(obj);
                  });
                  return {
                    results: select2_data,
                    pagination: { more: params.page * params.per_page < data.data.total }
                  };
                },
                cache: true
              }
            });
          $select.on('change', function (event) {
            scope.questionnaire_id = $select.val();
            scope.$emit('select:change', scope.questionnaire_id);
          });
        };
      }
    };
  }
]).directive('bootstrapswitch', [
  '$compile',
  function ($compile) {
    return {
      restrict: 'AE',
      require: '?ngModel',
      scope: { ngModel: '=' },
      link: function (scope, element, attribute, ngModel) {
        if (!ngModel) {
          return;
        }
        var $bootstrapToggle = element.bootstrapToggle();
        /*scope.$watch('rubric.answer_type', function (newValue) {
					if (ngModel.$modelValue === 'OTHER') {
						$bootstrapToggle.bootstrapToggle('on');
					} else {
						$bootstrapToggle.bootstrapToggle('off');
					}
				});*/
        $bootstrapToggle.change(function (data) {
          var value = {};
          if ($(this).prop('checked')) {
            value = 'OTHER';  // scope.ngModel = 'NORMAL';
          } else {
            value = 'NORMAL';  // scope.ngModel = 'OTHER';
          }
          //propagate change check event
          scope.$emit('toggle:change', value);
        });
      }
    };
  }
]);
/*.directive('simditor', ['$timeout', function ($timeout) {
		//runs during compile
		return {
			restrict: 'AE',
			replace: true,
			template: '<textarea data-autosave="editor-content" disabled="disabled" autofocus></textarea>',
			scope: {
				content: '='
			},
			link: function ($scope, iElement, iAttr, controller) {
				var config = {
		        	placeholder: '这里输入文字...',
		        	toolbar: [],
		        	pasteImage: true,
		        	defaultImage: '',
		            allowedTags: ['br', 'a', 'img', 'b', 'strong', 'i', 'u', 'font', 'p', 'ul', 'ol', 'li', 'blockquote', 
		            	'pre', 'h1', 'h2', 'h3', 'h4', 'hr', 'div', 'script', 'style']
				};
				var editor = new Simditor(angular.extend({textarea: iElement}, config));

				var nowContent = '';
				console.log($scope);
				$scope.$watch('content', function (value, old) {
					if (typeof value !== 'undefined' && value !== nowContent) {
						editor.setValue(value);
					}
				});

				editor.on('valuechanged', function (event) {
					if ($scope.content !== editor.getValue()) {
						$timeout(function () {
							$scope.content = nowContent = editor.getValue();
						});
					}
				});
			}
		};
	}])*/
;
angular.module('iwx').filter('noval', function () {
  return function (text) {
    return text === 'undefined' ? '------' : text;
  };
}).filter('substring', function () {
  return function (input) {
    return input.length >= 14 ? input.substring(0, 12) + '...' : input;
  };
}).filter('substr', function () {
  return function (input, param1, param2) {
    if (input) {
      return input.length >= param1 ? input.substring(0, param2) + '...' : input;
    } else {
      return input;
    }
  };
}).filter('depcontent', function () {
  return function (input) {
    if (!input) {
      var str = '\u65e0\u90e8\u95e8';
      return str;
    } else {
      return input;
    }
  };
}).filter('dutycontent', function () {
  return function (input) {
    if (!input) {
      var str = '\u6b63\u5f0f\u793e\u5458';
      return str;
    } else {
      return input;
    }
  };
}).filter('format', function () {
  return function (input) {
    if (input && typeof input === 'string') {
      return input.split('-')[0];
    }
  };
}).filter('trusthtml', [
  '$sce',
  function ($sce) {
    return function (input) {
      return $sce.trustAsHtml(input);
    };
  }
]);
angular.module('iwx').run([
  '$templateCache',
  function ($templateCache) {
    'use strict';
    $templateCache.put('directive/datepicker/datepicker.html', '<div class="input-group date" data-date-format=YYYY><input type=text class=form-control ng-model=_date style="background-color: white" readonly placeholder=\u70b9\u51fb\u53f3\u9762\u6309\u94ae\u9009\u62e9\u65f6\u95f4 required> <span class=input-group-addon><span></span></span></div>');
    $templateCache.put('directive/datetimepicker/datetimepicker.html', '<div class="input-group date" data-date-format="YYYY-MM-DD HH:mm"><input type=text class=form-control ng-model=_datetime style="background-color: white" readonly placeholder="\u70b9\u51fb\u53f3\u9762\u6309\u94ae\u9009\u62e9\u65f6\u95f4"> <span class=input-group-addon><span></span></span></div>');
    $templateCache.put('directive/form-input/form-input.html', '<div class=form-group><label class="col-sm-3 control-label" for={{name}}>{{title}}</label><div class=col-sm-8 ng-transclude></div></div>');
    $templateCache.put('directive/post/party_post.html', '<form class="panel panel-default party-post" ng-submit=submit()><div class=panel-heading><div class=panel-title>&nbsp;<a class="pull-right btn" ng-click=removeComment() ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><i class="fa fa-trash-o"></i>&nbsp;\u5220\u9664</a></div></div><div class=panel-body><div class=user-profile><div class=icon style="text-align: center"><img ng-src="{{getIcon(comment.user)}}?width=100&height=100" ng-class="comment.user.managed_community ? \'\' : \'clickable\'" ng-click=sendMessage(comment.user) style=width:80%;height:80% ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"> <img ng-src="{{getIcon(comment.user)}}?width=100&height=100" style=width:80%;height:80% ng-hide="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"></div><div class=name>{{getName(comment.user)}}</div></div><div class=post-container><p class=post-content>{{comment.content}}</p><div class="images col-md-12" ng-if="comment.images && comment.images.length>0"><img ng-repeat="image in comment.images" ng-src="{{image}}?width=160&height=160" ng-click=viewImage(image) class=col-md-4 style="width:160px;height:160px"></div><div class=col-md-12 ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><a class="btn reply-icon" ng-click="editing=!editing;replyTo=null"><i class="fa fa-reply"></i> &nbsp;\u56de\u590d</a></div><div class="replies col-md-12" ng-if="comment.replies && comment.replies.length>0"><div ng-repeat="reply in comment.replies" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'" class=reply ng-click=replyReply(reply) style="border-bottom: 1px solid #e0e0e0;margin: 6px 0" ng-if="viewmore || $index < 5">{{getName(reply.user)}} <span ng-if=reply.reply_to>\u56de\u590d {{getName(reply.reply_to)}}</span> : {{reply.content}}</div><div ng-repeat="reply in comment.replies" ng-hide="user.role.name === \'ADMIN\' || user.role.name === \'USER\'" style="border-bottom: 1px solid #e0e0e0;margin: 6px 0" ng-if="viewmore || $index < 5">{{getName(reply.user)}} <span ng-if=reply.reply_to>\u56de\u590d {{getName(reply.reply_to)}}</span> : {{reply.content}}</div><div ng-if="!viewmore && comment.replies.length > 5"><a class="btn btn-default" ng-click=expand();>\u66f4\u591a</a></div></div><input ng-if=editing name=reply type=text class="form-control col-sm-8 reply-input" ng-model=$parent.replyText placeholder="\u56de\u590d {{getName(replyTo)}}"></div></div></form>');
    $templateCache.put('directive/post/post.html', '<form class="panel panel-default post" ng-submit=submit()><div class=panel-heading><div class=panel-title>&nbsp;<a class="pull-right btn" ng-click=removeComment() ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><i class="fa fa-trash-o"></i>&nbsp;\u5220\u9664</a> <a class="pull-right btn" ng-click=upComment() ng-if=!comment.is_display ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><i class="fa fa-paper-plane-o"></i>&nbsp;\u4e0a\u5899</a> <a class="pull-right btn" ng-click=downComment() ng-if=comment.is_display ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><i class="fa fa-paper-plane"></i>&nbsp;\u4e0b\u5899</a></div></div><div class=panel-body><div class=user-profile><div class=icon style="text-align: center"><img ng-src="{{getIcon(comment.user)}}?width=100&height=100" ng-class="comment.user.managed_community ? \'\' : \'clickable\'" ng-click=sendMessage(comment.user) style=width:80%;height:80% ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"> <img ng-src="{{getIcon(comment.user)}}?width=100&height=100" style=width:80%;height:80% ng-hide="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"></div><div class=name>{{getName(comment.user)}}</div></div><div class=post-container><p class=post-content>{{comment.content}}</p><div class="images col-md-12" ng-if="comment.images && comment.images.length>0"><img ng-repeat="image in comment.images" ng-src="{{image}}?width=160&height=160" ng-click=viewImage(image) class=col-md-4 style="width:160px;height:160px"></div><div class=col-md-12 ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><a class="btn reply-icon" ng-click="editing=!editing;replyTo=null"><i class="fa fa-reply"></i> &nbsp;\u56de\u590d</a></div><div class="replies col-md-12" ng-if="comment.replies && comment.replies.length>0"><div ng-repeat="reply in comment.replies" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'" class=reply ng-click=replyReply(reply) style="border-bottom: 1px solid #e0e0e0;margin: 6px 0" ng-if="viewmore || $index < 5">{{getName(reply.user)}} <span ng-if=reply.reply_to>\u56de\u590d {{getName(reply.reply_to)}}</span> : {{reply.content}}</div><div ng-repeat="reply in comment.replies" ng-hide="user.role.name === \'ADMIN\' || user.role.name === \'USER\'" style="border-bottom: 1px solid #e0e0e0;margin: 6px 0" ng-if="viewmore || $index < 5">{{getName(reply.user)}} <span ng-if=reply.reply_to>\u56de\u590d {{getName(reply.reply_to)}}</span> : {{reply.content}}</div><div ng-if="!viewmore && comment.replies.length > 5"><a class="btn btn-default" ng-click=expand();>\u66f4\u591a</a></div></div><input ng-if=editing name=reply type=text class="form-control col-sm-8 reply-input" ng-model=$parent.replyText placeholder="\u56de\u590d {{getName(replyTo)}}"></div></div></form>');
    $templateCache.put('directive/qrcode.html', '<div><a href class="btn btn-default create-qrcode" ng-click=createQrcode() ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'">\u751f\u6210\u4e8c\u7ef4\u7801</a></div><br><div ng-if=qrcode><div class=qrcode><qrcode version={{qrcode.v}} error-correction-level=M size=300 data={{qrcode.data}}></qrcode></div><div class=pull-left><a href=# class="btn btn-default qrcode-import">\u5bfc\u51fa</a></div></div>');
    $templateCache.put('directive/qrcode/qrcode.html', '<div><a href class="btn btn-default create-qrcode" ng-click=createQrcode() ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'">\u751f\u6210\u4e8c\u7ef4\u7801</a></div><br><div ng-if=qrcode><div class=qrcode><qrcode version={{qrcode.v}} error-correction-level=M size=300 data={{qrcode.data}}></qrcode></div><div class=pull-left><a href=# class="btn btn-default qrcode-import">\u5bfc\u51fa</a></div></div>');
    $templateCache.put('partial/activity/activity.html', '<div ng-controller=ActivityCtrl><div class="tabs-left hidden-print"><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'activity\'"><a ui-sref="activity({ currentPage: 1 })">\u6d3b\u52a8\u7ba1\u7406</a></li><li d-sref="\'activity.article\'"><a ui-sref="activity.article({ page: 1 })">\u6587\u7ae0\u7ba1\u7406</a></li><li d-sref="\'activity.bazaar\'"><a ui-sref="activity.bazaar({ id: user.managed_community.id, page: 1 })">\u6821\u56ed\u96c6\u5e02</a></li></ul></div><div id=content ui-view><div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3"><a ng-click=createActivity() class="btn btn-info pull-right">\u521b\u5efa\u793e\u56e2\u6d3b\u52a8</a><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="activity in $data"><td data-title="\'\u6d3b\u52a8\u4e3b\u9898\'" header-class=text-left><a ui-sref="activity_item({ id: activity.id, currentPage: currentPage })">{{activity.subject}}</a></td><td data-title="\'\u793e\u56e2\'" header-class=text-left>{{activity.host.name}}</td><td data-title="\'\u65f6\u95f4\'" header-class=text-left>{{activity.start_time | date : \'yyyy-MM-dd HH:mm\'}} -- {{activity.end_time | date : \'yyyy-MM-dd HH:mm\'}}</td><td data-title="\'\u5730\u70b9\'" header-class=text-left>{{activity.location}}</td><td data-title="\'\u529f\u80fd\'" header-class=text-left class=activity-content><div ng-repeat="plugin in activity.plugins"><img class=logo ng-src={{plugin.icon_path}} style="width:13px"> <a ng-click="gotoPlugin(activity.id, plugin.id)" class=pulgin-dropdown>{{plugin.name}}</a></div></td><td data-title="\'\u64cd\u4f5c\'"><label type=button class="btn btn-default btn-checkbox" ng-click=invTogglePublish(activity.id,activity.published) style=margin-bottom:3px;width:86px ng-disabled=activity.published><span ng-if=activity.published style=color:green>\u5df2\u53d1\u5e03 <i class="fa fa-check"></i></span>&nbsp; <span ng-if=!activity.published>\u53d1&nbsp;&nbsp;\u5e03 <i class="fa fa-volume-up"></i></span>&nbsp;</label>&nbsp;<label type=button class="btn btn-default btn-checkbox" ng-click=invTogglePublish(activity.id,activity.published) style=margin-bottom:3px ng-disabled=!activity.published><span>\u53d6\u6d88\u53d1\u5e03 <i class="fa fa-ban"></i></span></label>&nbsp;<label type=button class="btn btn-default btn-checkbox" ui-sref="activity_item({ id: activity.id, currentPage: currentPage })" style=width:86px;margin-bottom:3px><span>\u7f16&nbsp;&nbsp;\u8f91&nbsp;&nbsp;<i class="fa fa-pencil-square-o"></i></span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=deleteActivity(activity.id) style=width:86px;margin-bottom:3px><span>\u5220&nbsp;&nbsp;\u9664&nbsp;&nbsp;<i class="fa fa-trash-o"></i></span></label>&nbsp;<label type=button class="btn btn-info btn-checkbox" ng-click="top(activity.published, activity.admin_top, activity.id)" style=width:86px;margin-bottom:3px ng-disabled="activity.top_num == 1"><span ng-if="!activity.top_num || activity.top_num == 0">\u7f6e&nbsp;&nbsp;\u9876 <i class="fa fa-hand-o-up"></i></span> <span ng-if="activity.top_num == 1">\u7f6e\u9876\u8fc7 <i class="fa fa-check"></i></span></label><div style="text-align: center;margin-top: 10px"><a ng-click="goToUnpubLog(\'activity\', activity.id)">\u64cd\u4f5c\u65e5\u5fd7</a></div></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div></div>');
    $templateCache.put('partial/activity/activity_iWX.html', '<div><div class="tabs-left hidden-print"><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'activity_iWX\'"><a ui-sref=activity_iWX>\u6d3b\u52a8\u7ba1\u7406</a></li><li d-sref="\'activity_iWX.article\'"><a ui-sref=activity_iWX.article>\u6587\u7ae0\u7ba1\u7406</a></li><li id=left d-sref="\'activity_iWX.bazaar\'"><a ui-sref=activity_iWX.bazaar>\u6821\u56ed\u96c6\u5e02</a></li></ul></div><div id=content ui-view><div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=ActivityIwxCtrl><div class=row><nav class="navbar navbar-inverse" style="background-color: rgb(219, 218, 218)" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li d-sref="\'activity_iWX\'"><a ui-sref=activity_iWX>\u6d3b\u52a8\u5217\u8868</a></li></ul></div></nav></div><div class=row><form class=form-horizontal><fieldset><legend><h4>\u8fc7\u6ee4\u7b5b\u9009\u6761\u4ef6</h4></legend><div class=row><div class=col-md-3><form-input data-title="\'\u7701\'" data-name="\'province\'"><select name=province_scope id=province_scope class=form-control ng-model=search_params.province_scope_id ng-options="r.id as r.city for r in provinceArray" ng-change=change_province()></select></form-input></div><div class=col-md-3><form-input data-title="\'\u5e02\'" data-name="\'city\'"><select class=form-control name=city_scope id=city_scope ng-model=search_params.city_scope_id ng-options="r.id as r.city for r in cityArray" ng-change=change_city()></select></form-input></div><div class=col-md-6><form-input data-title="\'\u5b66\u6821\'" data-name="\'university\'"><select class=form-control name=university_scope id=university_scope ng-model=search_params.university_scope_id ng-options="r.id as r.name for r in universityArray" ng-change=change_university()></select></form-input></div></div><div class=row><div class=col-md-3 style=text-align:left;padding-left:50px ng-repeat="community in communities"><input type=radio name=community id=community value={{community.id}} ng-model=checked_community ng-click="get_checked_community(checked_community)"> <font title={{community.name}} ng-bind="community.name | substr:9:8"></font></div></div><div class=row ng-show=show_community><div class="col-md-2 col-md-offset-4"><br><button class="btn btn-default center-block more-btn" ng-click=load_more()>\u52a0\u8f7d\u66f4\u591a\u793e\u56e2</button><br></div></div><br></fieldset></form><br></div><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="activity in $data"><td data-title="\'\u6d3b\u52a8\u4e3b\u9898\'" header-class=text-left><a ui-sref="activity_item({ id: activity.activity.id })"><font ng-bind=activity.activity.subject></font></a></td><td data-title="\'\u4e3b\u529e\u65b9\u540d\u79f0\'" header-class=text-left><font ng-bind=activity.activity.host.name></font></td><td data-title="\'\u6301\u7eed\u65f6\u95f4\'" header-class=text-left><font ng-bind="activity.activity.start_time | date : \'yyyy-MM-dd HH:mm\'"></font> -- <font ng-bind="activity.activity.end_time | date : \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u5730\u70b9\'" header-class=text-left><font ng-bind=activity.activity.location></font></td><td data-title="\'\u72b6\u6001\'" header-class=text-left class=activity-top_already><span ng-if=!activity.top class="label label-info">\u672a\u63a8\u8350</span> <span ng-if=activity.top class="label label-success">\u7f6e\u9876\u8fc7</span></td><td data-title="\'\u529f\u80fd\'" header-class=text-left class=activity-content><div ng-repeat="plugin in activity.activity.plugins"><img class=logo ng-src={{plugin.icon_path}} style="width:13px"> <a ng-click="gotoPlugin(activity.activity.id, plugin.id)" class=pulgin-dropdown><font ng-bind=plugin.name></font></a></div></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-success btn-checkbox" style=margin-bottom:3px;width:80px ng-click=setTop(activity.activity.id,activity.activity.published)><span>\u63a8&nbsp;&nbsp;\u8350 <i class="fa fa-hand-o-up"></i></span></label>&nbsp;<label type=button class="btn btn-success btn-checkbox" style=margin-bottom:3px ng-click=cancelTop(activity.activity.id,activity.activity.published)><span>\u53d6\u6d88\u63a8\u8350 <i class="fa fa-hand-o-down"></i></span></label>&nbsp;<label type=button class="btn btn-warning btn-checkbox" style=margin-bottom:3px;width:80px ng-click=unpublish_activity(activity.activity.id) ng-disabled=!activity.activity.published><span ng-if=activity.activity.published>\u4e0b&nbsp;&nbsp;\u67b6</span>&nbsp; <span ng-if=!activity.activity.published>\u5df2\u4e0b\u67b6</span></label>&nbsp;</td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div></div></div>');
    $templateCache.put('partial/activity/activity_iWX_create.html', '<div class="col-sm-10 col-sm-offset-1 col-md-10 col-md-offset-1 col-lg-10" ng-controller=activityIwxCreateCtrl><div class=row><form method=POST ng-submit=saveActivity() class=form-horizontal role=form name=activityForm enctype=multipart/form-data><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u521b\u5efa\u6d3b\u52a8</div></div><div class=panel-body><form-input data-title="\'\u6d3b\u52a8\u4e3b\u9898\'" data-name="\'subject\'"><input type=text name=subject id=subject ng-model=activity.subject class="form-control"></form-input><form-input data-title="\'\u6d3b\u52a8\u5730\u70b9\'" data-name="\'location\'"><input type=text name=location id=location ng-model=activity.location class="form-control"></form-input><form-input data-title="\'\u5f00\u59cb\u65f6\u95f4\'" data-name="\'start_time\'"><datetimepicker datetime=activity.start_time></datetimepicker></form-input><form-input data-title="\'\u7ed3\u675f\u65f6\u95f4\'" data-name="\'end_time\'"><datetimepicker datetime=activity.end_time></datetimepicker></form-input><form-input data-title="\'\u6d3b\u52a8\u5185\u5bb9\'" data-name="\'content\'"><textarea class=form-control id=content ng-model=activity.content name=content rows=5 autocomplete=off></textarea></form-input><form-input data-title="\'\u6d3b\u52a8\u6d77\u62a5\'" data-name="\'poster\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=activity.poster class="fileinput-new thumbnail" style=height:200px;width:300px><img ng-src="{{activity.poster.substring(0)}}?width=160&height=160" image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=poster data-file=activity.poster id=image_file></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit>\u4fdd\u5b58</button></div></form></div></div>');
    $templateCache.put('partial/activity/activity_university/activity_university.html', '<div><div class="tabs-left hidden-print"><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'activity_university\'"><a ui-sref=activity_university>\u6d3b\u52a8\u7ba1\u7406</a></li><li d-sref="\'activity_university.article\'"><a ui-sref=activity_university.article>\u6587\u7ae0\u7ba1\u7406</a></li><li id=left_un d-sref="\'activity_university.bazaar\'"><a ui-sref=activity_university.bazaar>\u6821\u56ed\u96c6\u5e02</a></li></ul></div><div id=content ui-view><div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=ActivityUniversityCtrl><div class=row><br><form class=form-horizontal><fieldset><legend><h4><div ng-if="user.admin_type === \'UNION\'"><font ng-bind="user.university.name | format"></font>\u5b66\u751f\u793e\u56e2</div><div ng-if="user.admin_type === \'COMMITTEE\'"><font ng-bind="user.nickname | format"></font>\u793e\u56e2</div></h4></legend><div class=row ng-show="user.admin_type === \'COMMITTEE\'"><div class=col-sm-12><ul id=org_tab class="nav nav-tabs nav-justified"><li class=active><a id=committee class=org_a>\u9662\u7cfb\u56e2\u59d4</a></li><li><a id=tissue class=org_a>\u9662\u7cfb\u5b66\u751f\u4f1a</a></li><li><a id=organization class=org_a>\u6821\u7ea7\u5b66\u751f\u7ec4\u7ec7</a></li><li><a id=union class=org_a>\u5b66\u751f\u793e\u56e2</a></li></ul></div></div><br><div class=row><div class=col-md-3 style=text-align:left;padding-left:50px ng-repeat="community in communities"><input type=radio name=community id=community value={{community.id}} ng-model=checked_community ng-click="get_checked_community(checked_community)"> <font title={{community.name}} ng-bind="community.name | substr:9:8"></font></div></div><div class=row ng-show=show_community><div class="col-md-4 col-md-offset-4"><div ng-show=msg><br><button class="btn btn-default center-block more-btn" ng-click=load_more() ng-disabled=btn><font ng-bind=load_btn></font></button><br></div><div style="font-weight: bold;color: silver;padding: 20px 0px 20px 0px" ng-hide=msg><font ng-bind=load_msg></font></div></div></div></fieldset></form></div><div class=row><br><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="activity in $data"><td data-title="\'\u6d3b\u52a8\u4e3b\u9898\'" header-class=text-left><a ui-sref="activity_item({ id: activity.id })"><font ng-bind=activity.subject></font></a></td><td data-title="\'\u4e3b\u529e\u65b9\u540d\u79f0\'" header-class=text-left><a ng-click=preview_host(activity.host.id)><font ng-bind=activity.host.name></font></a></td><td data-title="\'\u6301\u7eed\u65f6\u95f4\'" header-class=text-left><font ng-bind="activity.start_time | date : \'yyyy-MM-dd HH:mm\'"></font>&nbsp;-- &nbsp;<font ng-bind="activity.end_time | date : \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u6d3b\u52a8\u5730\u70b9\'" header-class=text-left><font ng-bind=activity.location></font></td><td data-title="\'\u529f\u80fd\'" title={{activity.content}} header-class=text-left class=activity-content><div ng-repeat="plugin in activity.plugins"><img class=logo ng-src={{plugin.icon_path}} style="width:13px"> <a ng-click="gotoPlugin(activity.id, plugin.id)" class=pulgin-dropdown><font ng-bind=plugin.name></font></a></div></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-warning btn-checkbox" ng-click=undercarriage(activity.id) style=width:80px ng-disabled=!activity.published><span ng-if=activity.published>\u4e0b&nbsp;&nbsp;\u67b6 <i class="fa fa-long-arrow-down"></i></span> <span ng-if=!activity.published>\u5df2\u4e0b\u67b6</span></label></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div></div></div>');
    $templateCache.put('partial/activity/activity_university/activity_university_create.html', '<div class="col-sm-10 col-sm-offset-1 col-md-10 col-md-offset-1 col-lg-10" ng-controller=activityUniversityCreateCtrl><div class=row><form method=POST ng-submit=saveActivity() class=form-horizontal role=form name=activityForm enctype=multipart/form-data><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u521b\u5efa\u6d3b\u52a8</div></div><div class=panel-body><form-input data-title="\'\u6d3b\u52a8\u4e3b\u9898\'" data-name="\'subject\'"><input type=text name=subject id=subject ng-model=activity.subject class="form-control"></form-input><form-input data-title="\'\u6d3b\u52a8\u5730\u70b9\'" data-name="\'location\'"><input type=text name=location id=location ng-model=activity.location class="form-control"></form-input><form-input data-title="\'\u5f00\u59cb\u65f6\u95f4\'" data-name="\'start_time\'"><datetimepicker datetime=activity.start_time></datetimepicker></form-input><form-input data-title="\'\u7ed3\u675f\u65f6\u95f4\'" data-name="\'end_time\'"><datetimepicker datetime=activity.end_time></datetimepicker></form-input><form-input data-title="\'\u6d3b\u52a8\u5185\u5bb9\'" data-name="\'content\'"><textarea class=form-control id=content ng-model=activity.content name=content rows=5 autocomplete=off></textarea></form-input><form-input data-title="\'\u6d3b\u52a8\u6d77\u62a5\'" data-name="\'poster\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=activity.poster class="fileinput-new thumbnail" style=height:200px;width:300px><img ng-src="{{activity.poster.substring(0)}}?width=160&height=160" image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=poster data-file=activity.poster id=image_file></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit>\u4fdd\u5b58</button></div></form></div></div>');
    $templateCache.put('partial/activity/down_modal_iwx.html', '<h4 style=text-align:center>\u786e\u5b9a\u8981\u53d6\u6d88\u8be5\u6d3b\u52a8\u7684\u7f6e\u9876\uff1f</h4><div class=modal-footer><button class="btn btn-primary" ng-click=ok()>\u786e\u5b9a</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/activity/item/activity_item.html', '<div id=activity-item ng-controller=ActivityItemCtrl><div class=tabs-left><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'activity_item\'"><a ui-sref="activity_item({ id: activity.id, currentPage: page })" ng-if="editingActivityId == -1">\u521b\u5efa\u65b0\u6d3b\u52a8</a> <a ui-sref="activity_item({ id: activity.id, currentPage: page })" ng-if="editingActivityId != -1">\u6d3b\u52a8\u6982\u51b5</a></li><li ng-hide="editingActivityId==\'-1\'" ui-sref-active=active><a ui-sref=activity_item.stat_plugin href=#/activity/{{activity.id}}/plugin/stat>\u6d3b\u52a8\u7edf\u8ba1</a></li><li ng-repeat="plugin in act_plugin" style=cursor:pointer d-sref="\'activity_item.\' + plugin.id + \'_plugin\'"><a ui-sref=activity_item.{{plugin.id}}_plugin><img class=logo ng-src={{plugin.icon_path}} style="width:13px;margin-top: -2px">&nbsp;{{plugin.name}}</a></li><li ng-hide="editingActivityId==\'-1\' || activity.plugins.length == 7" style=margin-left:-30px><a ng-click=_addPlugin() style=cursor:pointer><img src=/static/images/function_icon.png style=width:15px> &nbsp;\u66f4\u591a\u529f\u80fd</a></li></ul></div><div ui-view><div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-9 col-md-9 col- col-sm-9" ng-controller=ActivityItemCtrl><div class=activity-button-bar><div class=btn-group ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><a class="btn btn-default" ui-sref="activity({currentPage: page})"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div><div class=btn-group ng-show="user.role.name === \'IWX_ADMIN\'"><a class="btn btn-default" ui-sref=activity_iWX><i class="fa fa-reply"></i> \u8fd4\u56de</a></div><div class=btn-group ng-show="user.role.name === \'UN_ADMIN\'"><a class="btn btn-default" ui-sref=activity_university><i class="fa fa-reply"></i> \u8fd4\u56de</a></div>&nbsp;<div class=btn-group ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><label type=button class="btn btn-default btn-checkbox" ng-click="isPublishActivity(editingActivityId, activity.published, page)" ng-model=activity.published btn-checkbox ng-if="editingActivityId != -1"><span ng-if=activity.published style=color:green>\u5df2\u53d1\u5e03 <i class="fa fa-check"></i></span> <span ng-if=!activity.published>\u672a\u53d1\u5e03 <i class="fa fa-ban"></i></span></label></div>&nbsp;<div class=btn-group><a class="btn btn-danger" ng-if="editingActivityId != -1" ng-click=delete()>\u5220\u9664 <i class="fa fa-trash-o"></i></a></div></div><form method=POST ng-submit=saveActivity() class=form-horizontal role=form name=activityForm enctype=multipart/form-data><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u6d3b\u52a8\u6982\u51b5</div></div><div class=panel-body><form-input data-title="\'\u6d3b\u52a8\u4e3b\u9898\'" data-name="\'subject\'"><input name=subject id=subject ng-model=activity.subject class=form-control type=text ng-readonly=activity.is_register placeholder=\u8bf7\u5c06\u4e3b\u9898\u9650\u5236\u572825\u4e2a\u6c49\u5b57\u4ee5\u5185 regexp=sub_regexp blur></form-input><form-input data-title="\'\u6d3b\u52a8\u5730\u70b9\'" data-name="\'location\'"><input name=location id=location ng-model=activity.location class=form-control type=text placeholder=\u8bf7\u5c06\u5730\u70b9\u9650\u5236\u572815\u4e2a\u6c49\u5b57\u4ee5\u5185 regexp=loc_regexp blur></form-input><form-input data-title="\'\u5f00\u59cb\u65f6\u95f4\'" data-name="\'start_time\'"><datetimepicker datetime=activity.start_time></datetimepicker></form-input><form-input data-title="\'\u7ed3\u675f\u65f6\u95f4\'" data-name="\'end_time\'"><datetimepicker datetime=activity.end_time></datetimepicker></form-input><form-input data-title="\'\u6d3b\u52a8\u5185\u5bb9\'" data-name="\'content\'" ng-if=!activity.members><ng-simditor content=activity.content></ng-simditor></form-input><form-input data-title="\'\u6d3b\u52a8\u53e3\u53f7\'" data-name="\'content\'" ng-if=activity.members><textarea class=form-control id=content ng-model=activity.content name=content rows=5 autocomplete=off placeholder=\u8bf7\u5c06\u6d3b\u52a8\u53e3\u53f7\u9650\u5236\u572820\u4e2a\u6c49\u5b57\u4ee5\u5185 regexp=content_regexp blur>\r' + '\n' + '              </textarea></form-input><form-input data-title="\'\u6d3b\u52a8\u6d77\u62a5\'" data-name="\'poster\'" ng-if=!activity.members><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=activity.poster class="fileinput-new thumbnail" style=height:200px;width:300px><img ng-src="{{activity.poster.substring(0)}}?width=160&height=160" image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom title=\u8bf7\u4fdd\u6301\u6700\u4f73\u5bbd\u9ad8\u6bd4\uff0c\u56fe\u7247\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc71M tool-tip><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=poster data-file=activity.poster id=image_file></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input></div></div><button class="btn btn-primary form-control" type=submit ng-show="editingActivityId==\'-1\' && (user.role.name===\'ADMIN\' || user.role.name === \'USER\')">\u521b&nbsp;\u5efa</button> <button class="btn btn-primary form-control" type=submit ng-show="editingActivityId!=\'-1\' && (user.role.name===\'ADMIN\' || user.role.name === \'USER\')">\u66f4&nbsp;\u65b0</button></form></div></div></div>');
    $templateCache.put('partial/activity/item/top_modal.html', '<h4 style=text-align:center>\u6bcf\u4e00\u4e2a\u6d3b\u52a8\u53ea\u80fd\u7f6e\u9876\u4e00\u6b21\uff0c \u7f6e\u9876\u53ef\u6301\u7eed24\u5c0f\u65f6\uff0c \u786e\u5b9a\u7f6e\u9876\uff1f</h4><div class=modal-footer><button class="btn btn-primary" ng-click=ok()>\u786e\u5b9a</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/activity/message_modal.html', '<div class=modal-header><h3 class=modal-title>\u6d3b\u52a8\u53d1\u5e03\u6210\u529f</h3></div><div class=modal-body><textarea class="form-control ng-pristine ng-valid ng-touched" ng-model=content maxlength=70 rows=5 placeholder=\u7f16\u8f91\u79c1\u4fe1\u548c\u77ed\u4fe1\u53d1\u9001\u7ed9\u793e\u56e2\u6210\u5458\uff0c\u8bf7\u5c06\u5b57\u6570\u63a7\u5236\u572870\u5b57\u5185\u3002></textarea></div><div class=modal-footer><button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button> <button class="btn btn-info" ng-click=ok()>\u53d1\u9001</button></div>');
    $templateCache.put('partial/activity/party_branch/activity_item.html', '<div ng-controller=PartyActItemCtrl><div class=tabs-left><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'party_act_item\'"><a ui-sref="party_act_item({ id: activity.id, page: page })" ng-if="editingActivityId == -1">\u521b\u5efa\u65b0\u6d3b\u52a8</a> <a ui-sref="party_act_item({ id: activity.id, page: page })" ng-if="editingActivityId != -1">\u6d3b\u52a8\u6982\u51b5</a></li><li ng-repeat="plugin in act_plugin" style=cursor:pointer d-sref="\'party_act_item.\' + plugin.id + \'_plugin\'"><a ui-sref=party_act_item.{{plugin.id}}_plugin><img class=logo ng-src={{plugin.icon_path}} style="width:13px;margin-top: -2px">&nbsp;{{plugin.name}}</a></li><li ng-hide="editingActivityId==\'-1\' || activity.plugins.length == 1" style=margin-left:-30px><a ng-click=_addPlugin() style=cursor:pointer><img src=/static/images/function_icon.png style=width:15px> &nbsp;\u66f4\u591a\u529f\u80fd</a></li></ul></div><div ui-view><div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-9 col-md-9 col- col-sm-9" ng-controller=PartyActItemCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="party_act_list({ page: page })"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div>&nbsp;<div class=btn-group ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><label type=button class="btn btn-default btn-checkbox" ng-click="isPublishActivity(editingActivityId, activity.published, page)" ng-model=activity.published btn-checkbox ng-if="editingActivityId != -1"><span ng-if=activity.published style=color:green><i class="fa fa-check"></i> \u5df2\u53d1\u5e03</span> <span ng-if=!activity.published><i class="fa fa-ban"></i> \u672a\u53d1\u5e03</span></label></div>&nbsp;<div class=btn-group><a class="btn btn-danger" ng-if="editingActivityId != -1" ng-click=delete()><i class="fa fa-trash-o"></i> \u5220\u9664</a></div></div><form class="panel panel-default form-horizontal" method=POST ng-submit=saveActivity() role=form name=actForm enctype=multipart/form-data><div class=panel-heading><div class=panel-title>\u6d3b\u52a8\u6982\u51b5</div></div><div class=panel-body><form-input data-title="\'\u6d3b\u52a8\u4e3b\u9898\'" data-name="\'subject\'"><input type=text class=form-control name=subject ng-model=activity.subject ng-readonly=activity.is_register placeholder=\u8bf7\u5c06\u4e3b\u9898\u9650\u5236\u572825\u4e2a\u6c49\u5b57\u4ee5\u5185 regexp=sub_regexp blur></form-input><form-input data-title="\'\u6d3b\u52a8\u5730\u70b9\'" data-name="\'location\'"><input type=text class=form-control name=location ng-model=activity.location placeholder=\u8bf7\u5c06\u5730\u70b9\u9650\u5236\u572815\u4e2a\u6c49\u5b57\u4ee5\u5185 regexp=loc_regexp blur></form-input><form-input data-title="\'\u5f00\u59cb\u65f6\u95f4\'" data-name="\'start_time\'"><datetimepicker datetime=activity.start_time></datetimepicker></form-input><form-input data-title="\'\u7ed3\u675f\u65f6\u95f4\'" data-name="\'end_time\'"><datetimepicker datetime=activity.end_time></datetimepicker></form-input><form-input data-title="\'\u6d3b\u52a8\u5185\u5bb9\'" data-name="\'content\'" ng-if=!activity.members><ng-simditor content=activity.content></ng-simditor></form-input><form-input data-title="\'\u6d3b\u52a8\u6d77\u62a5\'" data-name="\'poster\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=activity.poster class="fileinput-new thumbnail" style=height:200px;width:300px><img ng-src="{{activity.poster.substring(0)}}?width=160&height=160" image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom title=\u8bf7\u4fdd\u6301\u6700\u4f73\u5bbd\u9ad8\u6bd4\uff0c\u56fe\u7247\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc71M tool-tip><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=poster data-file=activity.poster id=image_file></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input><form-input data-title="\'\u6d3b\u52a8\u53ef\u89c1\u8303\u56f4\'" data-name="\'range\'"><div class=col-sm-5><label class=radio-inline><input type=radio name=range value=all ng-checked="activity.political_show === \'all\'" ng-click="getCheckedRange(\'all\')"> \u6240\u6709\u4eba\u53ef\u89c1</label></div><div class=col-sm-5><label class=radio-inline><input type=radio name=range value=party ng-checked="activity.political_show === \'party\'" ng-click="getCheckedRange(\'party\')"> \u4ec5\u672c\u515a\u652f\u90e8\u6210\u5458\u53ef\u89c1</label></div></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-if="editingActivityId==\'-1\' && (user.role.name===\'ADMIN\' || user.role.name === \'USER\')">\u521b&nbsp;\u5efa</button> <button class="btn btn-primary form-control form-submit-button" type=submit ng-if="editingActivityId!=\'-1\' && (user.role.name===\'ADMIN\' || user.role.name === \'USER\')">\u66f4&nbsp;\u65b0</button></form></div></div></div>');
    $templateCache.put('partial/activity/party_branch/activity_list.html', '<div ng-controller=PartyActListCtrl><div class="tabs-left hidden-print"><ul class="nav nav-tabs col-sm-2 col-lg-2"><li d-sref="\'party_act_list\'"><a ui-sref=party_act_list>\u6d3b\u52a8\u7ba1\u7406</a></li></ul></div><div ui-view><div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3"><div class=row><div class=col-md-12><a class="btn btn-info pull-right" ng-click=createActivity()><i class="fa fa-plus" aria-hidden=true></i> \u521b\u5efa\u652f\u90e8\u6d3b\u52a8</a></div></div><br><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="activity in $data"><td data-title="\'\u6d3b\u52a8\u4e3b\u9898\'" header-class=text-left><a ui-sref="party_act_item({ id: activity.id, page: currentPage })"><font ng-bind=activity.subject></font></a></td><td data-title="\'\u6d3b\u52a8\u65f6\u95f4\'" header-class=text-left><font ng-bind="activity.start_time | date: \'yyyy-MM-dd HH:mm\'"></font>~ <font ng-bind="activity.end_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u5730\u70b9\'" header-class=text-left><font ng-bind=activity.location></font></td><td data-title="\'\u529f\u80fd\'" header-class=text-left class=activity-content style="width: 90px"><div ng-repeat="plugin in activity.plugins"><img class=logo ng-src={{plugin.icon_path}} style="width:13px"> <a ng-click="gotoPlugin(activity.id, plugin.id)" class=pulgin-dropdown><font ng-bind=plugin.name></font></a></div></td><td data-title="\'\u64cd\u4f5c\'" style="width: 230px"><center><label type=button class="btn btn-default btn-checkbox" ng-click=invTogglePublish(activity) ng-disabled=activity.published style="width: 102px"><span ng-if=activity.published style=color:green><i class="fa fa-check"></i> \u5df2\u53d1\u5e03</span>&nbsp; <span ng-if=!activity.published><i class="fa fa-volume-up"></i> \u53d1&nbsp;&nbsp;\u5e03</span>&nbsp;</label>&nbsp;<label type=button class="btn btn-default btn-checkbox" ng-click=invTogglePublish(activity) ng-disabled=!activity.published><span><i class="fa fa-ban"></i> \u53d6\u6d88\u53d1\u5e03</span></label><label type=button class="btn btn-default btn-checkbox" ui-sref="party_act_item({ id: activity.id, page: currentPage })" style="width: 102px;margin-top: 6px"><span><i class="fa fa-pencil-square-o"></i> \u7f16&nbsp;&nbsp;\u8f91&nbsp;&nbsp;</span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=deleteActivity(activity) style="width: 98.14px;margin-top: 6px"><span><i class="fa fa-trash-o"></i> \u5220&nbsp;&nbsp;\u9664&nbsp;&nbsp;</span></label></center></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div></div>');
    $templateCache.put('partial/activity/party_branch/plugins/add_plugin.html', '<div class=modal-header><h4 class=modal-title>\u6dfb\u52a0\u65b0\u529f\u80fd</h4></div><div class=modal-body><div class=row ng-repeat="plugin in plugins_alivable" ng-if="plugin.id !== \'discuss\'"><div class=col-md-2><center><div style=margin-top:42px><image ng-src={{plugin.icon_path}} style="width:30px;height:30px"></div></center></div><div class=col-md-3><br><br><a class="btn btn-primary" style=width:100px ng-click=addPlugin(plugin.id)>{{plugin.name}}&nbsp;&nbsp;<i class="glyphicon glyphicon-plus-sign"></i></a></div><div class=col-md-7><textarea class="bs-callout bs-callout-info text-muted" rows=6 style=width:100%;border-radius:4px;padding:10px;border-left-color:#337ab7;resize:none readonly>{{plugin.note}}</textarea></div></div></div>');
    $templateCache.put('partial/activity/party_branch/plugins/participator.html', '<div class=modal-header><div class=modal-title><h4>\u9009\u62e9\u53c2\u4e0e\u8005</h4></div></div><div class=modal-body><div class=row><div class="col-xs-5 col-sm-5 col-md-5"><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><span class="label label-info" style="font-size: 100%">\u603b\u4eba\u6570\uff1a<font ng-bind=person_sum></font></span></div></div><br><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u515a\u652f\u90e8\u6210\u5458</div></div><div class=panel-body style="height: 400px;overflow-y: auto"><ul class="nav nav-tabs" role=tablist><li class=active role=presentation><a ng-click="getMembers(\'group\')" aria-controls=group role=tab data-toggle=tab>\u5c0f\u961f</a></li><li role=presentation><a ng-click="getMembers(\'duty\')" aria-controls=duty role=tab data-toggle=tab>\u804c\u52a1</a></li><li role=presentation><a ng-click="getMembers(\'identify\')" aria-controls=identify role=tab data-toggle=tab>\u8eab\u4efd</a></li></ul><br><div class=tab-content><div role=tabpanel class="tab-pane active"><div class=row><div class=col-sm-4 style=text-align:left;padding-left:25px ng-repeat="member in members"><input type=checkbox name=member id=member value={{member.id}} ng-model=checked_member ng-checked=member.checked ng-click="getCheckedMem(member, checked_member)" ng-disabled=member.isPart> &nbsp;&nbsp;<font title={{member.name}} ng-bind="member.name | substr:6:5"></font></div></div></div></div></div></div></div></div></div><div class="col-xs-2 col-sm-2 col-md-2"><div class=row style="margin-top: 200px"><div class="col-sm-9 col-sm-offset-3"><button class="btn btn-info btn-lg" ng-click=addParticipator()><i class="fa fa-arrow-right" aria-hidden=true></i></button></div></div><br><div class=row><div class="col-sm-9 col-sm-offset-3"><button class="btn btn-info btn-lg" ng-click=delParticipator()><i class="fa fa-arrow-left" aria-hidden=true></i></button></div></div></div><div class="col-xs-5 col-sm-5 col-md-5"><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><span class="label label-info" style="font-size: 100%">\u53c2\u4e0e\u8ba8\u8bba\u4eba\u6570\uff1a<font ng-bind=participator_sum></font></span></div></div><br><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u8ba8\u8bba\u533a</div></div><div class=panel-body style="height: 400px;overflow-y: auto"><div class=row><div class=col-sm-4 style=text-align:left;padding-left:25px ng-repeat="member in participators"><input type=checkbox name=member id=member value={{member.id}} ng-model=checked_member ng-click="getCheckedPar(member.id, checked_member)">&nbsp;&nbsp;<font title={{member.name}} ng-bind="member.name | substr:6:5"></font></div></div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div></div></div></div></div></div></div><div class=modal-footer></div>');
    $templateCache.put('partial/activity/party_branch/plugins/sign_in.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=PartySigninCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="party_act_item({ id: activity.id })"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div>&nbsp;<div class=btn-group ng-if="signIn && signIn.id && signIn.id > 0" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><a class="btn btn-primary" ng-click=finishSignIn() data-toggle=tooltip data-placement=bottom title=\u624b\u673a\u5ba2\u6237\u7aef\u7528\u6237\u65e0\u6cd5\u7ee7\u7eed\u8fdb\u884c\u7b7e\u5230\uff0c\u4f46\u7b7e\u5230\u529f\u80fd\u4ecd\u7136\u5728\u624b\u673a\u5ba2\u6237\u7aef\u5c55\u793a\u3002 tool-tip><i class="glyphicon glyphicon-stop"></i> \u7ed3\u675f\u672c\u6b21\u7b7e\u5230</a> <a class="btn btn-danger" ng-click=deleteSignIn() data-toggle=tooltip data-placement=bottom title=\u5f7b\u5e95\u5220\u9664\u7b7e\u5230\u529f\u80fd\uff0c\u4e4b\u524d\u4fdd\u5b58\u7684\u7b7e\u5230\u5185\u5bb9\u5168\u90e8\u6e05\u7a7a\u3002 tool-tip><i class="fa fa-close"></i> \u5220\u9664\u7b7e\u5230\u529f\u80fd</a></div>&nbsp;<div class=btn-group ng-if="signIn && signIn.id && signIn.id > 0"><a class="btn btn-default" ng-click=result()><i class="fa fa-share"></i> \u67e5\u770b\u7b7e\u5230\u7ed3\u679c</a></div></div><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><form role=form enctype=multipart/form-data><div class="panel panel-default form-horizontal"><div class=panel-heading><div class=panel-title>\u7b7e\u5230\u6982\u51b5</div></div><div class=panel-body><form-input data-title="\'\u7b7e\u5230\u7ed3\u675f\u65f6\u95f4\'" data-name="\'end_time\'"><datetimepicker datetime=signIn.end_time starttime=signIn.sign_in_start_time></datetimepicker></form-input><form-input data-title="\'\u8d5e\u52a9\u5546\u540d\u79f0\'" data-name="\'sponsor_name\'"><input ng-model=signIn.sponsor_name class=form-control type=text placeholder=\u8bf7\u5c06\u8d5e\u52a9\u5546\u540d\u79f0\u9650\u5236\u572815\u4e2a\u6c49\u5b57\u4ee5\u5185 regexp=sponser_name blur></form-input><form-input data-title="\'\u8d5e\u52a9\u5546Logo\'" data-name="\'sponsor_logo\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=signIn.sponsor_logo class="fileinput-new thumbnail"><img ng-src={{signIn.sponsor_logo}} style="width: 178px"></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom title=\u56fe\u7247\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc71M tool-tip><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=sponsor_logo data-file=signIn.sponsor_logo></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input><div ng-if=signIn.id><form-input data-title="\'\u7b7e\u5230\u6a21\u5f0f\'" data-name="\'sign_in_modal\'"><div class=col-sm-2><label class=radio-inline><input type=radio name=sign_in_modal id=online value=online ng-checked="signIn.modal === \'online\'" ng-click="signInModal(\'online\')"> \u7ebf\u4e0a</label></div><div class=col-sm-2><label class=radio-inline><input type=radio name=sign_in_modal id=offline value=offline ng-checked="signIn.modal === \'offline\'" ng-click="signInModal(\'offline\')"> \u7ebf\u4e0b</label></div></form-input><div ng-if="signIn.modal === \'offline\'"><form-input data-title="\'\u7b7e\u5230\u4e8c\u7ef4\u7801\'" data-name="\'logo\'"><sign-in-qrcode data=signIn user=user></sign-in-qrcode></form-input></div><form-input data-title="\'\u662f\u5426\u6307\u5b9a\u53c2\u4e0e\u8005\'" data-name="\'participant\'"><div class=col-sm-2><label class=radio-inline><input type=radio name=participant id=isPart value=isPart ng-checked="signIn.participant === \'isPart\'" ng-click="isSpecifyPerson(\'isPart\')"> \u662f</label></div><div class=col-sm-2><label class=radio-inline><input type=radio name=participant id=isNotPart value=isNotPart ng-checked="signIn.participant === \'isNotPart\'" ng-click="isSpecifyPerson(\'isNotPart\')"> \u5426</label></div></form-input><br><div ng-if="signIn.participant === \'isPart\'"><div class=row><div class="col-sm-10 col-sm-offset-1"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u53c2\u4e0e\u8005\u7b5b\u9009\u6761\u4ef6</div></div><div class=panel-body><div class=row><div class=col-sm-12><form class=form-horizontal><fieldset><legend><h5>\u53c2\u4e0e\u8005\u804c\u52a1</h5></legend><div class=row><div class=col-sm-4 style=text-align:left;padding-left:50px ng-repeat="duty in duties"><input type=radio name=duty value={{duty.id}} ng-model=checked_duty ng-click=getCheckedDuty(checked_duty) ng-checked="duty.checked"> <font title={{duty.name}} ng-bind="duty.name | substr:6:5"></font></div></div><br><div class=row><div class=col-sm-12 style="text-align: right"><a ng-click=exOratrDuty()>{{operDuty}}</a></div></div></fieldset></form></div></div><br><div class=row><div class=col-sm-12><form class=form-horizontal><fieldset><legend><h5>\u53c2\u4e0e\u8005\u5206\u7ec4</h5></legend><div class=row><div class=col-sm-4 style=text-align:left;padding-left:50px ng-repeat="group in groups"><input type=radio name=group value={{group.id}} ng-model=checked_group ng-click=getCheckedGroup(checked_group) ng-checked="group.checked"> <font title={{group.name}} ng-bind="group.name | substr:6:5"></font></div></div><br><div class=row><div class=col-sm-12 style="text-align: right"><a ng-click=exOratrGroup()>{{operGroup}}</a></div></div></fieldset></form></div></div><br><div class=row><div class=col-sm-12><form class=form-horizontal><fieldset><legend><h5>\u53c2\u4e0e\u8005\u8eab\u4efd</h5></legend><div class=row><div class=col-sm-4 style=text-align:left;padding-left:50px ng-repeat="identity in identityArray"><input type=radio name=identity value={{identity.id}} ng-model=checked_identity ng-click=getCheckedIdentity(checked_identity) ng-checked="identity.checked"> <font title={{identity.name}} ng-bind="identity.name | substr:6:5"></font></div></div><br></fieldset></form></div></div><br></div></div></div></div><div class=row><div class="col-sm-10 col-sm-offset-1"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u5019\u9009\u53c2\u4e0e\u8005</div></div><div class=panel-body><div class=row><div class=col-md-3 style=text-align:left;padding-left:50px ng-repeat="person in persons"><input type=checkbox name=person id=person value={{person.id}} ng-model=checked_person ng-click="getCheckedPerson(person.id, checked_person)" ng-checked="person.checked"> <font title={{person.name}} ng-bind="person.name | substr:6:5"></font></div></div><br><div class=row><div class="col-sm-8 col-sm-offset-4"><button class="btn btn-default btn-sm" ng-click=savePersons() ng-disabled="personIdChosen.length === 0 && personIdRemove.length === 0">\u4fdd \u5b58</button>&nbsp;&nbsp; <button class="btn btn-default btn-sm" ng-click=loadMore() ng-disabled=btn><font ng-bind=loadBtn></font></button></div></div></div></div></div></div></div></div></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=save()><font ng-bind=saveBtn></font></button></div></form></div></div></div>');
    $templateCache.put('partial/activity/party_branch/plugins/sign_in_at.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=SignInAtCtrl><div class=activity-button-bar><div class="btn btn-default" ui-sref=party_act_item.political_sign_in_plugin><i class="fa fa-reply"></i> \u8fd4 \u56de</div></div><div class=row ng-if="isSpecify === \'isPart\'"><div class=col-sm-12><span class="label label-info" style="font-size: 100%">\u9009\u5b9a\u7684\u603b\u53c2\u4e0e\u4eba\u6570\uff1a&nbsp;<font ng-bind=person_sum></font></span>&nbsp; <span class="label label-info" style="font-size: 100%">\u5df2\u7b7e\u5230\u7684\u603b\u4eba\u6570\uff1a&nbsp;<font ng-bind=signin_person_sum></font></span>&nbsp;</div></div><br ng-if="isSpecify === \'isPart\'"><div class=row ng-if="isSpecify === \'isPart\'"><div class="col-xs-12 col-sm-12 col-md-12"><div class="panel panel-default" my-collapse><span class="btn pull-right"><i class="fa fa-chevron-up"></i>&nbsp;\u6536\u8d77</span> <a class="btn pull-right" ng-href="/api/political_sign/{{signInId}}/users/out/{{activity.subject + \'-\u6307\u5b9a\u53c2\u4e0e\u4eba-\' + current}}.csv"><i class="fa fa-download"></i>&nbsp;\u5bfc\u51fa\u7535\u5b50\u7248</a><div class=panel-heading><div class=panel-title>\u6307\u5b9a\u53c2\u4e0e\u8005</div></div><div class=panel-body><table class="table table-bordered"><thead><th>\u7b7e\u5230\u53f7</th><th>\u59d3\u540d</th><th>\u6027\u522b</th><th>\u8eab\u4efd</th><th>\u5c0f\u961f</th><th>\u7b7e\u5230\u65f6\u95f4</th><th>\u7535\u8bdd</th></thead><tbody><tr ng-repeat="person in specifyPersons"><td><font ng-bind="person.index || \'\u672a\u7b7e\u5230\'"></font></td><td><font ng-bind=person.user_obj.user_obj.name></font></td><td><span ng-switch=person.user_obj.user_obj.sex><span ng-switch-when=MALE>\u7537</span> <span ng-switch-when=FEMALE>\u5973</span></span></td><td><font ng-bind="identity[person.user_obj.status] || \'\u65e0\'"></font></td><td><font ng-bind="person.user_obj.group_obj.name || \'\u65e0\'"></font></td><td><div ng-if=person.sign_in_time><font ng-bind="person.sign_in_time | date: \'yyyy-MM-dd HH:mm\'"></font></div><div ng-if=!person.sign_in_time><font>\u672a\u7b7e\u5230</font></div></td><td><font ng-bind=person.user_obj.user_obj.phone></font></td></tr></tbody></table></div></div></div></div><div class=row><div class=col-sm-12><font><h4>\u7b7e\u5230\u5b9e\u65f6\u60c5\u51b5\uff1a</h4></font></div></div><div class=row><div class=col-sm-12><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="person in $data"><td data-title="\'\u59d3\u540d\'" header-class=text-left><font ng-bind="person.user_obj.user_obj.name || \'\u4ec5\u672c\u515a\u652f\u90e8\u6210\u5458\u53ef\u89c1\'"></font></td><td data-title="\'\u6635\u79f0\'" header-class=text-left><font ng-bind="person.user_obj.user_obj.nickname || person.user_obj.nickname"></font></td><td data-title="\'\u8eab\u4efd\'" header-class=text-left><font ng-bind="identity[person.user_obj.status] || \'\u65e0\'"></font></td><td data-title="\'\u7b7e\u5230\u53f7\'" header-class=text-left><font ng-bind="person.index || \'\u672a\u7b7e\u5230\'"></font></td><td data-title="\'\u7b7e\u5230\u65f6\u95f4\'" header-class=text-left><div ng-if=person.sign_in_time><font ng-bind="person.sign_in_time | date: \'yyyy-MM-dd HH:mm\'"></font></div><div ng-if=!person.sign_in_time><font>\u672a\u7b7e\u5230</font></div></td><td data-title="\'\u7535\u8bdd\'" header-class=text-left><font ng-bind="person.user_obj.user_obj.phone || person.user_obj.phone"></font></td></tr></tbody></table></div></div></div>');
    $templateCache.put('partial/activity/party_branch/plugins/stat.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-9 col-md-9 col-col-sm-9" ng-controller=PartyStatCtrl><div class=row><div class=col-md-4><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="party_act_item({ id: activity.id, page: page })"><i class="fa fa-reply"></i> \u8fd4\u56de</a>&nbsp;&nbsp;&nbsp;</div></div></div></div><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><h3 class="col-md-12 text-center">\u57fa\u672c\u4fe1\u606f</h3><hr class=col-md-12 style="border-top-color:#E4DEDE"><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u6d3b\u52a8\u70b9\u51fb\u6570</div></div><div class=panel-body><font ng-bind=summary.browse_count></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u6d3b\u52a8\u6536\u85cf\u6570</div></div><div class=panel-body><font ng-bind=summary.fav_count></font></div></div></div><div ng-hide=plugin_exist.sign_in><h3 class="col-md-12 text-center">\u6d3b\u52a8\u7b7e\u5230\uff08\u7ebf\u4e0a\u6216\u7ebf\u4e0b\uff09</h3><hr class=col-md-12 style="border-top-color:#E4DEDE"><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7b7e\u5230\u603b\u4eba\u6570</div></div><div class=panel-body><font ng-bind=summary.sign_in_count></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u6307\u5b9a\u53c2\u4e0e\u8005\u603b\u6570</div></div><div class=panel-body><font ng-bind=summary.sign_in_special></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u6307\u5b9a\u53c2\u4e0e\u8005\u5b9e\u5230\u603b\u6570</div></div><div class=panel-body><font ng-bind=summary.sign_in_total></font></div></div></div></div><div ng-hide=plugin_exist.timeline><h3 class="col-md-12 text-center">\u7ebf\u4e0a\u8ba8\u8bba</h3><hr class=col-md-12 style="border-top-color:#E4DEDE"><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u9650\u5b9a\u53c2\u4e0e\u603b\u4eba\u6570</div></div><div class=panel-body><font ng-bind=summary.person_num></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u603b\u53d1\u8a00\u6570</div></div><div class=panel-body><font ng-bind=summary.speak_num></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u53d1\u8a00\u8005\u603b\u6570</div></div><div class=panel-body><font ng-bind=summary.speaker_num></font></div></div></div></div></div></div></div>');
    $templateCache.put('partial/activity/party_branch/plugins/timeline.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=PartyTimelineCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="party_act_item({ id: activity.id })"><i class="fa fa-reply"></i> \u8fd4\u56de</a>&nbsp;</div><a class="btn btn-info" ng-click=participator()><i class="fa fa-user"></i> \u9009\u62e9\u53c2\u4e0e\u8005</a></div><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><form class="panel panel-default form-horizontal"><div class=panel-heading><div class=panel-title>\u7206\u6599</div></div><div class=panel-body><div class="bs-callout bs-callout-warning col-md-10 col-md-offset-1" style=margin-top:10px><h4>\u6d3b\u52a8\u7206\u6599\u8bf4\u660e</h4><p>1\u3001\u7ba1\u7406\u540e\u53f0\u4e0eApp\u95f4\u4fdd\u6301\u53cc\u5411\u6c9f\u901a\u3002<br>2\u3001\u5355\u6b21\u201c\u7206\u6599\u201d\u6700\u591a\u652f\u63016\u5f20\u56fe\u7247\u3002</p></div><form-input data-title="\'\u5185\u5bb9\'" data-name="\'content\'" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><textarea class=form-control id=content ng-model=comment.content name=content rows=5 autocomplete=off></textarea></form-input><form-input data-title="\'\u56fe\u7247\'" data-name="\'images\'" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom title=\u5355\u5f20\u56fe\u7247\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc71M tool-tip><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a6\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=images multiple data-files=comment.images></span><div ng-repeat="image in comment.images"><i class="fa fa-times timeline-file-remove" ng-click=removeFile($index)></i>{{image.name}}</div></div></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=submit() ng-show="user.role.name===\'ADMIN\' || user.role.name === \'USER\'">\u53d1\u5e03</button></form></div></div><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><table class="table table-striped table-responsive coupons" ng-table=tableParams><tbody><tr ng-repeat="comment in $data"><td data-title="\'\'"><party-post data-comment=comment></party-post></td></tr></tbody></table></div></div></div>');
    $templateCache.put('partial/activity/plugin/announcement.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9"><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="activity_item({ id: activity.id })"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><div ng-controller=AnnouncementCtrl><form method=POST ng-submit=submit() class=form-horizontal role=form name=annoForm enctype=multipart/form-data ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><textarea class=form-control id=content ng-model=content name=content rows=5 autocomplete=off placeholder=\u6d3b\u52a8\u5730\u70b9\uff0c\u65f6\u95f4\uff0c\u4e34\u65f6\u7a81\u53d1\u72b6\u51b5\u53ef\u4ee5\u901a\u8fc7\u516c\u544a\u677f\u7b2c\u4e00\u65f6\u95f4\u63a8\u9001\u7ed9\u6240\u6709\u5173\u6ce8\u672c\u6d3b\u52a8\u7684\u5c0f\u4f19\u4f34\u4eec\u3002></textarea><button class="btn btn-primary pull-right announcement-submit" type=submit>\u53d1\u5e03</button></form><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="announcement in $data"><td data-title="\'\u5185\u5bb9\'" header-class=text-left>{{announcement.content}}</td><td data-title="\'\u53d1\u5e03\u65f6\u95f4\'" header-class=text-left>{{announcement.create_time | date : \'yyyy-MM-dd HH:mm\'}}</td><td data-title="\'\'" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><a ng-click=delete(announcement.id) class="fa fa-trash-o btn">&nbsp;\u5220\u9664</a></td></tr></tbody></table></div></div>');
    $templateCache.put('partial/activity/plugin/history_candidate.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=HistoryCandiCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ng-click=returnToVote()><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><table ng-table=tableParams class="table table-striped table-responsive coupons"><tbody><tr ng-repeat="candidate in $data"><td data-title="\'\'" style=border:0px><div class="panel panel-default form-horizontal"><div class=panel-heading><div class=panel-title>\u83b7\u5f97\u7968\u6570\uff1a<font ng-bind=candidate.vote_num></font></div></div><div class=panel-body><div class="row coupons-info"><form-input data-title="\'\u5019\u9009\u9879\'" data-name="\'candidate.title\'"><input ng-model=candidate.title class=form-control type=text readonly></form-input><form-input data-title="\'\u5df2\u6709\u56fe\u7247\'" data-name="\'images\'"><div class="fileinput fileinput-new" data-provides=fileinput><span ng-repeat="image in candidate.images"><span ng-if=image.path class=thumbnail><img ng-src={{image.path.substring(0)}} style="width: 178px" ng-click=viewImage(image.path)></span></span></div></form-input><form-input data-title="\'\u5019\u9009\u8bf4\u660e\'" data-name="\'candidate.describe\'"><textarea class=form-control ng-model=candidate.describe rows=5 autocomplete=off placeholder="" readonly>\r' + '\n' + '                  </textarea></form-input></div></div></div></td></tr></tbody></table><script type=text/ng-template id=custom/pager><ul class="pager ng-cloak">\r' + '\n' + '      <li ng-repeat="page in pages"\r' + '\n' + '          ng-class="{\'disabled\': !page.active, \'previous\': page.type == \'prev\', \'next\': page.type == \'next\'}"\r' + '\n' + '          ng-show="page.type == \'prev\' || page.type == \'next\'" ng-switch="page.type">\r' + '\n' + '        <a ng-switch-when="prev" ng-click="params.page(page.number)" href="">&laquo; \u4e0a\u4e00\u9875</a>\r' + '\n' + '        <a ng-switch-when="next" ng-click="params.page(page.number)" href="">\u4e0b\u4e00\u9875 &raquo;</a>\r' + '\n' + '      </li>\r' + '\n' + '      <li> \r' + '\n' + '        <div class="btn-group">\r' + '\n' + '          <button type="button" ng-class="{\'active\':params.count() == 1}" ng-click="params.count(1)" class="btn btn-default">1</button>\r' + '\n' + '          <button type="button" ng-class="{\'active\':params.count() == 5}" ng-click="params.count(5)" class="btn btn-default">5</button>\r' + '\n' + '          <button type="button" ng-class="{\'active\':params.count() == 10}" ng-click="params.count(10)" class="btn btn-default">10</button>\r' + '\n' + '          <button type="button" ng-class="{\'active\':params.count() == 15}" ng-click="params.count(15)" class="btn btn-default">15</button>\r' + '\n' + '        </div>\r' + '\n' + '      </li>\r' + '\n' + '    </ul></script></div>');
    $templateCache.put('partial/activity/plugin/history_sign_in.html', '<div class=modal-header><h4 class=modal-title>\u5386\u53f2\u7b7e\u5230\u60c5\u51b5</h4></div><div class=modal-body><div class=row><div class=col-md-12><table class="table table-hover"><thead><tr><th>\u7f16\u53f7</th><th>\u5f00\u59cb/\u7ed3\u675f\u65f6\u95f4</th><th>\u7b7e\u5230\u4eba\u6570</th></tr></thead><tbody><tr ng-repeat="item in history_sign_in"><td>{{$index + 1}}</td><td>{{item.sign_in_start_time | date: \'yyyy-MM-dd HH:mm\'}} ~ {{item.sign_in_end_time | date: \'yyyy-MM-dd HH:mm\'}}</td><td>{{item.sign_in_num}}</td></tr></tbody></table></div></div></div>');
    $templateCache.put('partial/activity/plugin/history_ticket.html', '<div class=modal-header><h4 class=modal-title>\u5386\u53f2\u7535\u5b50\u7968\u60c5\u51b5</h4></div><div class=modal-body><div class=row><div class=col-md-12><table class="table table-hover"><thead><tr><th>\u7f16\u53f7</th><th>\u9a8c\u7968\u5f00\u59cb/\u7ed3\u675f\u65f6\u95f4</th><th>\u5df2\u7528\u7968\u6570</th><th>\u603b\u7968\u6570</th></tr></thead><tbody><tr ng-repeat="item in history_ticket"><td>{{$index + 1}}</td><td>{{item.start_time | date: \'yyyy-MM-dd HH:mm\'}} ~ {{item.end_time | date: \'yyyy-MM-dd HH:mm\'}}</td><td>{{item.total - item.left}}</td><td>{{item.total}}</td></tr></tbody></table></div></div></div>');
    $templateCache.put('partial/activity/plugin/history_vote.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=HistoryVoteCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ng-click=returnToVote()><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><div class="panel panel-default" ng-repeat="vote in historyVote"><div class=panel-heading><div class=panel-title>\u6295\u7968\u7f16\u53f7:{{$index + 1}}</div></div><div class=panel-body><dl class=dl-horizontal><dt>\u6295\u7968\u6807\u9898</dt><dd style=margin-bottom:5px>{{vote.title}}</dd><dt>\u6295\u7968\u5f00\u59cb\u65f6\u95f4</dt><dd style=margin-bottom:5px>{{vote.vote_start_time | date: \'yyyy-MM-dd HH:mm\'}}</dd><dt>\u6295\u7968\u7ed3\u675f\u65f6\u95f4</dt><dd style=margin-bottom:5px>{{vote.vote_end_time | date: \'yyyy-MM-dd HH:mm\'}}</dd><dt>\u6295\u7968\u8303\u56f4</dt><dd style=margin-bottom:5px>{{vote.vote_scope.name}}</dd><dt>\u6295\u7968\u8bf4\u660e</dt><dd><textarea class=form-control id=content ng-model=vote.vote_description name=vote_description rows=3 autocomplete=off readonly>\r' + '\n' + '          </textarea></dd></dl></div><button class="btn btn-primary form-control form-submit-button" type=button ng-click=candidateList(vote.id)><i class="fa fa-share">\u67e5\u770b\u5019\u9009\u9879</i></button></div></div>');
    $templateCache.put('partial/activity/plugin/lottery.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=LotteryCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="activity_item({ id: activity.id })"><i class="fa fa-reply"></i> \u8fd4\u56de</a>&nbsp;&nbsp;</div><div class=btn-group ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><a class="btn btn-danger" ng-click=delete() data-toggle=tooltip data-placement=bottom title=\u5f7b\u5e95\u5220\u9664\u62bd\u5956\u529f\u80fd\uff0c\u4e4b\u524d\u4fdd\u5b58\u7684\u5956\u9879\u5185\u5bb9\u5168\u90e8\u6e05\u7a7a\u3002 tool-tip><i class="fa fa-close"></i> \u5220\u9664\u62bd\u5956\u529f\u80fd</a> <a class="btn btn-warning" ng-click=close() data-toggle=tooltip data-placement=bottom title=\u6682\u65f6\u5c06\u62bd\u5956\u529f\u80fd\u4ece\u624b\u673a\u5ba2\u6237\u7aef\u4e0b\u67b6\u4e0d\u663e\u793a\uff0c\u518d\u6b21\u6253\u5f00\u62bd\u5956\u529f\u80fd\u65f6\uff0c\u4e4b\u524d\u4fdd\u5b58\u7684\u5956\u9879\u5185\u5bb9\u4f9d\u65e7\u5b58\u5728\uff0c\u53ef\u7ee7\u7eed\u7f16\u8f91\u3002 tool-tip><i class="fa fa-eye"></i> \u6682\u65f6\u5173\u95ed\u672c\u6b21\u62bd\u5956</a>&nbsp;</div><div class=btn-group ng-show="(user.role.name === \'ADMIN\' || user.role.name === \'USER\') && award_number !== 0"><a class="btn btn-info" target=_blank ng-href="{{\'/app/draw_lots_result/#\' + lottery.id}}" data-toggle=tooltip data-placement=bottom title=\u70b9\u51fb\u5c55\u793a\u5f53\u524d\u4e2d\u5956\u7ed3\u679c tool-tip><i class="fa fa-list"></i>&nbsp;\u4e2d\u5956\u7ed3\u679c</a></div></div><form class="panel panel-default form-horizontal"><div class=panel-heading><div class=panel-title>\u62bd\u5956\u6982\u51b5</div></div><div class=panel-body><div class="bs-callout bs-callout-warning col-md-10 col-md-offset-1" style=margin-top:10px><h4>\u62bd\u5956\u529f\u80fd\u8bf4\u660e</h4><p>1\u3001\u6240\u6709\u5956\u54c1\u5747\u7531\u7535\u5b50\u51ed\u8bc1\u5185\u7684\u7535\u5b50\u793c\u5238\u4ee3\u66ff\u3002<br>2\u3001\u652f\u6301\u81ea\u5b9a\u4e49\u591a\u4e2a\u5956\u9879\uff0c\u4e00\u4e2a\u5956\u9879\u53ef\u4ee5\u8bbe\u7f6e\u6700\u591a6\u4e2a\u5956\u54c1\u3002<br>3\u3001\u652f\u6301\u81ea\u5b9a\u4e49\u6bcf\u4e00\u79cd\u5956\u54c1\u7684\u6570\u91cf\u3002<br>4\u3001\u5f00\u5956\u8fc7\u7a0b\u4e2d\uff0c\u5956\u9879\u6240\u6709\u4fe1\u606f\u65e0\u6cd5\u66f4\u6539\u3002</p></div><form-input data-title="\'\u5151\u5956\u5bc6\u7801\'" data-name="\'password_code\'"><input class=form-control readonly id=password ng-model=activity.host.password_code name=password_code><br></form-input></div><div ng-if="lottery && lottery.id && lottery.id > 0"><a class="btn btn-primary form-control form-submit-button" ng-click=_create() ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><i class="fa fa-plus"></i> \u6dfb\u52a0\u5956\u9879</a></div></form><div ng-if=i._lottery.show><div class="panel panel-default form-horizontal"><div class=panel-body><form-input data-title="\'\u5956\u9879\u540d\u79f0\'" data-name="\'name\'"><input ng-model=i._lottery.name class=form-control type=text></form-input><form-input data-title="\'\u4e2d\u5956\u4eba\u6570\u8bbe\u7f6e\'" data-name="\'total\'"><input placeholder=\u8bf7\u8f93\u5165\u6574\u6570 ng-model=i._lottery.total class=form-control type=number data-toggle=tooltip data-placement=top title=\u4ee3\u8868\u8fd9\u4e2a\u5956\u9879\u5f97\u5956\u4eba\u6570\uff0c\u4e00\u4e2a\u5956\u9879\u6709\u53ef\u80fd\u5bf9\u5e94\u591a\u4e2a\u5956\u54c1\uff0c\u6bcf\u4e2a\u5f97\u5956\u4eba\u5956\u54c1\u5747\u5206\u3002 tool-tip></form-input><form-input data-title="\'\u4e2d\u5956\u8303\u56f4\'" data-name="\'scope_id\'"><select ng-model=i._lottery.scope_id ng-options="scope.id as scope.name for scope in lottery_scopes" data-toggle=tooltip data-placement=top title=\u4ec5\u652f\u6301\u5355\u9009\uff0c\u9700\u8981\u5b8c\u6210\u4e2d\u5956\u8303\u56f4\u6240\u9009\u529f\u80fd\u4e4b\u540e\u7684\u624b\u673a\u5ba2\u6237\u7aef\u7528\u6237\u624d\u80fd\u53c2\u4e0e\u62bd\u5956\u3002 tool-tip></select></form-input><form-input data-title="\'\u6700\u665a\u5151\u6362\u65f6\u95f4\'" data-name="\'exchange_end_time\'"><datetimepicker datetime=i._lottery.exchange_end_time starttime=i._lottery.exchange_end_time data-toggle=tooltip data-placement=top title=\u6700\u665a\u5151\u6362\u65f6\u95f4\u524d\u7684\u4efb\u4f55\u65f6\u5019\uff0c\u624b\u673a\u5ba2\u6237\u7aef\u7528\u6237\u90fd\u53ef\u4ee5\u627e\u5bf9\u5e94\u7684\u793e\u56e2\u9886\u53d6\u5956\u54c1\u3002 tool-tip></datetimepicker></form-input><div class=text-center><a class="btn btn-default" ng-click=lotteryCreate()>\u4fdd\u5b58</a> <a class="btn btn-default" ng-click=_cancel()>\u53d6\u6d88</a></div></div></div></div><table ng-table=tableParams class="table table-striped table-responsive coupons"><tbody><tr ng-repeat="award in $data"><td data-title="\'\'"><div class="panel panel-default form-horizontal"><div class=panel-heading><div class=panel-title><h4>\u7f16\u53f7: {{$index + 1}}</h4></div></div><div class=panel-body><form-input data-title="\'\u5956\u9879\u540d\u79f0\'"><input ng-model=award.name class=form-control type=text></form-input><form-input data-title="\'\u4e2d\u5956\u4eba\u6570\u8bbe\u7f6e\'" data-name="\'total\'"><input placeholder=\u8bf7\u8f93\u5165\u6574\u6570 ng-model=award.total class=form-control type=number data-toggle=tooltip data-placement=top title=\u4ee3\u8868\u8fd9\u4e2a\u5956\u9879\u5f97\u5956\u4eba\u6570\uff0c\u4e00\u4e2a\u5956\u9879\u6709\u53ef\u80fd\u5bf9\u5e94\u591a\u4e2a\u5956\u54c1\uff0c\u6bcf\u4e2a\u5f97\u5956\u4eba\u5956\u54c1\u5747\u5206\u3002 tool-tip></form-input><form-input data-title="\'\u4e2d\u5956\u8303\u56f4\'" data-name="\'scope_id\'"><select ng-model=award.scope_id ng-options="scope.id as scope.name for scope in lottery_scopes" data-toggle=tooltip data-placement=top title=\u4ec5\u652f\u6301\u5355\u9009\uff0c\u9700\u8981\u5b8c\u6210\u4e2d\u5956\u8303\u56f4\u6240\u9009\u529f\u80fd\u4e4b\u540e\u7684\u624b\u673a\u5ba2\u6237\u7aef\u7528\u6237\u624d\u80fd\u53c2\u4e0e\u62bd\u5956\u3002 tool-tip></select></form-input><form-input data-title="\'\u6700\u665a\u5151\u6362\u65f6\u95f4\'" data-name="\'exchange_end_time\'"><datetimepicker datetime=award.exchange_end_time starttime=i._lottery.exchange_end_time data-toggle=tooltip data-placement=top title=\u6700\u665a\u5151\u6362\u65f6\u95f4\u524d\u7684\u4efb\u4f55\u65f6\u5019\uff0c\u624b\u673a\u5ba2\u6237\u7aef\u7528\u6237\u90fd\u53ef\u4ee5\u627e\u5bf9\u5e94\u7684\u793e\u56e2\u9886\u53d6\u5956\u54c1\u3002 tool-tip></datetimepicker></form-input><div class=prizes><div class=prize ng-repeat="good in award.goods"><span class=thumbnail style=height:100px;width:100px ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><img ng-src="{{good.goods_info.image}}?width=90&height=90" style=height:100%;width:100% ng-click=updatePrize(good) data-toggle=tooltip data-placement=bottom title=\u70b9\u51fb\u8fdb\u884c\u5956\u54c1\u6570\u91cf\u7684\u66f4\u6539 tool-tip></span> <span class=thumbnail style=height:100px;width:100px ng-hide="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><img ng-src="{{good.goods_info.image}}?width=90&height=90" style=height:100%;width:100%></span><p>\u6570\u91cf: {{good.number}}</p></div><a class="btn btn-default" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'" ng-click=prizeCreate(award) data-toggle=tooltip data-placement=bottom title=\u70b9\u51fb\u6dfb\u52a0\u5956\u54c1 tool-tip><i class="fa fa-plus"></i></a></div><div class=text-center ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><a class="btn btn-default" target=_blank ng-href="{{\'/app/draw_lots/#\' + award.id}}" data-toggle=tooltip data-placement=bottom title=\u70b9\u51fb\u540e\u6253\u5f00\u201d\u62bd\u5956\u5927\u5c4f\u5e55\u201c\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\u70b9\u51fb\u64cd\u4f5c\u5b8c\u6210\u6574\u4e2a\u62bd\u5956\u6d41\u7a0b\u3002 tool-tip>\u5f00\u5956\u5927\u5c4f\u5e55</a> <a class="btn btn-default" ng-click=lotteryChange(award)>\u66f4\u65b0</a> <a class="btn btn-default" ng-click=lotteryDelete(award)>\u5220\u9664</a></div></div></div></td></tr></tbody></table></div><script type=text/ng-template id=custom/pager><ul class="pager ng-cloak">\r' + '\n' + '    <li ng-repeat="page in pages"\r' + '\n' + '        ng-class="{\'disabled\': !page.active, \'previous\': page.type == \'prev\', \'next\': page.type == \'next\'}"\r' + '\n' + '        ng-show="page.type == \'prev\' || page.type == \'next\'" ng-switch="page.type">\r' + '\n' + '      <a ng-switch-when="prev" ng-click="params.page(page.number)" href="">&laquo; \u4e0a\u4e00\u9875</a>\r' + '\n' + '      <a ng-switch-when="next" ng-click="params.page(page.number)" href="">\u4e0b\u4e00\u9875 &raquo;</a>\r' + '\n' + '    </li>\r' + '\n' + '    <li> \r' + '\n' + '      <div class="btn-group">\r' + '\n' + '        <button type="button" ng-class="{\'active\':params.count() == 1}" ng-click="params.count(1)" class="btn btn-default">1</button>\r' + '\n' + '        <button type="button" ng-class="{\'active\':params.count() == 3}" ng-click="params.count(3)" class="btn btn-default">3</button>\r' + '\n' + '        <button type="button" ng-class="{\'active\':params.count() == 5}" ng-click="params.count(5)" class="btn btn-default">5</button>\r' + '\n' + '        <button type="button" ng-class="{\'active\':params.count() == 7}" ng-click="params.count(7)" class="btn btn-default">7</button>\r' + '\n' + '      </div>\r' + '\n' + '    </li>\r' + '\n' + '  </ul></script>');
    $templateCache.put('partial/activity/plugin/lotteryat.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=LotteryatCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ng-click=returntolottery()><i class="fa fa-reply"></i> \u8fd4\u56de</a> <a class="btn btn-default" target=_blank ng-href="{{\'/app/draw_lots/#\' + award_id}}"><i class="fa fa-desktop"></i> \u5927\u5c4f\u5e55</a></div></div><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="signin in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left>{{signin.id}}</td><td data-title="\'\u5956\u9879\u540d\u79f0\'" header-class=text-left>{{signin.name}}</td><td data-title="\'\u5f00\u5956\u6a21\u5f0f\'" header-class=text-left></td></tr></tbody></table></div>');
    $templateCache.put('partial/activity/plugin/plugin.html', '<div class=modal-header><h4 class=modal-title>\u6dfb\u52a0\u65b0\u529f\u80fd</h4></div><div class=modal-body><div class=row ng-repeat="plugin in plugins_alivable"><div class=col-md-2><center><div style=margin-top:40px ng-if="plugin.icon_path == \'/static/images/ticket_new.png\'"><image ng-src={{plugin.icon_path}} style="width:35px;height:35px"></div><div style=margin-top:42px ng-if="plugin.icon_path != \'/static/images/ticket_new.png\'"><image ng-src={{plugin.icon_path}} style="width:30px;height:30px"></div></center></div><div class=col-md-3><br><br><a d-serf=community class="btn btn-primary" style=width:90px ng-click=addPlugin(plugin.id)>{{plugin.name}}&nbsp;&nbsp;<i class="glyphicon glyphicon-plus-sign"></i></a></div><div class=col-md-7><textarea class="bs-callout bs-callout-info text-muted" rows=6 style=width:100%;border-radius:4px;padding:10px;border-left-color:#337ab7;resize:none readonly>{{plugin.note}}</textarea></div></div></div>');
    $templateCache.put('partial/activity/plugin/prize.html', '<div class=modal-header><h3 class=modal-title>\u6dfb\u52a0\u5956\u54c1</h3></div><div class=modal-body><div ng-show=note><p class=ng-cloak><strong>\u5956\u5238\u5e93\u7a7a\u8361\u8361\uff0c\u5148\u6765\u521b\u5efa\u7b2c\u4e00\u5f20\u5956\u5238\u5427\uff01</strong></p></div><table ng-table=tableParams class="table table-striped table-responsive coupons"><tbody><tr ng-repeat="coupon in $data"><td data-title="\'\'"><div class=select-goods><div class=logo style=height:100px;width:100px><img ng-src="{{coupon.image}}?width=90&height=90" style=height:100%;width:100% ng-click=viewImage(coupon.image)></div><div class=info><a class="btn btn-default" ng-click="select(prize, coupon)">\u6dfb\u52a0</a><h4>{{coupon.title}}</h4><div>\u6570\u91cf: <input class=number_input type=number ng-model=prize.number> \u5269\u4f59: {{coupon.remain - (prize.number||0) * award.total}}</div></div></div></td></tr></tbody></table></div><div class=modal-footer><button class="btn btn-info" ng-click=to_certificate() ng-show=note>\u786e\u5b9a</button> <button class="btn btn-default" ng-click=cancel() ng-show=note>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/activity/plugin/prize_minus.html', '<div class=modal-header><h3 class=modal-title>\u66f4\u65b0\u5956\u54c1\u6570\u91cf</h3></div><div class=modal-body><table class="table table-striped table-responsive coupons"><tbody><tr><td data-title="\'\'"><div class=select-goods><div class=logo style=height:100px;width:100px><img ng-src="{{award.goods_info.image}}?width=90&height=90" style=height:100%;width:100% ng-click=viewImage(award.goods_info.image)></div><div class=info><a class="btn btn-default" ng-click=update_number(prize)>\u66f4\u65b0\u6570\u91cf</a><h4>{{award.goods_info.title}}</h4><div>\u5956\u54c1\u6570\u91cf: <input class=number_input type=number ng-model=prize.number></div></div></div></td></tr></tbody></table></div>');
    $templateCache.put('partial/activity/plugin/qn_prize_add.html', '<div class=modal-header><h3 class=modal-title>\u7535\u5b50\u793c\u5238</h3></div><div class=modal-body><div ng-show=note><p class=ng-cloak><strong>\u5956\u5238\u5e93\u7a7a\u8361\u8361\uff0c\u5148\u6765\u521b\u5efa\u7b2c\u4e00\u5f20\u5956\u5238\u5427\uff01</strong></p></div><table ng-table=tableParams class="table table-striped table-responsive coupons"><tbody><tr ng-repeat="coupon in $data"><td data-title="\'\'"><div class=select-goods><div class=logo style=height:100px;width:100px><img ng-src="{{coupon.image}}?width=90&height=90" style=height:100%;width:100% ng-click=viewImage(coupon.image)></div><div class=info><a class="btn btn-default" ng-click="add(prize, coupon)">\u6dfb\u52a0</a><h4>\u540d\u79f0\uff1a<font ng-bind=coupon.title></font><font size=1>\uff08\u6709\u6548\u671f\uff1a{{coupon.end_time | date: \'yyyy-MM-dd\'}}\uff09</font></h4><div>\u6570\u91cf\uff1a<input class=number_input type=number ng-model=prize.number>&nbsp;&nbsp;\u5269\u4f59\uff1a{{coupon.remain - (prize.number || 0)}}<br></div></div></div></td></tr></tbody></table></div><div class=modal-footer><button class="btn btn-info" ng-click=goToCertificate() ng-show=note>\u786e\u5b9a</button> <button class="btn btn-default" ng-click=cancel() ng-show=note>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/activity/plugin/qn_prize_minus.html', '<div class=modal-header><h3 class=modal-title>\u66f4\u65b0\u793c\u5238\u6570\u91cf</h3></div><div class=modal-body><table class="table table-striped table-responsive coupons"><tbody><tr><td data-title="\'\'"><div class=select-goods><div class=logo style=height:100px;width:100px><img ng-src="{{gift.goods.image}}?width=90&height=90" style=height:100%;width:100% ng-click=viewImage(gift.goods.image)></div><div class=info><a class="btn btn-default" ng-click=updateNumber(prize)>\u66f4\u65b0\u6570\u91cf</a><h4>\u540d\u79f0\uff1a<font ng-bind=gift.goods.title></font></h4><div>\u5956\u54c1\u6570\u91cf\uff1a<input class=number_input type=number ng-model=prize.number></div>\u5269\u4f59\u6570\u91cf\uff1a <font ng-bind="cer_remain - (prize.number || 0)"></font></div></div></td></tr></tbody></table></div>');
    $templateCache.put('partial/activity/plugin/questionnaire.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col-xs-9 col-sm-9" ng-controller=QuestionnaireCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="activity_item({ id: activity.id })"><i class="fa fa-reply"></i> \u8fd4\u56de</a>&nbsp;&nbsp;</div><div class=btn-group ng-show="(user.role.name === \'ADMIN\' || user.role.name === \'USER\') && update"><a class="btn btn-danger" ng-click=delQuestionnaire(questionnaire.id) data-toggle=tooltip data-placement=bottom title=\u5220\u9664\u540e\u95ee\u5377\u6570\u636e\u5c06\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u3002 tool-tip><i class="fa fa-close"></i> \u5220\u9664\u672c\u6b21\u95ee\u5377</a>&nbsp;</div><div class=btn-group ng-show="(user.role.name === \'ADMIN\' || user.role.name === \'USER\') && update"><a ng-if=!questionnaire.publish_time class="btn btn-default" ng-click=pubQuestionnaire(questionnaire.id) data-toggle=tooltip data-placement=bottom title=\u53d1\u5e03\u8be5\u95ee\u5377\uff0c\u4f7f\u7528\u6237\u53ef\u5728\u624b\u673aapp\u4e0a\u8fdb\u884c\u7b54\u9898\uff0c\u95ee\u5377\u53d1\u5e03\u540e\u4e0d\u80fd\u518d\u5bf9\u8be5\u95ee\u5377\u8fdb\u884c\u7f16\u8f91\u3002 tool-tip><i class="fa fa-volume-up"></i> \u53d1\u5e03\u672c\u6b21\u95ee\u5377</a>&nbsp; <a ng-if="questionnaire.publish_time && questionnaire.status === \'USE\'" class="btn btn-warning" ng-click=finishQuestionnaire(questionnaire.id) data-toggle=tooltip data-placement=bottom title=\u7ed3\u675f\u8be5\u95ee\u5377\uff0c\u505c\u6b62\u624b\u673aapp\u4e0a\u7684\u7b54\u9898\u6d3b\u52a8\u3002 tool-tip><i class="fa fa-ban"></i> <font>\u7ed3\u675f\u672c\u6b21\u95ee\u5377</font></a>&nbsp;</div><div class=btn-group><a class="btn btn-default" ng-click=statView()><i class="fa fa-table"></i> \u95ee\u5377\u7edf\u8ba1</a></div></div><div class=row><form class="panel panel-default form-horizontal"><div class=panel-heading><div class=panel-title>\u95ee\u5377\u6982\u51b5</div></div><div class="bs-callout bs-callout-warning col-md-10 col-md-offset-1" style=margin-top:10px><h4>\u95ee\u5377\u529f\u80fd\u89e3\u91ca</h4><p>1\u3001\u4e00\u4e2a\u7528\u6237\u53ea\u80fd\u56de\u7b54\u4e00\u6b21\uff1b<br>2\u3001\u4e0d\u652f\u6301\u8df3\u9898\uff0c\u5f00\u59cb\u95ee\u7b54\u540e\u9700\u56de\u7b54\u5b8c\u6bcf\u4e00\u4e2a\u95ee\u9898\uff1b<br>3\u3001\u95ee\u5377\u4e00\u65e6\u53d1\u5e03\uff0c\u5c31\u4e0d\u53ef\u66f4\u6539\uff0c\u53ef\u4ee5\u5c06\u672c\u6b21\u95ee\u5377\u7ed3\u675f\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u95ee\u5377\uff0c\u7ed3\u675f\u95ee\u5377\u4e0d\u5f71\u54cd\u95ee\u5377\u7684\u7edf\u8ba1\u7ed3\u679c\uff1b<br>4\u3001\u6dfb\u52a0\u7684\u793c\u5238\u79cd\u7c7b\u4ee3\u8868\u6bcf\u4e00\u4e2a\u56de\u7b54\u5b8c\u7684\u7528\u6237\u53ef\u540c\u65f6\u83b7\u5f97\u7684\u6570\u91cf\uff0c\u4f8b\u5982\uff0c\u6dfb\u52a0\u4e86\u4e24\u79cd\u793c\u5238\uff0c\u56de\u7b54\u540e\u6bcf\u4e00\u4e2a\u7528\u6237\u5c06\u4f1a\u83b7\u5f97\u4e24\u79cd\u793c\u5238\u5404\u4e00\u5f20\uff0c\u5148\u5230\u5148\u5f97\u3002<br>5\u3001\u5f53\u793c\u5238\u5df2\u9886\u53d6\u6570\u91cf\u5927\u4e8e0\u65f6\uff0c\u8be5\u793c\u5238\u5c31\u65e0\u6cd5\u4fee\u6539\u3002<br>6\u3001\u7f16\u8f91\u597d\u95ee\u5377\u6240\u6709\u4fe1\u606f\u540e\uff0c\u8bb0\u5f97\u70b9\u9009\u53d1\u5e03\u95ee\u5377\u5662\uff01</p></div><div class=panel-body><form-input data-title="\'\u95ee\u5377\u6807\u9898\'" data-name="\'questionnaire_title\'"><input ng-model=questionnaire.title class=form-control type=text placeholder=\u8bf7\u8f93\u5165\u95ee\u5377\u6807\u9898></form-input><form-input data-title="\'\u95ee\u5377\u63cf\u8ff0\'" data-name="\'questionnaire_description\'"><textarea class=form-control id=description ng-model=questionnaire.describe name=questionnaire_description rows=5 autocomplete=off placeholder=\u8bf7\u586b\u5199\u95ee\u5377\u63cf\u8ff0>\r' + '\n' + '\t\t\t\t\t</textarea></form-input><form-input data-title="\'\u95ee\u5377\u987b\u77e5\'" data-name="\'questionnaire_note\'"><textarea class=form-control id=note ng-model=questionnaire.notice name=questionnaire_note rows=5 autocomplete=off placeholder=\u8bf7\u586b\u5199\u95ee\u987b\u77e5>\r' + '\n' + '\t\t\t\t\t</textarea></form-input><form-input data-title="\'\u95ee\u5377\u5f00\u59cb\u65f6\u95f4\'" data-name="\'questionnaire_start_time\'"><datetimepicker datetime=questionnaire.start_time></datetimepicker></form-input><form-input data-title="\'\u95ee\u5377\u7ed3\u675f\u65f6\u95f4\'" data-name="\'questionnaire_end_time\'"><datetimepicker datetime=questionnaire.end_time></datetimepicker></form-input><br><form-input data-title="\'\u6700\u665a\u5151\u5956\u65f6\u95f4\'" data-name="\'finish_time\'"><datetimepicker datetime=questionnaire.exchange_time></datetimepicker></form-input><br><div class="panel panel-info" ng-if=update my-collapse><span class="btn pull-right" ng-show="questionnaire.prizes.length >= 3"><i class="fa fa-chevron-up"></i>&nbsp;\u6536\u8d77</span> <span class="btn pull-right" ng-if="user.role.name === \'ADMIN\' || user.role.name === \'USER\'" ng-click=addCertificate(questionnaire.id)><i class="fa fa-plus"></i>&nbsp;\u6dfb\u52a0\u793c\u5238</span><div class=panel-heading><div class=panel-title>\u793c\u5238\u4fe1\u606f</div></div><div class=panel-body><div class="panel panel-default" ng-repeat="gift in questionnaire.prizes"><div class=panel-body style=padding-bottom:0px><div class="row coupons-info"><div class=col-sm-4><p>\u793c\u52b5\u540d\u79f0\uff1a<font ng-bind=gift.goods.title></font></p><p>\u8d5e\u52a9\u5546\uff1a<font ng-bind=gift.goods.sponsor_name></font></p><p>\u6709\u6548\u671f\u81f3\uff1a<font ng-bind="gift.goods.end_time | date: \'yyyy-MM-dd HH:mm\'"></font></p><p class=count><span>\u793c\u5238\u6570\u91cf\uff1a<font ng-bind=gift.num></font></span></p><p class=count><span>\u5df2\u9886\u53d6\u6570\u91cf\uff1a<font ng-bind=gift.remain></font></span><div ng-if="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><span class="btn btn-default btn-sm" ng-click="modifyCerNumber(questionnaire.id, gift)">\u4fee\u6539\u6570\u91cf</span> <span ng-if="gift.remain !== 0" class="btn btn-default btn-sm" disabled>\u6b63\u5728\u4f7f\u7528</span> <span ng-if="gift.remain === 0" class="btn btn-danger btn-sm" ng-click="delCertificate(questionnaire.id, gift.id)">\u5220\u9664\u793c\u5238</span></div></p></div><div class=col-sm-4><div class=thumbnail style=height:180px;width:180px><img ng-src="{{gift.goods.sponsor_logo}}?width=90&height=90" style=height:100%;width:100%;cursor:pointer ng-click=viewImage(gift.goods.sponsor_logo) image-fixed></div><p class=text-center style="width: 180px">\u8d5e\u52a9\u5546 Logo</p></div><div class=col-sm-4><div class=thumbnail style=height:180px;width:180px><img ng-src="{{gift.goods.image}}?width=90&height=90" style=height:100%;width:100%;cursor:pointer ng-click=viewImage(gift.goods.image) image-fixed></div><p class=text-center style="width: 180px">\u7269\u54c1\u56fe\u7247</p></div></div></div></div></div></div></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=createQuestionnaire() ng-if=!update>\u521b\u5efa\u95ee\u5377</button> <button class="btn btn-primary form-control form-submit-button" type=submit ng-click=updateQuestionnaire() ng-if="update && !questionnaire.publish_time">\u66f4\u65b0\u95ee\u5377</button></div></form></div><div class=row ng-if="update && !questionnaire.publish_time && (user.role.name === \'ADMIN\' || user.role.name === \'USER\')"><form class="panel panel-default form-horizontal"><div class=panel-heading><div class=panel-title>\u6dfb\u52a0\u95ee\u9898</div></div><div class=panel-body><form-input data-title="\'\u95ee\u9898\u7c7b\u578b\'" data-name="\'question_type\'"><select name=question_type class=form-control ng-model=question.rubric_type ng-options="r.id as r.name for r in typeArray" ng-change=change_type()></select></form-input><form-input data-title="\'\u95ee\u9898\u5185\u5bb9\'" data-name="\'question_content\'"><textarea class=form-control id=content ng-model=question.rubric name=content rows=5 autocomplete=off placeholder=\u8bf7\u586b\u5199\u95ee\u9898\u5185\u5bb9>\r' + '\n' + '\t\t\t\t\t</textarea></form-input><div ng-if="question.rubric_type === \'RCQ\' || question.rubric_type === \'MCQ\'"><div class="form-group form-inline" ng-repeat="option in question.answers track by $index"><label class="col-sm-3 control-label">\u9009\u9879&nbsp;{{$index + 1}}</label><div class=col-sm-8><input type=text class=form-control name=option ng-model=question.answers[$index] style="width: 90%"> <button class="btn btn-danger" ng-click=removeOption($index)><i class="glyphicon glyphicon-remove"></i></button></div></div></div><div ng-if="question.rubric_type === \'RCQ\' || question.rubric_type === \'MCQ\'"><form-input data-title="\'\u662f\u5426\u652f\u6301\u5176\u4ed6\u9009\u9879\'" data-name="\'other_option\'"><input type=checkbox data-toggle=toggle data-on=\u662f data-off=\u5426 data-onstyle=success data-offstyle=danger ng-model=question.answer_type bootstrapswitch></form-input></div><div class=row ng-if="question.rubric_type === \'RCQ\' || question.rubric_type === \'MCQ\'"><div class="col-sm-3 col-sm-offset-1"><button class="btn btn-default" title=\u6dfb\u52a0\u9009\u9879 ng-click=addOption()><i class="fa fa-plus"></i></button></div><br></div></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=addQuestion()>\u6dfb\u52a0\u95ee\u9898</button></div></form></div><div class=row ng-if=update><table ng-table=tableParams class="table table-striped table-responsive coupons"><body><tr ng-repeat="rubric in $data"><td data-title="\'\'"><form class="panel panel-default form-horizontal"><span class="btn pull-right" ng-click=removeQuestion(rubric.id) ng-show="!questionnaire.publish_time && (user.role.name === \'ADMIN\' || user.role.name === \'USER\')"><i class="fa fa-trash"></i> \u5220\u9664\u95ee\u9898</span><div class=panel-heading><div class=panel-title>\u95ee\u9898&nbsp;{{$index + 1}}</div></div><div class=panel-body><form-input data-title="\'\u95ee\u9898\u7c7b\u578b\'" data-name="\'question_type\'"><select name=question_type class=form-control ng-model=rubric.rubric_type ng-options="r.id as r.name for r in typeArray"></select></form-input><form-input data-title="\'\u95ee\u9898\u5185\u5bb9\'" data-name="\'question_content\'"><textarea class=form-control id=content ng-model=rubric.rubric name=content rows=5 autocomplete=off placeholder=\u8bf7\u586b\u5199\u95ee\u9898\u5185\u5bb9>\r' + '\n' + '\t\t\t\t\t\t\t\t\t</textarea></form-input><div ng-if="rubric.rubric_type === \'RCQ\' || rubric.rubric_type === \'MCQ\'"><div class="form-group form-inline" ng-repeat="option in rubric.answers"><label class="col-sm-3 control-label">\u9009\u9879&nbsp;{{$index + 1}}</label><div class=col-sm-8><input type=text class=form-control name=option ng-model=rubric.answers[$index].answer_content style="width: 90%" readonly> <button class="btn btn-danger" ng-click="removeOptionUpd(rubric, $index, option.id)" ng-if="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><i class="glyphicon glyphicon-remove"></i></button></div></div><div class="form-group form-inline" ng-repeat="option in rubric.newOptions track by $index"><label class="col-sm-3 control-label">\u65b0\u589e\u9009\u9879&nbsp;{{$index + 1}}</label><div class=col-sm-8><input type=text class=form-control name=option ng-model=rubric.newOptions[$index] style="width: 90%"> <button class="btn btn-danger" ng-click="delOption($parent.$index, $index)"><i class="glyphicon glyphicon-remove"></i></button></div></div></div><div ng-if="rubric.rubric_type === \'RCQ\' || rubric.rubric_type === \'MCQ\'"><div class=form-group><label class="col-sm-3 control-label" for=other_option>\u662f\u5426\u652f\u6301\u5176\u4ed6\u9009\u9879</label><div class=col-sm-8 style="margin-top: 5px"><span class="label label-success" ng-show="rubric.answer_type===\'OTHER\'"><font ng-bind=answer_type_hash[rubric.answer_type]></font></span> <span class="label label-danger" ng-show="rubric.answer_type===\'NORMAL\'"><font ng-bind=answer_type_hash[rubric.answer_type]></font></span></div></div></div><div class=row ng-if="(rubric.rubric_type === \'RCQ\' || rubric.rubric_type === \'MCQ\') && (user.role.name === \'ADMIN\' || user.role.name === \'USER\')"><div class="col-sm-3 col-sm-offset-1"><button class="btn btn-default" title=\u6dfb\u52a0\u9009\u9879 ng-click=addOptionUpd($parent.$index)><i class="fa fa-plus"></i></button></div><br></div></div><div ng-show="(user.role.name === \'ADMIN\' || user.role.name === \'USER\') && !questionnaire.publish_time"><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=updateQuestion(rubric)>\u4fee\u6539\u95ee\u9898</button></div></form></td></tr></body></table></div><div class="modal fade" id=confirm tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirm()>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/activity/plugin/questionnaire_stat.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col-xs-9 col-sm-9" ng-controller=QueStatCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref=activity_item.questionnaire_plugin><i class="fa fa-reply"></i> \u8fd4\u56de</a>&nbsp;&nbsp;</div></div><form class=form-horizontal><div class=row><div class=col-sm-12><form-input data-title="\'\u9009\u62e9\u95ee\u5377\'" data-name="\'questionnaire\'"><select class="js-example-basic-hide-search col-sm-12" activity-id=activityId my-select2></select></form-input></div></div></form><div class=row ng-show=people><span class="label label-info">\u53c2\u4e0e\u603b\u4eba\u6570\uff1a<font ng-bind=number></font></span></div><br><div class=row ng-repeat="question in questions"><form class="panel panel-default form-horizontal" my-collapse><span class="btn pull-right"><i class="fa fa-chevron-up"></i>&nbsp;\u6536\u8d77</span><div class=panel-heading><div class=panel-title>\u95ee\u9898 {{$index + 1}}</div></div><div class=panel-body><form-input data-title="\'\u95ee\u9898\u7c7b\u578b\'" data-name="\'type\'"><select class=form-control name=type><option>{{typeMap[question.rubric.rubric_type]}}</option></select></form-input><form-input data-title="\'\u95ee\u9898\u5185\u5bb9\'" data-name="\'content\'"><textarea class=form-control name=content rows=3 autocomplete=off readonly ng-model=question.rubric.rubric></textarea></form-input><div class="panel panel-info"><a class="btn pull-right" ng-if="question.rubric.rubric_type == \'RCQ\' || question.rubric.rubric_type == \'MCQ\'" ng-href="/api/questionnaires/rubric/{{question.rubric.id}}/normal/{{questionnaire.title + \'-\u95ee\u9898\' + ($index + 1) + \'-\u9009\u9879\u7b54\u6848\'}}.csv?access_token={{auth_token}}"><i class="fa fa-save"></i> \u5bfc\u51fa\u7535\u5b50\u7248</a> <a class="btn pull-right" ng-if="question.rubric.rubric_type == \'SAQ\' || question.rubric.rubric_type == \'PUP\'" ng-href="/api/questionnaires/rubric/{{question.rubric.id}}/normal/{{questionnaire.title + \'-\u95ee\u9898\' + ($index + 1) + \'-\u7b54\u6848\'}}.csv?access_token={{auth_token}}"><i class="fa fa-save"></i> \u5bfc\u51fa\u5168\u90e8\u7b54\u6848\u7535\u5b50\u7248</a><div class=panel-heading><div class=panel-title ng-if="question.rubric.rubric_type == \'RCQ\' || question.rubric.rubric_type == \'MCQ\'">\u9009\u9879\u7b54\u6848</div><div class=panel-title ng-if="question.rubric.rubric_type == \'SAQ\' || question.rubric.rubric_type == \'PUP\'">\u7b54\u6848<font size=1>\uff08ps\uff1a\u4e3a\u6700\u65b0\u76845\u6761\u7b54\u6848\u9884\u89c8\uff09</font></div></div><div class=panel-body><table class="table table-bordered" ng-if="question.rubric.rubric_type == \'RCQ\' || question.rubric.rubric_type == \'MCQ\'"><thead><th>\u7f16\u53f7</th><th>\u9009\u9879\u5185\u5bb9</th><th>\u7537</th><th>\u5973</th><th>\u603b\u4eba\u6570</th></thead><tbody><tr ng-repeat="option in question.rubric.answers"><td><font ng-bind="$index + 1"></font></td><td><font ng-bind=option.answer_content></font></td><td><font ng-bind=option.male></font></td><td><font ng-bind=option.female></font></td><td><font ng-bind=option.num></font></td></tr></tbody></table><table class="table table-hover" ng-if="question.rubric.rubric_type == \'SAQ\' || question.rubric.rubric_type == \'PUP\'"><thead><th>\u7b54\u9898\u8005</th><th>\u6027\u522b</th><th>\u5b66\u9662</th><th>\u4e13\u4e1a</th><th>\u7b54\u6848</th></thead><tbody><tr ng-repeat="answer in question.answers"><td><font ng-bind=answer.user_obj.nickname></font></td><td><font ng-bind=genderMap[answer.user_obj.sex]></font>&nbsp;&nbsp;&nbsp;&nbsp;</td><td><font ng-bind=answer.user_obj.university.name></font></td><td><font ng-bind=answer.user_obj.major></font></td><td ng-if="question.rubric.rubric_type == \'SAQ\'"><textarea class=form-control name=content rows=3 autocomplete=off readonly ng-model=answer.answer_content></textarea></td><td ng-if="question.rubric.rubric_type == \'PUP\'"><img ng-src="{{answer.answer_content[0]}}?width=90&height=90" ng-click=viewImage(answer.answer_content[0]) style="width: 100px;height: 100px;cursor: pointer"></td></tr></tbody></table></div></div><div class="panel panel-success" ng-if="(question.rubric.rubric_type == \'RCQ\' || question.rubric.rubric_type == \'MCQ\') && question.answers && question.answers.length !== 0"><a class="btn pull-right" ng-href="/api/questionnaires/rubric/{{question.rubric.id}}/other/{{questionnaire.title + \'-\u95ee\u9898\' + ($index + 1) + \'-\u5176\u4ed6\u7b54\u6848\'}}.csv?access_token={{auth_token}}"><i class="fa fa-save"></i> \u5bfc\u51fa\u7535\u5b50\u7248</a><div class=panel-heading><div class=panel-title>\u5176\u4ed6\u7b54\u6848<font size=1>\uff08ps\uff1a\u4e3a\u6700\u65b0\u76845\u6761\u7b54\u6848\u9884\u89c8\uff09</font></div></div><div class=panel-body><table class="table table-hover"><thead><th>\u7b54\u9898\u8005</th><th>\u6027\u522b</th><th>\u5b66\u9662</th><th>\u4e13\u4e1a</th><th>\u7b54\u6848</th></thead><tbody><tr ng-repeat="answer in question.answers"><td><font ng-bind=answer.user_obj.nickname></font></td><td><font ng-bind=genderMap[answer.user_obj.sex]></font>&nbsp;&nbsp;&nbsp;&nbsp;</td><td><font ng-bind=answer.user_obj.university.name></font></td><td><font ng-bind=answer.user_obj.major></font></td><td><textarea class=form-control rows=3 ng-model=answer.answer_content readonly></textarea></td></tr></tbody></table></div></div></div></form></div><button class="btn btn-default center-block more-btn" ng-click=loadMoreQuestion() ng-disabled=loadMoreBtn ng-show=loadMore><font ng-bind=loadQuestionBtn></font></button></div>');
    $templateCache.put('partial/activity/plugin/signin.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=SignInCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="activity_item({ id: activity.id })"><i class="fa fa-reply"></i> \u8fd4\u56de</a> <a ng-show=sign_big_screen class="btn btn-default" target=_blank ng-href="{{\'/app/sign_in_screen/#\' + sign_in.id}}"><i class="fa fa-desktop"></i> \u5927\u5c4f\u5e55</a>&nbsp;&nbsp;</div><div class=btn-group ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><a class="btn btn-primary" ng-click=complete_sign_in() data-toggle=tooltip data-placement=bottom title=\u624b\u673a\u5ba2\u6237\u7aef\u7528\u6237\u65e0\u6cd5\u7ee7\u7eed\u8fdb\u884c\u7b7e\u5230\uff0c\u4f46\u7b7e\u5230\u529f\u80fd\u4ecd\u7136\u5728\u624b\u673a\u5ba2\u6237\u7aef\u5c55\u793a\u3002 tool-tip><i class="glyphicon glyphicon-stop"></i> \u7ed3\u675f\u672c\u6b21\u7b7e\u5230</a> <a class="btn btn-danger" ng-click=delete() data-toggle=tooltip data-placement=bottom title=\u5f7b\u5e95\u5220\u9664\u7b7e\u5230\u529f\u80fd\uff0c\u4e4b\u524d\u4fdd\u5b58\u7684\u7b7e\u5230\u5185\u5bb9\u5168\u90e8\u6e05\u7a7a\u3002 tool-tip><i class="fa fa-close"></i> \u5220\u9664\u7b7e\u5230\u529f\u80fd</a> <a class="btn btn-warning" ng-click=close() data-toggle=tooltip data-placement=bottom title=\u6682\u65f6\u5c06\u7b7e\u5230\u529f\u80fd\u4ece\u624b\u673a\u5ba2\u6237\u7aef\u4e0b\u67b6\u4e0d\u663e\u793a\uff0c\u518d\u6b21\u6253\u5f00\u7b7e\u5230\u529f\u80fd\u65f6\uff0c\u4e4b\u524d\u4fdd\u5b58\u7684\u7b7e\u5230\u5185\u5bb9\u4f9d\u65e7\u5b58\u5728\uff0c\u53ef\u7ee7\u7eed\u7f16\u8f91\u3002 tool-tip><i class="fa fa-eye"></i> \u6682\u65f6\u5173\u95ed\u672c\u6b21\u7b7e\u5230</a></div><div class=btn-group ng-if="sign_in && sign_in.id && sign_in.id > 0"><a class="btn btn-default" ng-click=viewresult()><i class="fa fa-share"></i> \u67e5\u770b\u7b7e\u5230\u7ed3\u679c</a></div></div><div><form role=form enctype=multipart/form-data><div class="panel panel-default form-horizontal"><div class=panel-heading><div class=panel-title>\u7b7e\u5230\u6982\u51b5</div></div><div class=panel-body><form-input data-title="\'\u7b7e\u5230\u7ed3\u675f\u65f6\u95f4\'" data-name="\'sign_in_end_time\'"><datetimepicker datetime=sign_in.sign_in_end_time starttime=sign_in.sign_in_start_time></datetimepicker></form-input><form-input data-title="\'\u8d5e\u52a9\u5546\u540d\u79f0\'" data-name="\'sponsor_name\'"><input ng-model=sign_in.sponsor_name class=form-control type=text placeholder=\u8bf7\u5c06\u8d5e\u52a9\u5546\u540d\u79f0\u9650\u5236\u572815\u4e2a\u6c49\u5b57\u4ee5\u5185 regexp=sponser_name blur></form-input><form-input data-title="\'\u8d5e\u52a9\u5546Logo\'" data-name="\'sponsor_logo\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=sign_in.sponsor_logo class="fileinput-new thumbnail"><img ng-src={{sign_in.sponsor_logo.substring(0)}} style="width: 178px"></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom title=\u56fe\u7247\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc71M tool-tip><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=sponsor_logo data-file=sign_in.sponsor_logo></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=create() ng-hide=update>\u521b&nbsp;\u5efa</button> <button class="btn btn-primary form-control form-submit-button" type=submit ng-click=change() ng-show=update>\u66f4&nbsp;\u65b0</button></div><div class="panel panel-default form-horizontal" ng-show=sign_in_qrcode><div class=panel-heading><div class=panel-title>\u7b7e\u5230\u4e8c\u7ef4\u7801</div></div><div class=panel-body><form-input data-title="\'\u7b7e\u5230\u4e8c\u7ef4\u7801\'" data-name="\'logo\'"><i-qrcode data=sign_in user=user></i-qrcode></form-input></div></div></form></div></div>');
    $templateCache.put('partial/activity/plugin/signinat.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=SignInStatCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ng-click=returntosignin()><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><div class=row><div class=col-sm-11><span class="label label-info">ps: \u4e3a\u4e86\u4fdd\u8bc1\u540c\u5b66\u4eec\u7684\u9690\u79c1\uff0c\u4ec5\u672c\u793e\u6210\u5458\u663e\u793a\u771f\u5b9e\u59d3\u540d</span></div></div><br><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="signin in $data"><td data-title="\'\u7b7e\u5230\u4eba\u59d3\u540d\'" header-class=text-left><font ng-bind=signin.user.name ng-if=signin.user.name></font> <font style="color: #ccc" ng-if=!signin.user.name>\u975e\u672c\u793e\u6210\u5458</font></td><td data-title="\'\u7b7e\u5230\u4eba\u6635\u79f0\'" header-class=text-left>{{signin.user.nickname}}</td><td data-title="\'\u7535\u8bdd\u53f7\u7801\'" header-class=text-left>{{signin.user.phone}}</td><td data-title="\'\u7b7e\u5230\u53f7\'" header-class=text-left>{{signin.sign_in_index|signNumber}}</td><td data-title="\'\u7b7e\u5230\u65f6\u95f4\'" header-class=text-left>{{signin.sign_in_time|date:"yyyy-MM-dd HH:mm"}}</td></tr></tbody></table></div>');
    $templateCache.put('partial/activity/plugin/stat.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=StatCtrl><div class=row><div class=col-md-4><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="activity_item({ id: activity.id })"><i class="fa fa-reply"></i> \u8fd4\u56de</a>&nbsp;&nbsp;&nbsp;</div></div></div><div class="col-md-8 md-offset-1 text-left"><p class="preview-item shake shake-rotate" data-am=":enter right move 500px scale up 100% over 2.0s:go shake" data-am-shake=":shake " style=font-size:40px;color:#2CC7F9>\u6d3b\u52a8\u6d3b\u8dc3\u5ea6\uff1a<font ng-bind=summary.total></font></p></div></div><div><h3 class="col-md-12 text-center">\u57fa\u672c\u4fe1\u606f</h3><hr class=col-md-12 style="border-top-color:#E4DEDE"><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u6d3b\u52a8\u70b9\u51fb\u6570</div></div><div class=panel-body><font ng-bind=summary.browse_count></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u6d3b\u52a8\u6536\u85cf\u6570</div></div><div class=panel-body>{{summary.fav_count}}</div></div></div><div ng-hide=plugin_exist.sign_in><h3 class="col-md-12 text-center">\u7b7e\u5230</h3><hr class=col-md-12 style="border-top-color:#E4DEDE"><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7b7e\u5230\u4eba\u6570</div></div><div class=panel-body><font ng-bind=summary.sign_in_count></font></div></div></div></div><div ng-hide=plugin_exist.ticket><h3 class="col-md-12 text-center">\u7535\u5b50\u7968</h3><hr class=col-md-12 style="border-top-color:#E4DEDE"><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u62a2\u7968\u4eba\u6570</div></div><div class=panel-body><font ng-bind=summary.ticket_claimed_count></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u5230\u573a\u4eba\u6570</div></div><div class=panel-body><font ng-bind=summary.ticket_used_count></font></div></div></div></div><div ng-hide=plugin_exist.timeline><h3 class="col-md-12 text-center">\u7206\u6599</h3><hr class=col-md-12 style="border-top-color:#E4DEDE"><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7206\u6599\u603b\u6570</div></div><div class=panel-body><font ng-bind=summary.comment_count></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7206\u6599\u56de\u590d\u603b\u6570</div></div><div class=panel-body><font ng-bind=summary.reply_comment_count></font></div></div></div></div><div ng-if="summary.votes.length > 0" ng-hide=plugin_exist.vote><h3 class="col-md-12 text-center">\u6295\u7968</h3><hr class=col-md-12 style="border-top-color:#E4DEDE"><div class="col-md-3 text-center" ng-repeat="vote in summary.votes"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u6295\u7968\u603b\u6570</div></div><div class=panel-body><font ng-bind=vote.vote_count></font></div></div></div></div><div ng-hide=plugin_exist.questionnaire><h3 class="col-md-12 text-center">\u95ee\u5377</h3><hr class=col-md-12 style="border-top-color: #E4DEDE"><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u95ee\u5377\u9898\u76ee\u603b\u6570</div></div><div class=panel-body><font ng-bind=summary.questionnaire.rubric_num></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u53c2\u4e0e\u603b\u4eba\u6570</div></div><div class=panel-body><font ng-bind=summary.questionnaire.people_num></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7537\u6027\u603b\u6570</div></div><div class=panel-body><font ng-bind=summary.questionnaire.male></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u5973\u6027\u603b\u6570</div></div><div class=panel-body><font ng-bind=summary.questionnaire.female></font></div></div></div></div></div></div><script>am.start();</script>');
    $templateCache.put('partial/activity/plugin/ticket.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col-xs-9 col-sm-9" ng-controller=TicketCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="activity_item({ id: activity.id })"><i class="fa fa-reply"></i> \u8fd4\u56de</a> <a ng-show=ticket_big_screen class="btn btn-default" target=_blank ng-href="{{\'/app/ticket_screen/#\' + ticket.id}}"><i class="fa fa-desktop"></i> \u5927\u5c4f\u5e55</a>&nbsp;&nbsp;</div><div class=btn-group ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><a class="btn btn-primary" ng-click=complete_ticket() data-toggle=tooltip data-placement=bottom title=\u624b\u673a\u5ba2\u6237\u7aef\u7528\u6237\u65e0\u6cd5\u7ee7\u7eed\u4f7f\u7528\u7535\u5b50\u7968\uff0c\u4f46\u7535\u5b50\u7968\u529f\u80fd\u4ecd\u7136\u5728\u624b\u673a\u5ba2\u6237\u7aef\u5c55\u793a\u3002 tool-tip><i class="glyphicon glyphicon-stop"></i> \u505c\u7528\u7535\u5b50\u7968</a> <a class="btn btn-danger" ng-click=close() data-toggle=tooltip data-placement=bottom title=\u6682\u65f6\u5c06\u7535\u5b50\u7968\u529f\u80fd\u4ece\u624b\u673a\u5ba2\u6237\u7aef\u4e0b\u67b6\u4e0d\u663e\u793a\uff0c\u518d\u6b21\u6253\u5f00\u7535\u5b50\u7968\u529f\u80fd\u65f6\uff0c\u4e4b\u524d\u4fdd\u5b58\u7684\u5019\u9009\u9879\u5185\u5bb9\u4f9d\u65e7\u5b58\u5728\uff0c\u53ef\u7ee7\u7eed\u7f16\u8f91\u3002 tool-tip><i class="fa fa-close"></i> \u5173\u95ed\u7535\u5b50\u7968</a></div></div><div><form class="panel panel-default form-horizontal"><div class=panel-heading><div class=panel-title>\u7535\u5b50\u7968\u6982\u51b5</div></div><div class=panel-body><form-input data-title="\'\u7535\u5b50\u7968\u6570\u91cf\'" data-name="\'total\'"><input type=number class=form-control id=total ng-model=ticket.total name=total placeholder=\u8bf7\u8f93\u5165\u6574\u6570></form-input><form-input data-title="\'\u62a2\u7968\u5f00\u59cb\u65f6\u95f4\'" data-name="\'start_time\'"><datetimepicker datetime=ticket.start_time></datetimepicker></form-input><form-input data-title="\'\u62a2\u7968\u7ed3\u675f\u65f6\u95f4\'" data-name="\'end_time\'"><datetimepicker datetime=ticket.end_time></datetimepicker></form-input><form-input data-title="\'\u7535\u5b50\u7968\u8bf4\u660e\'" data-name="\'content\'"><textarea class=form-control id=content ng-model=ticket.content name=content rows=5 autocomplete=off placeholder=\u62a2\u7968\u8bf4\u660e\u53ca\u4f7f\u7528\u8bf4\u660e\uff0c200\u5b57\u4ee5\u5185>\r' + '\n' + '        </textarea></form-input><form-input data-title="\'\u9a8c\u7968\u5730\u70b9\'" data-name="\'location\'"><input name=location id=location ng-model=ticket.location class=form-control type=text></form-input><div class="bs-callout bs-callout-warning col-md-10 col-md-offset-1" ng-show=ticket_view><h4>\u7535\u5b50\u7968\u793a\u610f\u56fe</h4><p>\u4eb2\u7231\u7684\u540c\u5b66\u4eec\uff0c\u7535\u5b50\u7968\u4e0d\u4ec5\u4f5c\u4e3a\u6d3b\u52a8\u5165\u573a\u7684\u552f\u4e00\u7535\u5b50\u51ed\u8bc1\uff0c\u66f4\u662f\u4e3a\u793e\u56e2\u8c0b\u798f\u5229\u7684\u4e00\u5927\u5229\u5668\u554a~~\u543c\u543c\uff0c\u4e00\u5f20\u6210\u719f\u7684\u7535\u5b50\u7968\u5e94\u8be5\u662f\u8fd9\u6837\u6ef4</p><div class=row><div class="col-xs-8 col-sm-9" style=height:250px;margin-right:-40px><img id=ticket_image class="col-xs-12 col-sm-12" ng-src={{ticket_cover}} style="height:100%"> <font id=ticket_time_loc>{{ticket.activity.start_time | date: \'yyyy-MM-dd HH:mm\'}}&nbsp;&nbsp;&nbsp;{{ticket.location}}</font> <font id=ticket_subject>{{ticket.activity.subject}}</font> <font id=ticket_sponsor_name_title>\u7279\u522b\u611f\u8c22\uff1a</font> <font id=ticket_sponsor_name>{{ticket.sponsor_name}}</font> <img id=ticket_logo ng-src="{{ticket_logo}}"> <img id=ticket_community_logo ng-src="{{ticket.community_logo.substring(0)}}"></div><div class="col-xs-4 col-sm-4" style=height:250px;margin-left:-20px><img class="col-xs-12 col-sm-12" src=/static/images/qr_code.png style="height:100%"></div></div></div><form-input data-title="\'\u8d5e\u52a9\u5546\u540d\u79f0\'" data-name="\'sponsor_name\'"><input name=sponsor_name id=sponsor_name ng-model=ticket.sponsor_name class=form-control type=text placeholder=\u8bf7\u5c06\u8d5e\u52a9\u5546\u540d\u79f0\u9650\u5236\u572810\u4e2a\u6c49\u5b57\u4ee5\u5185 regexp=sponsor_name_regexp blur></form-input><form-input data-title="\'\u8d5e\u52a9\u5546Logo\'" data-name="\'logo\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=ticket.logo class="fileinput-new thumbnail" style=height:80px;width:80px><img ng-src={{ticket.logo.substring(0)}} image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=logo data-file=ticket.logo></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input><form-input data-title="\'\u8d5e\u52a9\u5546\u6d77\u62a5\'" data-name="\'cover\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=ticket.cover class="fileinput-new thumbnail" style=height:200px;width:300px><img ng-src={{ticket.cover.substring(0)}} image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=cover data-file=ticket.cover></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input><form-input data-title="\'\u9a8c\u7968\u5bc6\u7801\'" data-name="\'password\'"><input class=form-control readonly id=password ng-model=activity.host.password_code name=password><br><div class="bs-callout bs-callout-warning col-md-12"><p>\u8fd9\u4e2a\u5bc6\u7801\u5c0f\u4f19\u4f34\u4eec\u4e00\u5b9a\u8981\u7262\u8bb0\u5e76\u544a\u77e5\u5bf9\u5e94\u53c2\u4e0e\u9a8c\u7968\u7684\u6218\u53cb\u4eec\uff0c\u522b\u4eba\u6253\u6b7b\u90fd\u4e0d\u80fd\u8bf4\u5662\uff01</p></div></form-input></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=create() ng-hide=update>\u521b\u5efa</button> <button class="btn btn-primary form-control form-submit-button" type=submit ng-click=change() ng-if=update>\u66f4\u65b0</button></div></form></div></div>');
    $templateCache.put('partial/activity/plugin/timeline.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9"><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="activity_item({ id: activity.id })"><i class="fa fa-reply"></i> \u8fd4\u56de</a> <a class="btn btn-default" target=_blank ng-href="{{\'/app/screen/#\' + $parent.activity.id}}"><i class="fa fa-desktop"></i> \u5927\u5c4f\u5e55</a></div></div><div ng-controller=TimelineCtrl class=form-horizontal><form class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7206\u6599</div></div><div class=panel-body><div class="bs-callout bs-callout-warning col-md-10 col-md-offset-1" style=margin-top:10px><h4>\u6d3b\u52a8\u52a8\u6001\u8bf4\u660e</h4><p>1\u3001\u901a\u8fc7\u56fe\u7247\u548c\u6587\u5b57\u5f62\u5f0f\u8fd8\u539f\u73b0\u573a\u5b9e\u65f6\u52a8\u6001\uff0c\u6bcf\u4e00\u6761\u52a8\u6001\u53ef\u901a\u8fc7\u5927\u5c4f\u5e55\u5b9e\u65f6\u5c55\u793a\u3002<br>2\u3001\u793e\u56e2\u53ef\u4ee5\u53d1\u5e03\u6d3b\u52a8\u52a8\u6001\uff0c\u624b\u673a\u5ba2\u6237\u7aef\u7528\u6237\u4e5f\u53ef\u4ee5\u53d1\u5e03\u6d3b\u52a8\u52a8\u6001\uff0c\u4f46\u52a8\u6001\u5927\u5c4f\u5e55\u7684\u5185\u5bb9\u53ea\u6709\u901a\u8fc7\u793e\u56e2\u5ba1\u6838\u540e\u624d\u5c55\u793a\u3002</p></div><form-input data-title="\'\u6807\u9898\'" data-name="\'title\'" ng-if=false><input name=title id=title ng-model=comment.title class=form-control type=text></form-input><form-input data-title="\'\u5185\u5bb9\'" data-name="\'content\'" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><textarea class=form-control id=content ng-model=comment.content name=content rows=5 autocomplete=off>\r' + '\n' + '          </textarea></form-input><form-input data-title="\'\u56fe\u7247\'" data-name="\'images\'" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom title=\u5355\u5f20\u56fe\u7247\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc71M tool-tip><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a6\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=images multiple data-files=comment.images></span><div ng-repeat="image in comment.images"><i class="fa fa-times timeline-file-remove" ng-click=removeFile($index)></i>{{image.name}}</div></div></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=submit() ng-show="user.role.name===\'ADMIN\' || user.role.name === \'USER\'">\u53d1\u5e03</button></form><table ng-table=tableParams class="table table-striped table-responsive coupons"><tbody><tr ng-repeat="comment in $data"><td data-title="\'\'"><post data-comment=comment data-user="user"></td></tr></tbody></table></div></div>');
    $templateCache.put('partial/activity/plugin/vote.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=VoteCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="activity_item({ id: activity.id })"><i class="fa fa-reply"></i> \u8fd4\u56de</a>&nbsp;&nbsp;</div><div class=btn-group ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><a class="btn btn-primary" ng-click=complete_vote() data-toggle=tooltip data-placement=bottom title=\u624b\u673a\u5ba2\u6237\u7aef\u7528\u6237\u65e0\u6cd5\u7ee7\u7eed\u53c2\u4e0e\u6295\u7968\uff0c\u4f46\u6295\u7968\u529f\u80fd\u4ecd\u7136\u5728\u624b\u673a\u5ba2\u6237\u7aef\u5c55\u793a\u3002 tool-tip><i class="glyphicon glyphicon-stop"></i> \u7ed3\u675f\u672c\u6b21\u6295\u7968</a> <a class="btn btn-danger" ng-click=delete() data-toggle=tooltip data-placement=bottom title=\u5f7b\u5e95\u5220\u9664\u6295\u7968\u529f\u80fd\uff0c\u4e4b\u524d\u4fdd\u5b58\u7684\u5019\u9009\u9879\u5185\u5bb9\u5168\u90e8\u6e05\u7a7a\u3002 tool-tip><i class="fa fa-close"></i> \u5220\u9664\u6295\u7968\u529f\u80fd</a> <a class="btn btn-warning" ng-click=close() data-toggle=tooltip data-placement=bottom title=\u6682\u65f6\u5c06\u6295\u7968\u529f\u80fd\u4ece\u624b\u673a\u5ba2\u6237\u7aef\u4e0b\u67b6\u4e0d\u663e\u793a\uff0c\u518d\u6b21\u6253\u5f00\u6295\u7968\u529f\u80fd\u65f6\uff0c\u4e4b\u524d\u4fdd\u5b58\u7684\u5019\u9009\u9879\u5185\u5bb9\u4f9d\u65e7\u5b58\u5728\uff0c\u53ef\u7ee7\u7eed\u7f16\u8f91\u3002 tool-tip><i class="fa fa-eye"></i> \u6682\u65f6\u5173\u95ed\u672c\u6b21\u6295\u7968</a></div><div class=btn-group ng-if="vote && vote.id && vote.id > 0"><a class="btn btn-default" ng-click=viewresult()><i class="fa fa-share"></i> \u67e5\u770b\u6295\u7968\u7ed3\u679c</a></div></div><div><form class="panel panel-default form-horizontal"><div class=panel-heading><div class=panel-title>\u6295\u7968\u6982\u51b5</div></div><div class="bs-callout bs-callout-warning col-md-10 col-md-offset-1" style=margin-top:10px><h4>\u5355\u9879\u6295\u7968\u529f\u80fd\u89e3\u91ca</h4><p>1\u300124\u5c0f\u65f6\u5185\uff0c\u53ea\u80fd\u4e3a\u4e00\u4e2a\u5019\u9009\u9879\u62951\u7968\uff0c\u652f\u6301\u591a\u4e2a\u5019\u9009\u9879\u3002<br>2\u3001\u6295\u7968\u5f00\u59cb\u540e\uff0c\u5019\u9009\u9879\u5185\u5bb9\u652f\u6301\u5b9e\u65f6\u66f4\u65b0\u3002</p></div><div class=panel-body><form-input data-title="\'\u6295\u7968\u6807\u9898\'" data-name="\'vote_title\'"><input ng-model=vote.title class=form-control type=text placeholder=\u53ef\u4ee5\u662f\u4eba\u540d\uff0c\u4e5f\u53ef\u4ee5\u662f\u67d0\u4e2a\u89c2\u70b9></form-input><form-input data-title="\'\u6295\u7968\u5f00\u59cb\u65f6\u95f4\'" data-name="\'vote_start_time\'"><datetimepicker datetime=vote.vote_start_time></datetimepicker></form-input><form-input data-title="\'\u6295\u7968\u7ed3\u675f\u65f6\u95f4\'" data-name="\'vote_end_time\'"><datetimepicker datetime=vote.vote_end_time></datetimepicker></form-input><form-input data-title="\'\u6295\u7968\u8303\u56f4\'" data-name="\'vote_scope\'"><select name=vote_scope id=vote_scope ng-init="vote.scope_id = vote.scope_id || rangeArray[0].id" ng-model=vote.scope_id ng-options="r.id as r.name for r in rangeArray" class=form-control data-toggle=tooltip data-placement=bottom title=\u54ea\u4e9b\u4eba\u53ef\u4ee5\u53c2\u4e0e\u8fd9\u6b21\u6295\u7968 tool-tip></select></form-input><form-input data-title="\'\u6295\u7968\u8bf4\u660e\'" data-name="\'vote_description\'"><textarea class=form-control id=content ng-model=vote.vote_description name=vote_description rows=5 autocomplete=off placeholder=\u8bf7\u5728\u6b64\u586b\u5165\u5bf9\u6295\u7968\u89c4\u5219\u7684\u66f4\u591a\u8bf4\u660e\uff0c\u6bd4\u5982\uff1a\u53ea\u6709\u73b0\u573a\u7b7e\u5230\u7684\u7528\u6237\u624d\u80fd\u6295\u7968>\r' + '\n' + '          </textarea></form-input></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=create() ng-hide=update>\u521b\u5efa</button> <button class="btn btn-primary form-control form-submit-button" type=submit ng-click=change() ng-if=update>\u66f4\u65b0</button></div></form><form class="panel panel-default form-horizontal" ng-if="vote && vote.id && vote.id > 0" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><div class=panel-heading><div class=panel-title>\u6dfb\u52a0\u65b0\u7684\u5019\u9009\u9879</div></div><div class=panel-body><form-input data-title="\'\u5019\u9009\u9879\'" data-name="\'newcandi.title\'"><input ng-model=newcandi.title class=form-control type=text></form-input><form-input data-title="\'\u56fe\u7247\'" data-name="\'images\'"><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file"><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a6\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=images multiple data-files=newcandi.images></span><div ng-repeat="image in newcandi.images"><i class="fa fa-times timeline-file-remove" ng-click=removeFile($index)></i>{{image.name || image.path}}</div></div></form-input><form-input data-title="\'\u5019\u9009\u8bf4\u660e\'" data-name="\'newcandi.describe\'"><textarea class=form-control id=newcandi.describe ng-model=newcandi.describe rows=5 autocomplete=off placeholder="">\r' + '\n' + '        </textarea></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=addcandi()><i class="fa fa-plus"></i> \u6dfb\u52a0\u5019\u9009\u9879\u76ee</button></form><table ng-table=tableParams class="table table-striped table-responsive coupons"><tbody><tr ng-repeat="candi in $data"><td data-title="\'\'" style=border:0px><form class="panel panel-default form-horizontal"><span class="btn pull-right" ng-click=deletecandi(candi) ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><i class="fa fa-save"></i> \u5220\u9664\u5019\u9009\u9879</span><div class=panel-heading><div class=panel-title>\u5019\u9009\u7f16\u53f7:{{$index + 1}}</div></div><div class=panel-body><form-input data-title="\'\u5019\u9009\u9879\'" data-name="\'candi.title\'"><input ng-model=candi.title class=form-control type=text></form-input><form-input data-title="\'\u5df2\u6709\u56fe\u7247\'" data-name="\'images\'"><div class="fileinput fileinput-new" data-provides=fileinput><span ng-repeat="image in candi.images"><span ng-if=image.path class=thumbnail><img ng-src="{{image.path.substring(0)}}?width=160&height=160" style="width: 178px" ng-click=viewImage(image.path)> <i class="fa fa-times timeline-file-remove" ng-click="removeExistCandiFile(candi, image)" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"></i></span></span></div></form-input><form-input data-title="\'\u56fe\u7247\'" data-name="\'newimages\'" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file"><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a6\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=newimages multiple data-files=candi.newimages></span><div ng-repeat="image in candi.newimages"><i class="fa fa-times timeline-file-remove" ng-click="removeCandiFile(candi, $index)"></i>{{image.name}}</div></div></form-input><form-input data-title="\'\u5019\u9009\u8bf4\u660e\'" data-name="\'candi.describe\'"><textarea class=form-control ng-model=candi.describe rows=5 autocomplete=off placeholder="">\r' + '\n' + '                  </textarea></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=updatecandi(candi) ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><i class="fa fa-save"></i> \u66f4\u65b0\u5019\u9009\u9879\u76ee</button></form></td></tr></tbody></table></div></div>');
    $templateCache.put('partial/activity/plugin/votestat.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9" ng-controller=VoteStatCtrl><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ng-click=returntovote()><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><div class=row><div class="col-md-offset-3 col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u603b\u6295\u7968\u6570</div></div><div class=panel-body>{{vote.vote_num}}</div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u603b\u53c2\u4e0e\u4eba\u6570</div></div><div class=panel-body>{{vote.participator_num}}</div></div></div></div><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u5019\u9009\u9879\u5f97\u7968\u6570\u91cf<font size=1></font></div></div><div class=panel-body><canvas id=bar class="chart chart-bar" data=data_bar labels=labels_bar series=series_bar options=options_bar colours=colours></canvas></div></div><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u5019\u9009\u9879\u652f\u6301\u7387\u767e\u5206\u6bd4<font size=1></font></div></div><div class=panel-body><canvas id=pie class="chart chart-pie" data=data_pie labels=labels_pie series=series_pie options=option_pie legend=true colours=colours></canvas></div></div></div>');
    $templateCache.put('partial/activity/top_modal_iwx.html', '<h4 style=text-align:center>\u786e\u5b9a\u8981\u5c06\u8be5\u6d3b\u52a8\u7f6e\u9876\uff1f</h4><div class=modal-footer><button class="btn btn-primary" ng-click=ok()>\u786e\u5b9a</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/admin/login.html', '<div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1" ng-controller=LoginCtrl><form method=POST ng-submit=submit() class="form-horizontal login-form" role=form name=loginForm><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7ba1\u7406\u5458\u767b\u5f55</div></div><div class=panel-body><form-input data-title="\'\u90ae\u7bb1\'" data-name="\'email\'"><input name=email id=email ng-model=user.email class=form-control type=text required></form-input><form-input data-title="\'\u5bc6\u7801\'" data-name="\'password\'"><input name=password id=password ng-model=user.password class=form-control type=password required></form-input><form-input data-title="\'\'" data-name="\'\'"><input class="btn btn-primary" id=submit name=submit type=submit value=\u767b\u5f55> <a class=btn ng-click=resetPassword()>\u627e\u56de\u5bc6\u7801</a></form-input></div></div></form></div>');
    $templateCache.put('partial/admin/register.html', '<div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1" ng-controller=RegisterCtrl><form method=POST ng-submit=submit() class="form-horizontal register-form" role=form enctype=multipart/form-data name=registerForm><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7ba1\u7406\u5458\u4fe1\u606f</div></div><div class=panel-body><form-input data-title="\'\u6ce8\u518c\u90ae\u7bb1\'" data-name="\'email\'"><input name=email id=email ng-model=user.email class=form-control type=email required><div ng-show="registerForm.email.$invalid && registerForm.email.$dirty" class=form-error>*\u8bf7\u8f93\u5165\u90ae\u7bb1\u5730\u5740\uff0c\u683c\u5f0f\u5982iweixiao@163.com</div></form-input><form-input data-title="\'\u5bc6\u7801\'" data-name="\'password\'"><input name=password id=password ng-model=user.password class=form-control type=password ng-minlength=6 ng-maxlength=20 required><div ng-show="registerForm.password.$invalid && !registerForm.password.$pristine" class=form-error>*\u8bf7\u8f93\u51656~20\u4f4d\u5b57\u7b26\u4f5c\u4e3a\u5bc6\u7801</div></form-input><form-input data-title="\'\u59d3\u540d\'" data-name="\'name\'"><input name=name id=name ng-model=user.name ng-minlength=2 class=form-control type=text required><div ng-show="registerForm.name.$invalid && !registerForm.name.$pristine" class=form-error>*\u8bf7\u586b\u5199\u771f\u5b9e\u59d3\u540d</div></form-input><form-input data-title="\'\u624b\u673a\u53f7\u7801\'" data-name="\'phone\'"><input name=phone id=phone ng-model=user.phone class=form-control type=text ng-pattern="/^[1][358][0-9]{9}$/" required><div ng-show="registerForm.phone.$invalid && !registerForm.phone.$pristine" class=form-error>*\u8bf7\u586b\u519911\u4f4d\u624b\u673a\u53f7\u7801</div></form-input><form-input data-title="\'\u6b63\u9762\u8fd1\u7167\'" data-name="\'photo_id\'"><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=photo_id data-file=user.photo_id required></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input></div></div><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7ec4\u7ec7\u4fe1\u606f</div></div><div class=panel-body><form-input data-title="\'\u7701\'" data-name="\'province\'"><select name=province_scope id=province_scope class=form-control ng-model=community_scope.province_scope_id ng-options="r.id as r.city for r in provinceArray" ng-change=change_province()></select></form-input><form-input data-title="\'\u5e02\'" data-name="\'city\'"><select class=form-control name=city_scope id=city_scope ng-model=community_scope.city_scope_id ng-options="r.id as r.city for r in cityArray" ng-change=change_city()></select></form-input><form-input data-title="\'\u5b66\u6821\u540d\u79f0\'" data-name="\'university\'"><select class=form-control id=university name=university ng-model=community.university ng-change=select_un(community.university) ng-options="university.id as university.name for university in universities" required></select></form-input><form-input data-title="\'\u7ec4\u7ec7\u7c7b\u578b\'" data-name="\'admin_type\'"><select class=form-control id=admin_type name=admin_type ng-model=community.admin_type ng-change=type() ng-options="r.id as r.name for r in manager_type" required></select></form-input><div class=form-group><label class="col-sm-3 control-label" for=community_name>{{prefix_name}}\u540d\u79f0</label><div class=col-sm-8><input name=community_name id=community_name ng-model=community.community_name class=form-control type=text ng-maxlength=20 required><div ng-show="registerForm.community_name.$invalid && !registerForm.community_name.$pristine" class=form-error>*\u793e\u56e2\u540d\u79f0\u8bf7\u9650\u5236\u572820\u5b57\u7b26\u4ee5\u5185</div></div></div><form-input data-title="\'\u7ec4\u7ec7\u4ecb\u7ecd\'" data-name="\'community_description\'"><textarea class=form-control id=community_description ng-model=community.description name=community_description rows=5 autocomplete=off required>\r' + '\n' + '          </textarea><span class=form-error ng-show=show_description>*\u793e\u56e2\u7b80\u4ecb\u8bf7\u9650\u5236\u5728200\u5b57\u7b26\u5185</span></form-input><form-input data-title="\'\u7ec4\u7ec7LOGO\'" data-name="\'logo\'"><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=logo data-file=community.logo required></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input></div></div><div><button type=submit class="btn btn-primary form-control" ng-disabled="registerForm.$invalid || show_description">\u6ce8\u518c</button></div></form></div>');
    $templateCache.put('partial/admin/reset.html', '<div class=modal-header><h3 class=modal-title>\u627e\u56de\u5bc6\u7801</h3></div><form class=modal-body><div class=form-group><label for=email>\u90ae\u7bb1</label><input name=email id=email ng-model=reset.email class=form-control type=text required></div><a class="btn btn-primary form-control" ng-click=reset()>\u9012\u4ea4</a></form>');
    $templateCache.put('partial/article/admin/comm_article.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=CommArticleCtrl><div class=row><button class="btn btn-info pull-right" ng-click="goToArtDetail(-1, currentPage)">\u521b\u5efa\u793e\u56e2\u6587\u7ae0</button></div><div class=row><form class=form-horizontal><fieldset><legend><h4>\u6587\u7ae0\u7b80\u4ecb</h4></legend><p>\u4e3a\u4e86\u66f4\u5168\u65b9\u4f4d\u7684\u5c55\u793a\u793e\u56e2\u7684\u65b9\u65b9\u9762\u9762\uff0c\u6709\u8003\u8651\u5230\u5927\u5bb6\u5b9e\u9645\u7684\u5de5\u4f5c\u91cf\uff0c\u6240\u4ee5 i \u5fae\u6821\u652f\u6301 \u76f4\u63a5\u5c06\u5199\u597d\u7684\u516c\u4f17\u53f7\u5185\u5bb9\u5bfc\u5165\u54df\uff01\uff01\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a</p><p>1.\u6211\u4eec\u76ee\u524d\u4ec5\u652f\u6301\u76f4\u63a5\u5bfc\u5165\u5fae\u4fe1\u516c\u4f17\u53f7\u7684\u94fe\u63a5\uff1b</p><p>2.\u6bcf\u4e2a\u793e\u56e2\uff0c\u5f53\u65e5\u53d1\u9001\u6587\u7ae0\u6570\u91cf\u9650\u5236\u4e3a3\u6761\uff1b</p><p>3.\u793e\u56e2\u6587\u7ae0\u662f\u5c55\u73b0\u793e\u56e2\u6587\u5316\u5f88\u91cd\u8981\u7684\u90e8\u5206\u54df\uff01</p></fieldset></form></div><br><div class=row><span class="label label-info" style="font-size: 100%">\u6587\u7ae0\u603b\u6570\uff1a&nbsp;<font ng-bind=article_sum></font></span></div><br><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="article in $data" header-class=text-left><td data-title="\'\u6587\u7ae0\u540d\u79f0\'" header-class=text-left><a href={{article.link}} target=_blank title=\u70b9\u51fb\u6253\u5f00\u6587\u7ae0><font ng-bind=article.title></font></a></td><td data-title="\'\u53d1\u5e03\u65f6\u95f4\'" header-class=text-left><font ng-bind="article.publish_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u9605\u8bfb\u91cf\'"><center><font ng-bind=article.num></font></center></td><td data-title="\'\u72b6\u6001\'" header-class=text-left><span ng-if=article.publish class="label label-success">\u5df2\u53d1\u5e03</span> <span ng-if=!article.publish class="label label-danger">\u672a\u53d1\u5e03</span></td><td data-title="\'\u64cd\u4f5c\'"><label type=button class="btn btn-default btn-checkbox" ng-if=!article.publish ng-click=togglePubArt(article.id,article.publish) style=margin-bottom:3px;width:98px><span>\u53d1&nbsp;&nbsp;\u5e03 <i class="fa fa-volume-up"></i></span></label><font ng-if=!article.publish>&nbsp;</font><label type=button class="btn btn-default btn-checkbox" ng-if=article.publish ng-click=togglePubArt(article.id,article.publish) style=margin-bottom:3px><span>\u53d6\u6d88\u53d1\u5e03 <i class="fa fa-ban"></i></span></label><font ng-if=article.publish>&nbsp;</font><label type=button class="btn btn-info btn-checkbox" ng-click="goToArtDetail(article.id, currentPage)" style=width:86px;margin-bottom:3px><span>\u7f16&nbsp;&nbsp;\u8f91&nbsp;&nbsp;<i class="fa fa-pencil-square-o"></i></span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=deleteArticle(article.id) style=width:86px;margin-bottom:3px><span>\u5220&nbsp;&nbsp;\u9664&nbsp;&nbsp;<i class="fa fa-trash-o"></i></span></label>&nbsp;<div style="text-align: center;margin-top: 10px"><a ng-click="goToUnpubLog(\'article\', article.id)">\u64cd\u4f5c\u65e5\u5fd7</a></div></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span> <span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body><font ng-bind=confirm.message></font></div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirm();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/article/admin/comm_article_detail.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=CommArtDetailCtrl><div class=row><a class="btn btn-default" ui-sref="activity.article({ page: page})"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div><br><br><div class=row><form class=form-horizontal ng-submit=sendArticle()><div class=form-group><label class="col-md-2 control-label" for=article_title>\u6587\u7ae0\u6807\u9898</label><div class=col-md-8><input type=text class=form-control placeholder=\u8bf7\u586b\u5199\u6587\u7ae0\u6807\u9898\uff0c20\u5b57\u4ee5\u5185\u3002 maxlength=20 ng-model=article.title required></div></div><br><div class=form-group><label class="col-md-2 control-label" for=article_title>\u6587\u7ae0\u6458\u8981</label><div class=col-md-8><textarea class=form-control placeholder=\u8bf7\u586b\u5199\u6587\u7ae0\u6458\u8981\uff0c100\u5b57\u4ee5\u5185\u3002 maxlength=100 rows=10 ng-model=article.context required></textarea></div></div><br><div class=form-group><label class="col-md-2 control-label" for=article_title>\u6587\u7ae0\u94fe\u63a5</label><div class=col-md-8><input type=text class=form-control placeholder=\u672c\u793e\u5fae\u4fe1\u516c\u4f17\u53f7\u94fe\u63a5\u5730\u5740\uff0c\u76ee\u524d\u4ec5\u652f\u6301https://mp.weixin.qq.com/\u5f00\u5934\u7684\u94fe\u63a5\u3002 ng-model=article.link required></div></div><br><div class=row><div class=col-md-10><button type=submit class="btn btn-info pull-right"><i class="fa fa-send"></i> \u53d1\u9001</button></div></div></form></div></div>');
    $templateCache.put('partial/article/iwx/comm_article_iwx.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=CommArtIwxCtrl><div class=row><br><form class=form-horizontal><fieldset><legend><h4>\u8303\u56f4</h4></legend><div class=row><div class=col-md-3><form-input data-title="\'\u7701\'" data-name="\'province\'"><select name=province_scope id=province_scope class=form-control ng-model=params.province_scope_id ng-options="r.id as r.city for r in provinceArray" ng-change=change_province()></select></form-input></div><div class=col-md-3><form-input data-title="\'\u5e02\'" data-name="\'city\'"><select class=form-control name=city_scope id=city_scope ng-model=params.city_scope_id ng-options="r.id as r.city for r in cityArray" ng-change=change_city()></select></form-input></div><div class=col-md-6><form-input data-title="\'\u5b66\u6821\'" data-name="\'university\'"><select class=form-control name=university_scope id=university_scope ng-model=params.university_scope_id ng-options="r.id as r.name for r in universityArray" ng-change=change_university()></select></form-input></div></div></fieldset></form><br></div><div class=row><span class="label label-info" style="font-size: 100%">\u6587\u7ae0\u603b\u6570\uff1a&nbsp;<font ng-bind=article_sum></font></span></div><br><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="article in $data"><td data-title="\'\u6587\u7ae0\u540d\u79f0\'" header-class=text-left><a href={{article.link}} target=_blank><font ng-bind=article.title></font></a></td><td data-title="\'\u53d1\u5e03\u793e\u56e2\'" header-class=text-left><font ng-bind=article.community_obj.name></font></td><td data-title="\'\u53d1\u5e03\u65f6\u95f4\'" header-class=text-left><font ng-bind="article.publish_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u9605\u8bfb\u91cf\'"><center><font ng-bind=article.num></font></center></td><td data-title="\'\u72b6\u6001\'" header-class=text-left><span ng-if=article.publish class="label label-success">\u5df2\u53d1\u5e03</span> <span ng-if=!article.publish class="label label-danger">\u672a\u53d1\u5e03</span></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-danger btn-checkbox" ng-if=article.publish ng-click=togglePubArt(article.id,article.publish) style=margin-bottom:3px><span>\u53d6\u6d88\u53d1\u5e03 <i class="fa fa-ban"></i></span></label></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span> <span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body><font ng-bind=confirm.message></font></div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirm();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/article/university/comm_article_un.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=CommArtUnCtrl><div class=row><br><form class=form-horizontal><fieldset><legend><h4><div ng-if="user.admin_type === \'UNION\'"><font ng-bind="user.university.name | format"></font>\u5b66\u751f\u793e\u56e2</div><div ng-if="user.admin_type === \'COMMITTEE\'"><font ng-bind="user.nickname | format"></font>\u793e\u56e2</div></h4></legend><div class=row ng-show="user.admin_type === \'COMMITTEE\'"><div class=col-sm-12><ul id=org_tab class="nav nav-tabs nav-justified"><li class=active><a id=committee class=org_a>\u9662\u7cfb\u56e2\u59d4</a></li><li><a id=tissue class=org_a>\u9662\u7cfb\u5b66\u751f\u4f1a</a></li><li><a id=organization class=org_a>\u6821\u7ea7\u5b66\u751f\u7ec4\u7ec7</a></li><li><a id=union class=org_a>\u5b66\u751f\u793e\u56e2</a></li></ul></div></div><br><div class=row><div class=col-md-3 style=text-align:left;padding-left:50px ng-repeat="community in communitys"><input type=checkbox ng-model=choose_item ng-checked=choose_all ng-click="choose_community(community.id, choose_item)"> <font title={{community.name}} ng-bind="community.name | substr:9:8"></font></div></div><div class=row ng-show=show_community><div class="col-md-4 col-md-offset-4"><div ng-show=msg><br><button class="btn btn-default center-block more-btn" ng-click=load_more() ng-disabled=btn><font ng-bind=load_btn></font></button><br></div><div style="font-weight: bold;color: silver;padding: 20px 0px 20px 0px" ng-hide=msg><font ng-bind=load_msg></font></div></div></div><div class=row ng-show=msg><div class=col-md-2 style=text-align:center><div class=checkbox><label><input type=checkbox ng-model=choose_all ng-click=choose_communitys(choose_all) ng-checked=choose_all ng-disabled="communitys.length === 0"> \u5168\u9009</label></div></div></div></fieldset></form></div><br><div class=row><span class="label label-info" style="font-size: 100%">\u6587\u7ae0\u603b\u6570\uff1a&nbsp;<font ng-bind=article_sum></font></span></div><br><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="article in $data"><td data-title="\'\u6587\u7ae0\u540d\u79f0\'" header-class=text-left><a href={{article.link}} target=_blank title=\u70b9\u51fb\u6253\u5f00\u6587\u7ae0><font ng-bind=article.title></font></a></td><td data-title="\'\u53d1\u5e03\u793e\u56e2\'" header-class=text-left><a ng-click=preview_host(article.community_obj.id)><font ng-bind=article.community_obj.name></font></a></td><td data-title="\'\u53d1\u5e03\u65f6\u95f4\'" header-class=text-left><font ng-bind="article.publish_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u9605\u8bfb\u91cf\'"><center><font ng-bind=article.num></font></center></td><td data-title="\'\u72b6\u6001\'" header-class=text-left><span ng-if=article.publish class="label label-success">\u5df2\u53d1\u5e03</span> <span ng-if=!article.publish class="label label-danger">\u672a\u53d1\u5e03</span></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-success btn-checkbox" ng-if=!article.publish ng-click=togglePubArt(article.id,article.publish) style=margin-bottom:3px;width:98px><span>\u53d1&nbsp;&nbsp;\u5e03 <i class="fa fa-volume-up"></i></span></label><font ng-if=!article.publish>&nbsp;</font><label type=button class="btn btn-danger btn-checkbox" ng-if=article.publish ng-click=togglePubArt(article.id,article.publish) style=margin-bottom:3px><span>\u53d6\u6d88\u53d1\u5e03 <i class="fa fa-ban"></i></span></label></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span> <span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body><font ng-bind=confirm.message></font></div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirm();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/bazaar/admin/bazaar_list.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=BazaarListCtrl><div class=row><button class="btn btn-info pull-right" ng-click=createBazaar()>\u65b0\u5efa\u96c6\u5e02</button></div><div class=row><form class=form-horizontal><fieldset><legend><h4>\u6821\u56ed\u96c6\u5e02\u89c4\u5219</h4></legend><p>\u6821\u56ed\u96c6\u5e02\u662f\u793e\u56e2\u53d1\u5e03\u4e70\u5356\u62db\u9886\u9700\u6c42\u7684\u5730\u65b9\uff0c\u53d1\u5e03\u7684\u4fe1\u606f\u7edf\u4e00\u5c55\u73b0\u5728 i \u5fae\u6821\u7684\u201c\u53d1\u73b0\u201d\u9891\u9053\u4e2d\uff0c\u53d1\u5e03\u7684\u5185\u5bb9\u6709\u793e\u56e2\u8ba4\u8bc1\u6807\u793a\u3002</p><p>1.\u793e\u56e2\u53ef\u4ee5\u901a\u8fc7 i \u5fae\u6821\u540e\u53f0\u7684\u6d88\u606f\u7ba1\u7406\u548c\u53c2\u4e0e\u53d1\u73b0\u7684\u540c\u5b66\u4fdd\u6301\u5b9e\u65f6\u4e92\u52a8\uff1b</p><p>2.\u6bcf\u4e2a\u793e\u56e2\uff0c\u5f53\u65e5\u53d1\u9001\u96c6\u5e02\u6d88\u606f\u6570\u91cf\u9650\u5236\u4e3a5\u6761\uff0c\u4e0d\u9650\u5e02\u96c6\u5185\u5bb9\u7684\u79cd\u7c7b\uff1b</p><p>3.\u793e\u56e2\u901a\u8fc7\u53d1\u5e03\u5e02\u96c6\u5185\u5bb9\u53ef\u4ee5\u589e\u52a0\u793e\u56e2\u7684\u6d3b\u8dc3\u5ea6\uff0c\u589e\u5f3a\u793e\u56e2\u5728 i \u5fae\u6821\u5185\u7684\u66dd\u5149\u5ea6\uff01</p></fieldset></form></div><br><div class=row><span class="label label-info" style="font-size: 100%">\u96c6\u5e02\u5185\u5bb9\u603b\u6570\uff1a&nbsp;<font ng-bind=bazaar_total></font></span></div><br><div class=row><form class=form-horizontal><fieldset><legend><h4>\u7b5b\u9009\u6761\u4ef6</h4></legend><div class=row><div class=col-md-2></div><div class=col-md-2 ng-repeat="type in bazaar_type"><label type=button class="btn btn-default btn-checkbox" style=margin-bottom:3px;width:100px ng-click=choseBazaarType(type) chosen-status=type.chosen chosen><span><font ng-bind="type.name | substr: 4 : 3" title={{type.name}}></font></span></label></div></div></fieldset></form></div><div class=row><br><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="bazaar in $data"><td data-title="\'\u96c6\u5e02\u6807\u9898\'" header-class=text-left><a ng-click="goToBazDetail(bazaar.id, bazaar.bazaar_type.alias, currentPage, act_page)"><font ng-bind=bazaar.topic></font></a></td><td data-title="\'\u96c6\u5e02\u79cd\u7c7b\'" header-class=text-left><span class="label label-info"><font ng-bind=bazaar.bazaar_type.name></font></span></td><td data-title="\'\u53d1\u5e03\u65f6\u95f4\'" header-class=text-left><font ng-bind="bazaar.publish_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u70b9\u51fb\u91cf\'" header-class=text-left><font ng-bind=bazaar.browsers></font></td><td data-title="\'\u54a8\u8be2\u6570\'" header-class=text-left><font ng-bind=bazaar.participators></font></td><td data-title="\'\u72b6\u6001\'" header-class=text-left><span ng-if="bazaar.publish == 0" class="label label-danger">\u672a\u53d1\u5e03</span> <span ng-if="bazaar.publish == 1" class="label label-success">\u5df2\u53d1\u5e03</span></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-default btn-checkbox" ng-if=!bazaar.publish ng-click=togglePubBaz(bazaar.id,bazaar.publish) style=margin-bottom:3px;width:98px><span>\u53d1&nbsp;&nbsp;\u5e03 <i class="fa fa-volume-up"></i></span></label><font ng-if=!bazaar.publish>&nbsp;</font><label type=button class="btn btn-default btn-checkbox" ng-if=bazaar.publish ng-click=togglePubBaz(bazaar.id,bazaar.publish) style=margin-bottom:3px><span>\u53d6\u6d88\u53d1\u5e03 <i class="fa fa-ban"></i></span></label><font ng-if=bazaar.publish>&nbsp;</font><label type=button class="btn btn-info btn-checkbox" ng-click="goToBazDetail(bazaar.id, bazaar.bazaar_type.alias, currentPage, act_page)" style=width:86px;margin-bottom:3px><span>\u7f16&nbsp;&nbsp;\u8f91&nbsp;&nbsp;<i class="fa fa-pencil-square-o"></i></span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=delBazaar(bazaar.id) style=width:86px;margin-bottom:3px><span>\u5220&nbsp;&nbsp;\u9664&nbsp;&nbsp;<i class="fa fa-trash-o"></i></span></label>&nbsp;<div style="text-align: center;margin-top: 10px"><a ng-click="goToUnpubLog(\'bazaar\', bazaar.id)">\u64cd\u4f5c\u65e5\u5fd7</a></div></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span> <span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body><font ng-bind=confirm.message></font></div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirm();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/bazaar/admin/create_bazaar.html', '<div><div class=tabs-left><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'create_bazaar\'"><a ui-sref=create_bazaar>\u65b0\u5efa\u5e02\u96c6\u5185\u5bb9</a></li></ul></div><div ui-view><div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9"><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref="activity.bazaar({ id: user.managed_community.id, currentPage:1, page: 1 })"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><br><div class=row><div class=col-sm-6><center><button ui-sref="sale_bazaar({ id: \'-1\' })" class="btn btn-default btn-lg" style="width: 70%;height: 60px">\u8f6c\u8ba9</button></center></div><div class=col-sm-6><center><button ui-sref="purchase_bazaar({ id: \'-1\' })" class="btn btn-default btn-lg" style="width: 70%;height: 60px">\u6c42\u8d2d</button></center></div></div><br><br><br><div class=row><div class=col-sm-6><center><button ui-sref="lost_bazaar({ id: \'-1\' })" class="btn btn-default btn-lg" style="width: 70%;height: 60px">\u4e22\u4e1c\u897f\u4e86</button></center></div><div class=col-sm-6><center><button ui-sref="pick_bazaar({ id: \'-1\' })" class="btn btn-default btn-lg" style="width: 70%;height: 60px">\u6361\u5230\u4e1c\u897f\u4e86</button></center></div></div></div></div></div>');
    $templateCache.put('partial/bazaar/admin/lost.html', '<div ng-controller=BazaarDetailCtrl><div class=tabs-left><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'lost_bazaar\'"><a ui-sref=lost_bazaar>\u5bfb\u7269</a></li></ul></div><div ui-view><div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9"><div class=activity-button-bar><div class=btn-group ng-show="user.role.name === \'UN_ADMIN\'"><a class="btn btn-default" ui-sref=activity_university.bazaar><i class="fa fa-reply"></i> \u8fd4\u56de</a></div><div class=btn-group ng-show="user.role.name === \'IWX_ADMIN\'"><a class="btn btn-default" ui-sref=activity_iWX.bazaar><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><div class=row><form class=form-horizontal name=lostForm enctype=multipart/form-data><div class=form-group><label class="col-md-2 control-label" for=topic>\u6807\u9898</label><div class=col-md-8><input type=text class=form-control name=topic ng-model=bazaar.topic placeholder=\u4e22\u4ec0\u4e48\u4e86\uff1f\u8d77\u4e2a\u9192\u76ee\u7684\u6807\u9898\u5427\uff015~20\u4e2a\u5b57\u6700\u4f73\u3002></div></div><br><div class=row><div class=col-md-10><fieldset><legend><h5>\u6709\u6ca1\u6709\u4f60\u5fc3\u7231\u4e4b\u7269\u4ee5\u524d\u7684\u7167\u7247</h5></legend><div class=row ng-if="bazaar_id === \'-1\'"><div class=form-group><label class="col-md-2 control-label" for=images>\u56fe\u7247</label><div class=col-md-5><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file"><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a\u4e0a\u4f206\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=images multiple data-files=bazaar.images></span><div ng-repeat="image in bazaar.images"><i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'create\', bazaar.images, $index)"></i>{{image.name || image.path}}</div></div></div></div></div><div class=row ng-if="bazaar_id !== \'-1\'"><div class=form-group><label class="col-md-2 control-label" for=newImages>\u56fe\u7247</label><div class=col-md-5><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file"><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a\u4e0a\u4f206\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=newImages multiple data-files=bazaar.newImages></span><div ng-repeat="image in bazaar.newImages"><i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'update\', bazaar.newImages, $index)"></i>{{image.name || image.path}}</div></div></div></div></div><div ng-if="bazaar_id !== \'-1\'" class=row><div class=form-group><label class="col-md-2 control-label" for="">\u5df2\u4e0a\u4f20</label><div class=col-md-8><div class="fileinput fileinput-new" data-provides=fileinput><span ng-repeat="image in bazaar.images"><span class=thumbnail><img ng-src={{image}} style="width: 178px" ng-click=viewImage(image)> <i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'exist\', bazaar.images, $index)" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"></i></span></span></div></div></div></div></fieldset></div></div><br><div class=form-group><label class="col-md-2 control-label" for=content>\u5bfb\u7269\u8be6\u60c5</label><div class=col-md-8><textarea class=form-control name=content placeholder=\u4ec0\u4e48\u65f6\u95f4\uff1f\u5728\u54ea\u91cc\u4e22\u7684\uff1f\u5b9d\u8d1d\u7684\u5916\u89c2\uff1f\u662f\u5426\u51fa\u8d4f\u91d1\u916c\u8c22\u62fe\u5230\u8005\uff1f rows=8 ng-model=bazaar.content></textarea></div></div><br><div class=row ng-if="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><div class=col-md-6><button ng-show="bazaar_id === \'-1\'" class="btn btn-default pull-right" ui-sref=create_bazaar>\u53d6&nbsp;\u6d88</button> <button ng-hide="bazaar_id === \'-1\'" class="btn btn-default pull-right" ui-sref="activity.bazaar({ id: user.managed_community.id, currentPage: 1, page: page })">\u53d6&nbsp;\u6d88</button></div><div class=col-md-2><button class="btn btn-info pull-right" ng-click=save_bazaar(0)>\u4ec5\u4fdd\u5b58</button></div><div class=col-md-2><button class="btn btn-primary pull-right" ng-click=save_bazaar(1)>\u4fdd\u5b58\u5e76\u53d1\u5e03</button></div></div></form></div></div></div></div>');
    $templateCache.put('partial/bazaar/admin/pick.html', '<div ng-controller=BazaarDetailCtrl><div class=tabs-left><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'pick_bazaar\'"><a ui-sref=pick_bazaar>\u62db\u9886</a></li></ul></div><div ui-view><div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9"><div class=activity-button-bar><div class=btn-group ng-show="user.role.name === \'UN_ADMIN\'"><a class="btn btn-default" ui-sref=activity_university.bazaar><i class="fa fa-reply"></i> \u8fd4\u56de</a></div><div class=btn-group ng-show="user.role.name === \'IWX_ADMIN\'"><a class="btn btn-default" ui-sref=activity_iWX.bazaar><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><div class=row><form class=form-horizontal name=pickForm enctype=multipart/form-data><div class=form-group><label class="col-md-2 control-label" for=topic>\u6807\u9898</label><div class=col-md-8><input type=text class=form-control name=topic ng-model=bazaar.topic placeholder=\u6361\u5230\u4ec0\u4e48\u4e86\uff1f\u8d77\u4e2a\u9192\u76ee\u7684\u6807\u9898\u5427\uff015~20\u4e2a\u5b57\u6700\u4f73\u3002></div></div><br><div class=row><div class=col-md-10><fieldset><legend><h5>\u62cd\u51e0\u5f20\u7167\u7247\u544a\u8bc9\u5931\u4e3b\u5427</h5></legend><div class=row ng-if="bazaar_id === \'-1\'"><div class=form-group><label class="col-md-2 control-label" for=images>\u56fe\u7247</label><div class=col-md-5><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file"><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a\u4e0a\u4f206\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=images multiple data-files=bazaar.images></span><div ng-repeat="image in bazaar.images"><i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'create\', bazaar.images, $index)"></i>{{image.name || image.path}}</div></div></div></div></div><div class=row ng-if="bazaar_id !== \'-1\'"><div class=form-group><label class="col-md-2 control-label" for=newImages>\u56fe\u7247</label><div class=col-md-5><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file"><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a\u4e0a\u4f206\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=newImages multiple data-files=bazaar.newImages></span><div ng-repeat="image in bazaar.newImages"><i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'update\', bazaar.newImages, $index)"></i>{{image.name || image.path}}</div></div></div></div></div><div ng-if="bazaar_id !== \'-1\'" class=row><div class=form-group><label class="col-md-2 control-label" for="">\u5df2\u4e0a\u4f20</label><div class=col-md-8><div class="fileinput fileinput-new" data-provides=fileinput><span ng-repeat="image in bazaar.images"><span class=thumbnail><img ng-src={{image}} style="width: 178px" ng-click=viewImage(image)> <i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'exist\', bazaar.images, $index)" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"></i></span></span></div></div></div></div></fieldset></div></div><br><div class=form-group><label class="col-md-2 control-label" for=content>\u7269\u54c1\u8be6\u60c5</label><div class=col-md-8><textarea class=form-control name=content placeholder=\u4ec0\u4e48\u65f6\u95f4\uff0c\u5728\u54ea\u91cc\u6361\u5230\u7684\uff1f\u7269\u54c1\u7684\u5916\u89c2\u7279\u5f81\uff1f rows=8 ng-model=bazaar.content></textarea></div></div><br><div class=row ng-if="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><div class=col-md-6><button ng-show="bazaar_id === \'-1\'" class="btn btn-default pull-right" ui-sref=create_bazaar>\u53d6&nbsp;\u6d88</button> <button ng-hide="bazaar_id === \'-1\'" class="btn btn-default pull-right" ui-sref="activity.bazaar({ id: user.managed_community.id, currentPage: 1, page: page })">\u53d6&nbsp;\u6d88</button></div><div class=col-md-2><button class="btn btn-info pull-right" ng-click=save_bazaar(0)>\u4ec5\u4fdd\u5b58</button></div><div class=col-md-2><button class="btn btn-primary pull-right" ng-click=save_bazaar(1)>\u4fdd\u5b58\u5e76\u53d1\u5e03</button></div></div></form></div></div></div></div>');
    $templateCache.put('partial/bazaar/admin/purchase.html', '<div ng-controller=BazaarDetailCtrl><div class=tabs-left><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'purchase_bazaar\'"><a ui-sref=purchase_bazaar>\u6c42\u8d2d</a></li></ul></div><div ui-view><div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9"><div class=activity-button-bar><div class=btn-group ng-show="user.role.name === \'UN_ADMIN\'"><a class="btn btn-default" ui-sref=activity_university.bazaar><i class="fa fa-reply"></i> \u8fd4\u56de</a></div><div class=btn-group ng-show="user.role.name === \'IWX_ADMIN\'"><a class="btn btn-default" ui-sref=activity_iWX.bazaar><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><div class=row><form class=form-horizontal name=purchaseForm enctype=multipart/form-data><div class=form-group><label class="col-md-2 control-label" for=topic>\u6807\u9898</label><div class=col-md-8><input type=text class=form-control name=topic ng-model=bazaar.topic placeholder=\u6c42\u8d2d\u4ec0\u4e48\uff1f\u8d77\u4e2a\u9192\u76ee\u7684\u6807\u9898\u5427\uff015~20\u4e2a\u5b57\u6700\u4f73\u3002></div></div><br><div class=form-group><label class="col-md-2 control-label" for=price>\u6211\u60f3\u51fa</label><div class=col-md-8><div class=input-group><div class=input-group-addon>\uffe5</div><input type=text class=form-control name=price ng-model=bazaar.price placeholder=\u7406\u60f3\u7684\u8d2d\u4e70\u4ef7\u683c\u3002><div class=input-group-addon>.00</div></div></div></div><br><div class=row><div class=col-md-10><fieldset><legend><h5>\u6709\u6ca1\u6709\u7c7b\u4f3c\u4f60\u60f3\u8981\u7684\u4e1c\u897f\u7167\u7247</h5></legend><div class=row ng-if="bazaar_id === \'-1\'"><div class=form-group><label class="col-md-2 control-label" for=images>\u56fe\u7247</label><div class=col-md-5><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file"><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a\u4e0a\u4f206\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=images multiple data-files=bazaar.images></span><div ng-repeat="image in bazaar.images"><i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'create\', bazaar.images, $index)"></i>{{image.name || image.path}}</div></div></div></div></div><div class=row ng-if="bazaar_id !== \'-1\'"><div class=form-group><label class="col-md-2 control-label" for=newImages>\u56fe\u7247</label><div class=col-md-5><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file"><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a\u4e0a\u4f206\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=newImages multiple data-files=bazaar.newImages></span><div ng-repeat="image in bazaar.newImages"><i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'update\', bazaar.newImages, $index)"></i>{{image.name || image.path}}</div></div></div></div></div><div ng-if="bazaar_id !== \'-1\'" class=row><div class=form-group><label class="col-md-2 control-label" for="">\u5df2\u4e0a\u4f20</label><div class=col-md-8><div class="fileinput fileinput-new" data-provides=fileinput><span ng-repeat="image in bazaar.images"><span class=thumbnail><img ng-src={{image}} style="width: 178px" ng-click=viewImage(image)> <i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'exist\', bazaar.images, $index)" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"></i></span></span></div></div></div></div></fieldset></div></div><br><div class=form-group><label class="col-md-2 control-label" for=content>\u7b80\u4ecb\u8be6\u60c5</label><div class=col-md-8><textarea class=form-control name=content placeholder=\u8bf7\u8be6\u7ec6\u63cf\u8ff0\u4e00\u4e0b\u4f60\u60f3\u8981\u7684\u5b9d\u8d1d\u5427~ rows=8 ng-model=bazaar.content></textarea></div></div><br><div class=row ng-if="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><div class=col-md-6><button ng-show="bazaar_id === \'-1\'" class="btn btn-default pull-right" ui-sref=create_bazaar>\u53d6&nbsp;\u6d88</button> <button ng-hide="bazaar_id === \'-1\'" class="btn btn-default pull-right" ui-sref="activity.bazaar({ id: user.managed_community.id, currentPage: 1, page: page })">\u53d6&nbsp;\u6d88</button></div><div class=col-md-2><button class="btn btn-info pull-right" ng-click=save_bazaar(0)>\u4ec5\u4fdd\u5b58</button></div><div class=col-md-2><button class="btn btn-primary pull-right" ng-click=save_bazaar(1)>\u4fdd\u5b58\u5e76\u53d1\u5e03</button></div></div></form></div></div></div></div>');
    $templateCache.put('partial/bazaar/admin/sale.html', '<div ng-controller=BazaarDetailCtrl><div class=tabs-left><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'sale_bazaar\'"><a ui-sref=sale_bazaar>\u8f6c\u8ba9</a></li></ul></div><div ui-view><div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-8 col-md-8 col- col-sm-9"><div class=activity-button-bar><div class=btn-group ng-show="user.role.name === \'UN_ADMIN\'"><a class="btn btn-default" ui-sref=activity_university.bazaar><i class="fa fa-reply"></i> \u8fd4\u56de</a></div><div class=btn-group ng-show="user.role.name === \'IWX_ADMIN\'"><a class="btn btn-default" ui-sref=activity_iWX.bazaar><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><div class=row><form class=form-horizontal name=saleForm enctype=multipart/form-data><div class=form-group><label class="col-md-2 control-label" for=article_topic>\u6807\u9898</label><div class=col-md-8><input type=text name=topic class=form-control ng-model=bazaar.topic placeholder=\u60f3\u8f6c\u8ba9\u4ec0\u4e48\uff1f\u8d77\u4e2a\u9192\u76ee\u7684\u6807\u9898\u5427\uff015~20\u4e2a\u5b57\u6700\u4f73\u3002></div></div><br><div class=form-group><label class="col-md-2 control-label" for=article_price>\u6211\u60f3\u5356</label><div class=col-md-8><div class=input-group><div class=input-group-addon>\uffe5</div><input type=text class=form-control name=price ng-model=bazaar.price placeholder=\u60f3\u8f6c\u8ba9\u7684\u4ef7\u683c\u3002><div class=input-group-addon>.00</div></div></div></div><br><div class=row><div class=col-md-10><fieldset><legend><h5>\u4e0a\u4f20\u51e0\u5f20\u5b9d\u8d1d\u7684\u56fe\u7247\u5427</h5></legend><div class=row ng-if="bazaar_id === \'-1\'"><div class=form-group><label class="col-md-2 control-label" for=images>\u56fe\u7247</label><div class=col-md-5><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file"><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a\u4e0a\u4f206\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=images multiple data-files=bazaar.images></span><div ng-repeat="image in bazaar.images"><i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'create\', bazaar.images, $index)"></i>{{image.name || image.path}}</div></div></div></div></div><div class=row ng-if="bazaar_id !== \'-1\'"><div class=form-group><label class="col-md-2 control-label" for=newImages>\u56fe\u7247</label><div class=col-md-5><div class="fileinput fileinput-new" data-provides=fileinput><span class="btn btn-default btn-file"><span class=fileinput-new>\u8bf7\u9009\u62e9\u56fe\u7247\uff0c\u6700\u591a\u4e0a\u4f206\u5f20</span> <span class=fileinput-exists>\u91cd\u65b0\u9009\u62e9</span> <input type=file name=newImages multiple data-files=bazaar.newImages></span><div ng-repeat="image in bazaar.newImages"><i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'update\', bazaar.newImages, $index)"></i>{{image.name || image.path}}</div></div></div></div></div><div ng-if="bazaar_id !== \'-1\'" class=row><div class=form-group><label class="col-md-2 control-label" for="">\u5df2\u4e0a\u4f20</label><div class=col-md-8><div class="fileinput fileinput-new" data-provides=fileinput><span ng-repeat="image in bazaar.images"><span class=thumbnail><img ng-src={{image}} style="width: 178px" ng-click=viewImage(image)> <i class="fa fa-times timeline-file-remove" ng-click="removeImageFile(\'exist\', bazaar.images, $index)" ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"></i></span></span></div></div></div></div></fieldset></div></div><br><div class=form-group><label class="col-md-2 control-label" for=bazaar_content>\u5b9d\u8d1d\u8be6\u60c5</label><div class=col-md-8><textarea class=form-control name=content placeholder=\u8bf7\u8be6\u7ec6\u63cf\u8ff0\u4e00\u4e0b\u4f60\u7684\u5b9d\u8d1d\u5427~ rows=8 ng-model=bazaar.content></textarea></div></div><br><div class=row ng-if="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><div class=col-md-6><button ng-show="bazaar_id === \'-1\'" class="btn btn-default pull-right" ui-sref=create_bazaar>\u53d6&nbsp;\u6d88</button> <button ng-hide="bazaar_id === \'-1\'" class="btn btn-default pull-right" ui-sref="activity.bazaar({ id: user.managed_community.id, currentPage: 1, page: page })">\u53d6&nbsp;\u6d88</button></div><div class=col-md-2><button class="btn btn-info pull-right" ng-click=save_bazaar(0)>\u4ec5\u4fdd\u5b58</button></div><div class=col-md-2><button class="btn btn-primary pull-right" ng-click=save_bazaar(1)>\u4fdd\u5b58\u5e76\u53d1\u5e03</button></div></div></form></div></div></div></div>');
    $templateCache.put('partial/bazaar/iwx/bazaar_list_iwx.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3"><div class=row><nav class="navbar navbar-inverse" style="background-color: rgb(219, 218, 218)" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li d-sref="\'activity_iWX.bazaar\'"><a ui-sref=activity_iWX.bazaar>\u7ec4\u7ec7\u53d1\u5e03</a></li><li d-sref="\'activity_iWX.bazaar.personal\'"><a ui-sref=activity_iWX.bazaar.personal>\u5b66\u751f\u53d1\u5e03</a></li></ul></div></nav></div><div ui-view><div ng-controller=BazListIwxCtrl><div class=row><form class=form-horizontal><fieldset><legend><h4>\u5b66\u6821\u7b5b\u9009</h4></legend><div class=row><div class=col-md-3><form-input data-title="\'\u7701\'" data-name="\'province\'"><select name=province_scope id=province_scope class=form-control ng-model=search_params.province_scope_id ng-options="r.id as r.city for r in provinceArray" ng-change=change_province()></select></form-input></div><div class=col-md-3><form-input data-title="\'\u5e02\'" data-name="\'city\'"><select class=form-control name=city_scope id=city_scope ng-model=search_params.city_scope_id ng-options="r.id as r.city for r in cityArray" ng-change=change_city()></select></form-input></div><div class=col-md-6><form-input data-title="\'\u5b66\u6821\'" data-name="\'university\'"><select class=form-control name=university_scope id=university_scope ng-model=search_params.university_scope_id ng-options="r.id as r.name for r in universityArray" ng-change=change_university()></select></form-input></div></div></fieldset></form><br></div><div class=row><form class=form-horizontal><fieldset><legend><h4><font>\u7ec4\u7ec7\u7b5b\u9009</font></h4></legend><div class=row><div class=col-sm-12><ul id=org_tab_baz class="nav nav-tabs nav-justified"><li class=active><a id=committee class=org_a>\u9662\u7cfb\u56e2\u59d4</a></li><li><a id=tissue class=org_a>\u9662\u7cfb\u5b66\u751f\u4f1a</a></li><li><a id=organization class=org_a>\u6821\u7ea7\u5b66\u751f\u7ec4\u7ec7</a></li><li><a id=union class=org_a>\u5b66\u751f\u793e\u56e2</a></li></ul></div></div><br><div class=row><div class=col-md-3 style=text-align:left;padding-left:50px ng-repeat="community in communities"><input type=radio name=community id=community value={{community.id}} ng-model=checked_community ng-click="get_checked_community(checked_community)"> <font title={{community.name}} ng-bind="community.name | substr:9:8"></font></div></div><div class=row><div class="col-md-4 col-md-offset-4"><div ng-show=msg><br><button class="btn btn-default center-block more-btn" ng-click=load_more() ng-disabled=btn><font ng-bind=load_btn></font></button><br></div><div style="font-weight: bold;color: silver;padding: 20px 0px 20px 0px" ng-hide=msg><font ng-bind=load_msg></font></div></div></div></fieldset></form><br></div><div class=row><form class=form-horizontal><fieldset><legend><h4>\u5206\u7c7b\u7b5b\u9009</h4></legend><div class=row><div class=col-md-2></div><div class=col-md-2 ng-repeat="type in bazaar_type"><label type=button class="btn btn-default btn-checkbox" style=margin-bottom:3px;width:100px ng-click=choseBazaarType(type) chosen-status=type.chosen chosen><span><font ng-bind="type.name | substr: 4 : 3" title={{type.name}}></font></span></label></div></div></fieldset></form><br><br></div><div class=row><span class="label label-info" style="font-size: 100%">\u96c6\u5e02\u5185\u5bb9\u603b\u53d1\u5e03\u6570\uff1a&nbsp;<font ng-bind=sum></font></span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="label label-success" style="font-size: 100%">\u7ec4\u7ec7\u603b\u53d1\u5e03\u6570\uff1a&nbsp;<font ng-bind=org_count></font></span></div><br><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="bazaar in $data"><td data-title="\'\u96c6\u5e02\u6807\u9898\'" header-class=text-left><a ng-click="goToBazDetail(bazaar.id, bazaar.bazaar_type.alias)"><font ng-bind=bazaar.topic></font></a></td><td data-title="\'\u96c6\u5e02\u79cd\u7c7b\'" header-class=text-left><span class="label label-info"><font ng-bind=bazaar.bazaar_type.name></font></span></td><td data-title="\'\u53d1\u5e03\u8005\'" header-class=text-left><a ng-click="publisherInfo(bazaar.community.id, \'org\')"><font ng-bind=bazaar.community.name></font></a></td><td data-title="\'\u53d1\u5e03\u65f6\u95f4\'" header-class=text-left><font ng-bind="bazaar.publish_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u70b9\u51fb\u91cf\'" header-class=text-left><font ng-bind=bazaar.browsers></font></td><td data-title="\'\u54a8\u8be2\u6570\'" header-class=text-left><font ng-bind=bazaar.participators></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click="unPubBazaar(bazaar.university.id, \'ADMIN\', bazaar.id)" style=margin-bottom:3px><span>\u53d6\u6d88\u53d1\u5e03 <i class="fa fa-ban"></i></span></label></td></tr></tbody></table></div></div></div></div>');
    $templateCache.put('partial/bazaar/iwx/bazaar_list_person_iwx.html', '<div ng-controller=BazListIwxCtrl><div class=row><form class=form-horizontal><fieldset><legend><h4>\u5b66\u6821\u7b5b\u9009</h4></legend><div class=row><div class=col-md-3><form-input data-title="\'\u7701\'" data-name="\'province\'"><select name=province_scope id=province_scope class=form-control ng-model=search_params.province_scope_id ng-options="r.id as r.city for r in provinceArray" ng-change=change_province()></select></form-input></div><div class=col-md-3><form-input data-title="\'\u5e02\'" data-name="\'city\'"><select class=form-control name=city_scope id=city_scope ng-model=search_params.city_scope_id ng-options="r.id as r.city for r in cityArray" ng-change=change_city()></select></form-input></div><div class=col-md-6><form-input data-title="\'\u5b66\u6821\'" data-name="\'university\'"><select class=form-control name=university_scope id=university_scope ng-model=search_params.university_scope_id ng-options="r.id as r.name for r in universityArray" ng-change=change_university()></select></form-input></div></div></fieldset></form><br></div><div class=row><form class=form-horizontal><fieldset><legend><h4>\u5206\u7c7b\u7b5b\u9009</h4></legend><div class=row><div class=col-md-1></div><div class=col-md-2 ng-repeat="type in bazaar_type"><label type=button class="btn btn-default btn-checkbox" style=margin-bottom:3px;width:100px ng-click=choseBazaarType(type) chosen-status=type.chosen chosen><span><font ng-bind="type.name | substr: 4 : 3" title={{type.name}}></font></span></label></div></div></fieldset></form><br><br></div><div class=row><span class="label label-info" style="font-size: 100%">\u96c6\u5e02\u5185\u5bb9\u603b\u53d1\u5e03\u6570\uff1a&nbsp;<font ng-bind=sum></font></span>&nbsp;&nbsp;&nbsp;&nbsp; <span class="label label-success" style="font-size: 100%">\u4e2a\u4eba\u603b\u53d1\u5e03\u6570\uff1a&nbsp;<font ng-bind=personal_count></font></span></div><br><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="bazaar in $data"><td data-title="\'\u96c6\u5e02\u6807\u9898\'" header-class=text-left><a target=_blank ng-href="{{\'/weixin/web/bazaar/community/\'+ bazaar.id +\'/share\'}}"><font ng-bind=bazaar.topic></font></a></td><td data-title="\'\u96c6\u5e02\u79cd\u7c7b\'" header-class=text-left><span class="label label-info"><font ng-bind=bazaar.bazaar_type.name></font></span></td><td data-title="\'\u53d1\u5e03\u8005\'" header-class=text-left><a ng-click="publisherInfo(bazaar.user.id, \'personal\')"><font ng-bind=bazaar.user.nickname></font></a></td><td data-title="\'\u66f4\u65b0\u65f6\u95f4\'" header-class=text-left><font ng-bind="bazaar.update_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u70b9\u51fb\u91cf\'" header-class=text-left><font ng-bind=bazaar.browsers></font></td><td data-title="\'\u54a8\u8be2\u6570\'" header-class=text-left><font ng-bind=bazaar.participators></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-danger btn-checkbox" ng-click="unPubBazaar(bazaar.university_id.id, \'USER\', bazaar.id)" style=margin-bottom:3px><span>\u5220&nbsp;\u9664 <i class="fa fa-trash"></i></span></label></td></tr></tbody></table></div></div>');
    $templateCache.put('partial/bazaar/iwx/publisher_info.html', '<div class=modal-header><h3 class=modal-title><font ng-bind=publisher.publish_title></font></h3></div><div class=modal-body><div class=basic-info style="height: 100%"><table class="table col-md-12" ng-if="flag === \'org\'"><body><tr><td class=col-md-3 rowspan=3><img class=img-rounded ng-src={{community.logo}}/thumbnail style="width: 100%"></td><td class=col-md-2>\u793e\u56e2\u540d\u79f0</td><td class=col-md-2><font ng-bind=community.name></font></td><td class=col-md-2>\u5b66\u6821\u540d\u79f0</td><td class=col-md-3><font ng-bind=community.university.name></font></td></tr><tr><td class=col-md-2 rowspan=2>\u793e\u56e2\u7b80\u4ecb</td><td class=col-md-7 rowspan=2 colspan=3><textarea class=form-control ng-bind=community.description readonly rows=5></textarea></td></tr></body></table><table class="table col-sm-12" ng-if="flag === \'personal\'"><body><tr><td class=col-sm-3 rowspan=3><img class=img-rounded ng-src={{user.icon}}/thumbnail style="width: 100%"></td><td class=col-sm-2>\u6635\u79f0</td><td class=col-sm-2><font ng-bind=user.nickname></font></td><td class=col-sm-2>\u771f\u5b9e\u59d3\u540d</td><td class=col-sm-3><font ng-bind=user.name></font></td></tr><tr><td class=col-sm-2>\u6027\u522b</td><td class=col-sm-2><span ng-switch=user.sex><span ng-switch-when=MALE>\u7537</span> <span ng-switch-when=FEMALE>\u5973</span></span></td><td class=col-sm-2>\u4e13\u4e1a</td><td class=col-sm-3><font ng-bind=user.major></font></td></tr><tr><td class=col-sm-2>\u5165\u5b66\u65f6\u95f4</td><td class=col-sm-2><font ng-bind=user.admission_date></font></td><td class=col-sm-2>\u7535\u8bdd\u53f7\u7801</td><td class=col-sm-3><font ng-bind=user.phone></font></td></tr></body></table></div></div><div class=modal-footer><button class="btn btn-danger" ng-click=close()>\u5173\u95ed</button></div>');
    $templateCache.put('partial/bazaar/iwx/unpublish_reason.html', '<div class=modal-header><h3 class=modal-title>\u53d6\u6d88\u53d1\u5e03\u7406\u7531</h3></div><div class=modal-body><textarea class="form-control ng-pristine ng-valid ng-touched" ng-model=content rows=5 placeholder=\u8bf7\u586b\u5199\u53d6\u6d88\u53d1\u5e03\u7406\u7531\uff0c\u7406\u7531\u5c06\u4ee5\u79c1\u4fe1\u7684\u65b9\u5f0f\u53d1\u9001\u7ed9\u53d1\u5e03\u8005\u3002></textarea></div><div class=modal-footer><button class="btn btn-info" ng-click=ok()>\u786e\u5b9a</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/bazaar/university/bazaar_list_personal_un.html', '<div ng-controller=BazListUnCtrl><div class=row><form class=form-horizontal><fieldset><legend><h4>\u96c6\u5e02\u6d88\u606f\u7c7b\u578b</h4></legend><div class=row><div class=col-md-1></div><div class=col-md-2 ng-repeat="type in bazaar_type"><label type=button class="btn btn-default btn-checkbox" style=margin-bottom:3px;width:100px ng-click=choseBazaarType(type) chosen-status=type.chosen chosen><span><font ng-bind="type.name | substr: 4 : 3" title={{type.name}}></font></span></label></div></div></fieldset></form><br><br></div><div class=row><span class="label label-info" style="font-size: 100%">\u5b66\u751f\u53d1\u5e03\u603b\u6570\uff1a&nbsp;<font ng-bind=personal_count></font></span>&nbsp;&nbsp;&nbsp;&nbsp;</div><br><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="bazaar in $data"><td data-title="\'\u96c6\u5e02\u6807\u9898\'" header-class=text-left><a target=_blank ng-href="{{\'/weixin/web/bazaar/community/\'+ bazaar.id +\'/share\'}}"><font ng-bind=bazaar.topic></font></a></td><td data-title="\'\u96c6\u5e02\u79cd\u7c7b\'" header-class=text-left><span class="label label-info"><font ng-bind=bazaar.bazaar_type.name></font></span></td><td data-title="\'\u53d1\u5e03\u8005\'" header-class=text-left><a ng-click="publisherInfo(bazaar.user.id, \'personal\')"><font ng-bind=bazaar.user.nickname></font></a></td><td data-title="\'\u66f4\u65b0\u65f6\u95f4\'" header-class=text-left><font ng-bind="bazaar.update_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u70b9\u51fb\u91cf\'" header-class=text-left><font ng-bind=bazaar.browsers></font></td><td data-title="\'\u54a8\u8be2\u6570\'" header-class=text-left><font ng-bind=bazaar.participators></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-danger btn-checkbox" ng-click="unPubBazaar(bazaar.id, bazaar.user.id, \'USER\')" style=margin-bottom:3px><span>\u5220&nbsp;\u9664 <i class="fa fa-trash"></i></span></label></td></tr></tbody></table></div></div>');
    $templateCache.put('partial/bazaar/university/bazaar_list_un.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3"><div class=row><nav class="navbar navbar-inverse" style="background-color: rgb(219, 218, 218)" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li d-sref="\'activity_university.bazaar\'"><a ui-sref=activity_university.bazaar><font ng-if="user.admin_type === \'COMMITTEE\'">\u7ec4\u7ec7\u53d1\u5e03</font> <font ng-if="user.admin_type === \'UNION\'">\u793e\u56e2\u53d1\u5e03</font></a></li><li d-sref="\'activity_university.bazaar.personal\'"><a ui-sref=activity_university.bazaar.personal>\u5b66\u751f\u53d1\u5e03</a></li></ul></div></nav></div><div ui-view><div ng-controller=BazListUnCtrl><div class=row><form class=form-horizontal><fieldset><legend><h4><div ng-if="user.admin_type === \'UNION\'"><font ng-bind="user.university.name | format"></font>\u5b66\u751f\u793e\u56e2</div><div ng-if="user.admin_type === \'COMMITTEE\'"><font ng-bind="user.nickname | format"></font>\u793e\u56e2</div></h4></legend><div class=row ng-show="user.admin_type === \'COMMITTEE\'"><div class=col-sm-12><ul id=org_tab class="nav nav-tabs nav-justified"><li class=active><a id=committee class=org_a>\u9662\u7cfb\u56e2\u59d4</a></li><li><a id=tissue class=org_a>\u9662\u7cfb\u5b66\u751f\u4f1a</a></li><li><a id=organization class=org_a>\u6821\u7ea7\u5b66\u751f\u7ec4\u7ec7</a></li><li><a id=union class=org_a>\u5b66\u751f\u793e\u56e2</a></li></ul></div></div><br><div class=row><div class=col-md-3 style=text-align:left;padding-left:50px ng-repeat="community in communities"><input type=radio name=community id=community value={{community.id}} ng-model=checked_community ng-click="getCheckedCommunity(checked_community)"> <font title={{community.name}} ng-bind="community.name | substr:9:8"></font></div></div><div class=row><div class="col-md-4 col-md-offset-4"><div ng-show=msg><br><button class="btn btn-default center-block more-btn" ng-click=loadMore() ng-disabled=btn><font ng-bind=load_btn></font></button><br></div><div style="font-weight: bold;color: silver;padding: 20px 0px 20px 0px" ng-hide=msg><font ng-bind=load_msg></font></div></div></div></fieldset></form><br></div><div class=row><form class=form-horizontal><fieldset><legend><h4>\u96c6\u5e02\u6d88\u606f\u7c7b\u578b</h4></legend><div class=row><div class=col-md-2></div><div class=col-md-2 ng-repeat="type in bazaar_type"><label type=button class="btn btn-default btn-checkbox" style=margin-bottom:3px;width:100px ng-click=choseBazaarType(type) chosen-status=type.chosen chosen><span><font ng-bind="type.name | substr: 4 : 3" title={{type.name}}></font></span></label></div></div></fieldset></form><br><br></div><div class=row><span class="label label-info" style="font-size: 100%">\u7ec4\u7ec7\u53d1\u5e03\u603b\u6570\uff1a&nbsp;<font ng-bind=org_count></font></span>&nbsp;&nbsp;&nbsp;&nbsp;</div><br><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="bazaar in $data"><td data-title="\'\u96c6\u5e02\u6807\u9898\'" header-class=text-left><a ng-click="goToBazDetail(bazaar.id, bazaar.bazaar_type.alias)"><font ng-bind=bazaar.topic></font></a></td><td data-title="\'\u96c6\u5e02\u79cd\u7c7b\'" header-class=text-left><span class="label label-info"><font ng-bind=bazaar.bazaar_type.name></font></span></td><td data-title="\'\u53d1\u5e03\u8005\'" header-class=text-left><a ng-click="publisherInfo(bazaar.community.id, \'org\')"><font ng-bind=bazaar.community.name></font></a></td><td data-title="\'\u53d1\u5e03\u65f6\u95f4\'" header-class=text-left><font ng-bind="bazaar.publish_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u70b9\u51fb\u91cf\'" header-class=text-left><font ng-bind=bazaar.browsers></font></td><td data-title="\'\u54a8\u8be2\u6570\'" header-class=text-left><font ng-bind=bazaar.participators></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click="unPubBazaar(bazaar.id, bazaar.community.id, \'ADMIN\')" style=margin-bottom:3px><span>\u53d6\u6d88\u53d1\u5e03 <i class="fa fa-ban"></i></span></label></td></tr></tbody></table></div></div></div></div>');
    $templateCache.put('partial/bazaar/university/publisher_info.html', '<div class=modal-header><h3 class=modal-title><font ng-bind=publisher.publish_title></font></h3></div><div class=modal-body><div class=basic-info style="height: 100%"><table class="table col-md-12" ng-if="flag === \'org\'"><body><tr><td class=col-md-3 rowspan=3><img class=img-rounded ng-src={{community.logo}}/thumbnail style="width: 100%"></td><td class=col-md-2>\u793e\u56e2\u540d\u79f0</td><td class=col-md-2><font ng-bind=community.name></font></td><td class=col-md-2>\u5b66\u6821\u540d\u79f0</td><td class=col-md-3><font ng-bind=community.university.name></font></td></tr><tr><td class=col-md-2 rowspan=2>\u793e\u56e2\u7b80\u4ecb</td><td class=col-md-7 rowspan=2 colspan=3><textarea class=form-control ng-bind=community.description readonly rows=5></textarea></td></tr></body></table><table class="table col-sm-12" ng-if="flag === \'personal\'"><body><tr><td class=col-sm-3 rowspan=3><img class=img-rounded ng-src={{user.icon}}/thumbnail style="width: 100%"></td><td class=col-sm-2>\u6635\u79f0</td><td class=col-sm-2><font ng-bind=user.nickname></font></td><td class=col-sm-2>\u771f\u5b9e\u59d3\u540d</td><td class=col-sm-3><font ng-bind=user.name></font></td></tr><tr><td class=col-sm-2>\u6027\u522b</td><td class=col-sm-2><span ng-switch=user.sex><span ng-switch-when=MALE>\u7537</span> <span ng-switch-when=FEMALE>\u5973</span></span></td><td class=col-sm-2>\u4e13\u4e1a</td><td class=col-sm-3><font ng-bind=user.major></font></td></tr><tr><td class=col-sm-2>\u5165\u5b66\u65f6\u95f4</td><td class=col-sm-2><font ng-bind=user.admission_date></font></td><td class=col-sm-2>\u7535\u8bdd\u53f7\u7801</td><td class=col-sm-3><font ng-bind=user.phone></font></td></tr></body></table></div></div><div class=modal-footer><button class="btn btn-danger" ng-click=close()>\u5173\u95ed</button></div>');
    $templateCache.put('partial/bazaar/university/unpublish_reason.html', '<div class=modal-header><h3 class=modal-title>\u53d6\u6d88\u53d1\u5e03\u7406\u7531</h3></div><div class=modal-body><textarea class="form-control ng-pristine ng-valid ng-touched" ng-model=content rows=5 placeholder=\u8bf7\u586b\u5199\u53d6\u6d88\u53d1\u5e03\u7406\u7531\uff0c\u7406\u7531\u5c06\u4ee5\u79c1\u4fe1\u7684\u65b9\u5f0f\u53d1\u9001\u7ed9\u53d1\u5e03\u8005\u3002></textarea></div><div class=modal-footer><button class="btn btn-info" ng-click=ok()>\u786e\u5b9a</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/certificate/certificate.html', '<div class="col-sm-12 col-md-10 col-lg-10 col-md-offset-1 col-lg-offset-1" ng-controller=CertificateCouponsCtrl><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7535\u5b50\u793c\u5238</div></div><div class=panel-body><div class=question-table><p class=text-muted>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\u7535\u5b50\u793c\u5238\u53ef\u4f5c\u4e3a\u6d3b\u52a8\u62bd\u5956\u53ca\u5151\u5956\u7684\u51ed\u8bc1\uff0c\u4e14\u521b\u5efa\u7684\u6240\u6709\u7535\u5b50\u793c\u5238\u53ea\u5728 i \u5fae\u6821\u5185\u9002\u7528\u3002</p><a class="btn btn-primary pull-right" ui-sref=certificate_coupons>\u8fdb\u5165</a></div></div></div></div>');
    $templateCache.put('partial/certificate/coupons/certificate_coupons.html', '<div ng-controller=CertificateCouponsCtrl><div class="col-sm-12 col-md-9 col-lg-9 col-md-offset-1 col-lg-offset-1"><div class=certificate-button-bar><div class=btn-group><a class="btn btn-default" ui-sref=certificate><i class="fa fa-reply"></i> \u8fd4\u56de</a>&nbsp;</div><div class=btn-group><a ng-click=createCertificateCoupons() class="btn btn-primary pull-right">\u65b0\u5efa\u793c\u52b5</a></div></div></div><div class="col-sm-12 col-md-9 col-lg-9 col-md-offset-1 col-lg-offset-1"><table ng-table=tableParams class="table table-striped table-responsive coupons"><tbody><tr ng-repeat="coupon in $data"><td data-title="\'\'"><div class="panel panel-default"><div class=panel-body style=padding-bottom:0px><div class="row coupons-info"><div class=col-sm-4><p>\u793c\u52b5\u540d\u79f0\uff1a{{coupon.title}}</p><p>\u8d5e\u52a9\u5546\uff1a{{coupon.sponsor_name}}</p><p>\u6709\u6548\u671f\u81f3\uff1a{{coupon.end_time|date:\'yyyy\u5e74MM\u6708dd\u65e5\'}}</p><p ng-show=coupon.is_used>\u4f7f\u7528\u60c5\u51b5\uff1a\u5df2\u4f7f\u7528</p><p ng-show=!coupon.is_used>\u4f7f\u7528\u60c5\u51b5\uff1a\u672a\u4f7f\u7528</p><p class=count><span>\u603b\u6570\uff1a{{coupon.total}}</span> <span>\u5269\u4f59\u6570\u91cf\uff1a{{coupon.remain}}</span></p><div><br><div class=btn-group><button type=button class="btn btn-info dropdown-toggle" data-toggle=dropdown aria-expanded=false>\u7535\u5b50\u793c\u5238 <span class=caret></span></button><ul class=dropdown-menu role=menu><li><a ui-sref="certificate_coupons_details({id: coupon.id})"><i class="fa fa-list"></i> \u4f7f\u7528\u8be6\u60c5</a></li><li ng-if=!coupon.is_used><a ng-click=updateCertificateCoupons(coupon.id)><i class="fa fa-pencil-square-o"></i> \u4fee\u6539\u793c\u5238</a></li></ul></div>&nbsp;<a class="btn btn-danger" ng-click=del_coupon(coupon.id)>\u5220\u9664\u793c\u5238 <i class="fa fa-trash-o"></i></a></div></div><div class=col-sm-4><div class=thumbnail style=height:210px;width:210px><img ng-src="{{coupon.sponsor_logo}}?width=150&height=150" style=height:100%;width:100% ng-click=viewImage(coupon.sponsor_logo) image-fixed></div><p class=text-center style="width: 210px">\u8d5e\u52a9\u5546 Logo</p></div><div class=col-sm-4><div class=thumbnail style=height:210px;width:210px><img ng-src="{{coupon.image}}?width=150&height=150" style=height:100%;width:100% ng-click=viewImage(coupon.image) image-fixed></div><p class=text-center style="width: 210px">\u7269\u54c1\u56fe\u7247</p></div></div></div></div></td></tr></tbody></table><script type=text/ng-template id=custom/pager><ul class="pager ng-cloak">\r' + '\n' + '        <li ng-repeat="page in pages"\r' + '\n' + '            ng-class="{\'disabled\': !page.active, \'previous\': page.type == \'prev\', \'next\': page.type == \'next\'}"\r' + '\n' + '            ng-show="page.type == \'prev\' || page.type == \'next\'" ng-switch="page.type">\r' + '\n' + '          <a ng-switch-when="prev" ng-click="params.page(page.number)" href="">&laquo; \u4e0a\u4e00\u9875</a>\r' + '\n' + '          <a ng-switch-when="next" ng-click="params.page(page.number)" href="">\u4e0b\u4e00\u9875 &raquo;</a>\r' + '\n' + '        </li>\r' + '\n' + '        <li> \r' + '\n' + '          <div class="btn-group">\r' + '\n' + '            <button type="button" ng-class="{\'active\':params.count() == 1}" ng-click="params.count(1)" class="btn btn-default">1</button>\r' + '\n' + '            <button type="button" ng-class="{\'active\':params.count() == 5}" ng-click="params.count(5)" class="btn btn-default">5</button>\r' + '\n' + '            <button type="button" ng-class="{\'active\':params.count() == 10}" ng-click="params.count(10)" class="btn btn-default">10</button>\r' + '\n' + '            <button type="button" ng-class="{\'active\':params.count() == 15}" ng-click="params.count(15)" class="btn btn-default">15</button>\r' + '\n' + '          </div>\r' + '\n' + '        </li>\r' + '\n' + '      </ul></script></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/certificate/coupons/certificate_coupons_details.html', '<div class="col-sm-12 col-md-10 col-lg-10 col-md-offset-1 col-lg-offset-1" ng-controller=CertificateCouponsDetailsCtrl><div class=certificate-button-bar><div class=btn-group><a class="btn btn-default" ui-sref=certificate_coupons><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><table ng-table=tableParams class="table table-striped table-responsive coupons"><tbody><tr ng-repeat="user in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left>{{$index + 1}}</td><td data-title="\'\u6635\u79f0\'" header-class=text-left>{{user.user.name}}</td><td data-title="\'\u72b6\u6001\'" header-class=text-left>{{user.status|couponStatus}}</td><td data-title="\'\'" class=text-right><a ng-click=privateLetter(user.user.id) class="btn btn-default">\u79c1\u4fe1</a> <a ng-click=takeback(user.id) class="btn btn-default">\u6536\u56de\u7535\u5b50\u793c\u52b5</a></td></tr></tbody></table></div>');
    $templateCache.put('partial/certificate/coupons/certificate_coupons_item.html', '<div id=certificate-item ng-controller=CertificateCouponsItemCtrl><div ui-view><div class="col-lg-12 col-md-12"><div class=certificate-button-bar><div class=btn-group><a class="btn btn-default" ui-sref=certificate_coupons><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><form class=form-horizontal name=certificateForm enctype=multipart/form-data><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7535\u5b50\u793c\u52b5\u6982\u51b5</div></div><div class=panel-body><form-input data-title="\'\u793c\u52b5\u540d\u79f0\'" data-name="\'title\'"><input type=text class=form-control id=title ng-model=coupons.title name=title></form-input><form-input data-title="\'\u6709\u6548\u671f\u81f3\'" data-name="\'end_time\'"><datetimepicker datetime=coupons.end_time></datetimepicker></form-input><form-input data-title="\'\u8d5e\u52a9\u5546\'" data-name="\'sponsor_name\'"><input type=text class=form-control id=sponsor_name ng-model=coupons.sponsor_name name=sponsor_name></form-input><form-input data-title="\'\u8d5e\u52a9\u5546Logo\'" data-name="\'sponsor_logo\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=coupons.sponsor_logo class="fileinput-new thumbnail"><img ng-src={{coupons.sponsor_logo.substring(0)}} style="width: 178px"></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom title=\u56fe\u7247\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc71M tool-tip><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=sponsor_logo data-file=coupons.sponsor_logo></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input><form-input data-title="\'\u7269\u54c1\u56fe\u7247\'" data-name="\'image\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=coupons.image class="fileinput-new thumbnail"><img ng-src={{coupons.image.substring(0)}} style=width:500px></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom title=\u56fe\u7247\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc71M tool-tip><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=image data-file=coupons.image></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input><form-input data-title="\'\u603b\u6570\'" data-name="\'total\'"><input class=form-control id=total ng-model=coupons.total name=total></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=create() ng-if="edit_id === \'-1\'">\u521b\u5efa</button> <button class="btn btn-primary form-control form-submit-button" type=submit ng-click=update(coupons.id) ng-if="edit_id !== \'-1\'">\u66f4\u65b0</button></div></form></div></div></div>');
    $templateCache.put('partial/certificate/coupons/coupons_iWX/certificate_coupons_detail_iWX.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=CouponsDetailIwxCtrl><br><div class=row><div class="col-md-5 col-md-offset-3"><span class="label label-info" style=font-size:150%><font>\u51ed\u8bc1\u603b\u6570\uff1a50</font></span>&nbsp;&nbsp; <span class="label label-warning" style=font-size:150%><font>\u5269\u4f59\u6570\u91cf\uff1a20</font></span></div></div><br><div class=row><a class="btn btn-info pull-right" ng-href=/api/admin/community/users/export.csv>\u5bfc\u51fa\u5217\u8868</a></div><div class=row><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="coupon in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left>{{$index + 1}}</td><td data-title="\'\u4f7f\u7528\u8005\u6635\u79f0\'" header-class=text-left>\u559c\u6b22\u662f\u6de1\u6de1\u7684\u7231</td><td data-title="\'\u4f7f\u7528\u72b6\u6001\'" header-class=text-left><span ng-class=coupon_status[coupon.status].label>{{coupon_status[coupon.status].text}}</span></td><td data-title="\'\u76f8\u5173\u6d3b\u52a8\'" header-class=text-left>\u6c11\u5927\u68cb\u738b\u4e89\u9738\u8d5b</td><td data-title="\'\u4f7f\u7528\u65f6\u95f4\'" header-class=text-left>2015-6-8 16:11</td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=takeback_coupon()><span>\u6536\u56de\u793c\u5238</span></label></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/certificate/coupons/coupons_iWX/certificate_coupons_iWX.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=certificateCouponsIwxCtrl><div class=row><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li d-sref="\'certificate_coupons_iWX\'"><a ui-sref=certificate_coupons_iWX>\u7535\u5b50\u51ed\u8bc1\u5217\u8868</a></li><li d-sref="\'certificate_coupons_iWX.create\'"><a ui-sref=certificate_coupons_iWX.create>\u65b0\u5efa\u7535\u5b50\u51ed\u8bc1</a></li></ul></div></nav></div><div id=content ui-view><div class=row><form class=form-horizontal><fieldset><legend><h4>\u8fc7\u6ee4\u7b5b\u9009\u6761\u4ef6</h4></legend><div class=row><div class=col-md-6><form-input data-title="\'\u7701\'" data-name="\'province\'"><select name=province_scope id=province_scope class=form-control ng-init=provinceArray[0].id ng-model=search_params.province_scope_id ng-options="r.id as r.city for r in provinceArray" ng-change=change_province()></select></form-input></div><div class=col-md-6><form-input data-title="\'\u5e02\'" data-name="\'city\'"><select class=form-control name=city_scope id=city_scope ng-model=search_params.city_scope_id ng-options="r.id as r.city for r in cityArray" ng-change=change_city()></select></form-input></div></div><div class=row><div class=col-md-6><form-input data-title="\'\u5b66\u6821\'" data-name="\'university\'"><select class=form-control name=university_scope id=university_scope ng-model=search_params.university_scope_id ng-options="r.id as r.university for r in universityArray" ng-change=change_university()></select></form-input></div><div class=col-md-6><form-input data-title="\'\u793e\u56e2\'" data-name="\'community\'"><select name=community_scope id=community_scope class=form-control ng-model=search_params.community_scope_id ng-options="r.id as r.community for r in communityArray"></select></form-input></div></div><br><div class=row><div class="col-md-6 col-md-offset-4 form-inline"><input class=form-control ng-model=search_params.key placeholder=\u6d3b\u52a8\u5173\u952e\u8bcd\u641c\u7d22>&nbsp;&nbsp;&nbsp;<button class="btn btn-info"><i class="fa fa-search"></i> \u67e5\u8be2</button></div></div></fieldset></form><br></div><div class=row><a class="btn btn-info pull-right" ng-href="">\u5bfc\u51fa\u5217\u8868</a></div><div class=row><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="coupon in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left>{{$index + 1}}</td><td data-title="\'\u793e\u56e2\u540d\u79f0\'" header-class=text-left>\u4e2d\u592e\u6c11\u65cf\u5927\u5b66\u5409\u4ed6\u534f\u4f1a</td><td data-title="\'\u51ed\u8bc1\u540d\u79f0\'" header-class=text-left>\u9ec4\u7116\u9e21</td><td data-title="\'\u7269\u54c1\u56fe\u7247\'" header-class=text-left><div class=logo style=height:80px;width:80px><img ng-src=/static/images/example.png style=height:100%;width:100% ng-click=viewImage(award.goods_info.image)></div></td><td data-title="\'\u8d5e\u52a9\u5546Logo\'" header-class=text-left><div class=logo style=height:80px;width:80px><img ng-src=/static/images/example.png style=height:100%;width:100% ng-click=viewImage(award.goods_info.image)></div></td><td data-title="\'\u8d5e\u52a9\u5546\u540d\u79f0\'" header-class=text-left>658938241@qq.com</td><td data-title="\'\u51ed\u8bc1\u6570\u91cf\'" header-class=text-left>100</td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=detail_coupon(coupon.id)><span>\u4f7f\u7528\u8be6\u60c5 <i class="fa fa-list"></i></span></label><label type=button class="btn btn-danger btn-checkbox" ng-click=delete_coupon(coupon.id)><span>\u5220\u9664 <i class="fa fa-trash-o"></i></span></label></td></tr></tbody></table></div></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/certificate/coupons/coupons_iWX/certificate_coupons_iWX_create.html', '<div class="col-sm-10 col-sm-offset-1 col-md-10 col-md-offset-1 col-lg-10" ng-controller=certificateIwxCreateCtrl><form class=form-horizontal name=certificateForm enctype=multipart/form-data><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7535\u5b50\u51ed\u8bc1</div></div><div class=panel-body><form-input data-title="\'\u51ed\u8bc1\u540d\u79f0\'" data-name="\'title\'"><input type=text class=form-control id=title ng-model=coupon.title name=title></form-input><form-input data-title="\'\u6709\u6548\u671f\u81f3\'" data-name="\'end_time\'"><datetimepicker datetime=coupon.end_time></datetimepicker></form-input><form-input data-title="\'\u8d5e\u52a9\u5546\'" data-name="\'sponsor_name\'"><input type=text class=form-control id=sponsor_name ng-model=coupon.sponsor_name name=sponsor_name></form-input><form-input data-title="\'\u8d5e\u52a9\u5546Logo\'" data-name="\'sponsor_logo\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=coupon.sponsor_logo class="fileinput-new thumbnail"><img ng-src={{coupon.sponsor_logo.substring(0)}} style="width: 178px"></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=sponsor_logo data-file=coupon.sponsor_logo></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input><form-input data-title="\'\u7269\u54c1\u56fe\u7247\'" data-name="\'image\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=coupon.image class="fileinput-new thumbnail"><img ng-src={{coupon.image.substring(0)}} style=width:500px></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=image data-file=coupon.image></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input><form-input data-title="\'\u603b\u6570\'" data-name="\'total\'"><input class=form-control id=total ng-model=coupon.total name=total></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=create()>\u521b\u5efa</button></div></form></div>');
    $templateCache.put('partial/certificate/coupons/coupons_university/certificate_university.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=certificateUniversityCtrl><div class=row><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li d-sref="\'certificate_coupons_university\'"><a ui-sref=certificate_coupons_university>\u7535\u5b50\u51ed\u8bc1\u5217\u8868</a></li><li d-sref="\'certificate_coupons_university.create\'"><a ui-sref=certificate_coupons_university.create>\u65b0\u5efa\u7535\u5b50\u51ed\u8bc1</a></li></ul></div></nav><br></div><div id=content ui-view><div class=row><form class=form-horizontal><div class=col-md-3 style=margin-top:8px><center><span class="label label-info" style=font-size:100%>\u5b66\u6821\uff1a<font ng-bind=university></font></span></center></div><div class=col-md-5><form-input data-title="\'\u793e\u56e2\'" data-name="\'community\'"><select name=community id=community class=form-control><option>\u9752\u6625\u5409\u4ed6\u534f\u4f1a</option></select></form-input></div><div class="col-md-4 form-inline"><input class=form-control placeholder=\u6d3b\u52a8\u5173\u952e\u8bcd\u641c\u7d22>&nbsp;&nbsp;&nbsp;<button class="btn btn-info"><i class="fa fa-search"></i> \u67e5\u8be2</button></div></form></div><div class=row><br><br><a class="btn btn-info pull-right" ng-href="">\u5bfc\u51fa\u5217\u8868</a></div><div class=row><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="coupon in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left>{{$index + 1}}</td><td data-title="\'\u793e\u56e2\u540d\u79f0\'" header-class=text-left>\u4e2d\u592e\u6c11\u65cf\u5927\u5b66\u5409\u4ed6\u534f\u4f1a</td><td data-title="\'\u51ed\u8bc1\u540d\u79f0\'" header-class=text-left>\u9ec4\u7116\u9e21</td><td data-title="\'\u7269\u54c1\u56fe\u7247\'" header-class=text-left><div class=logo style=height:80px;width:80px><img ng-src=/static/images/example.png style=height:100%;width:100% ng-click=viewImage(award.goods_info.image)></div></td><td data-title="\'\u8d5e\u52a9\u5546Logo\'" header-class=text-left><div class=logo style=height:80px;width:80px><img ng-src=/static/images/example.png style=height:100%;width:100% ng-click=viewImage(award.goods_info.image)></div></td><td data-title="\'\u8d5e\u52a9\u5546\u540d\u79f0\'" header-class=text-left>658938241@qq.com</td><td data-title="\'\u51ed\u8bc1\u6570\u91cf\'" header-class=text-left>100</td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=detail_coupon(coupon.id)><span>\u4f7f\u7528\u8be6\u60c5 <i class="fa fa-list"></i></span></label><label type=button class="btn btn-danger btn-checkbox" ng-click=delete_coupon(coupon.id)><span>\u5220\u9664 <i class="fa fa-trash-o"></i></span></label></td></tr></tbody></table></div></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/certificate/coupons/coupons_university/certificate_university_create.html', '<div class="col-sm-10 col-sm-offset-1 col-md-10 col-md-offset-1 col-lg-10" ng-controller=certificateUniversityCreateCtrl><form class=form-horizontal name=certificateForm enctype=multipart/form-data><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7535\u5b50\u51ed\u8bc1</div></div><div class=panel-body><form-input data-title="\'\u51ed\u8bc1\u540d\u79f0\'" data-name="\'title\'"><input type=text class=form-control id=title ng-model=coupon.title name=title></form-input><form-input data-title="\'\u6709\u6548\u671f\u81f3\'" data-name="\'end_time\'"><datetimepicker datetime=coupon.end_time></datetimepicker></form-input><form-input data-title="\'\u8d5e\u52a9\u5546\'" data-name="\'sponsor_name\'"><input type=text class=form-control id=sponsor_name ng-model=coupon.sponsor_name name=sponsor_name></form-input><form-input data-title="\'\u8d5e\u52a9\u5546Logo\'" data-name="\'sponsor_logo\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=coupon.sponsor_logo class="fileinput-new thumbnail"><img ng-src={{coupon.sponsor_logo.substring(0)}} style="width: 178px"></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=sponsor_logo data-file=coupon.sponsor_logo></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input><form-input data-title="\'\u7269\u54c1\u56fe\u7247\'" data-name="\'image\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=coupon.image class="fileinput-new thumbnail"><img ng-src={{coupon.image.substring(0)}} style=width:500px></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=image data-file=coupon.image></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input><form-input data-title="\'\u603b\u6570\'" data-name="\'total\'"><input class=form-control id=total ng-model=coupon.total name=total></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-click=create()>\u521b\u5efa</button></div></form></div>');
    $templateCache.put('partial/certificate/coupons/coupons_university/certificate_university_detail.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=certificateUniversityDetailCtrl><br><div class=row><div class="col-md-5 col-md-offset-3"><span class="label label-info" style=font-size:150%><font>\u51ed\u8bc1\u603b\u6570\uff1a50</font></span>&nbsp;&nbsp; <span class="label label-warning" style=font-size:150%><font>\u5269\u4f59\u6570\u91cf\uff1a20</font></span></div></div><br><div class=row><a class="btn btn-info pull-right" ng-href=/api/admin/community/users/export.csv>\u5bfc\u51fa\u5217\u8868</a></div><div class=row><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="coupon in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left>{{$index + 1}}</td><td data-title="\'\u4f7f\u7528\u8005\u6635\u79f0\'" header-class=text-left>\u559c\u6b22\u662f\u6de1\u6de1\u7684\u7231</td><td data-title="\'\u4f7f\u7528\u72b6\u6001\'" header-class=text-left><span ng-class=coupon_status[coupon.status].label>{{coupon_status[coupon.status].text}}</span></td><td data-title="\'\u76f8\u5173\u6d3b\u52a8\'" header-class=text-left>\u6c11\u5927\u68cb\u738b\u4e89\u9738\u8d5b</td><td data-title="\'\u4f7f\u7528\u65f6\u95f4\'" header-class=text-left>2015-6-8 16:11</td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=takeback_coupon()><span>\u6536\u56de\u793c\u5238</span></label></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/common/host_detail.html', '<div class=modal-header><h4 class=modal-title><font ng-bind=community.name></font></h4></div><div class=modal-body><div class=row><div class=col-sm-12><form class=form-horizontal><fieldset><legend><h4><font>\u7ba1\u7406\u5458\u4fe1\u606f</font></h4></legend><div class=row><div class=form-group><label class="col-sm-3 control-label" for=email>\u6ce8\u518c\u90ae\u7bb1</label><div class=col-sm-8><input type=text class=form-control disabled id=email ng-model=admin_user.email name=email required></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=username>\u59d3\u540d</label><div class=col-sm-8><input type=text class=form-control disabled id=username ng-model=admin_user.name name=username required></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=phone>\u7535\u8bdd\u53f7\u7801</label><div class=col-sm-8><input type=text class=form-control disabled id=phone ng-model=admin_user.phone name=phone required></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=photo_id>\u6b63\u9762\u8fd1\u7167</label><div class=col-sm-8><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-new thumbnail" style="width: 200px"><img ng-src={{admin_user.photo_id}}></div><div class="fileinput-preview fileinput-exists thumbnail"></div></div></div></div></div></fieldset></form></div></div><br><div class=row><div class=col-sm-12><form class=form-horizontal><fieldset><legend><h4><font>\u7ec4\u7ec7\u4fe1\u606f</font></h4></legend><div class=row><div class=form-group><label class="col-sm-3 control-label" for=province>\u7701</label><div class=col-sm-8><select class=form-control><option ng-bind=community.university.province></option></select></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=city>\u5e02</label><div class=col-sm-8><select class=form-control><option ng-bind=community.university.city></option></select></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=university>\u5b66\u6821</label><div class=col-sm-8><select class=form-control><option ng-bind=community.university.name></option></select></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=university>\u7ec4\u7ec7\u7c7b\u578b</label><div class=col-sm-8><select class=form-control><option ng-bind=community.university.name></option></select></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=logo>\u7ec4\u7ec7logo</label><div class=col-sm-8><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-new thumbnail" style="width: 200px"><img ng-src={{community.logo}}></div><div class="fileinput-preview fileinput-exists thumbnail"></div></div></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=logo>\u4ecb\u7ecd</label><div class=col-sm-8><textarea class=form-control id=community_description ng-model=community.description disabled name=description rows=5 autocomplete=off>\r' + '\n' + '\t\t\t\t\t\t\t\t</textarea></div></div></div></fieldset></form></div></div></div><div class=modal-footer></div>');
    $templateCache.put('partial/common/share_qrcode.html', '<div class=modal-header></div><div class=modal-body><div class=row><center><qrcode version={{qrcode.v}} error-correction-level=M size=300 data={{qrcode.data}}></qrcode></center></div><div class=row><center><font style="font-size: 40px">\u626b\u4e00\u626b</font></center></div></div><div class=modal-footer></div>');
    $templateCache.put('partial/common/unpublished_log.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=UnpublishLogCtrl><div class=row ng-repeat="sysinfo in sysinfos"><div class="col-md-10 col-md-offset-1"><form class="panel panel-info form-horizontal" my-collapse><span class="btn pull-right"><i class="fa fa-chevron-up"></i>&nbsp;\u6536\u8d77</span><div class=panel-heading><div><font ng-bind=sysinfo.sender_obj.nickname></font>&nbsp;&nbsp;<font ng-bind="sysinfo.create_time | date: \'yyyy-MM-dd HH:mm\'"></font></div></div><div class=panel-body><div class=row><div class=col-sm-12><h4><font ng-bind=sysinfo.title></font></h4></div></div><br><div class=row ng-if=sysinfo.content><div class=col-sm-12><p class=well>\u7406\u7531\uff1a<font ng-bind=sysinfo.content></font></p></div></div></div></form></div></div><br><button class="btn btn-default center-block more-btn" ng-click=loadMoreInfos() ng-disabled=loadMoreBtn ng-show=loadMore><font ng-bind=loadSysinfoBtn></font></button></div>');
    $templateCache.put('partial/common/unpublished_reason.html', '<div class=modal-header><h3 class=modal-title><font ng-bind=reason_title></font></h3></div><div class=modal-body><div class=row ng-if=receive><div class=col-sm-12><font ng-bind=receive></font></div></div><br ng-if="receive"><div class=row><div class=col-sm-12><textarea class="form-control ng-pristine ng-valid ng-touched" ng-model=content rows=5 placeholder=\u8bf7\u586b\u5199\u5177\u4f53\u539f\u56e0></textarea></div></div></div><div class=modal-footer><button class="btn btn-info" ng-click=ok() ng-disabled=ok_btn>\u786e\u5b9a</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/community/community.html', '<div ng-controller=CommunityCtrl><div ng-if=community class="tabs-left hidden-print"><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'community\'"><a ui-sref=community>\u793e\u56e2\u4fe1\u606f</a></li><li d-sref="\'community.members\'"><a ui-sref="community.members({ page: 1 })">\u793e\u5458\u7ba1\u7406</a></li><li d-sref="\'community.department\'"><a ui-sref=community.department>\u90e8\u95e8\u7ba1\u7406</a></li><li d-sref="\'community.duty\'"><a ui-sref=community.duty>\u804c\u52a1\u7ba1\u7406</a></li><li d-sref="\'community.register\'"><a ui-sref=community.register>\u62db\u65b0\u7ba1\u7406</a></li></ul></div><div id=content><div ui-view><div class="col-lg-7 col-lg-offset-3 col-md-8 col-md-offset-3 col-sm-9 col-sm-offset-3"><form method=POST ng-if=!su name=communityInfo class="form-horizontal community-form" role=form enctype=multipart/form-data ng-submit=submit()><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u793e\u56e2\u4fe1\u606f</div></div><div class=panel-body><form-input data-title="\'\u793e\u56e2\u540d\u79f0\'" data-name="\'community_name\'"><input name=community_name id=community_name ng-model=community.name class=form-control type=text readonly></form-input><form-input data-title="\'\u5b66\u6821\u540d\u79f0\'" data-name="\'university\'"><input name=university id=university ng-model=community.university.name class=form-control type=text readonly></form-input><form-input data-title="\'\u793e\u56e2\u4ecb\u7ecd\'" data-name="\'community_description\'"><textarea class=form-control id=community_description ng-model=community.description name=community_description rows=10 autocomplete=off required>\r' + '\n' + '                </textarea><span class=form-error ng-show=show_description>*\u793e\u56e2\u7b80\u4ecb\u8bf7\u9650\u5236\u5728200\u5b57\u7b26\u5185</span></form-input><form-input data-title="\'\u793e\u56e2\u7ba1\u7406\u5bc6\u7801\'" data-name="\'community_password\'"><input name=community_password id=community_password ng-model=community.password_code class=form-control type=text readonly><br><div class="bs-callout bs-callout-warning col-sm-12"><p>\u793e\u56e2\u7ba1\u7406\u5bc6\u7801\u5177\u6709\u552f\u4e00\u6027\uff0c\u7528\u4e8e\u5728 i \u5fae\u6821App\u4e2d\u7684\u793e\u56e2\u7ba1\u7406\u90e8\u5206\uff0c\u8bf7\u8c28\u614e\u4fdd\u7ba1\u3002</p></div></form-input><form-input data-title="\'\u793e\u56e2LOGO\'" data-name="\'logo\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=community.logo class="fileinput-new thumbnail" style=height:150px;width:150px><img ng-src="{{community.logo.substring(0)}}?width=150&height:150" image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom title=\u8bf7\u4fdd\u6301\u6700\u4f73\u5bbd\u9ad8\u6bd4\uff0c\u56fe\u7247\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc71M tool-tip><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=logo data-file=community.logo required></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input></div></div><button class="btn btn-primary form-control" type=submit ng-disabled=show_description>\u4fdd\u5b58</button></form></div></div></div><div ng-if=su><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="admin in $data"><td data-title="\'\u793e\u56e2\u540d\u79f0\'" header-class=text-left>{{admin.community.name}}</td><td data-title="\'\u793e\u56e2\u63cf\u8ff0\'" header-class=text-left>{{admin.community.description}}</td><td data-title="\'\u7ba1\u7406\u5458\'" header-class=text-left>{{admin.user.name}}</td><td data-title="\'\u90ae\u7bb1\'" header-class=text-left>{{admin.user.email}}</td><td data-title="\'\u8054\u7cfb\u7535\u8bdd\'" header-class=text-left>{{admin.user.phone}}</td><td data-title="\'\u8bc1\u4ef6\u7167\'" header-class=text-left><a class=btn ng-click=preview(admin.user.photo_id)>\u9884\u89c8</a></td><td data-title="\'Logo\'" header-class=text-left><a class=btn ng-click=preview(admin.community.logo)>\u9884\u89c8</a></td><td data-title="\'\u6279\u51c6\'" header-class=text-left><a class="fa fa-check btn" ng-click=confirm(admin.user.email)></a></td></tr></tbody></table></div></div>');
    $templateCache.put('partial/community/community_department/community_add_dep_member.html', '<div class=modal-header><h4 class=modal-title>\u8bf7\u9009\u62e9\u8981\u6dfb\u52a0\u5230\u90e8\u95e8\u7684\u793e\u5458</h4></div><div class=modal-body><div class=row><div class=col-md-2><div class=checkbox style=padding-left:8px><label><input type=checkbox ng-model=is_checked_all ng-checked=checked_all() ng-click="get_checked_all(is_checked_all)">&nbsp;&nbsp;\u5168\u9009</label></div></div></div><div class=row><table class="table table-striped table-responsive coupons" ng-table=tableParams><tbody><tr ng-repeat="member in $data"><td style=padding-left:22px><div class=checkbox><label><input type=checkbox ng-model=is_checked_item ng-checked=is_checked(member.user.id) ng-click="get_checked_item(member.user.id, is_checked_item)"></label></div></td><td><div class=logo style=height:70px;width:70px><img ng-src={{member.user.icon}} style=height:100%;width:100%></div></td><td><font ng-bind=member.user.nickname></font></td><td><font ng-bind=member.user.name></font></td><td><font ng-bind=member.department.name></font></td></tr></tbody></table></div></div><div class=modal-footer><button type=button class="btn btn-info" data-dismiss=modal ng-click=choose_member()>\u6dfb&nbsp;\u52a0</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u53d6&nbsp;\u6d88</span></button></div>');
    $templateCache.put('partial/community/community_department/community_department.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=CommDepartmentCtrl><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li class=active><a ui-sref=community.department>\u90e8\u95e8\u5217\u8868</a></li></ul><ul class="nav navbar-nav pull-right"><li><a ng-click=createDepartment()>\u65b0\u5efa\u90e8\u95e8</a></li></ul></div></nav><div id=content ui-view><div ng-controller=CommDepartmentCtrl><div ng-show=showTable><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="department in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left><font ng-bind="$index + 1"></font></td><td data-title="\'\u90e8\u95e8\u540d\u79f0\'" header-class=text-left><a ng-click=addDepMember(department)><font title={{department.name}} ng-bind="department.name | substr: 7: 6"></font></a></td><td data-title="\'\u5f53\u524d\u4eba\u6570\'" header-class=text-left><font ng-bind=department.number></font></td><td data-title="\'\u90e8\u95e8\u7b80\u4ecb\'" header-class=text-left><textarea type=text class=form-control rows=4 id=describe ng-bind=department.describe name=describe readonly></textarea></td><td data-title="\'\u521b\u5efa\u65f6\u95f4\'" header-class=text-left><font ng-bind="department.create_time | date: \'yyyy-MM-dd HH:mm:ss\'"></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=editDepartment(department)><span>\u7f16&nbsp;\u8f91</span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=delDepartment(department.id)><span>\u5220&nbsp;\u9664</span></label></td></tr></tbody></table></div><div ng-show=!showTable><p style="text-align: center"><br><br><br><font style="font-weight: bold" ng-bind=note_message></font></p></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div></div></div>');
    $templateCache.put('partial/community/community_department/community_department_detail.html', '<form class=form-horizontal ng-submit=creOrUdpDep()><div class=modal-header><h4 class=modal-title>\u90e8\u95e8\u4fe1\u606f</h4></div><div class=modal-body><div class=col-md-12><form-input data-title="\'\u90e8\u95e8\u540d\u79f0\'" data-name="\'name\'"><input type=text class=form-control placeholder=\u8f93\u5165\u5185\u5bb9\u8bf7\u63a7\u5236\u572820\u4e2a\u5b57\u4ee5\u5185 maxlength=20 id=name ng-model=department.name name=name required></form-input><form-input data-title="\'\u90e8\u95e8\u7b80\u4ecb\'" data-name="\'describe\'"><textarea type=text class=form-control rows=5 style=resize:none placeholder=\u8f93\u5165\u5185\u5bb9\u8bf7\u63a7\u5236\u57281000\u4e2a\u4ee5\u5185 maxlength=1000 id=describe ng-model=department.describe name=describe required></textarea></form-input></div></div><div class=modal-footer><button type=submit class="btn btn-info" data-dismiss=modal ng-show="departmentId === -1">\u521b&nbsp;\u5efa</button> <button type=submit class="btn btn-info" data-dismiss=modal ng-show="departmentId !== -1">\u4fee&nbsp;\u6539</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u53d6&nbsp;\u6d88</span></button></div></form>');
    $templateCache.put('partial/community/community_duty/comm_add_duty_member.html', '<div class=modal-header><h4 class=modal-title>\u8bf7\u9009\u62e9\u8981\u8d4b\u4e88\u8be5\u804c\u52a1\u7684\u793e\u5458</h4></div><div class=modal-body><div class=row><div class=col-md-2><div class=checkbox style=padding-left:8px><label><input type=checkbox ng-model=is_checked_all ng-checked=checked_all() ng-click="get_checked_all(is_checked_all)">&nbsp;&nbsp;\u5168\u9009</label></div></div></div><div class=row><table class="table table-striped table-responsive coupons" ng-table=tableParams><tbody><tr ng-repeat="member in $data"><td style=padding-left:22px><div class=checkbox><label><input type=checkbox ng-model=is_checked_item ng-checked=is_checked(member.user.id) ng-click="get_checked_item(member.user.id, is_checked_item)"></label></div></td><td><div class=logo style=height:70px;width:70px><img ng-src={{member.user.icon}} style=height:100%;width:100%></div></td><td><font ng-bind=member.user.nickname></font></td><td><font ng-bind=member.user.name></font></td><td><font ng-bind=member.department.name></font></td><td><font ng-bind=member.duty.name></font></td></tr></tbody></table></div></div><div class=modal-footer><button type=button class="btn btn-info" data-dismiss=modal ng-click=choose_member()>\u6dfb&nbsp;\u52a0</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u53d6&nbsp;\u6d88</span></button></div>');
    $templateCache.put('partial/community/community_duty/community_duty.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=CommDutyCtrl><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li class=active><a ui-sref=community.department>\u804c\u52a1\u5217\u8868</a></li></ul><ul class="nav navbar-nav pull-right"><li><a ng-click=createDuty()>\u65b0\u5efa\u804c\u52a1</a></li></ul></div></nav><div id=content ui-view><div ng-controller=CommDutyCtrl ng-cloak><div ng-show=showTable><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="duty in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left><font ng-bind="$index + 1"></font></td><td data-title="\'\u804c\u52a1\u540d\u79f0\'" header-class=text-left><a ng-click=addDutyMember(duty)><font title={{duty.name}} ng-bind="duty.name | substr: 7: 6"></font></a></td><td data-title="\'\u804c\u52a1\u7b80\u4ecb\'" header-class=text-left><textarea type=text class=form-control rows=4 id=describe ng-bind=duty.describe name=describe readonly></textarea></td><td data-title="\'\u6240\u5c5e\u90e8\u95e8\'" header-class=text-left><font ng-bind=duty.department.name></font></td><td data-title="\'\u521b\u5efa\u65f6\u95f4\'" header-class=text-left><font ng-bind="duty.create_time | date: \'yyyy-MM-dd HH:mm:ss\'"></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=editDuty(duty)><span>\u7f16&nbsp;\u8f91</span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=delDuty(duty.id)><span>\u5220&nbsp;\u9664</span></label></td></tr></tbody></table></div><div ng-show=!showTable><p style="text-align: center"><br><br><br><font style="font-weight: bold" ng-bind=note_message></font></p></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div></div></div>');
    $templateCache.put('partial/community/community_duty/community_duty_detail.html', '<form class=form-horizontal ng-submit=creOrUdpDuty()><div class=modal-header><h4 class=modal-title>\u804c\u52a1\u4fe1\u606f</h4></div><div class=modal-body><div class=col-md-12><form-input data-title="\'\u804c\u52a1\u540d\u79f0\'" data-name="\'name\'"><input type=text class=form-control placeholder=\u8f93\u5165\u5185\u5bb9\u8bf7\u63a7\u5236\u572820\u4e2a\u5b57\u4ee5\u5185 maxlength=20 id=name ng-model=duty.name name=name required></form-input><form-input data-title="\'\u6240\u5c5e\u90e8\u95e8\'" data-name="\'department\'" ng-show="dutyId === -1"><select name=department_scope id=department_scope class=form-control ng-model=duty.department.id ng-options="r.id as r.name for r in departmentArray" required></select></form-input><form-input data-title="\'\u804c\u52a1\u7b80\u4ecb\'" data-name="\'describe\'"><textarea type=text class=form-control rows=5 style=resize:none placeholder=\u8f93\u5165\u5185\u5bb9\u8bf7\u63a7\u5236\u57281000\u4e2a\u4ee5\u5185 maxlength=1000 id=describe ng-model=duty.describe name=describe required></textarea></form-input></div></div><div class=modal-footer><button type=submit class="btn btn-info" data-dismiss=modal ng-show="dutyId === -1">\u521b&nbsp;\u5efa</button> <button type=submit class="btn btn-info" data-dismiss=modal ng-show="dutyId !== -1">\u4fee&nbsp;\u6539</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u53d6&nbsp;\u6d88</span></button></div></form>');
    $templateCache.put('partial/community/community_election.html', '<div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=CommunityElectionCtrl><div class=row><form class=form-horizontal role=form enctype=multipart/form-data><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u5f53\u524d\u7ba1\u7406\u5458\u6982\u51b5</div></div><div class=panel-body><form-input data-title="\'\u90ae\u7bb1\'" data-name="\'email\'"><input name=email id=email ng-model=user.email class=form-control type=text readonly></form-input><form-input data-title="\'\u7528\u6237\u540d\'" data-name="\'name\'"><input name=name id=name ng-model=user.name class=form-control type=text readonly></form-input><form-input data-title="\'\u624b\u673a\'" data-name="\'phone\'"><input name=phone id=phone ng-model=user.phone class=form-control type=text readonly></form-input><form-input data-title="\'\u8bc1\u4ef6\u7167\'" data-name="\'photo_id\'"><div class=thumbnail style=width:200px><img ng-src="{{user.photo_id}}"></div></form-input></div><button class="btn btn-primary form-control form-submit-button" type=button ng-click=choose_new_manager()>\u6dfb\u52a0\u65b0\u7ba1\u7406\u5458</button></div></form></div><div class=row ng-show=new_manager><form class=form-horizontal role=form enctype=multipart/form-data ng-submit=election(new_user.user.id)><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u65b0\u7ba1\u7406\u5458\u6982\u51b5</div></div><div class=panel-body><form-input data-title="\'\u90ae\u7bb1\'" data-name="\'email\'"><input name=email id=email ng-model=new_user.user.email class=form-control type=email required></form-input><form-input data-title="\'\u7528\u6237\u540d\'" data-name="\'name\'"><input name=name id=name ng-model=new_user.user.name class=form-control type=text readonly></form-input><form-input data-title="\'\u624b\u673a\'" data-name="\'phone\'"><input name=phone id=phone ng-model=new_user.user.phone class=form-control type=text readonly></form-input><form-input data-title="\'\u8bc1\u4ef6\u7167\'" data-name="\'photo_id\'"><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-new thumbnail" style="width: 378px"><img ng-src="{{new_user.user.photo_id.substring(0)}}?width=160&height=160"></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=photo_id data-file=new_user.user.photo_id></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit>\u7533\u8bf7\u6362\u5c4a</button></div></form></div></div>');
    $templateCache.put('partial/community/community_election_members.html', '<div class=modal-header><h4 class=modal-title>\u793e\u56e2\u7ba1\u7406\u5458\u5019\u9009\u4eba<font style="font-size: 10px;color: rgb(60, 194, 227)">\uff08\u7ba1\u7406\u5458\u5c5e\u6027\u4e0d\u53ef\u7528\u4ee3\u8868\u5df2\u662f\u5176\u4ed6\u793e\u56e2\u7ba1\u7406\u5458\uff09</font></h4></div><div class=modal-body><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="community_member in $data"><td style=padding-left:14px><div class=radio><label><input type=radio name=member id=member value={{community_member.user.id}} ng-model=checked_user ng-click=get_checked_user(checked_user) ng-disabled="community_member.user.role.name == \'ADMIN\'"></label></div></td><td data-title="\'\u7167\u7247\'" header-class=text-left><div class=logo style=height:70px;width:70px><img ng-src={{community_member.user.photo_id}} style=height:100%;width:100% ng-click=viewImage(community_member.user.photo_id)></div></td><td data-title="\'\u7528\u6237\u540d\'" header-class=text-left><font ng-bind=community_member.user.name></font></td><td data-title="\'\u624b\u673a\'" header-class=text-left><font ng-bind=community_member.user.phone></font></td><td data-title="\'\u90ae\u7bb1\'" header-class=text-left><font ng-bind=community_member.user.email></font></td><td data-title="\'\u7ba1\u7406\u5458\u5c5e\u6027\'" header-class=text-left><span ng-if="community_member.user.role.name == \'USER\'" class="label label-success">\u53ef\u7528</span> <span ng-if="community_member.user.role.name == \'ADMIN\'" class="label label-danger">\u4e0d\u53ef\u7528</span></td></tr></tbody></table></div><div class=modal-footer><button type=button class="btn btn-info" data-dismiss=modal ng-click=choose_member() ng-disabled=choose_member_btn>\u786e\u5b9a</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u5173\u95ed</span></button></div>');
    $templateCache.put('partial/community/community_iWX/community_iWX.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=CommunityIwxCtrl><div class=row><form class=form-horizontal><fieldset><legend><h4>\u8fc7\u6ee4\u7b5b\u9009\u6761\u4ef6</h4></legend><div class=row><div class=col-md-3><form-input data-title="\'\u7701\'" data-name="\'province\'"><select name=province_scope id=province_scope class=form-control ng-model=search_params.province_scope_id ng-options="r.id as r.city for r in provinceArray" ng-change=change_province()></select></form-input></div><div class=col-md-3><form-input data-title="\'\u5e02\'" data-name="\'city\'"><select class=form-control name=city_scope id=city_scope ng-model=search_params.city_scope_id ng-options="r.id as r.city for r in cityArray" ng-change=change_city()></select></form-input></div><div class=col-md-6><form-input data-title="\'\u5b66\u6821\'" data-name="\'university\'"><select class=form-control name=university_scope id=university_scope ng-model=search_params.university_scope_id ng-options="r.id as r.name for r in universityArray" ng-change=change_university()></select></form-input></div></div><br><div class=row><div class="col-md-1 col-md-offset-10"></div></div></fieldset></form><br></div><div class=row><nav class="navbar navbar-inverse" style="background-color: rgb(219, 218, 218)" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li d-sref="\'community_iWX\'"><a ui-sref=community_iWX>\u7ec4\u7ec7\u5217\u8868</a></li><li d-sref="\'community_iWX.pending\'"><a ui-sref=community_iWX.pending>\u5f85\u5ba1\u6838\u7ec4\u7ec7</a></li><li d-sref="\'community_iWX.manager_list\'"><a ui-sref=community_iWX.manager_list>\u7ba1\u7406\u5458\u5217\u8868</a></li><li d-sref="\'community_iWX.create_manager\'"><a ui-sref=community_iWX.create_manager>\u65b0\u5efa\u7ba1\u7406\u5458</a></li></ul></div></nav></div><div id=content ui-view><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="community in $data"><td data-title="\'\u7ec4\u7ec7\u540d\u79f0\'" header-class=text-left><font ng-bind=community.community.name></font></td><td data-title="\'\u7ec4\u7ec7\u7c7b\u578b\'" header-class=text-left><font ng-bind=org_type_hash[community.admin_user.user_type]></font></td><td data-title="\'\u7ec4\u7ec7\u72b6\u6001\'" header-class=text-left><span ng-if=community.admin_user.confirmed_at class="label label-success">\u5df2\u5ba1\u6838</span> <span ng-if=!community.admin_user.confirmed_at class="label label-danger">\u672a\u5ba1\u6838</span></td><td data-title="\'\u7ba1\u7406\u5458\u540d\u79f0\'" header-class=text-left><font ng-bind=community.admin_user.name></font></td><td data-title="\'\u7ba1\u7406\u5458\u7535\u8bdd\'" header-class=text-left><font ng-bind=community.admin_user.phone></font></td><td data-title="\'\u7ba1\u7406\u5458\u90ae\u7bb1\'" header-class=text-left><font ng-bind=community.admin_user.email></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label ng-if=!community.admin_user.confirmed_at type=button class="btn btn-info btn-checkbox" ng-click=approved(community.admin_user.email)><span>\u6279\u51c6 <i class="fa fa-plus-circle"></i></span></label><label ng-if=community.admin_user.confirmed_at type=button class="btn btn-info btn-checkbox" ng-click=privateLetter(community.community.id)><span>\u79c1\u4fe1 <i class="fa fa-envelope"></i></span></label>&nbsp;<label ng-if="community.admin_user.confirmed_at && community.admin_user.active" type=button class="btn btn-warning btn-checkbox" ng-click=disable_community(community.admin_user.id)><span>\u7981\u7528 <i class="fa fa-ban"></i></span></label><label ng-if="community.admin_user.confirmed_at && !community.admin_user.active" type=button class="btn btn-success btn-checkbox" ng-click=enable_community(community.admin_user.id)><span>\u542f\u7528 <i class="fa fa-plus-circle"></i></span></label></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/community/community_iWX/community_iWX_create_manager.html', '<div class="col-sm-12 col-md-11 col-md-offset-1 col-lg-10" ng-controller=CreateManagerCtrl><form class="form-horizontal register-form" role=form enctype=multipart/form-data name=createManageForm ng-submit=create_manager()><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7ba1\u7406\u5458\u4fe1\u606f</div></div><div class=panel-body><form-input data-title="\'\u89d2\u8272\'" data-name="\'role\'"><div class=col-md-8><select name=role_scope id=role_scope class=form-control ng-init=roleArray[0].id ng-model=manager.role ng-options="r.id as r.role_name for r in roleArray" ng-change=change_role() required></select></div></form-input><form-input data-title="\'\u5b66\u6821\'" data-name="\'university\'"><div class=col-md-3><select name=province_scope id=province_scope class=form-control ng-init=provinceArray[0].id ng-model=manager.province_scope_id ng-options="r.id as r.city for r in provinceArray" ng-change=change_province()></select></div><div class=col-md-3><select class=form-control name=city_scope id=city_scope ng-model=manager.city_scope_id ng-options="r.id as r.city for r in cityArray" ng-change=change_city()></select></div><div class=col-md-6><select class=form-control name=university_scope id=university_scope ng-model=manager.university_id ng-options="r.id as r.name for r in universityArray" ng-change=change_university() required></select></div></form-input><form-input data-title="\'\u7c7b\u578b\'" data-name="\'manager_type\'" ng-hide=show_community><div class=col-md-12><select name=manager_type id=manager_type class=form-control ng-change=type() ng-model=manager.un_admin_type ng-options="r.id as r.name for r in un_Man_type"></select></div></form-input><form-input data-title="\'\u7ba1\u7406\u5458\u540d\u79f0\'" data-name="\'manage_name\'" ng-show=show_community><div class=col-md-12><input name=name id=name ng-model=manager.nickname class=form-control type=text></div></form-input><form-input data-title="\'\u5bc6\u7801\'" data-name="\'password\'"><div class=col-md-12><input name=password id=password ng-model=manager.password class=form-control type=text maxlength=6></div></form-input><form-input data-title="\'\u6ce8\u518c\u90ae\u7bb1\'" data-name="\'email\'"><div class=col-md-12><input name=email id=email ng-model=manager.email class=form-control type=email required></div></form-input><form-input data-title="\'\u7ec4\u7ec7\u540d\u79f0\'" data-name="\'community_name\'" ng-show=show_community><div class=col-md-12><input name=community_name id=community_name ng-model=manager.community_name class=form-control type=community_name></div></form-input></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-disabled=create_manager_btn>\u521b\u5efa</button></div></form></div>');
    $templateCache.put('partial/community/community_iWX/community_iWX_letter.html', '<div class=modal-header><h3 class=modal-title>\u53d1\u9001\u79c1\u4fe1</h3></div><div class=modal-body><textarea class="form-control ng-pristine ng-valid ng-touched" ng-model=content rows=5></textarea></div><div class=modal-footer><button class="btn btn-info" ng-click=ok()>\u53d1\u9001</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/community/community_iWX/community_iWX_manager_list.html', '<div ng-controller=CommIwxManagerListCtrl><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="manager in $data"><td data-title="\'\u7ba1\u7406\u5458\u540d\u79f0\'" header-class=text-left><font ng-bind="manager.admin_user.name || manager.nickname"></font></td><td data-title="\'\u89d2\u8272\'" header-class=text-left><font ng-bind="role_hash_table[manager.admin_user.role.name] || role_hash_table[manager.role.name]"></font></td><td data-title="\'\u7c7b\u578b\'" header-class=text-left><font ng-bind=org_type_hash[manager.admin_user.user_type]></font></td><td data-title="\'\u7ec4\u7ec7\u540d\u79f0\'" header-class=text-left><font ng-bind=manager.community.name></font></td><td data-title="\'\u7535\u8bdd\'" header-class=text-left><font ng-bind="manager.admin_user.phone || manager.phone"></font></td><td data-title="\'\u90ae\u7bb1\'" header-class=text-left><font ng-bind="manager.admin_user.email || manager.email"></font></td></tr></tbody></table></div>');
    $templateCache.put('partial/community/community_iWX/community_iWX_pending.html', '<div ng-controller=CommIwxPendingCtrl><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="community in $data"><td data-title="\'\u7ec4\u7ec7\u540d\u79f0\'" header-class=text-left><font ng-bind=community.community.name></font></td><td data-title="\'\u7ec4\u7ec7\u7c7b\u578b\'" header-class=text-left><div style=width:60px><font ng-bind=org_type_hash[community.user.user_type]></font></div></td><td data-title="\'\u7ec4\u7ec7\u4ecb\u7ecd\'" header-class=text-left><font ng-bind=community.community.description></font></td><td data-title="\'Logo\'" header-class=text-left><div class=logo style=height:60px;width:60px><img ng-src={{community.community.logo}} style=height:100%;width:100% ng-click=viewImage(community.community.logo)></div></td><td data-title="\'\u7ba1\u7406\u5458\u540d\u79f0\'" header-class=text-left><font ng-bind=community.user.name></font></td><td data-title="\'\u8bc1\u4ef6\u7167\'" header-class=text-left><div class=logo style=height:70px;width:70px><img ng-src={{community.user.photo_id}} style=height:100%;width:100% ng-click=viewImage(community.user.photo_id)></div></td><td data-title="\'\u7535\u8bdd\'" header-class=text-left><font ng-bind=community.user.phone></font></td><td data-title="\'\u90ae\u7bb1\'" header-class=text-left><font ng-bind=community.user.email></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=approved(community.user.email)><span>\u6279\u51c6 <i class="fa fa-plus-circle"></i></span></label></td></tr></tbody></table><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/community/community_iWX/community_iWX_register_community.html', '<div class="col-sm-12 col-md-11 col-md-offset-1 col-lg-10" ng-controller=RegisterIwxCtrl><form method=POST ng-submit=submit() class="form-horizontal register-form" role=form enctype=multipart/form-data name=registerForm><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7ba1\u7406\u5458\u4fe1\u606f</div></div><div class=panel-body><form-input data-title="\'\u6ce8\u518c\u90ae\u7bb1\'" data-name="\'email\'"><input name=email id=email ng-model=user.email class=form-control type=email required></form-input><form-input data-title="\'\u5bc6\u7801\'" data-name="\'password\'"><input name=password id=password ng-model=user.password class=form-control maxlength=6 type=text required></form-input><form-input data-title="\'\u59d3\u540d\'" data-name="\'name\'"><input name=name id=name ng-model=user.name class=form-control type=text required></form-input><form-input data-title="\'\u624b\u673a\u53f7\u7801\'" data-name="\'phone\'"><input name=phone id=phone ng-model=user.phone class=form-control type=text required></form-input><form-input data-title="\'\u8bc1\u4ef6\u7167\'" data-name="\'photo_id\'"><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=photo_id data-file=user.photo_id required></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input></div></div><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u793e\u56e2\u4fe1\u606f</div></div><div class=panel-body><form-input data-title="\'\u793e\u56e2\u540d\u79f0\'" data-name="\'community_name\'"><input name=community_name id=community_name ng-model=community.community_name class=form-control type=text required></form-input><form-input data-title="\'\u5b66\u6821\u540d\u79f0\'" data-name="\'university\'"><select class=form-control id=university name=university ng-model=community.university ng-options="university.id as university.name for university in universities"></select></form-input><form-input data-title="\'\u793e\u56e2\u4ecb\u7ecd\'" data-name="\'community_description\'"><textarea class=form-control id=community_description ng-model=community.description name=community_description rows=5 autocomplete=off>\r' + '\n' + '          </textarea></form-input><form-input data-title="\'\u793e\u56e2LOGO\'" data-name="\'logo\'"><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=logo data-file=community.logo required></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></form-input></div></div><div><button type=submit class="btn btn-primary form-control">\u6ce8\u518c</button></div></form></div>');
    $templateCache.put('partial/community/community_iWX/community_iWX_shift.html', '<div ng-controller=CommIwxShiftCtrl><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="community in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left>{{$index + 1}}</td><td data-title="\'\u793e\u56e2\u540d\u79f0\'" header-class=text-left><font ng-bind=community.community.name></font></td><td data-title="\'\u539f\u7ba1\u7406\u5458\u540d\u79f0\'" header-class=text-left><font ng-bind=community.user.name></font></td><td data-title="\'\u8bc1\u4ef6\u7167\'" header-class=text-left><div class=logo style=height:70px;width:70px><img ng-src={{community.user.photo_id}} style=height:100%;width:100% ng-click=viewImage(community.user.photo_id)></div></td><td data-title="\'\u539f\u7ba1\u7406\u5458\u7535\u8bdd\'" header-class=text-left><font ng-bind=community.user.phone></font></td><td data-title="\'\u65b0\u7ba1\u7406\u5458\u540d\u79f0\'" header-class=text-left><font ng-bind=community.election_user.name></font></td><td data-title="\'\u8bc1\u4ef6\u7167\'" header-class=text-left><div class=logo style=height:70px;width:70px><img ng-src={{community.election_user.photo_id}} style=height:100%;width:100% ng-click=viewImage(community.election_user.photo_id)></div></td><td data-title="\'\u65b0\u7ba1\u7406\u5458\u7535\u8bdd\'" header-class=text-left><font ng-bind=community.election_user.phone></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=approved_shift(community.id)><span>\u6279\u51c6 <i class="fa fa-plus-circle"></i></span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=reject_shift(community.id)><span>\u62d2\u7edd <i class="fa fa-minus-circle"></i></span></label></td></tr></tbody></table><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/community/community_letter.html', '<div class=modal-header><h3 class=modal-title>\u53d1\u9001\u79c1\u4fe1</h3></div><div class=modal-body><textarea class="form-control ng-pristine ng-valid ng-touched" ng-model=content rows=5></textarea></div><div class=modal-footer><button class="btn btn-info" ng-click=ok()>\u53d1\u9001</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/community/community_mem_dep_setting.html', '<div class=modal-header><h4 class=modal-title>\u90e8\u95e8\u8bbe\u7f6e</h4></div><div class=modal-body><div><h3 style="margin-top: -10px;margin-left: 10px"><span class="label label-success"><font style="font-weight: bold" ng-bind=member.user.name></font></span></h3></div><br><div class=row><div class=col-md-5><div class=form-group><label class="col-md-5 control-label">\u5f53\u524d\u90e8\u95e8</label><div class=col-md-7><span class="label label-info"><font style="font-weight: bold" title={{member.department.name}} ng-bind="member.department.name | substr: 6: 5 | depcontent"></font></span></div></div></div><div class=col-md-7><div class=form-group><label class="col-md-4 control-label">\u8c03\u6574\u90e8\u95e8</label><div class=col-md-8><select name=department_scope id=department_scope class=form-control ng-model=department_id ng-options="r.id as r.name for r in departmentArray"></select></div></div></div></div><div></div></div><div class=modal-footer><button type=button class="btn btn-info" data-dismiss=modal ng-click=setDepartment() ng-disabled=btnSetting>\u786e&nbsp;\u5b9a</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u53d6&nbsp;\u6d88</span></button></div>');
    $templateCache.put('partial/community/community_mem_duty_setting.html', '<div class=modal-header><h4 class=modal-title>\u804c\u52a1\u8bbe\u7f6e</h4></div><div class=modal-body><div><h3 style="margin-top: -10px;margin-left: 10px"><span class="label label-success"><font style="font-weight: bold" ng-bind=member.user.name></font></span></h3></div><br><div class=row><div class=col-md-5><div class=row style="margin-bottom: 30px"><div class=form-group><label class="col-md-5 control-label">\u5f53\u524d\u90e8\u95e8</label><div class=col-md-7><span class="label label-info"><font style="font-weight: bold" title={{member.department.name}} ng-bind="member.department.name | substr: 6: 5 | depcontent"></font></span></div></div></div><div class=row><div class=form-group><label class="col-md-5 control-label">\u5f53\u524d\u804c\u52a1</label><div class=col-md-7><span class="label label-info"><font style="font-weight: bold" title={{member.duty.name}} ng-bind="member.duty.name | substr: 6: 5 | dutycontent"></font></span></div></div></div></div><div class=col-md-7><div class=row><div class=form-group><label class="col-md-4 control-label">\u8c03\u6574\u90e8\u95e8</label><div class=col-md-8><select name=department_scope id=department_scope class=form-control ng-model=department_id ng-options="r.id as r.name for r in departmentArray" ng-change=changeDepartment(department_id)></select></div></div></div><br><div class=row><div class=form-group><label class="col-md-4 control-label">\u8c03\u6574\u804c\u52a1</label><div class=col-md-8><select name=duty_scope id=duty_scope class=form-control ng-model=duty_id ng-options="r.id as r.name for r in dutyArray"></select></div></div></div></div></div><div></div></div><div class=modal-footer><button type=button class="btn btn-info" data-dismiss=modal ng-click=setDuty() ng-disabled=btnSetting>\u786e&nbsp;\u5b9a</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u53d6&nbsp;\u6d88</span></button></div>');
    $templateCache.put('partial/community/community_member.html', '<div ng-controller=CommunityMemberCtrl class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3"><p class=hidden-print><a ng-if="user.status != \'PENDING\'" ui-sref="community.members({ page: returnPage })" class="btn-default btn"><i class="fa fa-reply"></i> \u8fd4\u56de</a> <a ng-if="user.status == \'PENDING\'" ui-sref="community.verify_members({ page: returnPage })" class="btn-default btn"><i class="fa fa-reply"></i> \u8fd4\u56de</a>&nbsp; <a ng-if="user.status == \'PENDING\'" ng-click=approve() class="btn btn-info">\u6279&nbsp;&nbsp;\u51c6&nbsp;&nbsp;<i class="fa fa-check"></i></a> <a ng-if="user.status == \'PENDING\'" ng-click="refuse(\'\')" class="btn btn-danger">\u62d2&nbsp;&nbsp;\u7edd&nbsp;&nbsp;<i class="fa fa-ban"></i></a> <a ng-if="user.status == \'APPROVED\'" ng-click=depSetting() class="btn btn-info">\u90e8\u95e8\u8bbe\u7f6e</a>&nbsp; <a ng-if="user.status == \'APPROVED\'" ng-click=dutySetting() class="btn btn-info">\u804c\u52a1\u8bbe\u7f6e</a> <a ng-click=print() class="btn btn-default pull-right"><i class="fa fa-print"></i> \u6253\u5370</a></p><p><style>table {\r' + '\n' + '        border: 1px solid #dddddd;\r' + '\n' + '    }</style><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u62a5\u540d\u8868</div></div><div class=panel-body><div class=row><div class=col-sm-12><div class=basic-info><table class="table col-md-12"><tbody><tr><td class=col-md-3 rowspan=3><img ng-src={{user.user.icon}}/thumbnail style=width:100%></td><td class=col-md-2>\u771f\u5b9e\u59d3\u540d</td><td class=col-md-2>{{user.user.name}}</td><td class=col-md-2>\u5b66\u6821</td><td class=col-md-3>{{user.user.university.name}}</td></tr><tr><td>\u6027\u522b</td><td><span ng-switch=user.user.sex><span ng-switch-when=MALE>\u7537</span> <span ng-switch-when=FEMALE>\u5973</span></span></td><td>\u4e13\u4e1a</td><td>{{user.user.major}}</td></tr><tr><td>\u7535\u8bdd</td><td>{{user.user.phone}}</td><td>\u5165\u5b66\u65f6\u95f4</td><td>{{user.user.admission_date}}</td></tr></tbody></table></div></div></div><div ng-repeat="answer in user.answers" class="panel panel-default"><div class=panel-heading><div class=panel-title>\u95ee\u9898 {{$index+1}}</div></div><div ng-switch=answer.question.type class=panel-body><div ng-switch-when=SINGLE_CHOICE><strong>{{answer.question.question}}</strong><p ng-repeat="option in answer.question.options track by $index"><input type=radio disabled ng-checked="{{option==answer.answer[0]}}"> <font ng-class="{\'myAnaswer\':answer.answer.indexOf(option) != -1}">&nbsp;{{option}}</font><br></p></div><div ng-switch-when=MULTI_CHOICE><strong>{{answer.question.question}}</strong><p ng-repeat="option in answer.question.options track by $index"><input type=checkbox disabled ng-checked="{{answer.answer.indexOf(option) != -1}}"> <font ng-class="{\'myAnaswer\':answer.answer.indexOf(option) != -1}">&nbsp;{{option}}</font><br></p></div><div ng-switch-when=TEXT><strong>{{answer.question.question}}</strong><p>{{answer.answer}}</p></div><div ng-switch-when=IMAGES><strong>{{answer.question.question}}</strong><p ng-repeat="url in answer.answer track by $index"><img style=width:450px ng-src="{{url}}"></p></div></div></div></div></div></p></div>');
    $templateCache.put('partial/community/community_member_department.html', '<div class=modal-header><h4 class=modal-title>\u8bf7\u9009\u62e9\u6210\u5458\u8981\u52a0\u5165\u7684\u90e8\u95e8</h4></div><div class=modal-body><table class="table table-striped table-responsive" style="border: 0px" ng-table=tableParams><tbody><tr ng-repeat="department in $data"><td style=padding-left:14px><div class=radio><label><input type=radio name=member id=member value={{department.id}} ng-model=checked_department ng-click="get_checked_department(checked_department)"></label></div></td><td data-title="\'\u90e8\u95e8\u540d\u79f0\'" header-class=text-left><font ng-bind="department.name | substr: 7: 6"></font></td><td data-title="\'\u5f53\u524d\u4eba\u6570\'" header-class=text-left><font ng-bind=department.number></font></td><td data-title="\'\u521b\u5efa\u65f6\u95f4\'" header-class=text-left><font ng-bind="department.create_time | date: \'yyyy-MM-dd HH:mm:ss\'"></font></td></tr></tbody></table></div><div class=modal-footer><button type=button class="btn btn-info" data-dismiss=modal ng-click=choose_department() ng-disabled=choose_department_btn>\u9009&nbsp;\u62e9</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u4e0d\uff0c\u8c22\u8c22</span></button></div>');
    $templateCache.put('partial/community/community_members.html', '<div ng-controller=CommunityMembersCtrl class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li class=active><a ui-sref=community.members>\u672c\u5c4a\u6210\u5458</a></li></ul><ul class="nav navbar-nav pull-right"><li><a href=/api/admin/community/users/export.csv>\u5bfc\u51fa\u793e\u56e2\u6210\u5458</a></li></ul></div></nav><div id=content ui-view><div ng-controller=CommunityMembersCtrl><div><p><font style="font-weight: bold">\u6309\u90e8\u95e8\u67e5\u8be2</font></p></div><div style="background: #ECEAEA"><div class=row><div class=panel-body><div class=col-md-2 ng-repeat="department in departments"><label type=button class="btn btn-default btn-checkbox" style=margin-bottom:3px;width:100px ng-click=chose_department(department) chosen-status=department.chosen chosen><span><font ng-bind="department.name | substr: 4 : 3" title={{department.name}}></font></span></label></div></div></div></div><div><br><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="user in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left><font ng-bind="$index + 1"></font></td><td data-title="\'i\u5fae\u6821\u8d26\u53f7\'" header-class=text-left><a ui-sref="community.member({ id: user.user.id, page: currentPage })"><font ng-bind=user.user.nickname></font></a></td><td data-title="\'\u59d3\u540d\'" header-class=text-left><font ng-bind=user.user.name></font></td><td data-title="\'\u7535\u8bdd\'" header-class=text-left><font ng-bind=user.user.phone></font></td><td data-title="\'\u90e8\u95e8\'" header-class=text-left><font ng-bind=user.department.name></font></td><td data-title="\'\u804c\u52a1\'" header-class=text-left><font ng-bind=user.duty.name></font></td><td data-title="\'\u52a0\u5165\u65f6\u95f4\'" header-class=text-left><font ng-bind="user.user.confirmed_at | date: \'yyyy-MM-dd HH:mm:ss\'"></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><div class=btn-group><a ng-if="user.status===\'APPROVED\'" ng-click=private_letter(user.user.id) class="btn btn-info">\u79c1&nbsp;\u4fe1</a></div></td></tr></tbody></table></div></div></div></div>');
    $templateCache.put('partial/community/community_members_approved.html', '<div ng-controller=CommunityMembersCtrl class="col-lg-8 col-lg-offset-3 col-md-8 col-md-offset-3 col-sm-9 col-sm-offset-3"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li><a ui-sref=community.members>\u5168\u90e8\u793e\u5458</a></li><li class=active><a ui-sref=community.approved>\u5df2\u52a0\u5165\u793e\u5458</a></li></ul><ul class="nav navbar-nav pull-right"><li><a href=/api/admin/community/users/export.csv>\u5bfc\u51fa\u793e\u56e2\u6210\u5458</a></li></ul></div></nav><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="user in $data"><td data-title="\'\u59d3\u540d\'" header-class=text-left><a ui-sref="community.member({ id: user.user.id })">{{user.user.name}}</a></td><td data-title="\'\u7535\u8bdd\'" header-class=text-left>{{user.user.phone}}</td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><div class=btn-group><a ng-if="user.status===\'APPROVED\'" ng-click=private_letter(user.user.id) class="btn btn-info">\u79c1&nbsp;\u4fe1</a></div></td></tr></tbody></table></div>');
    $templateCache.put('partial/community/community_members_pending.html', '<div ng-controller=CommunityMembersCtrl class="col-lg-8 col-lg-offset-3 col-md-8 col-md-offset-3 col-sm-9 col-sm-offset-3"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li><a ui-sref=community.members>\u5168\u90e8\u793e\u5458</a></li><li><a ui-sref=community.approved>\u5df2\u52a0\u5165\u793e\u5458</a></li><li class=active><a ui-sref=community.pending>\u5f85\u5ba1\u6838\u793e\u5458</a></li></ul><ul class="nav navbar-nav pull-right"><li><a href=/api/admin/community/users/export.csv>\u5bfc\u51fa\u793e\u56e2\u6210\u5458</a></li></ul></div></nav><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="user in $data"><td data-title="\'\u59d3\u540d\'" header-class=text-left><a ui-sref="community.member({ id: user.user.id })">{{user.user.name}}</a></td><td data-title="\'\u7535\u8bdd\'" header-class=text-left>{{user.user.phone}}</td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><div class=btn-group><a ng-if="user.status===\'PENDING\'" ng-disabled="user.status == \'APPROVED\'" ng-click=approve(user) class="btn btn-primary">\u6279&nbsp;\u51c6</a> <a ng-if="user.status===\'PENDING\'" ng-disabled="user.status == \'REJECTED\'" ng-click=reject(user) class="btn btn-danger">\u62d2&nbsp;\u7edd</a></div></td></tr></tbody></table></div>');
    $templateCache.put('partial/community/community_members_verify.html', '<div ng-controller=CommMemVerCtrl class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li><a ui-sref=community.register>\u62db\u65b0\u95ee\u9898</a></li><li class=active><a ui-sref="community.verify_members({ page: 1 })">\u5f85\u5ba1\u6838\u5217\u8868</a></li></ul></div></nav><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="user in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left><font ng-bind="$index + 1"></font></td><td data-title="\'i\u5fae\u6821\u8d26\u53f7\'" header-class=text-left><a ui-sref="community.member({ id: user.user.id, page: currentPage })"><font ng-bind=user.user.nickname></font></a></td><td data-title="\'\u59d3\u540d\'" header-class=text-left><font ng-bind=user.user.name></font></td><td data-title="\'\u7535\u8bdd\'" header-class=text-left><font ng-bind=user.user.phone></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=approve(user.user.id)><span>\u6279&nbsp;&nbsp;\u51c6&nbsp;&nbsp;<i class="fa fa-check"></i></span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click="refuse(user, \'\')"><span>\u62d2&nbsp;&nbsp;\u7edd&nbsp;&nbsp;<i class="fa fa-ban"></i></span></label></td></tr></tbody></table></div>');
    $templateCache.put('partial/community/community_register.html', '<div ng-controller=CommunityRegisterCtrl class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li class=active><a ui-sref=community.register>\u62db\u65b0\u95ee\u9898</a></li><li><a ui-sref="community.verify_members({ page: 1 })">\u5f85\u5ba1\u6838\u5217\u8868</a></li></ul></div></nav><div id=content ui-view><form class=form-horizontal><div class=register-action-bar><label type=button class="btn btn-default btn-checkbox" ng-model=$parent.community.enable_register btn-checkbox><span ng-if=$parent.community.enable_register style=color:green>\u5df2\u5f00\u542f\u62a5\u540d\u529f\u80fd <i class="fa fa-check"></i></span> <span ng-if=!$parent.community.enable_register>\u5df2\u5173\u95ed\u62a5\u540d\u529f\u80fd <i class="fa fa-ban"></i></span></label><button ng-disabled=!$parent.community.enable_register class="btn btn-primary pull-right" ng-click=create_activity()>\u751f\u6210\u62a5\u540d\u5165\u793e\u6d3b\u52a8</button></div><style>table {\r' + '\n' + '          border: 1px solid #dddddd;\r' + '\n' + '      }</style><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u62a5\u540d\u8868</div></div><div class=panel-body><div class=basic-info><table class="table col-md-12"><tbody><tr><td class=col-md-3 rowspan=3><img ng-src=/static/images/default_icon_baoming.png style=width:100%></td><td class=col-md-2>\u771f\u5b9e\u59d3\u540d</td><td class=col-md-2></td><td class=col-md-2>\u5b66\u6821</td><td class=col-md-3></td></tr><tr><td>\u6027\u522b</td><td></td><td>\u4e13\u4e1a</td><td></td></tr><tr><td>\u7535\u8bdd</td><td></td><td>\u5165\u5b66\u65f6\u95f4</td><td></td></tr></tbody></table></div><div class=question-table><div ng-repeat="question in questions"><div id=question{{$index+1}} class="panel panel-default"><div class=panel-heading><div class=panel-title>\u95ee\u9898 {{$index + 1}} <a class="pull-right btn" ng-click=remove_question($index)><i class="fa fa-trash-o"></i>&nbsp;\u5220\u9664</a></div></div><div class=panel-body><div class=form-group ng-if=false><label class="col-sm-2 control-label">\u6807\u9898</label><div class=col-sm-10><input name=title id=title ng-model=question.title class=form-control type=text></div></div><div class=form-group><label class="col-sm-2 control-label">\u95ee\u9898</label><div class=col-sm-10><textarea class=form-control id=question ng-model=question.question name=question rows=5 autocomplete=off>\r' + '\n' + '                          </textarea></div></div><div class=form-group><label class="col-sm-2 control-label">\u95ee\u9898\u7c7b\u578b</label><div class=col-sm-10><select class=form-control id=type name=type ng-model=question.type ng-options="type.id as type.name for type in types"></select></div></div><div ng-if="question.type === \'SINGLE_CHOICE\' || question.type === \'MULTI_CHOICE\'"><div class="form-group form-inline" ng-repeat="option in question.options track by $index"><label class="col-sm-2 control-label">\u9009\u9879{{$index + 1}}</label><div class=col-sm-10><input name=option id=option ng-model=question.options[$index] type=text class=form-control style=width:85%> <button class="btn btn-danger" ng-click="removeOption($parent.$index, $index)"><i class="glyphicon glyphicon-remove"></i></button></div></div></div><button ng-if="question.type === \'SINGLE_CHOICE\' || question.type === \'MULTI_CHOICE\'" class="btn btn-default" ng-click=addOption($parent.$index)>\u6dfb\u52a0\u9009\u9879</button></div></div></div><button class="btn btn-info" ng-click=addQuestion()>\u6dfb\u52a0\u95ee\u9898</button> <button class="btn btn-success pull-right" ng-click=submit()>\u4fdd\u5b58</button></div></div></div></form><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div></div>');
    $templateCache.put('partial/community/community_reject_reason.html', '<div class=modal-header><h3 class=modal-title>\u62d2\u7edd\u539f\u56e0</h3></div><div class=modal-body><textarea class="form-control ng-pristine ng-valid ng-touched" ng-model=content rows=5></textarea></div><div class=modal-footer><button class="btn btn-info" ng-click=ok()>\u786e\u5b9a</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/community/community_university/community_org_info/org_info.html', '<div ng-controller=OrgInfoCtrl><br><div class=row ng-hide=union><div><p><font style="font-weight: bold">\u6309\u7ec4\u7ec7\u72b6\u6001\u67e5\u8be2</font></p></div><div style="background: #ECEAEA"><div class=row><div class=panel-body><div class=col-md-2 ng-repeat="status in status_arr"><label type=button class="btn btn-default btn-checkbox" style=margin-bottom:3px;width:100px ng-click=chose_status(status) chosen-status=status.chosen chosen><span><font ng-bind=status.descript></font></span></label></div></div></div></div></div><div class=row><br><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="community in $data"><td data-title="\'\u7ec4\u7ec7\u540d\u79f0\'" header-class=text-left><a ng-click=org_info_detail(community)><font ng-bind=community.community.name></font></a></td><td data-title="\'\u7ec4\u7ec7\u72b6\u6001\'" header-class=text-left><span ng-if=community.admin_user.confirmed_at class="label label-success">\u5df2\u5ba1\u6838</span> <span ng-if=!community.admin_user.confirmed_at class="label label-danger">\u672a\u5ba1\u6838</span></td><td data-title="\'\u7ba1\u7406\u5458\u540d\u79f0\'" header-class=text-left><font ng-bind="community.admin_user.name || community.user.name"></font></td><td data-title="\'\u7ba1\u7406\u5458\u7535\u8bdd\'" header-class=text-left><font ng-bind="community.admin_user.phone || community.user.phone"></font></td><td data-title="\'\u7ba1\u7406\u5458\u90ae\u7bb1\'" header-class=text-left><font ng-bind="community.admin_user.email || community.user.email"></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label ng-if=community.admin_user.confirmed_at type=button class="btn btn-info btn-checkbox" ng-click=private_letter(community.community.id)><span>\u79c1\u4fe1 <i class="fa fa-envelope"></i></span></label><label ng-if="!community.admin_user.confirmed_at && !union" type=button class="btn btn-info btn-checkbox" ng-click=approve(community.admin_user.email)><span>\u6279\u51c6 <i class="fa fa-plus-circle"></i></span></label></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/community/community_university/community_org_info/org_info_detail.html', '<div class=modal-header><h4 class=modal-title><font ng-bind=community.community.name></font>\u9662\u7cfb\u56e2\u59d4</h4></div><div class=modal-body><div class=row><div class=col-sm-12><form class=form-horizontal><fieldset><legend><h4><font>\u7ba1\u7406\u5458\u4fe1\u606f</font></h4></legend><div class=row><div class=form-group><label class="col-sm-3 control-label" for=email>\u6ce8\u518c\u90ae\u7bb1</label><div class=col-sm-8><input type=text class=form-control disabled id=email ng-model=community.admin_user.email name=email required></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=username>\u59d3\u540d</label><div class=col-sm-8><input type=text class=form-control disabled id=username ng-model=community.admin_user.name name=username required></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=phone>\u7535\u8bdd\u53f7\u7801</label><div class=col-sm-8><input type=text class=form-control disabled id=phone ng-model=community.admin_user.phone name=phone required></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=photo_id>\u6b63\u9762\u8fd1\u7167</label><div class=col-sm-8><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-new thumbnail" style="width: 200px"><img ng-src={{community.admin_user.photo_id}}></div><div class="fileinput-preview fileinput-exists thumbnail"></div></div></div></div></div></fieldset></form></div></div><br><div class=row><div class=col-sm-12><form class=form-horizontal><fieldset><legend><h4><font>\u7ec4\u7ec7\u4fe1\u606f</font></h4></legend><div class=row><div class=form-group><label class="col-sm-3 control-label" for=province>\u7701</label><div class=col-sm-8><select class=form-control><option ng-bind=community.community.university.province></option></select></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=city>\u5e02</label><div class=col-sm-8><select class=form-control><option ng-bind=community.community.university.city></option></select></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=university>\u5b66\u6821</label><div class=col-sm-8><select class=form-control><option ng-bind=community.community.university.name></option></select></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=university>\u7ec4\u7ec7\u7c7b\u578b</label><div class=col-sm-8><select class=form-control><option ng-bind=community.community.university.name></option></select></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=logo>\u7ec4\u7ec7logo</label><div class=col-sm-8><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-new thumbnail" style="width: 200px"><img ng-src={{community.community.logo}}></div><div class="fileinput-preview fileinput-exists thumbnail"></div></div></div></div></div><div class=row><div class=form-group><label class="col-sm-3 control-label" for=logo>\u4ecb\u7ecd</label><div class=col-sm-8><textarea class=form-control id=community_description ng-model=community.community.description disabled name=description rows=5 autocomplete=off>\r' + '\n' + '\t\t\t\t\t\t\t\t</textarea></div></div></div></fieldset></form></div></div></div><div class=modal-footer><center><button type=button class="btn btn-info" ng-hide=status ng-click=approve_org(community.admin_user.email)>\u6279&nbsp;\u51c6</button></center></div>');
    $templateCache.put('partial/community/community_university/community_university.html', '<div ng-controller=communityUniversityCtrl><div class=tabs-left><ul id=myTabs class="nav nav-tabs col-sm-2 col-md-2 col-lg-2" role=tablist><li role=presentation d-sref="\'community_university\'" class=dropdown ng-show="user.admin_type === \'UNION\'"><a id=comm_info class=dropdown-toggle data-toggle=dropdown href=# role=button aria-haspopup=true aria-expanded=true>\u793e\u56e2\u4fe1\u606f <span class=caret></span></a><ul class=dropdown-menu aria-labelledby=comm_info><li class=item><a ui-sref=community_university>\u672c\u6821\u793e\u56e2\u5217\u8868</a></li><li class=item><a ui-sref=community_university.pending>\u5f85\u5ba1\u6838\u5217\u8868</a></li></ul></li><li role=presentation d-sref="\'community_university\'" class=dropdown ng-show="user.admin_type === \'COMMITTEE\'"><a id=comm_info class=dropdown-toggle data-toggle=dropdown href=# role=button aria-haspopup=true aria-expanded=true><font ng-bind=menu_name></font> <span class=caret></span></a><ul class=dropdown-menu aria-labelledby=comm_info><li class=item><a ui-sref=community_university.league>\u9662\u7cfb\u56e2\u59d4</a></li><li class=item><a ui-sref=community_university.stu_union>\u9662\u7cfb\u5b66\u751f\u4f1a</a></li><li class=item><a ui-sref=community_university.stu_org>\u6821\u7ea7\u5b66\u751f\u7ec4\u7ec7</a></li><li class=item><a ui-sref=community_university.stu_community>\u5b66\u751f\u793e\u56e2</a></li></ul></li></ul></div><div ui-view class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3"><div class=row><br><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="community in $data"><td data-title="\'\u793e\u56e2\u540d\u79f0\'" header-class=text-left><font ng-bind=community.community.name></font></td><td data-title="\'\u793e\u56e2\u72b6\u6001\'" header-class=text-left><span ng-if=community.admin_user.confirmed_at class="label label-success">\u5df2\u5ba1\u6838</span> <span ng-if=!community.admin_user.confirmed_at class="label label-danger">\u672a\u5ba1\u6838</span></td><td data-title="\'\u7ba1\u7406\u5458\u540d\u79f0\'" header-class=text-left><font ng-bind=community.admin_user.name></font></td><td data-title="\'\u7ba1\u7406\u5458\u7535\u8bdd\'" header-class=text-left><font ng-bind=community.admin_user.phone></font></td><td data-title="\'\u7ba1\u7406\u5458\u90ae\u7bb1\'" header-class=text-left><font ng-bind=community.admin_user.email></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label ng-if=community.admin_user.confirmed_at type=button class="btn btn-info btn-checkbox" ng-click=privateLetter(community.community.id)><span>\u79c1\u4fe1 <i class="fa fa-envelope"></i></span></label><label ng-if=!community.admin_user.confirmed_at type=button class="btn btn-info btn-checkbox" ng-click=approved(community.admin_user.email)><span>\u6279\u51c6 <i class="fa fa-plus-circle"></i></span></label></td></tr></tbody></table></div></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/community/community_university/community_university_election.html', '<div ng-controller=CommUniElectionCtrl><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="community in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left>{{$index + 1}}</td><td data-title="\'\u793e\u56e2\u540d\u79f0\'" header-class=text-left><font ng-bind=community.community.name></font></td><td data-title="\'\u539f\u7ba1\u7406\u5458\u540d\u79f0\'" header-class=text-left><font ng-bind=community.user.name></font></td><td data-title="\'\u8bc1\u4ef6\u7167\'" header-class=text-left><div class=logo style=height:70px;width:70px><img ng-src={{community.user.photo_id}} style=height:100%;width:100% ng-click=viewImage(community.user.photo_id)></div></td><td data-title="\'\u539f\u7ba1\u7406\u5458\u7535\u8bdd\'" header-class=text-left><font ng-bind=community.user.phone></font></td><td data-title="\'\u65b0\u7ba1\u7406\u5458\u540d\u79f0\'" header-class=text-left><font ng-bind=community.election_user.name></font></td><td data-title="\'\u8bc1\u4ef6\u7167\'" header-class=text-left><div class=logo style=height:70px;width:70px><img ng-src={{community.election_user.photo_id}} style=height:100%;width:100% ng-click=viewImage(community.election_user.photo_id)></div></td><td data-title="\'\u65b0\u7ba1\u7406\u5458\u7535\u8bdd\'" header-class=text-left><font ng-bind=community.election_user.phone></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=approved_election(community.id)><span>\u6279\u51c6 <i class="fa fa-plus-circle"></i></span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=refuse_election(community.id)><span>\u62d2\u7edd <i class="fa fa-minus-circle"></i></span></label></td></tr></tbody></table><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/community/community_university/community_university_pending.html', '<div ng-controller=CommUniPendingCtrl><br><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="community in $data"><td data-title="\'\u793e\u56e2\u540d\u79f0\'" header-class=text-left><font ng-bind=community.community.name></font></td><td data-title="\'\u793e\u56e2\u4ecb\u7ecd\'" header-class=text-left><font ng-bind=community.community.description></font></td><td data-title="\'\u793e\u56e2Logo\'" header-class=text-left><div class=logo style=height:70px;width:70px><img ng-src={{community.community.logo}} style=height:100%;width:100% ng-click=viewImage(community.community.logo)></div></td><td data-title="\'\u7533\u8bf7\u8005\'" header-class=text-left><font ng-bind=community.admin_user.name></font></td><td data-title="\'\u8bc1\u4ef6\u7167\'" header-class=text-left><div class=logo style=height:70px;width:70px><img ng-src={{community.admin_user.photo_id}} style=height:100%;width:100% ng-click=viewImage(community.admin_user.photo_id)></div></td><td data-title="\'\u7533\u8bf7\u8005\u7535\u8bdd\'" header-class=text-left><font ng-bind=community.admin_user.phone></font></td><td data-title="\'\u7533\u8bf7\u8005\u90ae\u7bb1\'" header-class=text-left><font ng-bind=community.admin_user.email></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=approved(community.admin_user.email)><span>\u6279\u51c6 <i class="fa fa-plus-circle"></i></span></label></td></tr></tbody></table><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/community/party_branch/duty_detail/edit_duty.html', '<form class=form-horizontal name=dutyForm ng-submit=creOrUdpDuty()><div class=modal-header><h4 class=modal-title>\u804c\u52a1\u4fe1\u606f</h4></div><div class=modal-body><div class=col-md-12><form-input data-title="\'\u804c\u52a1\u540d\u79f0\'" data-name="\'name\'"><input type=text class=form-control placeholder=\u8f93\u5165\u5185\u5bb9\u8bf7\u63a7\u5236\u572820\u4e2a\u5b57\u4ee5\u5185 maxlength=20 id=name ng-model=duty.name name=name required></form-input><form-input data-title="\'\u804c\u52a1\u7b80\u4ecb\'" data-name="\'describe\'"><textarea type=text class=form-control rows=5 style=resize:none placeholder=\u8f93\u5165\u5185\u5bb9\u8bf7\u63a7\u5236\u57281000\u4e2a\u4ee5\u5185 maxlength=1000 id=describe ng-model=duty.describe name=describe required></textarea></form-input></div></div><div class=modal-footer><button type=submit class="btn btn-info" data-dismiss=modal ng-show="duty.id === -1" ng-disabled=dutyForm.$invalid>\u521b&nbsp;\u5efa</button> <button type=submit class="btn btn-info" data-dismiss=modal ng-show="duty.id !== -1" ng-disabled=dutyForm.$invalid>\u4fee&nbsp;\u6539</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u53d6&nbsp;\u6d88</span></button></div></form>');
    $templateCache.put('partial/community/party_branch/grade_detail/edit_grade.html', '<form class=form-horizontal name=gradeForm ng-submit=creOrUdpGrade()><div class=modal-header><h4 class=modal-title>\u5b66\u5e74\u4fe1\u606f</h4></div><div class=modal-body><div class=col-md-12><form-input data-title="\'\u5b66\u5e74\u540d\u79f0\'" data-name="\'name\'"><input type=text class=form-control placeholder=\u8f93\u5165\u5185\u5bb9\u8bf7\u63a7\u5236\u572820\u4e2a\u5b57\u4ee5\u5185 maxlength=20 id=name ng-model=grade.name name=name required></form-input><form-input data-title="\'\u5b66\u5e74\u5f00\u59cb\u65f6\u95f4\'" data-name="\'starttime\'"><date-picker date=grade.starttime minviewmode=years format=YYYY dateformat=yyyy endtime=grade.endtime></date-picker></form-input><form-input data-title="\'\u5b66\u5e74\u7ed3\u675f\u65f6\u95f4\'" data-name="\'endtime\'"><date-picker date=grade.endtime minviewmode=years format=YYYY dateformat=yyyy starttime=grade.starttime></date-picker></form-input></div></div><div class=modal-footer><button type=submit class="btn btn-info" data-dismiss=modal ng-show="grade.id === -1" ng-disabled=gradeForm.$invalid>\u521b&nbsp;\u5efa</button> <button type=submit class="btn btn-info" data-dismiss=modal ng-show="grade.id !== -1" ng-disabled=gradeForm.$invalid>\u4fee&nbsp;\u6539</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u53d6&nbsp;\u6d88</span></button></div></form>');
    $templateCache.put('partial/community/party_branch/group_detail/edit_group.html', '<form class=form-horizontal name=groupForm ng-submit=creOrUdpGroup()><div class=modal-header><h4 class=modal-title>\u5c0f\u7ec4\u4fe1\u606f</h4></div><div class=modal-body><div class=col-md-12><form-input data-title="\'\u5c0f\u7ec4\u540d\u79f0\'" data-name="\'name\'"><input type=text class=form-control placeholder=\u8f93\u5165\u5185\u5bb9\u8bf7\u63a7\u5236\u572820\u4e2a\u5b57\u4ee5\u5185 maxlength=20 id=name ng-model=group.name name=name required></form-input><form-input data-title="\'\u5c0f\u7ec4\u7b80\u4ecb\'" data-name="\'describe\'"><textarea type=text class=form-control rows=5 style=resize:none placeholder=\u8f93\u5165\u5185\u5bb9\u8bf7\u63a7\u5236\u57281000\u4e2a\u4ee5\u5185 maxlength=1000 id=describe ng-model=group.describe name=describe required></textarea></form-input></div></div><div class=modal-footer><button type=submit class="btn btn-info" data-dismiss=modal ng-show="group.id === -1" ng-disabled=groupForm.$invalid>\u521b&nbsp;\u5efa</button> <button type=submit class="btn btn-info" data-dismiss=modal ng-show="group.id !== -1" ng-disabled=groupForm.$invalid>\u4fee&nbsp;\u6539</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u53d6&nbsp;\u6d88</span></button></div></form>');
    $templateCache.put('partial/community/party_branch/info_conllection.html', '<div ng-controller=infoConllectCtrl class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3"><div class=row><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li class=active><a ui-sref=party_info.info_conllection>\u8bbe\u7f6e\u95ee\u9898</a></li><li><a ui-sref=party_info.verify>\u5f85\u5ba1\u6838\u5217\u8868</a></li></ul></div></nav></div><div class=row><form class=form-horizontal><div style="margin-left: 15px"><label type=button class="btn btn-default btn-checkbox" ng-model=$parent.community.enable_register btn-checkbox><span ng-if=$parent.community.enable_register style=color:green>\u5df2\u5f00\u542f\u4fe1\u606f\u6536\u96c6 <i class="fa fa-check"></i></span> <span ng-if=!$parent.community.enable_register>\u5df2\u5173\u95ed\u4fe1\u606f\u6536\u96c6 <i class="fa fa-ban"></i></span></label></div><br><style>table {\r' + '\n' + '\t\t\t\t\tborder: 1px solid #dddddd;\r' + '\n' + '\t\t\t\t}</style><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u4fe1\u606f\u91c7\u96c6\u8868</div></div><div class=panel-body><div class=basic-info><table class="table col-md-12"><tbody><tr><td class=col-md-3 rowspan=5><img ng-src=/static/images/default_icon_baoming.png style=width:100%></td><td class=col-md-2>\u771f\u5b9e\u59d3\u540d</td><td class=col-md-2></td><td class=col-md-2>\u5b66\u6821</td><td class=col-md-3></td></tr><tr><td>\u6027\u522b</td><td></td><td>\u4e13\u4e1a</td><td></td></tr><tr><td>\u7535\u8bdd</td><td></td><td>\u5165\u5b66\u65f6\u95f4</td><td></td></tr><tr><td>\u8eab\u4efd</td><td></td><td>\u5047\u5982\u5b66\u5e74</td><td></td></tr><tr><td>\u6240\u5c5e\u5c0f\u7ec4</td><td></td><td>\u62c5\u4efb\u804c\u52a1</td><td></td></tr></tbody></table></div><div class=question-table><div ng-repeat="question in questions"><div id=question{{$index+1}} class="panel panel-default"><div class=panel-heading><div class=panel-title>\u95ee\u9898 {{$index + 1}} <a class="pull-right btn" ng-click=remove_question($index)><i class="fa fa-trash-o"></i>&nbsp;\u5220\u9664</a></div></div><div class=panel-body><div class=form-group ng-if=false><label class="col-sm-2 control-label">\u6807\u9898</label><div class=col-sm-10><input name=title id=title ng-model=question.title class=form-control type=text></div></div><div class=form-group><label class="col-sm-2 control-label">\u95ee\u9898</label><div class=col-sm-10><textarea class=form-control id=question ng-model=question.question name=question rows=5 autocomplete=off>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t</textarea></div></div><div class=form-group><label class="col-sm-2 control-label">\u95ee\u9898\u7c7b\u578b</label><div class=col-sm-10><select class=form-control id=type name=type ng-model=question.type ng-options="type.id as type.name for type in types"></select></div></div><div ng-if="question.type === \'SINGLE_CHOICE\' || question.type === \'MULTI_CHOICE\'"><div class="form-group form-inline" ng-repeat="option in question.options track by $index"><label class="col-sm-2 control-label">\u9009\u9879{{$index + 1}}</label><div class=col-sm-10><input name=option id=option ng-model=question.options[$index] type=text class=form-control style="width:85%"> <button class="btn btn-danger" ng-click="removeOption($parent.$index, $index)"><i class="glyphicon glyphicon-remove"></i></button></div></div></div><button ng-if="question.type === \'SINGLE_CHOICE\' || question.type === \'MULTI_CHOICE\'" class="btn btn-default" ng-click=addOption($parent.$index)><i class="fa fa-plus" aria-hidden=true></i> \u6dfb\u52a0\u9009\u9879</button></div></div></div><button class="btn btn-info" ng-click=addQuestion()><i class="fa fa-plus" aria-hidden=true></i> \u6dfb\u52a0\u95ee\u9898</button> <button class="btn btn-success pull-right" ng-click=submit()><i class="fa fa-floppy-o" aria-hidden=true></i> \u4fdd\u5b58</button></div></div></div></form><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div></div>');
    $templateCache.put('partial/community/party_branch/info_conllection/applyPersonInfo.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=ApplyPerInCtrl><p class=hidden-print><a ui-sref=party_info.verify class="btn-default btn"><i class="fa fa-reply"></i> \u8fd4\u56de</a>&nbsp; <a ng-click=approve(user) class="btn btn-success"><i class="fa fa-plus" aria-hidden=true></i> \u5f55\u5165</a>&nbsp; <a ng-click=refuse(user) class="btn btn-danger"><i class="fa fa-exclamation-triangle" aria-hidden=true></i> \u4fe1\u606f\u6709\u8bef</a></p><br><p><style>table {\r' + '\n' + '\t\t\t\tborder: 1px solid #dddddd;\r' + '\n' + '\t\t\t}</style><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u4fe1\u606f\u91c7\u96c6\u8868</div></div><div class=panel-body><div class=row><div class=col-sm-12><div class=basic-info><table class="table col-md-12"><tbody><tr><td class=col-md-3 rowspan=6><img ng-src={{user.user_obj.icon}}/thumbnail style=width:100%></td><td class=col-md-2>i\u5fae\u6821\u8d26\u53f7</td><td>{{user.user_obj.nickname}}</td><td class=col-md-2>\u771f\u5b9e\u59d3\u540d</td><td class=col-md-3>{{user.user_obj.name}}</td></tr><tr><td>\u6027\u522b</td><td><span ng-switch=user.user_obj.sex><span ng-switch-when=MALE>\u7537</span> <span ng-switch-when=FEMALE>\u5973</span></span></td><td>\u5b66\u6821</td><td>{{user.user_obj.university.name}}</td></tr><tr><td>\u4e13\u4e1a</td><td>{{user.user_obj.major}}</td><td>\u5165\u5b66\u65f6\u95f4</td><td>{{user.user_obj.admission_date}}</td></tr><tr><td>\u7535\u8bdd</td><td>{{user.user_obj.phone}}</td><td>\u8eab\u4efd</td><td><span ng-switch=user.status><span ng-switch-when=FORMAL>\u6b63\u5f0f\u515a\u5458</span> <span ng-switch-when=POSITIVE>\u79ef\u6781\u5206\u5b50</span> <span ng-switch-when=PREPARE>\u9884\u5907\u515a\u5458</span> <span ng-switch-when=NULLIFY><font color=#B8BEC3>\u672a\u91c7\u96c6</font></span></span></td></tr><tr><td>\u52a0\u5165\u5b66\u5e74</td><td><font ng-if=user.year_obj.name ng-bind=user.year_obj.name></font> <font ng-if=!user.year_obj.name color=#B8BEC3>\u672a\u91c7\u96c6</font></td><td>\u6240\u5c5e\u5c0f\u7ec4</td><td><font ng-if=user.group_obj.name ng-bind=user.group_obj.name></font> <font ng-if=!user.group_obj.name color=#B8BEC3>\u672a\u91c7\u96c6</font></td></tr><tr><td>\u62c5\u4efb\u804c\u52a1</td><td><font ng-if=user.duty_obj.name ng-bind=user.duty_obj.name></font> <font ng-if=!user.duty_obj.name color=#B8BEC3>\u672a\u91c7\u96c6</font></td><td></td><td></td></tr></tbody></table></div></div></div><div ng-repeat="answer in user.answers" class="panel panel-default"><div class=panel-heading><div class=panel-title>\u95ee\u9898 {{$index+1}}</div></div><div ng-switch=answer.question.type class=panel-body><div ng-switch-when=SINGLE_CHOICE><strong>{{answer.question.question}}</strong><p ng-repeat="option in answer.question.options track by $index"><input type=radio disabled ng-checked="{{option==answer.answer[0]}}"> <font ng-class="{\'myAnaswer\':answer.answer.indexOf(option) != -1}">&nbsp;{{option}}</font><br></p></div><div ng-switch-when=MULTI_CHOICE><strong>{{answer.question.question}}</strong><p ng-repeat="option in answer.question.options track by $index"><input type=checkbox disabled ng-checked="{{answer.answer.indexOf(option) != -1}}"> <font ng-class="{\'myAnaswer\':answer.answer.indexOf(option) != -1}">&nbsp;{{option}}</font><br></p></div><div ng-switch-when=TEXT><strong>{{answer.question.question}}</strong><p>{{answer.answer}}</p></div><div ng-switch-when=IMAGES><strong>{{answer.question.question}}</strong><p ng-repeat="url in answer.answer track by $index"><img style=width:450px ng-src="{{url}}"></p></div></div></div></div></div></p></div>');
    $templateCache.put('partial/community/party_branch/info_conllection/verify.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=VerifyCtrl><div class=row><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li><a ui-sref=party_info.info_conllection>\u8bbe\u7f6e\u95ee\u9898</a></li><li class=active><a ui-sref=party_info.verify>\u5f85\u5ba1\u6838\u5217\u8868</a></li></ul></div></nav></div><div class=row ng-if="grades.length !== 0"><div class=col-md-12><form class=form-horizontal><fieldset><legend><h5>\u6309\u5b66\u5e74\u7b5b\u9009</h5></legend><div class=row><div class=col-md-2 style=text-align:left;padding-left:50px ng-repeat="grade in grades"><input type=radio name=grade value={{grade.id}} ng-model=checked_grade ng-click="get_checked_grade(checked_grade)"> <font title={{grade.name}} ng-bind="grade.name | substr:6:5"></font></div></div><br><div class=row><div class=col-md-12 style="text-align: right"><a ng-click=exOratrGrade()>{{operGrade}}</a></div></div></fieldset></form></div></div><br ng-if="grades.length !== 0"><div class=row ng-if="groups.length !== 0"><div class=col-md-12><form class=form-horizontal><fieldset><legend><h5>\u6309\u8eab\u4efd\u7b5b\u9009</h5></legend><div class=row><div class=col-md-2 style=text-align:left;padding-left:50px ng-repeat="identity in identities"><input type=radio name=identity value={{identity.id}} ng-model=checked_identity ng-click="get_checked_identity(checked_identity)"> <font title={{identity.name}} ng-bind="identity.name | substr:6:5"></font></div></div><br></fieldset></form></div></div><br ng-if="groups.length !== 0"><div class=row><div class=col-md-12><span class="label label-info">\u603b\u7533\u8bf7\u4eba\u6570\uff1a&nbsp;<font ng-bind="person_sum || 0"></font></span></div></div><br><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="person in $data"><td data-title="\'i\u5fae\u6821\u6635\u79f0\'" header-class=text-left><a ui-sref="party_info.apply_person_info({id: person.id})"><font ng-bind=person.user_obj.nickname></font></a></td><td data-title="\'\u59d3\u540d\'" header-class=text-left><font ng-bind=person.user_obj.name></font></td><td data-title="\'\u8eab\u4efd\'" header-class=text-left><font ng-if=identity[person.status] ng-bind=identity[person.status]></font> <font ng-if=!identity[person.status] color=#B8BEC3>\u672a\u91c7\u96c6</font></td><td data-title="\'\u7535\u8bdd\'" header-class=text-left><font ng-bind=person.user_obj.phone></font></td><td data-title="\'\u804c\u52a1\'" header-class=text-left><font ng-if=person.duty_obj.name ng-bind=person.duty_obj.name></font> <font ng-if=!person.duty_obj.name color=#B8BEC3>\u672a\u91c7\u96c6</font></td><td data-title="\'\u7533\u8bf7\u65f6\u95f4\'" header-class=text-left><font ng-bind="person.create_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u64cd\u4f5c\'"><center><label type=button class="btn btn-success btn-checkbox" ng-click=approve(person.id)><span><i class="fa fa-plus" aria-hidden=true></i> \u5f55\u5165</span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click="refuse(person.id, person.user_obj)"><span><i class="fa fa-exclamation-triangle" aria-hidden=true></i> \u4fe1\u606f\u6709\u8bef</span></label></center></td></tr></tbody></table></div></div>');
    $templateCache.put('partial/community/party_branch/members.html', '<div class=modal-header><h4 class=modal-title><font ng-bind=obj.name></font>\u6210\u5458</h4></div><div class=modal-body><div class=row><div class=col-md-12><div ng-if=isHasMembers><table class="table table-striped table-responsive coupons" ng-table=tableParams><tbody><tr ng-repeat="member in $data"><td><div class=logo style=height:70px;width:70px><img ng-src={{member.user_obj.icon}} style="height: 100%;width: 100%"></div></td><td><font ng-bind=member.user_obj.nickname></font></td><td><font ng-bind=member.user_obj.name></font></td><td><span class="label label-success" ng-if="member.status === \'FORMAL\'">\u6b63\u5f0f\u515a\u5458</span> <span class="label label-success" ng-if="member.status === \'PREPARE\'">\u9884\u5907\u515a\u5458</span> <span class="label label-info" ng-if="member.status === \'POSITIVE\'">\u79ef\u6781\u4efd\u5b50</span></td></tr></tbody></table></div><div ng-if=!isHasMembers><p style="text-align: center"><br><br><br><font style="font-weight: bold;font-size: 50px">\u6682\u65e0\u6210\u5458</font></p></div></div></div></div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal ng-click=close()><span aria-hidden=true>\u5173&nbsp;\u95ed</span></button></div>');
    $templateCache.put('partial/community/party_branch/party_org.html', '<div ng-controller=PartyBranchCtrl><div class="tabs-left hidden-print"><ul class="nav nav-tabs col-sm-2 col-lg-2"><li d-sref="\'party_info\'"><a ui-sref=party_info>\u7ec4\u7ec7\u4fe1\u606f</a></li><li d-sref="\'party_info.party_persons\'"><a ui-sref=party_info.party_persons>\u4eba\u5458\u7ba1\u7406</a></li><li d-sref="\'party_info.info_conllection\'"><a ui-sref=party_info.info_conllection>\u4fe1\u606f\u91c7\u96c6</a></li></ul></div><div ui-view><div class="col-lg-7 col-lg-offset-3 col-md-8 col-md-offset-3 col-sm-9 col-sm-offset-3"><form method=POST name=communityInfo class="form-horizontal community-form" role=form enctype=multipart/form-data ng-submit=submit()><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7ec4\u7ec7\u4fe1\u606f</div></div><div class=panel-body><form-input data-title="\'\u7ec4\u7ec7\u540d\u79f0\'" data-name="\'community_name\'"><input name=community_name id=community_name ng-model=community.name class=form-control type=text readonly></form-input><form-input data-title="\'\u5b66\u6821\u540d\u79f0\'" data-name="\'university\'"><input name=university id=university ng-model=community.university.name class=form-control type=text readonly></form-input><form-input data-title="\'\u7ec4\u7ec7\u4ecb\u7ecd\'" data-name="\'community_description\'"><textarea class=form-control id=community_description ng-model=community.description name=community_description rows=10 autocomplete=off required>\r' + '\n' + '\t\t\t\t\t\t\t</textarea><span class=form-error ng-show=show_description>*\u7ec4\u7ec7\u7b80\u4ecb\u8bf7\u9650\u5236\u5728200\u5b57\u7b26\u5185</span></form-input><form-input data-title="\'\u7ec4\u7ec7LOGO\'" data-name="\'logo\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=community.logo class="fileinput-new thumbnail" style=height:150px;width:150px><img ng-src="{{community.logo.substring(0)}}?width=150&height:150" image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom title=\u8bf7\u4fdd\u6301\u6700\u4f73\u5bbd\u9ad8\u6bd4\uff0c\u56fe\u7247\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc71M tool-tip><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=logo data-file=community.logo></span></div></div></form-input></div></div><button class="btn btn-primary form-control" type=submit ng-disabled=show_description>\u4fdd\u5b58</button></form></div></div></div>');
    $templateCache.put('partial/community/party_branch/party_persons.html', '<div ng-controller=PartyPersonCtrl class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3"><div class=row><div class=col-md-12 style="text-align: right"><button class="btn btn-info" ng-click=grade()><i class="fa fa-table" aria-hidden=true></i> \u5b66\u5e74\u8bbe\u7f6e</button> <button class="btn btn-info" ng-click=duty()><i class="fa fa-table" aria-hidden=true></i> \u804c\u52a1\u8bbe\u7f6e</button> <button class="btn btn-info" ng-click=group()><i class="fa fa-table" aria-hidden=true></i> \u5206\u7ec4\u8bbe\u7f6e</button></div></div><br><div class=row ng-if="grades.length !== 0"><div class=col-md-12><form class=form-horizontal><fieldset><legend><h5>\u6309\u5b66\u5e74\u67e5\u8be2</h5></legend><div class=row><div class=col-md-2 style=text-align:left;padding-left:50px ng-repeat="grade in grades"><input type=radio name=grade value={{grade.id}} ng-model=checked_grade ng-click="get_checked_grade(checked_grade)"> <font title={{grade.name}} ng-bind="grade.name | substr:6:5"></font></div></div><br><div class=row><div class=col-md-12 style="text-align: right"><a ng-click=exOratrGrade()>{{operGrade}}</a></div></div></fieldset></form></div></div><br><div class=row ng-if="groups.length !== 0"><div class=col-md-12><form class=form-horizontal><fieldset><legend><h5>\u6309\u5206\u7ec4\u67e5\u8be2</h5></legend><div class=row><div class=col-md-2 style=text-align:left;padding-left:50px ng-repeat="group in groups"><input type=radio name=group value={{group.id}} ng-model=checked_group ng-click="get_checked_group(checked_group)"> <font title={{group.name}} ng-bind="group.name | substr:6:5"></font></div></div><br><div class=row><div class=col-md-12 style="text-align: right"><a ng-click=exOratrGroup()>{{operGroup}}</a></div></div></fieldset></form></div></div><br><div class=row><div class=col-md-12><a class="btn btn-info pull-right" ng-href="/api/political/users/out/{{\'\u4eba\u5458\u5217\u8868\u4fe1\u606f\' + date}}.csv"><i class="fa fa-download" aria-hidden=true></i> \u5bfc\u51fa\u8868\u683c</a></div></div><div class=row><div class=col-md-12><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="person in $data"><td data-title="\'i\u5fae\u6821\u6635\u79f0\'" header-class=text-left><font ng-bind=person.user_obj.nickname></font></td><td data-title="\'\u59d3\u540d\'" header-class=text-left><font ng-bind=person.user_obj.name></font></td><td data-title="\'\u8eab\u4efd\'" header-class=text-left><font ng-if=identity[person.status] ng-bind=identity[person.status]></font> <font ng-if=!identity[person.status] color=#B8BEC3>\u672a\u91c7\u96c6</font></td><td data-title="\'\u7535\u8bdd\'" header-class=text-left><font ng-bind="person.user_obj.phone || \'\u6682\u65e0\u7535\u8bdd\'"></font></td><td data-title="\'\u804c\u52a1\'" header-class=text-left><font ng-if=person.duty_obj.name ng-bind=person.duty_obj.name></font> <font ng-if=!person.duty_obj.name color=#B8BEC3>\u672a\u91c7\u96c6</font></td><td data-title="\'\u5c0f\u7ec4\'" header-class=text-left><font ng-if=person.group_obj.name ng-bind=person.group_obj.name></font> <font ng-if=!person.group_obj.name color=#B8BEC3>\u672a\u91c7\u96c6</font></td><td data-title="\'\u5b66\u5e74\'" header-class=text-left><font ng-if=person.year_obj.name ng-bind=person.year_obj.name></font> <font ng-if=!person.year_obj.name color=#B8BEC3>\u672a\u91c7\u96c6</font></td><td data-title="\'\u64cd\u4f5c\'"><label type=button class="btn btn-info btn-checkbox" ng-click=course(person.user_obj.id)><span><i class="fa fa-list" aria-hidden=true></i> \u515a\u5efa\u5386\u7a0b</span></label>&nbsp;<label type=button class="btn btn-info btn-checkbox" ng-click=change(person) style="width: 100px"><span><i class="fa fa-user" aria-hidden=true></i> \u53d8&nbsp;&nbsp;\u66f4</span></label>&nbsp;</td></tr></tbody></table></div></div></div>');
    $templateCache.put('partial/community/party_branch/party_persons/change.html', '<form class=form-horizontal><div class=modal-header><h4 class=modal-title>\u8eab\u4efd\u53d8\u66f4</h4></div><div class=modal-body><div class=col-md-12><form-input data-title="\'\u59d3\u540d\'" data-name="\'name\'"><input type=text class=form-control ng-model=person.user_obj.name readonly></form-input><form-input data-title="\'\u8eab\u4efd\'" data-name="\'identity\'"><select name=identity id=identity class=form-control ng-model=changeObj.status ng-options="r.id as r.name for r in identityArray"></select></form-input><form-input data-title="\'\u804c\u52a1\'" data-name="\'duty\'"><select name=duty id=duty class=form-control ng-model=changeObj.duty ng-options="r.id as r.name for r in dutyArray"></select></form-input><form-input data-title="\'\u5b66\u5e74\'" data-name="\'grade\'"><select name=grade id=grade class=form-control ng-model=changeObj.year ng-options="r.id as r.name for r in gradeArray"></select></form-input><form-input data-title="\'\u5206\u7ec4\'" data-name="\'group\'"><select name=group id=group class=form-control ng-model=changeObj.group ng-options="r.id as r.name for r in groupArray"></select></form-input></div></div><div class=modal-footer><button class="btn btn-info" ng-click=ok()>\u786e\u5b9a</button> <button class="btn btn-default" data-dismiss=modal ng-click=cancel()>\u53d6\u6d88</button></div></form>');
    $templateCache.put('partial/community/party_branch/party_persons/course.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=CourseCtrl><div class=row><div class=col-md-6><a class="btn btn-default" ui-sref=party_info.party_persons><i class="fa fa-reply"></i> \u8fd4\u56de</a>&nbsp; <a class="btn btn-default" target=_blank ng-href="{{\'/api/political/undergo/page#\' + personId + \'*\' + auth_token}}"><i class="fa fa-print"></i>\u6253\u5370</a></div><div class=col-md-6 style="text-align: right"><button class="btn btn-info" ng-click=addActSummary(personId)><i class="fa fa-plus" aria-hidden=true></i> \u6dfb\u52a0\u6d3b\u52a8\u603b\u7ed3</button>&nbsp; <button class="btn btn-info" ng-click=addCourseSummary(personId)><i class="fa fa-plus" aria-hidden=true></i> \u6dfb\u52a0\u515a\u5efa\u5386\u7a0b</button></div></div><br><div class=row><div class=col-md-12><div class="panel panel-default"><div class=panel-heading><div class=panel-title><font ng-bind=person.user_obj.name></font>\u7684\u515a\u5efa\u5386\u7a0b</div></div><div class=panel-body><div class=row><div class=col-sm-12><div class=basic-info><table class="table col-md-12"><tbody><tr><td class=col-md-3 rowspan=5><img ng-src={{person.user_obj.icon}}/thumbnail style="width: 100%"></td><td class=col-md-2>\u771f\u5b9e\u59d3\u540d</td><td class=col-md-2><font ng-bind=person.user_obj.name></font></td><td class=col-md-2>\u8eab\u4efd</td><td class=col-md-2><span ng-switch=person.status><span ng-switch-when=FORMAL>\u6b63\u5f0f\u515a\u5458</span> <span ng-switch-when=PREPARE>\u9884\u5907\u515a\u5458</span> <span ng-switch-when=POSITIVE>\u79ef\u6781\u4efd\u5b50</span> <span ng-switch-when=NULLIFY><font color=#B8BEC3>\u672a\u91c7\u96c6</font></span></span></td></tr><tr><td class=col-md-2>\u6027\u522b</td><td class=col-md-2><span ng-switch=person.user_obj.sex><span ng-switch-when=MALE>\u7537</span> <span ng-switch-when=FEMALE>\u5973</span></span></td><td class=col-md-2>\u4e13\u4e1a</td><td class=col-md-2><font ng-bind=person.user_obj.major></font></td></tr><tr><td class=col-md-2>\u7535\u8bdd</td><td class=col-md-2><font ng-bind=person.user_obj.phone></font></td><td class=col-md-2>\u5165\u5b66\u65f6\u95f4</td><td class=col-md-2><font ng-bind=person.user_obj.admission_date></font></td></tr><tr><td class=col-md-2>\u52a0\u5165\u5b66\u5e74</td><td class=col-md-2><font ng-if=person.year_obj.name ng-bind=person.year_obj.name></font> <font ng-if=!person.year_obj.name color=#B8BEC3>\u672a\u91c7\u96c6</font></td><td class=col-md-2>\u6240\u5c5e\u5206\u7ec4</td><td class=col-md-2><font ng-if=person.group_obj.name ng-bind=person.group_obj.name></font> <font ng-if=!person.group_obj.name color=#B8BEC3>\u672a\u91c7\u96c6</font></td></tr><tr><td class=col-md-2>\u62c5\u4efb\u804c\u52a1</td><td class=col-md-2><font ng-if=person.duty_obj.name ng-bind=person.duty_obj.name></font> <font ng-if=!person.duty_obj.name color=#B8BEC3>\u672a\u91c7\u96c6</font></td><td class=col-md-2></td><td class=col-md-2></td></tr></tbody></table></div></div></div><form class="panel panel-default form-horizontal" ng-repeat="course in courses" my-collapse><span class="btn pull-right"><div ng-if=!course.isDisplay><i class="fa fa-chevron-down"></i>&nbsp;\u5c55\u5f00</div><div ng-if=course.isDisplay><i class="fa fa-chevron-up"></i>&nbsp;\u6536\u8d77</div></span> <span class="btn pull-right" ng-click=delCourse(course)><i class="fa fa-trash-o"></i>&nbsp;\u5220\u9664</span><div class=panel-heading><div class=panel-title><font ng-bind="course.create_time | date: \'yyyy-MM-dd HH:mm\'"></font></div></div><div id={{course.id}} class=panel-body ng-class="{true: \'isDisplay\', false: \'isNotDisplay\'}[{{course.isDisplay}}]"><br><div class=row><div ng-repeat="label in course.label"><span class="label label-info" style="float: left;margin-bottom: 10px;margin-left: 15px"><font size=3 ng-bind=label.name></font></span></div></div><br ng-if="course.activity_obj"><div class=row ng-if=course.activity_obj><div class=col-sm-6><p>\u6d3b\u52a8\u540d\u79f0\uff1a<font ng-bind=course.activity_obj.subject></font></p><p>\u6d3b\u52a8\u5730\u70b9\uff1a<font ng-bind=course.activity_obj.location></font></p><p>\u6d3b\u52a8\u5f00\u59cb\u65f6\u95f4\uff1a<font ng-bind="course.activity_obj.start_time | date: \'yyyy-MM-dd HH:mm\'"></font></p><p>\u6d3b\u52a8\u7ed3\u675f\u65f6\u95f4\uff1a<font ng-bind="course.activity_obj.end_time | date: \'yyyy-MM-dd HH:mm\'"></font></p><span class="label label-success" ng-repeat="plugin in course.activity_obj.plugins" style="float: left;margin-bottom: 10px;margin-left: 5px"><font ng-bind=plugin.name></font></span></div><div class=col-sm-6><div class=thumbnail style="width: 300px;height: 200px"><img ng-src="{{course.activity_obj.poster}}?width=200&height=200" style="width: 100%;height: 100%" image-fixed></div><p class=text-center style="width: 300px">\u6d3b\u52a8\u6d77\u62a5</p></div></div><br><div class=row><div class=col-sm-12><div class=well style="height: 500px;overflow-y: auto"><div ng-bind-html="course.content | trusthtml"></div></div></div></div></div></form><br><button class="btn btn-default center-block more-btn" ng-click=loadMoreCourses() ng-disabled=loadMoreBtn ng-show=loadMore><font ng-bind=loadCourseBtn></font></button></div></div></div></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/community/party_branch/party_persons/course/activity_summary.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=ActSummaryCtrl><div class=row><div class=col-md-12><a class="btn btn-default" ui-sref="party_info.activity({ personId: personId })"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><div class=row><div class=col-md-12><center><h3><font ng-bind=activity.name></font>\u603b\u7ed3</h3></center></div></div><br><div class=row><div class=col-md-12><form class="panel panel-default form-horizontal" my-collapse><span class="btn pull-right"><i class="fa fa-chevron-down"></i>&nbsp;\u5c55\u5f00</span><div class=panel-heading><div class=panel-title>\u57fa\u672c\u4fe1\u606f</div></div><div class=panel-body><div class=row><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u6d3b\u52a8\u70b9\u51fb\u6570</div></div><div class=panel-body><font ng-bind=browse_num></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u6d3b\u52a8\u6536\u85cf\u6570</div></div><div class=panel-body><font ng-bind=activity.fav_count></font></div></div></div></div></div></form></div></div><div class=row><div class=col-md-12 ng-repeat="plugin in activity.plugins"><form class="panel panel-default form-horizontal" my-collapse><span class="btn pull-right"><i class="fa fa-chevron-down"></i>&nbsp;\u5c55\u5f00</span><div class=panel-heading><div class=panel-title><font ng-bind=plugin.name></font></div></div><div class=panel-body><div class=row ng-if="plugin.id === \'political_sign_in\' && signIn"><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7b7e\u5230\u603b\u4eba\u6570</div></div><div class=panel-body><font ng-bind=signIn.political_sign_obj.sign_num></font></div></div></div><div class="col-md-3 text-center"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>Ta\u7684\u7b7e\u5230\u53f7</div></div><div class=panel-body><font ng-bind=signIn.index></font></div></div></div></div></div></form></div></div><div class=row><div class=col-md-12><h3>\u6dfb\u52a0\u6587\u5b57\u603b\u7ed3</h3></div></div><br><div class=row><div class=col-md-12><form class=form-horizontal role=form name=summaryForm><div class=form-group><label for=labels class="col-sm-2 control-label">\u9009\u62e9\u6807\u7b7e\uff1a</label><div class=col-sm-10><fieldset><legend><h5>\u6807\u7b7e\u5e93</h5></legend><div class=row><div class=col-md-2 ng-repeat="label in labels"><label type=button class="btn btn-default btn-checkbox" style=margin-bottom:3px;width:100px ng-click=choseLabel(label) chosen-status=label.chosen chosen><span><font ng-bind="label.name | substr: 4 : 3" title={{label.name}}></font></span></label></div></div></fieldset></div></div><div class=row><div class=col-sm-4><div style="padding: 8px;margin-left: 35px">\u5982\u679c\u6ca1\u6709\uff0c\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a\u6807\u7b7e\uff1a</div></div><div class=col-sm-8><button class="btn btn-info" ng-click=addLabel()>\u6dfb\u52a0\u6807\u7b7e</button></div></div><div class=row><div class=col-sm-12><p style="padding: 8px;margin-left: 35px"><small>ps\uff1a\u6dfb\u52a0\u8fc7\u7684\u6807\u7b7e\u4e0b\u6b21\u53ef\u4ee5\u76f4\u63a5\u9009\u62e9\u4f7f\u7528\uff0c\u6807\u7b7e\u5e93\u6700\u591a\u652f\u6301500\u4e2a\u81ea\u5b9a\u4e49\u6807\u7b7e</small></p></div></div><br><div class=form-group><label for=labels class="col-sm-2 control-label">\u5386\u7a0b\u6b63\u6587\uff1a</label><div class=col-sm-10><ng-simditor content=summary.content></ng-simditor></div></div><div class=row><div class="col-sm-4 col-sm-offset-4"><button class="btn btn-info btn-block" ng-click=saveSummary()>\u53d1&nbsp;&nbsp;\u5e03</button></div></div></form></div></div><br></div>');
    $templateCache.put('partial/community/party_branch/party_persons/course/add_label.html', '<form class=form-horizontal name=labelForm ng-submit=createLabel()><div class=modal-header><h4 class=modal-title>\u6dfb\u52a0\u6807\u7b7e</h4></div><div class=modal-body><form-input data-title="\'\u6807\u7b7e\u5185\u5bb9\'" data-name="\'name\'"><input type=text class=form-control placeholder=\u8f93\u5165\u5185\u5bb9\u8bf7\u63a7\u5236\u572810\u4e2a\u5b57\u4ee5\u5185 maxlength=10 id=name ng-model=label.name name=name required></form-input></div><div class=modal-footer><button type=submit class="btn btn-info" data-dismiss=modal ng-disabled=labelForm.$invalid>\u4fdd&nbsp;\u5b58</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u53d6&nbsp;\u6d88</span></button></div></form>');
    $templateCache.put('partial/community/party_branch/party_persons/course/course_summary.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=CouSummaryCtrl><div class=row><div class=col-md-12><a class="btn btn-default" ui-sref="party_info.course({personId: personId, summaryId: \'null\'})"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><br><br><div class=row><div class=col-md-12><form class=form-horizontal role=form name=summaryForm><div class=form-group><label for=labels class="col-sm-2 control-label">\u9009\u62e9\u6807\u7b7e\uff1a</label><div class=col-sm-10><fieldset><legend><h5>\u6807\u7b7e\u5e93</h5></legend><div class=row><div class=col-md-2 ng-repeat="label in labels"><label type=button class="btn btn-default btn-checkbox" style=margin-bottom:3px;width:100px ng-click=choseLabel(label) chosen-status=label.chosen chosen><span><font ng-bind="label.name | substr: 4 : 3" title={{label.name}}></font></span></label></div></div></fieldset></div></div><div class=row><div class=col-sm-4><div style="padding: 8px;margin-left: 35px">\u5982\u679c\u6ca1\u6709\uff0c\u53ef\u4ee5\u65b0\u5efa\u4e00\u4e2a\u6807\u7b7e\uff1a</div></div><div class=col-sm-8><button class="btn btn-info" ng-click=addLabel()>\u6dfb\u52a0\u6807\u7b7e</button></div></div><div class=row><div class=col-sm-12><p style="padding: 8px;margin-left: 35px"><small>ps\uff1a\u6dfb\u52a0\u8fc7\u7684\u6807\u7b7e\u4e0b\u6b21\u53ef\u4ee5\u76f4\u63a5\u9009\u62e9\u4f7f\u7528\uff0c\u6807\u7b7e\u5e93\u6700\u591a\u652f\u6301500\u4e2a\u81ea\u5b9a\u4e49\u6807\u7b7e</small></p></div></div><br><div class=form-group><label for=labels class="col-sm-2 control-label">\u5386\u7a0b\u6b63\u6587\uff1a</label><div class=col-sm-10><ng-simditor content=summary.content></ng-simditor></div></div><div class=row><div class="col-sm-4 col-sm-offset-4"><button class="btn btn-info btn-block" ng-click=saveSummary()>\u53d1&nbsp;&nbsp;\u5e03</button></div></div></form></div></div><br></div>');
    $templateCache.put('partial/community/party_branch/party_persons/course/party_activity.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=PartyActCtrl><div class=row><div class=col-md-12><a class="btn btn-default" ui-sref="party_info.course({personId: personId, summaryId: \'null\'})"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><br><div class=row><div class=col-md-12><span class="label label-info">\u5171\u53c2\u4e0e\u652f\u90e8\u6d3b\u52a8\uff1a&nbsp;<font ng-bind=activity_sum></font>&nbsp;\u6b21</span></div></div><br><div class=row><div class=col-md-12><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="activity in $data"><td data-title="\'\u6d3b\u52a8\u540d\u79f0\'" header-class=text-left><font ng-bind=activity.activity_obj.activity.subject></font></td><td data-title="\'\u6d3b\u52a8\u65f6\u95f4\'" header-class=text-left><font ng-bind="activity.activity_obj.activity.start_time | date: \'yyyy-MM-dd HH:mm\'"></font>~ <font ng-bind="activity.activity_obj.activity.end_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u6d3b\u52a8\u5730\u70b9\'" header-class=text-left><font ng-bind=activity.activity_obj.activity.location></font></td><td data-title="\'\u6d3b\u52a8\u529f\u80fd\'" header-class=text-left class=activity-content><div ng-repeat="plugin in activity.activity_obj.activity.plugins"><img class=logo ng-src={{plugin.icon_path}} style="width: 13px"> <span>{{plugin.name}}</span></div></td><td data-title="\'\u662f\u5426\u5df2\u6dfb\u52a0\u603b\u7ed3\'"><center><span class="label label-success" ng-if="activity.join_undergo !== 0">\u662f</span> <span class="label label-danger" ng-if="activity.join_undergo === 0">\u5426</span></center></td><td data-title="\'\u64cd\u4f5c\'"><center><label type=button class="btn btn-info btn-checkbox" ng-if="activity.join_undergo === 0" ng-click="addSummary(activity.id, \'-1\', personId)"><span>\u6dfb\u52a0\u603b\u7ed3</span></label><label type=button class="btn btn-info btn-checkbox" ng-if="activity.join_undergo !== 0" ng-click="editSummary(activity.id, activity.join_undergo, personId)"><span>\u7f16\u8f91\u603b\u7ed3</span></label></center></td></tr></tbody></table></div></div></div>');
    $templateCache.put('partial/community/party_branch/party_persons/duty.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=DutyCtrl><div class=row><div class=col-md-6><a class="btn btn-default" ui-sref=party_info.party_persons><i class="fa fa-reply"></i> \u8fd4\u56de</a></div><div class=col-md-6><button class="btn btn-info pull-right" ng-click=createDuty()><i class="fa fa-plus" aria-hidden=true></i> \u65b0\u5efa\u804c\u52a1</button></div></div><br><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="duty in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left><font ng-bind="$index + 1"></font></td><td data-title="\'\u804c\u52a1\u540d\u79f0\'" header-class=text-left><font ng-bind=duty.name></font></td><td data-title="\'\u5f53\u524d\u4eba\u6570\'" header-class=text-left><font ng-bind=duty.num></font>(<a ng-click=members(duty)>\u67e5\u770b\u6210\u5458</a>)</td><td data-title="\'\u804c\u52a1\u7b80\u4ecb\'" header-class=text-left><textarea class=form-control rows=5 ng-model=duty.describe readonly></textarea></td><td data-title="\'\u521b\u5efa\u65f6\u95f4\'" header-class=text-left><font ng-bind="duty.create_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=edit(duty)><span><i class="fa fa-pencil-square-o" aria-hidden=true></i> \u7f16&nbsp;\u8f91</span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=delete(duty.id)><span><i class="fa fa-trash-o" aria-hidden=true></i> \u5220&nbsp;\u9664</span></label></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/community/party_branch/party_persons/grade.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=GradeCtrl><div class=row><div class=col-md-6><a class="btn btn-default" ui-sref=party_info.party_persons><i class="fa fa-reply"></i> \u8fd4\u56de</a></div><div class=col-md-6><button class="btn btn-info pull-right" ng-click=createGrade()><i class="fa fa-plus" aria-hidden=true></i> \u65b0\u5efa\u5b66\u5e74</button></div></div><br><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="grade in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left><font ng-bind="$index + 1"></font></td><td data-title="\'\u5b66\u5e74\u540d\u79f0\'" header-class=text-left><font ng-bind=grade.name></font></td><td data-title="\'\u5f53\u524d\u4eba\u6570\'" header-class=text-left><font ng-bind=grade.num></font>(<a ng-click=members(grade)>\u67e5\u770b\u6210\u5458</a>)</td><td data-title="\'\u521b\u5efa\u65f6\u95f4\'" header-class=text-left><font ng-bind="grade.create_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u64cd\u4f5c\'"><center><label type=button class="btn btn-info btn-checkbox" ng-click=edit(grade)><span><i class="fa fa-pencil-square-o" aria-hidden=true></i> \u7f16&nbsp;\u8f91</span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=delete(grade.id)><span><i class="fa fa-trash-o" aria-hidden=true></i> \u5220&nbsp;\u9664</span></label></center></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/community/party_branch/party_persons/group.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=GroupCtrl><div class=row><div class=col-md-6><a class="btn btn-default" ui-sref=party_info.party_persons><i class="fa fa-reply"></i> \u8fd4\u56de</a></div><div class=col-md-6><button class="btn btn-info pull-right" ng-click=createGroup()><i class="fa fa-plus" aria-hidden=true></i> \u65b0\u5efa\u5c0f\u7ec4</button></div></div><br><div class=row><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="group in $data"><td data-title="\'\u7f16\u53f7\'" header-class=text-left><font ng-bind="$index + 1"></font></td><td data-title="\'\u5c0f\u7ec4\u540d\u79f0\'" header-class=text-left><font ng-bind=group.name></font></td><td data-title="\'\u5f53\u524d\u4eba\u6570\'" header-class=text-left><font ng-bind=group.num></font>(<a ng-click=members(group)>\u67e5\u770b\u6210\u5458</a>)</td><td data-title="\'\u5c0f\u7ec4\u7b80\u4ecb\'" header-class=text-left><textarea class=form-control rows=5 ng-model=group.describe readonly></textarea></td><td data-title="\'\u521b\u5efa\u65f6\u95f4\'" header-class=text-left><font ng-bind="group.create_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=edit(group)><span><i class="fa fa-pencil-square-o" aria-hidden=true></i> \u7f16&nbsp;\u8f91</span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=delete(group.id)><span><i class="fa fa-trash-o" aria-hidden=true></i> \u5220&nbsp;\u9664</span></label></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/message/message.html', '<div ng-controller=MessageCtrl><div class=row><textarea class=form-control ng-model=content rows=5></textarea><br><button class="btn btn-info pull-right" type=button ng-click=send()>\u53d1\u9001</button><br><br><div class=message-panel><div ng-repeat="message in messages" class=message-container><div ng-if="message.direction == \'FROM_USER\'"><img ng-if=user.icon ng-src={{user.icon}}/thumbnail class="message-icon pull-left" ng-attr-title={{user.nickname}} ng-click="viewImage(user.icon)"><p class=nickname ui-sref="message.userInfo({ id: user.id})">&nbsp;{{user.nickname}}</p><div class="user_message message" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}">{{message.content}}</div></div><div ng-if="message.direction == \'FROM_COMMUNITY\'"><img ng-if=community.logo ng-src={{community.logo}}/thumbnail class="message-icon pull-right" ng-attr-title="{{community.name}}"><div class="community_message message with-newlines" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}"><div ng-if="message.status === \'NEW\'"><font ng-bind=message.content></font></div><div ng-if="message.status === \'READ\'"><font ng-bind=message.content></font>&nbsp;<font style="color: white">--</font>&nbsp;<font ng-bind=messageStatus[message.status] class=message_status></font></div></div></div></div></div><button class="btn btn-default center-block more-btn" ng-click=loadMore() ng-disabled=load_more_btn>{{load_btn_content}}</button></div></div>');
    $templateCache.put('partial/message/message_admin_iwx.html', '<div ng-controller=MessAdminIwxCtrl><textarea class=form-control ng-model=content rows=5></textarea><br><button class="btn btn-info pull-right" type=button ng-click=send()>\u53d1\u9001</button><br><br><div class=message-panel><div ng-repeat="message in messages" class=message-container><div ng-if="message.mes_type == \'IWX\'"><img ng-if=message.user.icon ng-src={{message.user.icon}}/thumbnail class="message-icon pull-left"><p class=nickname>&nbsp;{{message.user.nickname}}</p><div class="user_message message" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}">{{message.content}}</div></div><div ng-if="message.mes_type == \'COMMUNITY\'"><img ng-if=community.logo ng-src={{community.logo}}/thumbnail class="message-icon pull-right" ng-attr-title="{{community.name}}"><div class="community_message message with-newlines" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}">{{message.content}}</div></div></div></div><button class="btn btn-default center-block more-btn" ng-click=loadMore()>\u52a0\u8f7d\u66f4\u591a\u6d88\u606f</button></div>');
    $templateCache.put('partial/message/message_admin_university.html', '<div ng-controller=MessAdminUniCtrl><textarea class=form-control ng-model=content rows=5></textarea><br><button class="btn btn-info pull-right" type=button ng-click=send()>\u53d1\u9001</button><br><br><div class=message-panel><div ng-repeat="message in messages" class=message-container><div ng-if="message.mes_type == \'UN\'"><img ng-if=message.user.icon ng-src={{message.user.icon}}/thumbnail class="message-icon pull-left"><p class=nickname>&nbsp;{{message.user.nickname}}</p><div class="user_message message" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}">{{message.content}}</div></div><div ng-if="message.mes_type == \'COMMUNITY\'"><img ng-if=community.logo ng-src={{community.logo}}/thumbnail class="message-icon pull-right" ng-attr-title="{{community.name}}"><div class="community_message message with-newlines" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}">{{message.content}}</div></div></div></div><button class="btn btn-default center-block more-btn" ng-click=loadMore()>\u52a0\u8f7d\u66f4\u591a\u6d88\u606f</button></div>');
    $templateCache.put('partial/message/message_bazaar_topic.html', '<div ng-controller=MesBazTopicCtrl><div class=row><center><div class="owl-carousel owl-theme"><div class=item ng-repeat="item in items" repeat-finish><img class=img-thumbnail style="width: 240px;height: 140px" ng-src={{item}} ng-click=viewImage(item)></div></div><p style="margin: 10px 0px 15px 0px"><h4><font title={{topic.topic}} ng-bind=topic.topic></font></h4></p></center></div><br><div class=row><textarea class=form-control ng-model=content rows=5></textarea><br><button class="btn btn-info pull-right" type=button ng-click=send()>\u53d1\u9001</button><br><br></div><div class=row><div class=message-panel><div ng-repeat="message in messages" class=message-container><div ng-if="message.direction == \'FROM_USER\'"><img ng-if=message.user.icon ng-src={{message.user.icon}}/thumbnail class="message-icon pull-left" ng-attr-title={{message.user.nickname}} ng-click="viewImage(message.user.icon)"><p class=nickname>&nbsp;{{message.user.nickname}}</p><div class="user_message message" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}">{{message.content}}</div></div><div ng-if="message.direction == \'FROM_COMMUNITY\'"><img ng-if=message.community.logo ng-src={{message.community.logo}}/thumbnail class="message-icon pull-right" ng-attr-title="{{message.community.name}}"><div class="community_message message with-newlines" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}"><div ng-if="message.status === \'NEW\'"><font ng-bind=message.content></font></div><div ng-if="message.status === \'READ\'"><font ng-bind=message.content></font>&nbsp;<font style="color: white">--</font>&nbsp;<font ng-bind=messageStatus[message.status] class=message_status></font></div></div></div></div></div><button class="btn btn-default center-block more-btn" ng-click=loadMore() ng-disabled=load_more_btn>{{load_btn_content}}</button></div></div>');
    $templateCache.put('partial/message/message_bazaar_user.html', '<div ng-controller=MesBazUserCtrl><div class=row><center><p><h4>\u4f60\u548c\u8fd9\u4f4d\u540c\u5b66\u8ba8\u8bba\u8fc7\u7684\u6240\u6709\u6821\u56ed\u96c6\u5e02\u5185\u5bb9\u90fd\u5728\u8fd9\u91cc</h4></p></center></div><div class=row><form class=form-horizontal><fieldset><legend><h5>\u8ba8\u8bba\u8fc7\u7684\u5b9d\u8d1d</h5></legend><div class=row><div class=col-sm-6 ng-repeat="topic in topics"><center><img class=img-thumbnail title=\u70b9\u51fb\u67e5\u770b\u539f\u56fe style="width: 300px;height: 200px" ng-src="{{topic.images[0] || \'/static/images/placeholder.png\'}}" ng-click=imageView(topic.images[0])><br><p style="margin: 10px 0px 15px 0px"><a ui-sref="message.bazaar_topic({ id: topic.id, user_id: bazaar_user_id })"><font title={{topic.topic}} ng-bind="topic.topic | substr: 21 : 20"></font></a></p></center></div></div><div class=row><br><button class="btn btn-default center-block more-btn" ng-click=loadMoreTopic() ng-disabled=more_topic>{{load_topic_content}}</button></div></fieldset></form></div></div>');
    $templateCache.put('partial/message/message_iWX/message_iWX.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=MessageIwxCtrl><div class=row><nav class="navbar navbar-inverse" style="background-color: rgb(219, 218, 218)" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li d-sref="\'message_iWX\'"><a ui-sref=message_iWX>\u901a\u4fe1\u5217\u8868</a></li><li d-sref="\'message_iWX.create_letters\'"><a ui-sref=message_iWX.create_letters>\u65b0\u5efa\u79c1\u4fe1</a></li></ul></div></nav></div><div id=content ui-view><div class=row><form class=form-horizontal><fieldset><legend><h4>\u8fc7\u6ee4\u7b5b\u9009\u6761\u4ef6</h4></legend><div class=row><div class=col-md-3><form-input data-title="\'\u7701\'" data-name="\'province\'"><select name=province_scope id=province_scope class=form-control ng-init=provinceArray[0].id ng-model=search_params.province_scope_id ng-options="r.id as r.city for r in provinceArray" ng-change=change_province()></select></form-input></div><div class=col-md-3><form-input data-title="\'\u5e02\'" data-name="\'city\'"><select class=form-control name=city_scope id=city_scope ng-model=search_params.city_scope_id ng-options="r.id as r.city for r in cityArray" ng-change=change_city()></select></form-input></div><div class=col-md-6><form-input data-title="\'\u5b66\u6821\'" data-name="\'university\'"><select class=form-control name=university_scope id=university_scope ng-model=search_params.university_scope_id ng-options="r.id as r.name for r in universityArray" ng-change=change_university()></select></form-input></div></div><br></fieldset></form><br></div><div class=row><br><div class=col-md-1><div class=checkbox><label><input type=checkbox ng-model=is_checked_all ng-checked=checked_all() ng-click="get_checked_all(is_checked_all)">&nbsp;&nbsp;\u5168\u9009</label></div></div><div class=col-md-2><button class="btn btn-info" ng-click="private_letter(community, \'all\')"><i class="fa fa-reply-all"></i> \u7fa4\u56de</button></div></div><div class=row><table class="table table-striped table-responsive coupons" ng-table=tableParams><tbody><tr ng-repeat="community in $data"><td style=padding-left:14px><div class=checkbox><label><input type=checkbox ng-model=is_checked_item ng-checked=is_checked(community.community.id) ng-click="get_checked_item(community.community.id, is_checked_item)"></label></div></td><td><div class=logo style=height:70px;width:70px><img ng-src={{community.community.logo}} style=height:100%;width:100% ng-click=viewImage(community.community.logo)></div></td><td><a ng-click=go_to_message(community.community.id)>{{community.community.name}}</a></td><td><label type=button class="btn btn-info btn-checkbox" ng-click="private_letter(community.community.id, \'item\')"><span>\u79c1\u4fe1 <i class="fa fa-envelope"></i></span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=delete_information(community.community.id)><span>\u5220\u9664 <i class="fa fa-trash-o"></i></span></label></td></tr></tbody></table></div></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/message/message_iWX/message_iWX_letter.html', '<div class=modal-header><h3 class=modal-title>\u53d1\u9001\u79c1\u4fe1</h3></div><div class=modal-body><textarea class="form-control ng-pristine ng-valid ng-touched" ng-model=content rows=5></textarea></div><div class=modal-footer><button class="btn btn-primary" ng-click=ok()>\u53d1\u9001</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/message/message_iWX/message_iWX_letters.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=CreateLetterIwxCtrl><div class=row><textarea class=form-control ng-model=message.content rows=7></textarea><br></div><div class=row><form class=form-horizontal><fieldset><legend><h4>\u53d1\u9001\u8303\u56f4</h4></legend><div class=row><div class=col-md-3><form-input data-title="\'\u7701\'" data-name="\'province\'"><select name=province_scope id=province_scope class=form-control ng-init=provinceArray[0].id ng-model=search_params.province_scope_id ng-options="r.id as r.city for r in provinceArray" ng-change=change_province()></select></form-input></div><div class=col-md-3><form-input data-title="\'\u5e02\'" data-name="\'city\'"><select class=form-control name=city_scope id=city_scope ng-model=search_params.city_scope_id ng-options="r.id as r.city for r in cityArray" ng-change=change_city()></select></form-input></div><div class=col-md-6><form-input data-title="\'\u5b66\u6821\'" data-name="\'university\'"><select class=form-control name=university_scope id=university_scope ng-model=search_params.university_scope_id ng-options="r.id as r.name for r in universityArray" ng-change=change_university()></select></form-input></div></div><div class=row><div class=col-md-3 style=text-align:left;padding-left:50px ng-repeat="community in communitys"><input type=checkbox ng-model=choose_item ng-checked=choose_all ng-click="choose_community(community.id, choose_item)"> <font title={{community.name}} ng-bind="community.name | substring"></font></div></div><div class=row ng-show=show_community><div class="col-md-2 col-md-offset-4"><br><button class="btn btn-default center-block more-btn" ng-click=load_more()>\u52a0\u8f7d\u66f4\u591a\u793e\u56e2</button><br></div></div><div class=row><div class=col-md-2 style=text-align:center><div class=checkbox><label><input type=checkbox ng-model=choose_all ng-click=choose_communitys(choose_all) ng-checked=choose_all ng-disabled="communitys.length === 0"> \u5168\u9009</label></div></div></div></fieldset></form><br></div><div class=row><button class="btn btn-info pull-right" ng-click=send_letter()>\u53d1\u9001</button></div></div>');
    $templateCache.put('partial/message/message_iWX/message_iWX_to_community.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=MessageToCommIwxCtrl><textarea class=form-control ng-model=content rows=5></textarea><br><button class="btn btn-info pull-right" type=button ng-click=send()>\u53d1\u9001</button><br><br><div class=message-panel><div ng-repeat="message in messages" class=message-container><div ng-if="message.mes_type == \'COMMUNITY\'"><img ng-if=message.community.logo ng-src={{message.community.logo}}/thumbnail class="message-icon pull-left"><p class=nickname>&nbsp;{{message.community.name}}</p><div class="user_message message" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}">{{message.content}}</div></div><div ng-if="message.mes_type == \'IWX\'"><img ng-if=message.user.icon ng-src={{message.user.icon}}/thumbnail class="message-icon pull-right" ng-attr-title="{{message.user.nickname}}"><div class="community_message message with-newlines" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}">{{message.content}}</div></div></div></div><button class="btn btn-default center-block more-btn" ng-click=loadMore()>\u52a0\u8f7d\u66f4\u591a\u6d88\u606f</button></div>');
    $templateCache.put('partial/message/message_member_info.html', '<div ng-controller=MessMemberInfoCtrl class=col-lg-12><p class=hidden-print><a ui-sref="message.user({ id: user.user.id})" class="btn-default btn"><i class="fa fa-reply"></i> \u8fd4\u56de</a></p><p><style>table {\r' + '\n' + '        border: 1px solid #dddddd;\r' + '\n' + '    }</style><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u62a5\u540d\u8868</div></div><div class=panel-body><div class=row><div class=col-sm-12><div class=basic-info><table class="table col-md-12"><tbody><tr><td class=col-md-3 rowspan=3><img ng-src={{user.user.icon}}/thumbnail style=width:100%></td><td class=col-md-2>\u59d3\u540d</td><td class=col-md-2>{{user.user.name}}</td><td class=col-md-2>\u5b66\u6821</td><td class=col-md-3>{{user.user.university.name}}</td></tr><tr><td>\u6027\u522b</td><td><span ng-switch=user.user.sex><span ng-switch-when=MALE>\u7537</span> <span ng-switch-when=FEMALE>\u5973</span></span></td><td>\u4e13\u4e1a</td><td>{{user.user.major}}</td></tr><tr><td>\u7535\u8bdd</td><td>{{user.user.phone}}</td><td>\u5165\u5b66\u65f6\u95f4</td><td>{{user.user.admission_date}}</td></tr></tbody></table></div></div></div><div ng-repeat="answer in user.answers" class="panel panel-default"><div class=panel-heading><div class=panel-title>\u95ee\u9898 {{$index+1}}</div></div><div ng-switch=answer.question.type class=panel-body><div ng-switch-when=SINGLE_CHOICE><strong>{{answer.question.question}}</strong><p ng-repeat="option in answer.question.options track by $index"><input type=radio disabled ng-checked="{{option==answer.answer[0]}}"> <font ng-class="{\'myAnaswer\':answer.answer.indexOf(option) != -1}">&nbsp;{{option}}</font><br></p></div><div ng-switch-when=MULTI_CHOICE><strong>{{answer.question.question}}</strong><p ng-repeat="option in answer.question.options track by $index"><input type=checkbox disabled ng-checked="{{answer.answer.indexOf(option) != -1}}"> <font ng-class="{\'myAnaswer\':answer.answer.indexOf(option) != -1}">&nbsp;{{option}}</font><br></p></div><div ng-switch-when=TEXT><strong>{{answer.question.question}}</strong><p>{{answer.answer}}</p></div><div ng-switch-when=IMAGES><strong>{{answer.question.question}}</strong><p ng-repeat="url in answer.answer track by $index"><img style=width:450px ng-src="{{url}}"></p></div></div></div></div></div></p></div>');
    $templateCache.put('partial/message/message_university/message_university.html', '<div class="col-lg-12 col-md-12 col-sm-12" ng-controller=MessageUniversityCtrl><div class=row><nav class="navbar navbar-inverse" style="background-color: rgb(219, 218, 218)" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li d-sref="\'message_university\'"><a ui-sref=message_university>\u901a\u4fe1\u5217\u8868</a></li><li d-sref="\'message_university.create_letters\'"><a ui-sref=message_university.create_letters>\u65b0\u5efa\u79c1\u4fe1</a></li></ul></div></nav><br></div><div id=content ui-view><div class=row><form class=form-horizontal><div class=col-md-3 style=margin-top:8px><center><span class="label label-info" style=font-size:100%>\u5b66\u6821\uff1a<font ng-bind="user.nickname | format"></font></span></center></div></form></div><div class=row><br><div class=col-md-1><div class=checkbox><label><input type=checkbox ng-model=is_checked_all ng-checked=checked_all() ng-click=get_checked_all(is_checked_all)> \u5168\u9009</label></div></div><div class=col-md-2><button class="btn btn-info" ng-click="private_letter(community, \'all\')"><i class="fa fa-reply-all"></i> \u7fa4\u56de</button></div></div><div class=row><table class="table table-striped table-responsive coupons" ng-table=tableParams><tbody><tr ng-repeat="community in $data"><td style=padding-left:14px><div class=checkbox><label><input type=checkbox ng-model=is_checked_item ng-checked=is_checked(community.community.id) ng-click="get_checked_item(community.community.id, is_checked_item)"></label></div></td><td><div class=logo style=height:70px;width:70px><img ng-src={{community.community.logo}} style=height:100%;width:100% ng-click=viewImage(community.community.logo)></div></td><td><a ng-click=go_to_message(community.community.id)>{{community.community.name}}</a></td><td><label type=button class="btn btn-info btn-checkbox" ng-click="private_letter(community.community.id, \'item\')"><span>\u79c1\u4fe1 <i class="fa fa-envelope"></i></span></label>&nbsp;<label type=button class="btn btn-danger btn-checkbox" ng-click=delete_information(community.community.id)><span>\u5220\u9664 <i class="fa fa-trash-o"></i></span></label></td></tr></tbody></table></div></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/message/message_university/message_university_letters.html', '<div class="col-lg-12 col-md-12 col-sm-12" ng-controller=CreateLetterUniversityCtrl><div class=row><textarea class=form-control ng-model=message.content rows=7 placeholder=\u8bf7\u5728\u6b64\u8f93\u5165\u8981\u53d1\u9001\u7684\u79c1\u4fe1\u5185\u5bb9></textarea><br></div><div class=row><form class=form-horizontal><fieldset><legend><h4>\u53d1\u9001\u8303\u56f4</h4></legend><div class=row><div class=col-md-3 style=text-align:left;padding-left:50px ng-repeat="community in communitys"><input type=checkbox ng-model=choose_item ng-checked=choose_all ng-click="choose_community(community.id, choose_item)"> <font title={{community.name}} ng-bind="community.name | substring"></font></div></div><div class=row ng-show=show_community><div class="col-md-2 col-md-offset-4"><br><button class="btn btn-default center-block more-btn" ng-click=load_more()>\u52a0\u8f7d\u66f4\u591a\u793e\u56e2</button><br></div></div><div class=row><div class=col-md-2 style=text-align:center><div class=checkbox><label><input type=checkbox ng-model=choose_all ng-click=choose_communitys(choose_all) ng-checked=choose_all ng-disabled="communitys.length === 0"> \u5168\u9009</label></div></div></div></fieldset></form><br></div><div class=row><button class="btn btn-info pull-right" ng-click=send_letter()>\u53d1\u9001</button></div></div>');
    $templateCache.put('partial/message/message_university/message_university_to_community.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=MessageToCommUniCtrl><textarea class=form-control ng-model=content rows=5 placeholder=\u8bf7\u5728\u6b64\u8f93\u5165\u8981\u53d1\u9001\u7684\u79c1\u4fe1\u5185\u5bb9></textarea><br><button class="btn btn-info pull-right" type=button ng-click=send()>\u53d1\u9001</button><br><br><div class=message-panel><div ng-repeat="message in messages" class=message-container><div ng-if="message.mes_type == \'COMMUNITY\'"><img ng-if=message.community.logo ng-src={{message.community.logo}}/thumbnail class="message-icon pull-left"><p class=nickname>&nbsp;{{message.community.name}}</p><div class="user_message message" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}">{{message.content}}</div></div><div ng-if="message.mes_type == \'UN\'"><img ng-if=message.user.icon ng-src={{message.user.icon}}/thumbnail class="message-icon pull-right" ng-attr-title="{{message.user.nickname}}"><div class="community_message message with-newlines" ng-attr-title="{{message.create_time | date:\'yyyy-MM-dd HH:mm:ss\'}}">{{message.content}}</div></div></div></div><button class="btn btn-default center-block more-btn" ng-click=loadMore()>\u52a0\u8f7d\u66f4\u591a\u6d88\u606f</button></div>');
    $templateCache.put('partial/message/messages.html', '<div ng-controller=MessagesCtrl><div class=tabs-left><ul class="nav nav-tabs col-sm-3 col-md-3 col-lg-3" style="max-width: none;border: 2px solid #D9DDDE;padding: 20px 10px 20px 10px;height: initial;border-radius: 2%"><div treecontrol class=tree-light tree-model=dataForTheTree options=treeOptions on-selection=showSelected(node) selected-node=node3><span class=message_tree ng-if="node.nickname == \'\u5bf9\u8bdd\u5217\u8868\'">{{node.nickname}}</span> <span class=message_tree ng-if="node.nickname == \'i\u5fae\u6821\u7ba1\u7406\u5458\'">{{node.nickname}}</span> <span class=message_tree ng-if="node.nickname == \'\u5b66\u6821\u7ba1\u7406\u5458\'">{{node.nickname}}</span> <span class=message_tree ng-if="node.nickname == \'\u672c\u793e\u6210\u5458\' && messages.length != 0" ui-sref=message.members>{{node.nickname}}</span> <span class=message_tree ng-if="node.nickname == \'\u975e\u672c\u793e\u6210\u5458\' && noncommMembers.length != 0">{{node.nickname}}</span> <span class=message_tree ng-if="node.nickname == \'\u96c6\u5e02\u6d88\u606f\' && bazaarMembers != 0">{{node.nickname}}</span> <span title={{node.nickname}} class=message_tree ng-if="node.parent_id === 1" ui-sref="message.iwx({ id: node.id })">{{node.nickname}}</span> <span title={{node.nickname}} class=message_tree ng-if="node.parent_id === 2" ui-sref="message.university({ id: node.university_id })">{{node.nickname}}</span> <span title={{node.nickname}} class=message_tree ng-if="node.parent_id === 3" ui-sref="message.user({ id: node.user_id })">{{node.nickname}}</span> <span title={{node.nickname}} class=message_tree ng-if="node.parent_id === 4" ui-sref="message.user({ id: node.user_id })">{{node.nickname}}</span> <span title={{node.name}} class=message_tree ng-if="node.parent_id === 5" ui-sref="message.bazaar_user({ id: node.id })">{{node.name}}</span> <span title={{node.topic}} class=message_tree ng-if=!node.parent_id ui-sref="message.bazaar_topic({ id: node.id, user_id: node.user_id })">{{node.topic}}</span> <span ng-if="(node.parent_id === 3 || node.parent_id === 4 || node.parent_id === 5 || !node.parent_id) && node.count > 0" class=badge>{{node.count}}</span></div><br></ul></div><div ui-view class="col-lg-7 col-lg-offset-4 col-md-7 col-md-offset-4 col-sm-8 col-sm-offset-4"><div><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u6d88\u606f\u7ba1\u7406</div></div><div class=panel-body><div class=question-table><p class=text-muted>\u9009\u53d6\u5de6\u4fa7\u5217\u8868\u7528\u6237\u514d\u8d39\u53d1\u9001\u6d88\u606f</p></div></div></div></div></div></div>');
    $templateCache.put('partial/message/messages_members.html', '<div ng-controller=MessagesMemCtrl><div class=row><h4>\u53d1\u9001\u6d88\u606f\u7ed9\u793e\u56e2\u6210\u5458</h4><textarea class=form-control ng-model=message.content rows=5></textarea><br></div><div class=row><form class=form-horizontal><fieldset><legend><h4>\u90e8\u95e8</h4></legend><div class=row><div class=col-md-2 ng-repeat="department in departments"><label type=button class="btn btn-default btn-checkbox" style=margin-bottom:3px;width:100px ng-click=chose_department(department) chosen-status=department.chosen chosen><span><font ng-bind="department.name | substr: 4 : 3" title={{department.name}}></font></span></label></div></div><br></fieldset></form><br></div><div class=row><form class=form-horizontal><fieldset><legend><h4>\u90e8\u95e8\u6210\u5458</h4></legend><div class=row><div class=col-md-3 style=text-align:left;padding-left:50px ng-repeat="member in members"><input type=checkbox ng-model=choose_item ng-checked=choose_all ng-click="choose_member(member.id, choose_item)"> <font title={{member.name}} ng-bind="member.name | substring"></font></div></div><div class=row ng-show=show_member><div class="col-md-2 col-md-offset-4"><br><button class="btn btn-default center-block more-btn" ng-click=load_more()>\u52a0\u8f7d\u66f4\u591a\u793e\u56e2</button><br></div></div><div class=row><div class=col-md-2 style=text-align:center><div class=checkbox><label><input type=checkbox ng-model=choose_all ng-click=choose_members(choose_all) ng-checked=choose_all ng-disabled="members.length === 0"> \u5168\u9009</label></div></div></div><br></fieldset></form><br></div><div class=row><button class="btn btn-info pull-right" type=button ng-click=send()>\u53d1\u9001</button></div></div>');
    $templateCache.put('partial/profile/change_password.html', '<div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-3 col-sm-9 col-sm-offset-3 profile-panel"><form ng-submit=changePassword() class=form-horizontal role=form name=changePasswordForm><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u4fee\u6539\u5bc6\u7801</div></div><div class=panel-body><form-input data-title="\'\u539f\u5bc6\u7801\'" data-name="\'password\'"><input name=email id=email ng-model=change.password class=form-control type=password required></form-input><form-input data-title="\'\u65b0\u5bc6\u7801\'" data-name="\'new_password\'"><input name=new_password id=new_password ng-model=change.new_password class=form-control type=password required></form-input><form-input data-title="\'\u518d\u6b21\u8f93\u5165\'" data-name="\'password\'"><input name=new_password_confirm id=new_password_confirm ng-model=change.new_password_confirm class=form-control type=password required></form-input><form-input data-title="\'\'" data-name="\'\'"><input class="btn btn-primary" id=submit name=submit type=submit value=\u4fee\u6539\u5bc6\u7801></form-input></div></div></form></div>');
    $templateCache.put('partial/profile/profile.html', '<div ng-controller=ProfileCtrl><div class=tabs-left><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'profile\'"><a ui-sref=profile>\u57fa\u672c\u4fe1\u606f</a></li><li d-sref="\'profile.change_password\'"><a ui-sref=profile.change_password>\u4fee\u6539\u5bc6\u7801</a></li></ul></div><div id=content><div ui-view><div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-3 col-sm-9 col-sm-offset-3 profile-panel"><form class=form-horizontal role=form enctype=multipart/form-data><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7ba1\u7406\u5458\u6982\u51b5</div></div><div class=panel-body><div class=form-group><label class="col-sm-2 control-label" for=email>\u767b\u5f55\u90ae\u7bb1</label><div class=col-sm-9><input class=form-control id=email name=email readonly type=text ng-model=user.email></div></div><div class=form-group><label class="col-sm-2 control-label" for=name>\u59d3\u540d</label><div class=col-sm-9><input class=form-control id=name name=name type=text ng-model=user.name readonly></div></div><div class=form-group><label class="col-sm-2 control-label" for=phone>\u624b\u673a\u53f7\u7801</label><div class=col-sm-9><input class=form-control id=phone name=phone type=text ng-model=user.phone readonly></div></div><div class=form-group><label class="col-sm-2 control-label" for=photo_id>\u8bc1\u4ef6\u7167</label><div class=col-sm-9><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-new thumbnail" style="width: 378px"><img ng-src={{user.photo_id}}></div><div class="fileinput-preview fileinput-exists thumbnail"></div></div></div></div></div></div></form></div></div></div></div>');
    $templateCache.put('partial/profile/profile_iwx/change_password_iwx.html', '<div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-3 col-sm-9 col-sm-offset-3 profile-panel"><form ng-submit=changePassword() class=form-horizontal role=form name=changePasswordForm><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u4fee\u6539\u5bc6\u7801</div></div><div class=panel-body><form-input data-title="\'\u539f\u5bc6\u7801\'" data-name="\'password\'"><input name=email id=email ng-model=change.password class=form-control type=password required></form-input><form-input data-title="\'\u65b0\u5bc6\u7801\'" data-name="\'new_password\'"><input name=new_password id=new_password ng-model=change.new_password class=form-control type=password required></form-input><form-input data-title="\'\u518d\u6b21\u8f93\u5165\'" data-name="\'password\'"><input name=new_password_confirm id=new_password_confirm ng-model=change.new_password_confirm class=form-control type=password required></form-input><form-input data-title="\'\'" data-name="\'\'"><input class="btn btn-primary" id=submit name=submit type=submit value=\u4fee\u6539\u5bc6\u7801></form-input></div></div></form></div>');
    $templateCache.put('partial/profile/profile_iwx/profile_iwx.html', '<div ng-controller=ProfileIwxCtrl><div class=tabs-left><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'profile_iwx\'"><a ui-sref=profile_iwx>\u57fa\u672c\u4fe1\u606f</a></li><li d-sref="\'profile_iwx.change_password\'"><a ui-sref=profile_iwx.change_password>\u5bc6\u7801\u4fee\u6539</a></li></ul></div><div id=content><div ui-view><div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-3 col-sm-9 col-sm-offset-3 profile-panel"><form class=form-horizontal role=form enctype=multipart/form-data ng-submit=save_manager_info()><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7ba1\u7406\u5458\u4fe1\u606f</div></div><div class=panel-body><div class=form-group><label class="col-sm-2 control-label" for=email>\u90ae\u7bb1</label><div class=col-sm-9><input class=form-control id=email name=email readonly type=text ng-model=user.email></div></div><div class=form-group><label class="col-sm-2 control-label" for=nickname>\u6635\u79f0</label><div class=col-sm-9><input class=form-control id=nickname name=nickname type=text ng-model=user.nickname></div></div><div class=form-group><label class="col-sm-2 control-label" for=icon>\u5934\u50cf</label><div class=col-sm-9><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-new thumbnail" style="width: 378px"><img ng-src="{{user.icon.substring(0)}}?width=160&height=160"></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=icon data-file=user.icon></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></div></div></div><button class="btn btn-primary form-control form-submit-button" type=submit ng-disabled=save_info>\u4fdd\u5b58</button></div></form></div></div></div></div>');
    $templateCache.put('partial/profile/profile_university/change_password_university.html', '<div></div><div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-3 col-sm-9 col-sm-offset-3 profile-panel"><form ng-submit=changePassword() class=form-horizontal role=form name=changePasswordForm><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u4fee\u6539\u5bc6\u7801</div></div><div class=panel-body><form-input data-title="\'\u539f\u5bc6\u7801\'" data-name="\'password\'"><input name=email id=email ng-model=change.password class=form-control type=password required></form-input><form-input data-title="\'\u65b0\u5bc6\u7801\'" data-name="\'new_password\'"><input name=new_password id=new_password ng-model=change.new_password class=form-control type=password required></form-input><form-input data-title="\'\u518d\u6b21\u8f93\u5165\'" data-name="\'password\'"><input name=new_password_confirm id=new_password_confirm ng-model=change.new_password_confirm class=form-control type=password required></form-input><form-input data-title="\'\'" data-name="\'\'"><input class="btn btn-primary" id=submit name=submit type=submit value=\u4fee\u6539\u5bc6\u7801></form-input></div></div></form></div>');
    $templateCache.put('partial/profile/profile_university/profile_university.html', '<div ng-controller=ProfileUniCtrl><div class=tabs-left><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'profile_university\'"><a ui-sref=profile_university>\u57fa\u672c\u4fe1\u606f</a></li><li d-sref="\'profile_university.change_password\'"><a ui-sref=profile_university.change_password>\u5bc6\u7801\u4fee\u6539</a></li></ul></div><div id=content><div ui-view><div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-3 col-sm-9 col-sm-offset-3 profile-panel"><form class=form-horizontal role=form enctype=multipart/form-data ng-submit=save_manager_info()><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7ba1\u7406\u5458\u4fe1\u606f</div></div><div class=panel-body><div class=form-group><label class="col-sm-2 control-label" for=email>\u90ae\u7bb1</label><div class=col-sm-9><input class=form-control id=email name=email readonly type=text ng-model=user.email></div></div><div class=form-group><label class="col-sm-2 control-label" for=nickname>\u6635\u79f0</label><div class=col-sm-9><input class=form-control id=nickname name=nickname type=text readonly ng-model=user.nickname></div></div><div class=form-group><label class="col-sm-2 control-label" for=icon>\u5934\u50cf</label><div class=col-sm-9><div class="fileinput fileinput-new" data-provides=fileinput><div class="fileinput-new thumbnail" style="width: 378px"><img ng-src="{{user.icon.substring(0)}}?width=160&height=160"></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u9009\u62e9\u7167\u7247</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=icon data-file=user.icon></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div></div></div></div><button class="btn btn-primary form-control form-submit-button" type=submit>\u4fdd\u5b58</button></div></form></div></div></div></div>');
    $templateCache.put('partial/role/super/app_version_manage_super.html', '<div ng-controller=VerManageSuCtrl><div class=row ng-show=versionList><center><h1><font ng-bind=note></font></h1></center></div><div class=row ng-hide=versionList><br><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="version in $data"><td data-title="\'\u7248\u672c\u53f7\'" header-class=text-left><font ng-bind=version.version_num></font></td><td data-title="\'\u521b\u5efa\u65f6\u95f4\'" header-class=text-left><font ng-bind="version.create_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u7248\u672c\u7b80\u4ecb\'" header-class=text-left><textarea ng-bind=version.describe style=width:100%;border-radius:4px;padding:10px;resize:none rows=6 ng-disabled=true></textarea></td><td data-title="\'URL\u5730\u5740\'" header-class=text-left><font ng-bind=version.version_url></font></td></tr></tbody></table></div></div>');
    $templateCache.put('partial/role/super/app_version_manage_super_detail.html', '<div ng-controller=VerManageDetCtrl><div class=row><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref=version_manage_super.app><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div></div><div class=row><form class=form-horizontal name=versionForm><fieldset><legend><h4>\u53d1\u5e03\u65b0\u7248\u672c</h4></legend><div class=row><div class=form-group><label class="col-sm-2 control-label" for=version>\u7248\u672c\u53f7</label><div class=col-sm-8><input class=form-control type=text name=version ng-model=version.version placeholder=\u8981\u53d1\u5e03\u7684\u7248\u672c\u53f7 ng-pattern="/^[A-Za-z0-9_|\\-|\\.]+$/" required><div ng-show="versionForm.version.$invalid && versionForm.version.$dirty" class=form-error>*\u8bf7\u6b63\u786e\u586b\u5199\u8981\u53d1\u5e03\u7684\u7248\u672c\u53f7\uff0c\u7248\u672c\u53f7\u53ef\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u201c.\u201d\u3001\u201c-\u201d\u6216\u201c_\u201d\u7ec4\u6210</div></div></div></div><div class=row><div class=form-group><label class="col-sm-2 control-label" for=url>URL\u5730\u5740</label><div class=col-sm-8><input class=form-control type=text name=url ng-model=version.url placeholder=\u53ef\u4f9b\u4e0b\u8f7d\u7684URL\u5730\u5740 ng-pattern="/^https{0,1}:\\/\\//" required><div ng-show="versionForm.url.$invalid && versionForm.url.$dirty" class=form-error>*\u8bf7\u6b63\u786e\u586b\u5199\u53ef\u4f9b\u4e0b\u8f7d\u7684URL\u5730\u5740</div></div></div></div><div class=row><div class=form-group><label class="col-sm-2 control-label" for=describe>\u7248\u672c\u7b80\u4ecb</label><div class=col-sm-8><textarea class=form-control name=describe placeholder=\u8981\u53d1\u5e03\u7684\u7248\u672c\u7b80\u4ecb rows=8 ng-model=version.describe required></textarea><div ng-show="versionForm.describe.$invalid && versionForm.describe.$dirty" class=form-error>*\u8bf7\u586b\u5199\u8981\u53d1\u5e03\u7684\u7248\u672c\u7b80\u4ecb</div></div></div></div><div class=row><center><button class="btn btn-default" ng-click=publish() ng-disabled=versionForm.$invalid>\u53d1&nbsp;&nbsp;\u5e03</button></center></div></fieldset></form></div></div>');
    $templateCache.put('partial/role/super/role_manage_super.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=RoleManageSuperCtrl><div class=row><nav class="navbar navbar-inverse" style="background-color: rgb(219, 218, 218)" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li d-sref="\'role_manage_super\'"><a ui-sref=role_manage_super>\u89d2\u8272\u5217\u8868</a></li><li d-sref="\'role_manage_super.user\'"><a ui-sref="role_manage_super.user({manager_type: 3})">\u7528\u6237\u5217\u8868</a></li><li d-sref="\'role_manage_super.create_user\'"><a ui-sref=role_manage_super.create_user>\u65b0\u5efa\u7528\u6237</a></li></ul></div></nav></div><div id=content ui-view><div class=row><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="role in $data"><td data-title="\'\u7f16\u53f7\'" style=text-align:center><font ng-bind="$index + 1"></font></td><td data-title="\'\u89d2\u8272\u540d\u79f0\'" style=text-align:center><a ng-click=user_list(role.id)><font ng-bind=roles_table[role.name]></font></a></td><td data-title="\'\u89d2\u8272\u63cf\u8ff0\'" style=text-align:center><textarea ng-bind=role.description style=width:100%;border-radius:4px;padding:10px;resize:none rows=6 ng-disabled=true></textarea></td><td data-title="\'\u6570\u91cf\'" style=text-align:center><a ng-click=user_list(role.id)><font ng-bind=role.count></font></a></td></tr></tbody></table></div></div></div>');
    $templateCache.put('partial/role/super/role_manage_super_create_user.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=RoleManageSuperCtrl><form class=form-horizontal name=userForm ng-submit=create_user() novalidate><div class=form-group><label class="col-md-1 control-label" style=padding-top:5px for=username>\u7528\u6237\u540d\u79f0</label><div class=col-md-8><input type=text class=form-control id=username ng-model=user.username placeholder=\u8bf7\u8f93\u5165\u7528\u6237\u540d\u79f0\uff0c\u957f\u5ea6\u81f3\u5c11\u4e3a3\u7684\u6c49\u5b57\u6216\u5b57\u6bcd\uff0c\u6216\u6570\u5b57\uff0c\u4e0b\u5212\u7ebf\u7684\u7ec4\u5408 regexp=regexp_username ng-blur> <span aria-hidden=true></span></div></div><div class=form-group><label class="col-md-1 control-label" style=padding-top:5px for=username>\u7528\u6237\u90ae\u7bb1</label><div class=col-md-8><input type=email class=form-control id=username ng-model=user.email placeholder=\u8bf7\u8f93\u5165\u7528\u6237\u90ae\u7bb1 regexp=regexp_email ng-blur> <span aria-hidden=true></span></div></div><div class=form-group><label class="col-md-1 control-label" style=padding-top:5px for=password>\u521d\u59cb\u5bc6\u7801</label><div class=col-md-8><input type=password class=form-control id=password placeholder=\u8bf7\u8f93\u5165\u521d\u59cb\u5bc6\u7801\uff0c\u957f\u5ea6\u4e3a6-18\u7684\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u6216\u5b57\u6bcd\uff0c\u6570\u5b57\uff0c\u4e0b\u5212\u7ebf\u7684\u7ec4\u5408 name=password regexp=regexp_password ng-model=user.password ng-blur> <span aria-hidden=true></span></div></div><div class=form-group><label class="col-md-1 control-label" style=padding-top:5px for=confirmPassword>\u786e\u8ba4\u5bc6\u7801</label><div class=col-md-8><input type=password class=form-control id=confirmPassword name=rePassword password=user.password ng-model=user.rePassword regexp=regexp_password placeholder=\u8bf7\u518d\u6b21\u8f93\u5165\u521d\u59cb\u5bc6\u7801\uff0c\u5e76\u786e\u4fdd\u4e24\u6b21\u5bc6\u7801\u8f93\u5165\u4e00\u81f4 ng-repassword> <span aria-hidden=true></span></div></div><div class=form-group><label class="col-md-1 control-label" style=padding-top:5px for=role>\u7528\u6237\u7c7b\u578b</label><div class=col-md-4><select class=form-control name=role_scope id=role_scope ng-model=user.role_scope ng-options="r.name for r in roleArray"></select></div></div><div class="col-md-8 col-md-offset-4"><button type=submit class="btn btn-info">\u65b0\u5efa</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <button type=button class="btn btn-info" ng-click=cancel() ng-reset>\u53d6\u6d88</button></div></form></div>');
    $templateCache.put('partial/role/super/role_manage_super_scope.html', '<div class=modal-header><h4 class=modal-title>\u7528\u6237\u7ba1\u7406\u8303\u56f4</h4></div><div class=modal-body><div class=row><div class=col-md-12><form class=form-horizontal><fieldset><legend><h4>\u6dfb\u52a0\u7ba1\u7406\u5b66\u6821</h4></legend><div class=row><div class=col-md-6><form-input data-title="\'\u7701\'" data-name="\'province\'"><select name=province_scope id=province_scope class=form-control ng-init=provinceArray[0].id ng-model=user.province_scope_id ng-options="r.id as r.city for r in provinceArray" ng-change=change_province()></select></form-input></div><div class=col-md-6><form-input data-title="\'\u5e02\'" data-name="\'city\'"><select class=form-control name=city_scope id=city_scope ng-model=user.city_scope_id ng-options="r.id as r.city for r in cityArray" ng-change=change_city()></select></form-input></div></div><div class=row><div class=col-md-3 ng-repeat="university in universitys"><input type=checkbox ng-model=choose_item ng-checked=choose_all ng-click="choose_university(university.id, choose_item)" ng-disabled="university_hash[university.id]"> {{university.name}}</div></div><div class=row ng-show=more_university><div class="col-md-2 col-md-offset-4"><br><button class="btn btn-default center-block more-btn" ng-click=load_more_university()>\u52a0\u8f7d\u66f4\u591a\u5b66\u6821</button><br></div></div><div class=row ng-show=more_university><div class=col-md-2 style=text-align:center><div class=checkbox><label><input type=checkbox ng-model=choose_all ng-click=choose_universitys(choose_all)> \u5168\u9009</label></div></div></div></fieldset></form><br></div></div><div class=row><div class=col-md-12><form class=form-horizontal><fieldset><legend><h4>\u5df2\u6dfb\u52a0\u5b66\u6821</h4></legend><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="university in $data"><td data-title="\'\u7f16\u53f7\'" style=text-align:center><font ng-bind="$index + 1"></font></td><td data-title="\'\u5b66\u6821\'" style=text-align:center><font ng-bind=university.university.name></font></td><td data-title="\'\u6240\u5c5e\u5730\'" style=text-align:center><font ng-bind=university.geography.city></font></td><td data-title="\'\u64cd\u4f5c\'" style=text-align:center><label type=button class="btn btn-danger btn-checkbox" ng-click="delete_university(university.id, university.university_id)"><span>\u5220\u9664</span></label></td></tr></tbody></table></fieldset></form></div></div></div><div class=modal-footer><button type=button class="btn btn-info" data-dismiss=modal ng-click=add_university();>\u6dfb\u52a0</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u5173\u95ed</span></button></div>');
    $templateCache.put('partial/role/super/role_manage_super_user.html', '<div class="col-sm-12 col-md-12 col-lg-12" ng-controller=RoleManageSuperUserCtrl><div class=row><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="user in $data"><td data-title="\'\u7f16\u53f7\'" style=text-align:center><font ng-bind="$index + 1"></font></td><td data-title="\'\u7528\u6237\u540d\u79f0\'" style=text-align:center><div ng-if="user.role.name === \'IWX_ADMIN\'"><a ng-click=update_user(user)><font ng-bind=user.nickname></font></a></div><div ng-if="!(user.role.name === \'IWX_ADMIN\')"><font ng-bind=user.nickname></font></div></td><td data-title="\'\u7528\u6237\u89d2\u8272\'" style=text-align:center><font ng-bind=roles_table[user.role.name]></font></td><td data-title="\'\u7528\u6237\u90ae\u7bb1\'" style=text-align:center><font ng-bind=user.email></font></td><td data-title="\'\u521b\u5efa\u65f6\u95f4\'" style=text-align:center><font ng-bind="user.confirmed_at | date: \'yyyy-MM-dd HH:mm\'"></font></td><td id=operation data-title="\'\u64cd\u4f5c\'" style=text-align:center><label type=button class="btn btn-info btn-checkbox" ng-click=manage_scope(user) ng-if="user.role.name === \'IWX_ADMIN\'"><span>\u7ba1\u7406\u8303\u56f4</span></label><label type=button class="btn btn-danger btn-checkbox" ng-click=delete_user(user.id) ng-if="user.role.name === \'IWX_ADMIN\'" ng-disabled=true><span>\u5220\u9664</span></label></td></tr></tbody></table></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button> <button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button></div></div></div></div></div>');
    $templateCache.put('partial/role/super/role_manage_super_user_info.html', '<div class=modal-header><h4 class=modal-title>\u7528\u6237\u4fe1\u606f</h4></div><div class=modal-body><form class=form-horizontal name=userForm novalidate><div class=form-group><label class="col-md-2 control-label" style=padding-top:5px for=username>\u7528\u6237\u540d\u79f0</label><div class=col-md-10><input type=text class=form-control id=username ng-model=user_info.username placeholder=\u8bf7\u8f93\u5165\u7528\u6237\u540d\u79f0\uff0c\u957f\u5ea6\u81f3\u5c11\u4e3a3\u7684\u6c49\u5b57\u6216\u5b57\u6bcd\uff0c\u6216\u6570\u5b57\uff0c\u4e0b\u5212\u7ebf\u7684\u7ec4\u5408 regexp=regexp_username ng-blur> <span aria-hidden=true></span></div></div><div class=form-group><label class="col-md-2 control-label" style=padding-top:5px for=mail>\u7528\u6237\u90ae\u7bb1</label><div class=col-md-10><input type=email class=form-control id=mail ng-model=user_info.mail placeholder=\u8bf7\u8f93\u5165\u7528\u6237\u90ae\u7bb1 regexp=regexp_email ng-blur> <span aria-hidden=true></span></div></div><div class=form-group><label class="col-md-2 control-label" style=padding-top:5px for=password>\u521d\u59cb\u5bc6\u7801</label><div class=col-md-10><input type=password class=form-control id=password placeholder=\u957f\u5ea6\u4e3a6-18\u7684\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u6216\u5b57\u6bcd\uff0c\u6570\u5b57\uff0c\u4e0b\u5212\u7ebf\u7684\u7ec4\u5408 name=password regexp=regexp_password ng-model=user_info.password ng-blur> <span aria-hidden=true></span></div></div><div class=form-group><label class="col-md-2 control-label" style=padding-top:5px for=confirmPassword>\u786e\u8ba4\u5bc6\u7801</label><div class=col-md-10><input type=password class=form-control id=confirmPassword name=rePassword password=user_info.password ng-model=user_info.rePassword regexp=regexp_password placeholder=\u8bf7\u786e\u4fdd\u4e24\u6b21\u5bc6\u7801\u8f93\u5165\u4e00\u81f4 ng-repassword> <span aria-hidden=true></span></div></div></form></div><div class=modal-footer><button type=button class="btn btn-info" data-dismiss=modal ng-click=update_user();>\u4fee\u6539</button> <button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u53d6\u6d88</span></button></div>');
    $templateCache.put('partial/role/super/version_manage_super.html', '<div><div class=row><div class="btn-group pull-right" role=group><button class="btn btn-info" ng-click="publishVersion(\'editor\')">\u7f16\u8f91\u5668\u53d1\u5e03</button> <button class="btn btn-info" ng-click="publishVersion(\'app\')">App\u53d1\u5e03</button></div></div><br><div class=row><nav class="navbar navbar-inverse" style="background-color: rgb(219, 218, 218)" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li d-sref="\'version_manage_super\'"><a ui-sref=version_manage_super>\u7f16\u8f91\u5668\u7248\u672c</a></li><li d-sref="\'version_manage_super.app\'"><a ui-sref=version_manage_super.app>app\u7248\u672c</a></li></ul></div></nav></div><div ui-view><div ng-controller=VerManageSuCtrl><div class=row ng-show=versionList><center><h1><font ng-bind=note></font></h1></center></div><div class=row ng-hide=versionList><br><table ng-table=tableParams class="table table-striped table-responsive"><tbody><tr ng-repeat="version in $data"><td data-title="\'\u7248\u672c\u53f7\'" header-class=text-left><font ng-bind=version.version_num></font></td><td data-title="\'\u521b\u5efa\u65f6\u95f4\'" header-class=text-left><font ng-bind="version.create_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u7248\u672c\u6807\u9898\'" header-class=text-left><font ng-bind=version.version_url></font></td><td data-title="\'\u7248\u672c\u7b80\u4ecb\'" header-class=text-left><textarea ng-bind=version.describe style=width:100%;border-radius:4px;padding:10px;resize:none rows=6 ng-disabled=true></textarea></td></tr></tbody></table></div></div></div></div>');
    $templateCache.put('partial/role/super/version_manage_super_detail.html', '<div ng-controller=VerManageDetCtrl><div class=row><div class=activity-button-bar><div class=btn-group><a class="btn btn-default" ui-sref=version_manage_super><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div></div><div class=row><form class=form-horizontal name=versionForm><fieldset><legend><h4>\u53d1\u5e03\u65b0\u7248\u672c</h4></legend><div class=row><div class=form-group><label class="col-sm-2 control-label" for=version>\u7248\u672c\u53f7</label><div class=col-sm-8><input class=form-control type=text name=version ng-model=version.version placeholder=\u8981\u53d1\u5e03\u7684\u7248\u672c\u53f7 ng-pattern="/^[A-Za-z0-9_|\\-|\\.]+$/" required><div ng-show="versionForm.version.$invalid && versionForm.version.$dirty" class=form-error>*\u8bf7\u6b63\u786e\u586b\u5199\u8981\u53d1\u5e03\u7684\u7248\u672c\u53f7\uff0c\u7248\u672c\u53f7\u53ef\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u201c.\u201d\u3001\u201c-\u201d\u6216\u201c_\u201d\u7ec4\u6210</div></div></div></div><div class=row><div class=form-group><label class="col-sm-2 control-label" for=title>\u7248\u672c\u6807\u9898</label><div class=col-sm-8><input class=form-control type=text name=title ng-model=version.title placeholder=\u8981\u53d1\u5e03\u7684\u7248\u672c\u6807\u9898 required><div ng-show="versionForm.title.$invalid && versionForm.title.$dirty" class=form-error>*\u8bf7\u586b\u5199\u8981\u53d1\u5e03\u7684\u7248\u672c\u6807\u9898</div></div></div></div><div class=row><div class=form-group><label class="col-sm-2 control-label" for=describe>\u7248\u672c\u7b80\u4ecb</label><div class=col-sm-8><textarea class=form-control name=describe placeholder=\u8981\u53d1\u5e03\u7684\u7248\u672c\u7b80\u4ecb rows=8 ng-model=version.describe required></textarea><div ng-show="versionForm.describe.$invalid && versionForm.describe.$dirty" class=form-error>*\u8bf7\u586b\u5199\u8981\u53d1\u5e03\u7684\u7248\u672c\u7b80\u4ecb</div></div></div></div><div class=row><center><button class="btn btn-default" ng-click=publish() ng-disabled=versionForm.$invalid>\u53d1&nbsp;&nbsp;\u5e03</button></center></div></fieldset></form></div></div>');
    $templateCache.put('partial/screen/refuse_reason.html', '<div class=modal-header><h3 class=modal-title>\u62d2\u7edd\u7406\u7531</h3></div><div class=modal-body><div class=row><div class=col-sm-12><p><font ng-bind=content></font></p></div></div></div><div class=modal-footer><button class="btn btn-default" ng-click=cancel()>\u5173&nbsp;\u95ed</button></div>');
    $templateCache.put('partial/screen/screen_edit.html', '<div class="col-lg-offset-3 md-offset-3 col-sm-offset-3 col-lg-9 col-md-9 col-sm-9" ng-controller=ScreenEditCtrl><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><a class="btn btn-default" ui-sref="screen({ page: page})"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><br><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><form method=POST ng-submit=save() class=form-horizontal role=form name=screenForm enctype=multipart/form-data><div class="panel panel-info"><div class="panel panel-heading"><div class=panel-title><font ng-bind=screenInfo></font></div></div><div class=panel-body><form-input data-title="\'\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=screen.landscape_poster class="fileinput-new thumbnail" style=width:300px;height:170px><img ng-src="{{server + screen.landscape_poster.substring(0)}}" image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><span class="btn btn-default btn-file"><span class=fileinput-new>\u672c\u5730\u4e0a\u4f20</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=landscape_poster data-file=screen.landscape_poster id=image_file></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div>&nbsp;&nbsp;&nbsp;<span><a ng-click="showDemo(\'/static/images/H-01.jpg\', \'landscape_poster\')">\u67e5\u770b\u793a\u4f8b</a></span><div>\u5206\u8fa8\u7387\uff1a1920*1080 72ppi\u4ee5\u4e0a</div></form-input><form-input data-title="\'\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=screen.portrait_poster class="fileinput-new thumbnail" style=width:170px;height:300px><img ng-src="{{server + screen.portrait_poster.substring(0)}}" image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div ng-show="user.role.name === \'ADMIN\' || user.role.name === \'USER\'"><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom><span class=fileinput-new>\u672c\u5730\u4e0a\u4f20</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=portrait_poster data-file=screen.portrait_poster id=image_file></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div>&nbsp;&nbsp;&nbsp;<span><a ng-click="showDemo(\'/static/images/W-01.jpg\', \'portrait_poster\')">\u67e5\u770b\u793a\u4f8b</a></span><div>\u5206\u8fa8\u7387\uff1a1080*1920 72ppi\u4ee5\u4e0a</div></form-input><form-input data-title="\'\u5c55\u677f\u9879\u76ee\u540d\u79f0\'" data-name="\'title\'"><input class=form-control ng-model=screen.title placeholder=\u8bf7\u5c06\u9879\u76ee\u540d\u79f0\u9650\u5236\u572830\u4e2a\u5b57\u7b26\u4ee5\u5185 maxlength="30"></form-input><form-input data-title="\'\u9884\u8ba1\u5c55\u51fa\u65f6\u95f4\'" data-name="\'start_time\'"><datetimepicker datetime=screen.start_time starttime=screen.current></datetimepicker></form-input><form-input data-title="\'\u8ba1\u5212\u7ed3\u675f\u65f6\u95f4\'" data-name="\'end_time\'"><datetimepicker datetime=screen.end_time starttime=screen.start_time></datetimepicker></form-input></div></div><button class="btn btn-info form-control" type=submit>\u63d0&nbsp;&nbsp;\u4ea4</button></form></div></div></div>');
    $templateCache.put('partial/screen/screen_list.html', '<div><div class="tabs-left hidden-print"><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'screen\'"><a ui-sref="screen({ page: 1})">\u5185\u5bb9\u7ba1\u7406</a></li></ul></div><div ui-view><div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=ScreenCtrl><div class=row><div class="col-sm-12 col-md-12 col-lg-12"><button class="btn btn-info pull-right" ng-click=createScreen()><i class="fa fa-plus"></i>&nbsp;\u65b0\u5efa\u5c55\u677f</button></div></div><br><div class=row><div class="col-sm-12 col-md-12 col-lg-12"><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="screen in $data"><td data-title="\'\u5c55\u677f\u540d\u79f0\'" header-class=text-left><font ng-bind=screen.title></font></td><td data-title="\'\u5c55\u677f\u64ad\u51fa\u65f6\u95f4\'" header-class=text-left><div ng-if="screen.application_status === \'APPROVED\'"><font ng-bind="screen.approved_start_time | date: \'yyyy-MM-dd HH:mm\'"></font> ~ <font ng-bind="screen.approved_end_time | date: \'yyyy-MM-dd HH:mm\'"></font></div><span class="label label-warning" ng-if="screen.application_status === \'PENDING\'">\u5f85\u5ba1\u6838</span> <span class="label label-danger" ng-if="screen.application_status === \'DECLINED\'">\u5df2\u62d2\u7edd</span></td><td data-title="\'\u5c55\u677f\u7533\u8bf7\u72b6\u6001\'" header-class=text-left><span class="label label-success" ng-if="screen.application_status === \'APPROVED\'">\u5df2\u901a\u8fc7</span> <span class="label label-warning" ng-if="screen.application_status === \'PENDING\'">\u5f85\u5ba1\u6838</span> <span class="label label-danger" ng-if="screen.application_status === \'DECLINED\'">\u5df2\u62d2\u7edd</span> <a ng-click=refuseReason(screen) ng-if="screen.application_status === \'DECLINED\'">&nbsp;\u67e5\u770b\u539f\u56e0</a></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info btn-checkbox" ng-click=applyScreen(screen) ng-if="screen.application_status === \'DECLINED\'"><span>\u518d\u6b21\u7533\u8bf7</span></label><span ng-if="screen.status === \'DECLINED\'">&nbsp;</span></td></tr></tbody></table><div ng-if="total === 0"><p style="text-align: center"><br><font style="font-weight: bold" size=5 color=#cccccc>\u70b9\u51fb\u201c\u65b0\u5efa\u5c55\u677f\u201d\u7533\u8bf7\u7b2c\u4e00\u4e2a\u7535\u5b50\u5c55\u677f</font></p></div></div></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button> <button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button></div></div></div></div></div></div></div>');
    $templateCache.put('partial/screen/university/device/device_exception.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=DeviceExceptionCtrl><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li><a ui-sref=terminal_university.device>\u6b63\u5e38\u8fd0\u884c</a></li><li class=active><a ui-sref=terminal_university.device_exception>\u5f02\u5e38\u8bbe\u5907</a></li></ul></div></nav></div></div><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><span class="label label-info"><font ng-bind=deviceInfo></font></span></div></div></div>');
    $templateCache.put('partial/screen/university/device/device_normal.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=DeviceNormalCtrl><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li class=active><a ui-sref=terminal_university.device>\u6b63\u5e38\u8fd0\u884c</a></li><li><a ui-sref=terminal_university.device_exception>\u5f02\u5e38\u8bbe\u5907</a></li></ul></div></nav></div></div><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><span class="label label-info"><font ng-bind=deviceInfo></font></span></div></div></div>');
    $templateCache.put('partial/screen/university/schedule.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=DisplayListCtrl><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li class=active><a ui-sref="terminal_university.schedule({page: 1})">\u64ad\u653e\u5217\u8868</a></li><li><a ui-sref="terminal_university.source({page: 1})">\u7d20\u6750\u5e93</a></li><li><a ui-sref="terminal_university.display_log({page: 1})">\u63d2\u64ad\u65e5\u5fd7</a></li></ul><ul class="nav navbar-nav pull-right"><li><a ui-sref="terminal_university.inter_cut({page: currentPage, router: \'schedule\'})"><i class="fa fa-edit" aria-hidden=true></i>&nbsp;\u63d2\u64ad</a></li></ul></div></nav></div></div><div class=row><div class="col-lg-9 col-md-9 col-sm-9"><button class="btn btn-info" ng-click=displaying(auth_token)><i class="fa fa-list" aria-hidden=true></i> \u64ad\u653e\u4e2d</button></div><div class="col-lg-3 col-md-3 col-sm-3"><button ng-if="total === 0" class="btn btn-info pull-right" ng-click=editDisplayList()><i class="fa fa-plus"></i> \u65b0\u5efa\u64ad\u653e\u5217\u8868</button> <button ng-if="total !== 0" class="btn btn-info pull-right" ng-click=editDisplayList()><i class="fa fa-edit"></i> \u66f4\u65b0\u64ad\u653e\u5217\u8868</button></div></div><br><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><div><table class="table table-striped table-responsive"><thead><th>\u5c55\u677f\u540d\u79f0</th><th>\u6a2a\u5411\u5c55\u677f</th><th>\u7acb\u5f0f\u5c55\u677f</th><th>\u7533\u8bf7\u7ec4\u7ec7</th><th>\u64ad\u653e\u7b49\u7ea7</th><th>\u5269\u4f59\u65f6\u95f4</th><th>\u64cd\u4f5c</th></thead><tbody><tr ng-repeat="screen in screens"><td header-class=text-left><font ng-bind=screen.content.title></font></td><td header-class=text-left><div class=thumbnail style="width: 100px;height: 57px"><img ng-src="{{server + screen.content.landscape_poster}}?width=100&height=57" ng-click="viewImage(server + screen.content.landscape_poster)" style="width: 100%;height: 100%" image-fixed></div></td><td header-class=text-left><div class=thumbnail style="width: 57px;height: 100px"><img ng-src="{{server + screen.content.portrait_poster}}?width=57&height=100" ng-click="viewImage(server + screen.content.portrait_poster)" style="width: 100%;height: 100%" image-fixed></div></td><td header-class=text-left><font ng-bind=screen.content.author_name></font></td><td header-class=text-left><font ng-bind=screen.play_priority.name></font></td><td header-class=text-left><font ng-bind=screen.days_left></font></td><td header-class=text-left style="width: 160px"><label type=button class="btn btn-info" ng-click="updDisplayLevel(screen.content, screen.play_priority, auth_token)"><span><i class="fa fa-edit" aria-hidden=true></i> \u4fee\u6539\u64ad\u653e\u7b49\u7ea7</span></label><label type=button class="btn btn-danger" ng-click=remove(screen.content) style="margin-top: 5px"><span><i class="fa fa-trash-o" aria-hidden=true></i>&nbsp;&nbsp;\u4ece\u5217\u8868\u4e2d\u79fb\u9664</span></label></td></tr></tbody></table></div><div ng-if="screens.length === 0"><p style="text-align: center"><br><font style="font-weight: bold" size=5 color=#cccccc>\u53ef\u4ece\u7d20\u6750\u5e93\u6dfb\u52a0</font></p></div></div></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button> <button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button></div></div></div></div></div>');
    $templateCache.put('partial/screen/university/schedule/add_display_level.html', '<div class=modal-header><h3 class=modal-title>\u6dfb\u52a0\u5230\u64ad\u653e\u5217\u8868</h3></div><div class=modal-body><div class=row><div class=col-sm-12><form class=form-horizontal role=form name=displayForm><form-input data-title="\'\u8bbe\u7f6e\u64ad\u653e\u7b49\u7ea7\'" data-name="\'display_level\'"><select name=level id=level class=form-control ng-model=param.priority_id ng-options="r.id as r.name for r in levelArray"></select></form-input></form></div></div></div><div class=modal-footer><button class="btn btn-info" ng-click=ok() ng-disabled=btnOk>\u786e&nbsp;\u5b9a</button> <button class="btn btn-default" ng-click=cancel()>\u5173&nbsp;\u95ed</button></div>');
    $templateCache.put('partial/screen/university/schedule/create_level.html', '<div class=modal-header><h3 class=modal-title>\u65b0\u5efa\u64ad\u653e\u7b49\u7ea7</h3></div><div class=modal-body><div class=row><div class=col-sm-12><form class=form-horizontal role=form name=levelForm><form-input data-title="\'\u7b49\u7ea7\u540d\u79f0\'" data-name="\'name\'"><input class=form-control ng-model=level.name maxlength="10"></form-input><div class=form-group><label class="col-sm-3 control-label" for=name>\u64ad\u653e\u65f6\u95f4</label><div class=col-sm-5><div class=input-group><input type=number class=form-control ng-model=level.length step=15 min="15"> <span class=input-group-addon>\u79d2</span></div><div ng-if=error class=form-error>* \u64ad\u653e\u65f6\u95f4\u4e0d\u80fd\u5c11\u4e8e15\u79d2</div></div></div></form></div></div></div><div class=modal-footer><button class="btn btn-info" ng-click=ok() ng-disabled=btnOk>\u786e&nbsp;\u5b9a</button> <button class="btn btn-default" ng-click=cancel()>\u5173&nbsp;\u95ed</button></div>');
    $templateCache.put('partial/screen/university/schedule/display_list_edit.html', '<div class=modal-header><h3 class=modal-title><font ng-bind=modalTitle></font></h3></div><div class=modal-body><div class=row><div class="col-xs-5 col-sm-5 col-md-5"><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u7535\u5b50\u5c55\u677f</div></div><div class=panel-body style="height: 360px;overflow-y: auto"><div class=row style="margin-top: 10px" ng-repeat="screen in sourceScreens"><div class=col-sm-12><label type=button class="btn btn-default btn-checkbox" ng-click=choseScreen(screen) style="width: 100%;padding: 10px" chosen-status=screen.chosen chosen><span><font ng-bind="screen.title  | substr: 16 : 15" title={{screen.title}}></font></span></label></div></div><div class=row><div class=col-sm-12><div ng-if=!message><br><button class="btn btn-default center-block more-btn" ng-click=getMoreScreens() ng-disabled=btn><font ng-bind=loadBtn></font></button><br></div><div style="font-weight: bold;color: silver;padding: 20px 0px 20px 0px" ng-if=message><font ng-bind=loadMsg></font></div></div></div></div></div></div></div></div><div class="col-xs-1 col-sm-1 col-md-1"><div class=row style="margin-top: 100px"><div class=col-sm-12><button class="btn btn-info btn-lg" ng-click=addToDisList() ng-disabled="sourScreenChosen.length === 0"><i class="fa fa-arrow-right" aria-hidden=true></i></button></div></div><br><div class=row><div class=col-sm-12><button class="btn btn-info btn-lg" ng-click=removeFromDisList() ng-disabled="disScreenChosen.length === 0"><i class="fa fa-arrow-left" aria-hidden=true></i></button></div></div></div><div class="col-xs-6 col-sm-6 col-md-6"><div class=row><div class="col-xs-12 col-sm-12 col-md-12"><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u64ad\u653e\u5217\u8868</div></div><div class=panel-body style="height: 360px;overflow-y: auto"><div class=row style="margin-top: 10px" ng-repeat="screen in displayScreens"><div class=col-sm-8><label type=button class="btn btn-default btn-checkbox" ng-click=choseDisplayScreen(screen.content) style="width: 100%;padding: 10px" ng-disabled=screen.content.isDisabled chosen-status=screen.content.chosen chosen><span><font ng-bind="screen.content.title  | substr: 11 : 10" title={{screen.content.title}}></font></span></label></div><div class=col-sm-4><select class=form-control ng-model=screen.play_priority.id ng-options="level.id as level.name for level in levels" style="margin-top: 3px" ng-change="selectLevel(screen.content.id, screen.play_priority.id, screen.content.isDisabled)"></select></div></div></div></div></div></div></div></div></div><div class=modal-footer><button class="btn btn-info" ng-click=update()>\u786e&nbsp;\u5b9a</button> <button class="btn btn-default" ng-click=close()>\u53d6&nbsp;\u6d88</button></div>');
    $templateCache.put('partial/screen/university/schedule/display_log.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=DisplayLogCtrl><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li><a ui-sref="terminal_university.schedule({page: 1})">\u64ad\u653e\u5217\u8868</a></li><li><a ui-sref="terminal_university.source({page: 1})">\u7d20\u6750\u5e93</a></li><li class=active><a ui-sref="terminal_university.display_log({page: 1})">\u63d2\u64ad\u65e5\u5fd7</a></li></ul><ul class="nav navbar-nav pull-right"><li><a ui-sref="terminal_university.inter_cut({page: currentPage, router: \'display_log\'})"><i class="fa fa-edit" aria-hidden=true></i>&nbsp;\u63d2\u64ad</a></li></ul></div></nav></div></div><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="screen in $data"><td data-title="\'\u5c55\u677f\u540d\u79f0\'" header-class=text-left><font ng-bind=screen.content.title></font></td><td data-title="\'\u6a2a\u5411\u5c55\u677f\'" header-class=text-left><div class=thumbnail style="width: 100px;height: 57px"><img ng-src="{{server + screen.content.landscape_poster}}?width=100&height=57" ng-click="viewImage(server + screen.content.landscape_poster)" style="width: 100%;height: 100%" image-fixed></div></td><td data-title="\'\u7acb\u5f0f\u5c55\u677f\'" header-class=text-left><div class=thumbnail style="width: 57px;height: 100px"><img ng-src="{{server + screen.content.portrait_poster}}?width=57&height=100" ng-click="viewImage(server + screen.content.portrait_poster)" style="width: 100%;height: 100%" image-fixed></div></td><td data-title="\'\u63d2\u64ad\u65f6\u95f4\'" header-class=text-left><font ng-bind="screen.timestamp | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u64ad\u653e\u7b49\u7ea7\'" header-class=text-left style="width: 80px"><font ng-bind=screen.priority.name></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left><label type=button class="btn btn-info" ng-click="interCut(screen.content, auth_token)"><span><i class="fa fa-play-circle" aria-hidden=true></i> \u518d\u6b21\u63d2\u64ad</span></label></td></tr></tbody></table></div></div></div>');
    $templateCache.put('partial/screen/university/schedule/displaying.html', '<div class=modal-header><h3 class=modal-title>\u6b63\u5728\u64ad\u653e\u7684\u5c55\u677f</h3></div><div class=modal-body><div class=row><div class=col-sm-12><table class="table table-striped table-responsive"><thead><th>\u5c55\u677f\u540d\u79f0</th><th>\u6a2a\u5411\u5c55\u677f</th><th>\u7acb\u5f0f\u5c55\u677f</th><th>\u7533\u8bf7\u7ec4\u7ec7</th></thead><tbody><tr ng-repeat="screen in screens"><td header-class=text-left><font ng-bind=screen.title></font></td><td header-class=text-left><div class=thumbnail style="width: 100px;height: 57px"><img ng-src="{{server + screen.landscape_poster}}?width=100&height=57" style="width: 100%;height: 100%" image-fixed></div></td><td header-class=text-left><div class=thumbnail style="width: 57px;height: 100px"><img ng-src="{{server + screen.portrait_poster}}?width=57&height=100" style="width: 100%;height: 100%" image-fixed></div></td><td header-class=text-left><font ng-bind=screen.region.name></font></td></tr></tbody></table></div></div></div><div class=modal-footer><button class="btn btn-default" ng-click=cancel()>\u5173\u95ed</button></div>');
    $templateCache.put('partial/screen/university/schedule/inter_cut.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=InterCutCtrl><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><a class="btn btn-default" ui-sref="terminal_university.schedule({ page: page})" ng-if="router === \'schedule\'"><i class="fa fa-reply"></i> \u8fd4\u56de</a> <a class="btn btn-default" ui-sref="terminal_university.source({ page: page})" ng-if="router === \'source\'"><i class="fa fa-reply"></i> \u8fd4\u56de</a> <a class="btn btn-default" ui-sref="terminal_university.display_log({ page: page})" ng-if="router === \'display_log\'"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><br><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><form method=POST ng-submit=save() class=form-horizontal role=form name=screenForm enctype=multipart/form-data><div class="panel panel-info"><div class="panel panel-heading"><div class=panel-title><font>\u63d2&nbsp;&nbsp;\u64ad</font></div></div><div class=panel-body><div class="bs-callout bs-callout-warning col-md-10 col-md-offset-1" style=margin-top:10px><h4>\u63d2\u64ad\u987b\u77e5</h4><p>1\u3001\u9009\u62e9\u63d2\u64ad\u5185\u5bb9\uff0c\u63d0\u4ea4\u6210\u529f\u540e\u5c06\u5728\u672c\u6821\u6240\u6709\u7535\u5b50\u5c55\u677f\u540c\u6b65\u663e\u793a\u3002<br>2\u3001\u63d2\u64ad\u7684\u5185\u5bb9\u4e0d\u4f1a\u5f71\u54cd\u5230\u73b0\u6709\u7684\u64ad\u653e\u5217\u8868\uff0c\u5f85\u63d2\u64ad\u5185\u5bb9\u64ad\u653e\u5b8c\u6bd5\u540e\uff0c\u7535\u5b50\u5c55\u677f\u5c06\u5ef6\u7eed\u64ad\u653e\u4e4b\u524d\u7684\u64ad\u653e\u5217\u8868\u5185\u5bb9\u3002</p></div><form-input data-title="\'\u5c55\u677f\u9879\u76ee\u540d\u79f0\'" data-name="\'title\'"><input class=form-control ng-model=screen.title placeholder=\u8bf7\u5c06\u9879\u76ee\u540d\u79f0\u9650\u5236\u572830\u4e2a\u5b57\u7b26\u4ee5\u5185 maxlength="30"></form-input><form-input data-title="\'\u64ad\u653e\u7b49\u7ea7\'" data-name="\'level\'"><select class=form-control ng-model=screen.priority.id ng-options="level.id as level.name for level in levels"></select></form-input><form-input data-title="\'\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=screen.landscape_poster class="fileinput-new thumbnail" style=width:300px;height:170px><img ng-src={{screen.landscape_poster.substring(0)}} image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u672c\u5730\u4e0a\u4f20</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=landscape_poster data-file=screen.landscape_poster id=image_file></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div>&nbsp;&nbsp;&nbsp;<span><a ng-click="showDemo(\'/static/images/H-01.jpg\', \'landscape_poster\')">\u67e5\u770b\u793a\u4f8b</a></span><div>\u5206\u8fa8\u7387\uff1a1920*1080 72ppi\u4ee5\u4e0a</div></form-input><form-input data-title="\'\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=screen.portrait_poster class="fileinput-new thumbnail" style=width:170px;height:300px><img ng-src={{screen.portrait_poster.substring(0)}} image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom><span class=fileinput-new>\u672c\u5730\u4e0a\u4f20</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=portrait_poster data-file=screen.portrait_poster id=image_file></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div>&nbsp;&nbsp;&nbsp;<span><a ng-click="showDemo(\'/static/images/W-01.jpg\', \'portrait_poster\')">\u67e5\u770b\u793a\u4f8b</a></span><div>\u5206\u8fa8\u7387\uff1a1080*1920 72ppi\u4ee5\u4e0a</div></form-input></div></div><button class="btn btn-info form-control" type=submit>\u6dfb&nbsp;&nbsp;\u52a0</button></form></div></div></div>');
    $templateCache.put('partial/screen/university/schedule/set_levels.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=SetLevelsCtrl><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><a class="btn btn-default" ui-sref="terminal_university.source({ page: page})"><i class="fa fa-reply"></i> \u8fd4\u56de</a> <button class="btn btn-info pull-right" ng-click=createLevel(auth_token)><i class="fa fa-plus"></i> \u65b0\u5efa\u64ad\u653e\u7b49\u7ea7</button></div></div><br><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><table class="table table-striped table-responsive"><thead><th>#</th><th>\u7b49\u7ea7\u540d\u79f0</th><th>\u5bf9\u5e94\u64ad\u653e\u65f6\u95f4</th><th>\u64cd\u4f5c</th></thead><tbody><tr ng-repeat="level in levels"><td header-class=text-left><font ng-bind="$index + 1"></font></td><td header-class=text-left><font ng-bind=level.name></font></td><td header-class=text-left><font ng-bind=level.length></font>\u79d2</td><td header-class=text-left><label type=button class="btn btn-danger btn-checkbox" ng-click=delLevel(level)><span>\u5220&nbsp;&nbsp;\u9664&nbsp;&nbsp;<i class="fa fa-trash-o"></i></span></label></td></tr></tbody></table></div></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button> <button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button></div></div></div></div></div>');
    $templateCache.put('partial/screen/university/schedule/source.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=SourceCtrl><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li><a ui-sref="terminal_university.schedule({page: 1})">\u64ad\u653e\u5217\u8868</a></li><li class=active><a ui-sref="terminal_university.source({page: 1})">\u7d20\u6750\u5e93</a></li><li><a ui-sref="terminal_university.display_log({page: 1})">\u63d2\u64ad\u65e5\u5fd7</a></li></ul><ul class="nav navbar-nav pull-right"><li><a ui-sref="terminal_university.native_upload({page: 1})"><i class="fa fa-plus-square" aria-hidden=true></i>&nbsp;\u65b0\u5efa\u5c55\u677f</a></li><li><a ui-sref="terminal_university.inter_cut({page: currentPage, router: \'source\'})"><i class="fa fa-edit" aria-hidden=true></i>&nbsp;\u63d2\u64ad</a></li></ul></div></nav></div></div><div class=row><div class="col-lg-4 col-lg-offset-8 col-md-4 col-md-offset-8 col-sm-4 col-sm-offset-8"><button class="btn btn-info pull-right" ng-click=setLevels()><i class="fa fa-edit"></i> \u8bbe\u7f6e\u64ad\u653e\u7b49\u7ea7</button></div></div><br><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="screen in $data"><td data-title="\'\u7d20\u6750\u540d\u79f0\'" header-class=text-left><font ng-bind=screen.title></font></td><td data-title="\'\u6a2a\u5411\u5c55\u677f\'" header-class=text-left><div class=thumbnail style="width: 100px;height: 57px"><img ng-src="{{server + screen.landscape_poster}}?width=100&height=57" ng-click="viewImage(server + screen.landscape_poster)" style="width: 100%;height: 100%" image-fixed></div></td><td data-title="\'\u7acb\u5f0f\u5c55\u677f\'" header-class=text-left><div class=thumbnail style="width: 57px;height: 100px"><img ng-src="{{server + screen.portrait_poster}}?width=57&height=100" ng-click="viewImage(server + screen.portrait_poster)" style="width: 100%;height: 100%" image-fixed></div></td><td data-title="\'\u7533\u8bf7\u64ad\u653e\u65f6\u95f4\'" header-class=text-left><font ng-bind="screen.start_time | date: \'yyyy-MM-dd HH:mm\'"></font> ~ <font ng-bind="screen.end_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u5141\u8bb8\u64ad\u653e\u65f6\u95f4\'" header-class=text-left><font ng-bind="screen.approved_start_time | date: \'yyyy-MM-dd HH:mm\'"></font> ~ <font ng-bind="screen.approved_end_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u7533\u8bf7\u7ec4\u7ec7\'" header-class=text-left><font ng-bind=screen.author_name></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left style="width: 160px"><label type=button class="btn btn-info" ng-click="updDisplayTime(screen, auth_token)" style="width: 139px"><span><i class="fa fa-edit" aria-hidden=true></i> \u4fee\u6539\u64ad\u653e\u65f6\u95f4</span></label><label type=button class="btn btn-info" ng-click="addToDisplay(screen, auth_token)" ng-if="screen.play_status === \'NOT_PLAYING\'" style="margin-top: 5px"><span><i class="fa fa-plus" aria-hidden=true></i> \u6dfb\u52a0\u5230\u64ad\u653e\u5217\u8868</span></label><label type=button class="btn btn-success" ng-if="screen.play_status === \'PLAYING\'" ng-disabled=true style="margin-top: 5px"><span>\u5df2\u6dfb\u52a0\u81f3\u64ad\u653e\u5217\u8868</span></label><label type=button class="btn btn-danger" ng-if="screen.play_status === \'ENDED\'" ng-disabled=true style="margin-top: 5px"><span>\u8be5\u5c55\u677f\u5df2\u7ecf\u5931\u6548</span></label><label type=button class="btn btn-info" ng-click="interCut(screen, auth_token)" style="width: 139px; margin-top: 3px" style="width: 139px"><span><i class="fa fa-edit" aria-hidden=true></i> \u63d2\u64ad</span></label></td></tr></tbody></table></div></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body>{{confirm.message}}</div><div class=modal-footer><button type=button class="btn btn-danger" data-dismiss=modal ng-click=confirmModal();>\u786e\u5b9a</button> <button type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button></div></div></div></div></div>');
    $templateCache.put('partial/screen/university/schedule/upd_display_time.html', '<div class=modal-header><h3 class=modal-title><font ng-bind=title></font></h3></div><div class=modal-body><form method=POST ng-submit=save() class=form-horizontal role=form name=timeForm><form-input data-title="\'\u5f00\u59cb\u64ad\u653e\u65f6\u95f4\'" data-name="\'start_time\'"><datetimepicker datetime=screen.approved_start_time starttime=screen.current></datetimepicker></form-input><form-input data-title="\'\u7ed3\u675f\u64ad\u653e\u65f6\u95f4\'" data-name="\'end_time\'"><datetimepicker datetime=screen.approved_end_time starttime=screen.approved_start_time></datetimepicker></form-input></form></div><div class=modal-footer><button class="btn btn-info" ng-click=ok()>\u786e\u5b9a</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/screen/university/schedule/upload_native.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=NativeUploadCtrl><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><a class="btn btn-default" ui-sref="terminal_university.source({ page: page})"><i class="fa fa-reply"></i> \u8fd4\u56de</a></div></div><br><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><form method=POST ng-submit=save() class=form-horizontal role=form name=screenForm enctype=multipart/form-data><div class="panel panel-info"><div class="panel panel-heading"><div class=panel-title><font ng-bind=screenInfo></font></div></div><div class=panel-body><form-input data-title="\'\u5c55\u677f\u540d\u79f0\'" data-name="\'title\'"><input class=form-control ng-model=screen.title placeholder=\u8bf7\u5c06\u9879\u76ee\u540d\u79f0\u9650\u5236\u572830\u4e2a\u5b57\u7b26\u4ee5\u5185 maxlength="30"></form-input><form-input data-title="\'\u6a2a\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=screen.landscape_poster class="fileinput-new thumbnail" style=width:300px;height:170px><img ng-src={{screen.landscape_poster.substring(0)}} image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file"><span class=fileinput-new>\u672c\u5730\u4e0a\u4f20</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=landscape_poster data-file=screen.landscape_poster id=image_file></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div>&nbsp;&nbsp;&nbsp;<span><a ng-click="showDemo(\'/static/images/H-01.jpg\', \'landscape_poster\')">\u67e5\u770b\u793a\u4f8b</a></span><div>\u5206\u8fa8\u7387\uff1a1920*1080 72ppi\u4ee5\u4e0a</div></form-input><form-input data-title="\'\u7ad6\u88c5\u7535\u5b50\u5c55\u677f\u6d3b\u52a8\u4e13\u7528\u6d77\u62a5\'"><div class="fileinput fileinput-new" data-provides=fileinput><div ng-if=screen.portrait_poster class="fileinput-new thumbnail" style=width:170px;height:300px><img ng-src={{screen.portrait_poster.substring(0)}} image-fixed></div><div class="fileinput-preview fileinput-exists thumbnail"></div><div><span class="btn btn-default btn-file" data-toggle=tooltip data-placement=bottom><span class=fileinput-new>\u672c\u5730\u4e0a\u4f20</span> <span class=fileinput-exists>\u66f4\u6362</span> <input type=file name=portrait_poster data-file=screen.portrait_poster id=image_file></span> <a href=# class="btn btn-default fileinput-exists" data-dismiss=fileinput>\u5220\u9664</a></div></div>&nbsp;&nbsp;&nbsp;<span><a ng-click="showDemo(\'/static/images/W-01.jpg\', \'portrait_poster\')">\u67e5\u770b\u793a\u4f8b</a></span><div>\u5206\u8fa8\u7387\uff1a1080*1920 72ppi\u4ee5\u4e0a</div></form-input><form-input data-title="\'\u9884\u8ba1\u5c55\u51fa\u65f6\u95f4\'" data-name="\'start_time\'"><datetimepicker datetime=screen.start_time starttime=screen.current></datetimepicker></form-input><form-input data-title="\'\u8ba1\u5212\u7ed3\u675f\u65f6\u95f4\'" data-name="\'end_time\'"><datetimepicker datetime=screen.end_time starttime=screen.start_time></datetimepicker></form-input></div></div><button class="btn btn-info form-control" type=submit>\u63d0&nbsp;&nbsp;\u4ea4</button></form></div></div></div>');
    $templateCache.put('partial/screen/university/terminal.html', '<div><div class="tabs-left hidden-print"><ul class="nav nav-tabs col-sm-2 col-md-2 col-lg-2"><li d-sref="\'terminal_university\'"><a ui-sref=terminal_university>\u5ba1\u6838\u7ba1\u7406</a></li><li d-sref="\'terminal_university.schedule\'"><a ui-sref="terminal_university.schedule({page: 1})">\u65e5\u7a0b\u8868</a></li></ul></div><div ui-view><div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=TerminalCtrl><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li class=active><a ui-sref=terminal_university>\u5f85\u5ba1\u6838\u5217\u8868</a></li><li><a ui-sref=terminal_university.approve>\u5df2\u901a\u8fc7\u5217\u8868</a></li></ul></div></nav></div></div><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="screen in $data"><td data-title="\'\u5c55\u677f\u540d\u79f0\'" header-class=text-left><font ng-bind=screen.title></font></td><td data-title="\'\u6a2a\u5411\u5c55\u677f\'" header-class=text-left><div class=thumbnail style="width: 100px;height: 57px"><img ng-src="{{server + screen.landscape_poster}}?width=100&height=57" ng-click="viewImage(server + screen.landscape_poster)" style="width: 100%;height: 100%" image-fixed></div></td><td data-title="\'\u7acb\u5f0f\u5c55\u677f\'" header-class=text-left><div class=thumbnail style="width: 57px;height: 100px"><img ng-src="{{server + screen.portrait_poster}}?width=57&height=100" ng-click="viewImage(server + screen.portrait_poster)" style="width: 100%;height: 100%" image-fixed></div></td><td data-title="\'\u7533\u8bf7\u64ad\u653e\u65f6\u95f4\'" header-class=text-left><font ng-bind="screen.start_time | date: \'yyyy-MM-dd HH:mm\'"></font> ~ <font ng-bind="screen.end_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u7533\u8bf7\u7ec4\u7ec7\'" header-class=text-left><font ng-bind=screen.author_name></font></td><td data-title="\'\u64cd\u4f5c\'" header-class=text-left style="width: 180px"><label type=button class="btn btn-success" ng-click="approve(screen, auth_token, user.nickname)"><span><i class="fa fa-plus" aria-hidden=true></i> \u901a&nbsp;\u8fc7</span></label>&nbsp;<label type=button class="btn btn-danger" ng-click="refuse(screen, auth_token)"><span><i class="fa fa-exclamation-triangle" aria-hidden=true></i> \u62d2&nbsp;\u7edd</span></label></td></tr></tbody></table></div></div></div></div></div>');
    $templateCache.put('partial/screen/university/terminal/approve_list.html', '<div class="col-lg-9 col-lg-offset-3 col-md-9 col-md-offset-3 col-sm-9 col-sm-offset-3" ng-controller=ApproveCtrl><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><nav class="navbar navbar-default" role=navigation><div class=navbar-header></div><div class="collapse navbar-collapse" id=navbar-item><ul class="nav navbar-nav"><li><a ui-sref=terminal_university>\u5f85\u5ba1\u6838\u5217\u8868</a></li><li class=active><a ui-sref=terminal_university.approve>\u5df2\u901a\u8fc7\u5217\u8868</a></li></ul></div></nav></div></div><div class=row><div class="col-lg-12 col-md-12 col-sm-12"><table class="table table-striped table-responsive" ng-table=tableParams><tbody><tr ng-repeat="screen in $data"><td data-title="\'\u5c55\u677f\u540d\u79f0\'" header-class=text-left><font ng-bind=screen.title></font></td><td data-title="\'\u6a2a\u5411\u5c55\u677f\'" header-class=text-left><div class=thumbnail style="width: 100px;height: 57px"><img ng-src="{{server + screen.landscape_poster}}?width=100&height=57" ng-click="viewImage(server + screen.landscape_poster)" style="width: 100%;height: 100%" image-fixed></div></td><td data-title="\'\u7acb\u5f0f\u5c55\u677f\'" header-class=text-left><div class=thumbnail style="width: 57px;height: 100px"><img ng-src="{{server + screen.portrait_poster}}?width=57&height=100" ng-click="viewImage(server + screen.portrait_poster)" style="width: 100%;height: 100%" image-fixed></div></td><td data-title="\'\u7533\u8bf7\u64ad\u653e\u65f6\u95f4\'" header-class=text-left><font ng-bind="screen.start_time | date: \'yyyy-MM-dd HH:mm\'"></font> ~ <font ng-bind="screen.end_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u5141\u8bb8\u64ad\u653e\u65f6\u95f4\'" header-class=text-left><font ng-bind="screen.approved_start_time | date: \'yyyy-MM-dd HH:mm\'"></font> ~ <font ng-bind="screen.approved_end_time | date: \'yyyy-MM-dd HH:mm\'"></font></td><td data-title="\'\u7533\u8bf7\u7ec4\u7ec7\'" header-class=text-left><font ng-bind=screen.author_name></font></td><td data-title="\'\u72b6\u6001\'" header-class=text-left><span class="label label-default" ng-if="screen.play_status === \'NOT_PLAYING\'">\u672a\u64ad\u653e</span> <span class="label label-success" ng-if="screen.play_status === \'PLAYING\'">\u64ad\u653e\u4e2d</span> <span class="label label-danger" ng-if="screen.play_status === \'ENDED\'">\u5df2\u7ed3\u675f</span></td></tr></tbody></table></div></div></div>');
    $templateCache.put('partial/screen/university/terminal/approve_time.html', '<div class=modal-header><h3 class=modal-title><font ng-bind=title></font></h3></div><div class=modal-body><form method=POST ng-submit=save() class=form-horizontal role=form name=timeForm><form-input data-title="\'\u5f00\u59cb\u64ad\u653e\u65f6\u95f4\'" data-name="\'start_time\'"><datetimepicker datetime=screen.start_time starttime=screen.current></datetimepicker></form-input><form-input data-title="\'\u7ed3\u675f\u64ad\u653e\u65f6\u95f4\'" data-name="\'end_time\'"><datetimepicker datetime=screen.end_time starttime=screen.start_time></datetimepicker></form-input></form></div><div class=modal-footer><button class="btn btn-info" ng-click=ok()>\u786e\u5b9a</button> <button class="btn btn-warning" ng-click=cancel()>\u53d6\u6d88</button></div>');
    $templateCache.put('partial/util/carousel.html', '<div><div><carousel interval=interval style=height:700px><slide ng-repeat="slide in slides" active=slide.active><div style=height:600px><img ng-src={{slide.image}} style="position: relative;top: 50%;transform: translateY(-50%)"></div><div class=carousel-caption></div></slide></carousel></div></div>');
    $templateCache.put('partial/welcome/sysMesAndInfo.html', '<div ng-controller=SysMesInfoCtrl><div class=row ng-repeat="sysinfo in sysinfos"><div class="col-md-10 col-md-offset-1"><form class="panel panel-info form-horizontal" my-collapse><span class="btn pull-right"><div ng-if=!sysinfo.isDisplay><i class="fa fa-chevron-down"></i>&nbsp;\u5c55\u5f00</div><div ng-if=sysinfo.isDisplay><i class="fa fa-chevron-up"></i>&nbsp;\u6536\u8d77</div></span><div class=panel-heading><div><font ng-bind="sysinfo.sender_obj.nickname || \'\u8d85\u7ea7\u7ba1\u7406\u5458\'"></font>&nbsp;&nbsp;<font ng-bind="sysinfo.create_time | date: \'yyyy-MM-dd HH:mm\'"></font></div></div><div id={{sysinfo.id}} class=panel-body ng-class="{true: \'isDisplay\', false: \'isNotDisplay\'}[{{sysinfo.isDisplay}}]"><div class=row><div class=col-sm-12><h4><font ng-bind=sysinfo.title></font></h4></div></div><br><div class=row ng-if="sysinfo.log_type === \'VERSION\'"><div class=col-sm-12>\u66f4\u65b0\u4fe1\u606f\uff1a<textarea class=form-control ng-disabled=true rows=10 style="resize: none" ng-bind=sysinfo.data_obj.describe></textarea></div></div><div class=row ng-if=sysinfo.content><div class=col-sm-12>\u7406\u7531\uff1a<textarea class=form-control ng-disabled=true rows=6 style="resize: none" ng-bind=sysinfo.content></textarea></div></div></div></form></div></div><br><button class="btn btn-default center-block more-btn" ng-click=loadMoreInfos() ng-disabled=loadMoreBtn ng-show=loadMore><font ng-bind=loadSysinfoBtn></font></button></div>');
    $templateCache.put('partial/welcome/systemInfo.html', '<div class=modal-header><h4 class=modal-title>\u7cfb\u7edf\u4fe1\u606f</h4></div><div class=modal-body><div class=row><div class=col-md-12><p>\u5f53\u524d\u7248\u672c\uff1a<font ng-bind=version></font></p></div></div><div class=row><div class=col-md-12><p class=text-left>1\u3001\u793e\u56e2\u6d3b\u52a8\u65b0\u589e\u95ee\u5377\u529f\u80fd\uff0c\u652f\u6301\u56db\u79cd\u95ee\u5377\u95ee\u9898\u6a21\u5f0f\uff0c\u652f\u6301\u8bbe\u7f6e\u95ee\u5377\u4e13\u5c5e\u5151\u5956\u5238\uff0c\u53c2\u4e0e\u95ee\u5377\u7684\u540c\u5b66\u4eec\u6709\u798f\u5229\u5566\u3002<br>2\u3001\u6d3b\u52a8\u529f\u80fd\u5bc6\u7801\uff1a\u5982\u626b\u7535\u5b50\u7968\u3001\u5151\u5956\u5238\u7b49\u5747\u7edf\u4e00\u4e3a\u793e\u56e2\u7ba1\u7406\u5bc6\u7801\uff0c\u793e\u56e2\u5de5\u4f5c\u4eba\u5458\u53ea\u7528\u8bb0\u4f4f\u4e00\u4e2a\u5bc6\u7801\uff0c\u5c31\u53ef\u4ee5\u5728App\u7aef\u5b8c\u6210\u793e\u56e2\u7ba1\u7406\u5de5\u4f5c\u3002<br>3\u3001\u7535\u5b50\u51ed\u8bc1\u7ba1\u7406\u4e2d\uff0c\u5df2\u7ecf\u88ab\u4efb\u610f\u6d3b\u52a8\u4f7f\u7528\u8fc7\u7684\u7535\u5b50\u51ed\u8bc1\u4e0d\u652f\u6301\u7f16\u8f91\u4fee\u6539\uff0c\u4fbf\u4e8e\u6570\u636e\u7edf\u8ba1\u7684\u51c6\u786e\u6027\u3002<br>4\u3001\u95ee\u5377\u7edf\u8ba1\u9875\u652f\u6301\u7edf\u8ba1\u7ed3\u679c\u5206\u90e8\u5206\u5bfc\u51fa\u7535\u5b50\u7248\uff0c\u65b9\u4fbf\u793e\u56e2\u7ba1\u7406\u8005\u6574\u7406\u4fdd\u5b58\u3002<br>5\u3001\u7ec6\u5316\u6d3b\u52a8\u7b7e\u5230\u529f\u80fd\uff0c\u7b7e\u5230\u8005\u5217\u8868\u4e2d\u672c\u793e\u6210\u5458\u4e0e\u975e\u672c\u793e\u6210\u5458\u7684\u533a\u522b\u663e\u793a\u3002<br>6\u3001\u4fee\u590d\u521b\u5efa\u6d3b\u52a8\u65f6\uff0c\u6d3b\u52a8\u8be6\u60c5\u5bcc\u5a92\u4f53\u7f16\u8f91\u6846\u56fe\u7247\u663e\u793abug\u3002<br>7\u3001\u4fee\u590d\u6d3b\u52a8\u5206\u4eab\u9875\u4e2d\uff0c\u793e\u56e2\u53d1\u5e03\u7684\u7206\u6599\u6ca1\u6709\u6b63\u5e38\u663e\u793a\u793e\u56e2LOGO\u53ca\u540d\u79f0bug\u3002<br>8\u3001\u4fee\u590d\u7ba1\u7406\u5458\u767b\u9646\u65f6\uff0c\u91cd\u590d\u63d0\u9192bug\u3002<br></p></div></div></div><div class=modal-footer><button type=button class="btn btn-default" data-dismiss=modal ng-click=cancel()><span aria-hidden=true>\u786e&nbsp;\u5b9a</span></button></div>');
    $templateCache.put('partial/welcome/welcome.html', '<div id=welcome ng-controller=WelcomeCtrl><div class=container ng-show="user.role.name === \'ADMIN\' || user.role.name === \'UN_ADMIN\'"><div class=row ng-show="user.role.name === \'ADMIN\'"><div class=col-md-12><div class="panel panel-info"><div class=panel-heading><div class=panel-title>\u7cfb\u7edf\u6d88\u606f <a class=pull-right ui-sref="sysMesAndInfo({ id: -1 })">\u67e5\u770b\u66f4\u591a&nbsp;&nbsp;<i class="fa fa-angle-right"></i></a></div></div><div class=panel-body><div class=list-group><a ui-sref="sysMesAndInfo({ id: message.id })" class=list-group-item ng-repeat="message in system_messages"><span class=badge>new</span> <font ng-bind=message.title></font>&nbsp;&nbsp;<font ng-bind="message.create_time | date: \'yyyy-MM-dd HH:mm\'"></font></a></div></div></div></div></div><hr class="line"><div class=lower><div class=row style="text-align: center"><div class="col-md-3 col-sm-3"><div ng-show="user.role.name === \'ADMIN\' && user.user_type !== \'POLITICAL\'"><font class=stat-font ng-bind=stat_data_admin.activities_count></font><p>\u672c\u793e\u56e2\u6d3b\u52a8\u603b\u6570</p></div><div ng-show="user.role.name === \'ADMIN\' && user.user_type === \'POLITICAL\'"><font class=stat-font>0</font><p>\u672c\u515a\u652f\u90e8\u6d3b\u52a8\u603b\u6570</p></div><div ng-show="user.role.name === \'UN_ADMIN\'"><font class=stat-font ng-bind=stat_data_un.activities_count></font><p>\u672c\u6821\u793e\u56e2\u6d3b\u52a8\u603b\u6570</p></div></div><div class="col-md-3 col-sm-3"><div ng-show="user.role.name === \'ADMIN\' && user.user_type !== \'POLITICAL\'"><font class=stat-font ng-bind=stat_data_admin.communities_count></font><p>\u672c\u6821\u793e\u56e2\u603b\u6570</p></div><div ng-show="user.role.name === \'ADMIN\' && user.user_type === \'POLITICAL\'"><font class=stat-font>0</font><p>\u672c\u6821\u515a\u652f\u90e8\u603b\u6570</p></div><div ng-show="user.role.name === \'UN_ADMIN\'"><font class=stat-font ng-bind=stat_data_un.communities_count></font><p>\u672c\u6821\u793e\u56e2\u603b\u6570</p></div></div><div class="col-md-3 col-sm-3"><div ng-show="user.role.name === \'ADMIN\'"><font class=stat-font ng-bind=stat_data_admin.users_count></font><p>\u672c\u6821\u624b\u673a\u7528\u6237\u603b\u6570</p></div><div ng-show="user.role.name === \'UN_ADMIN\'"><font class=stat-font ng-bind=stat_data_un.users_count></font><p>\u672c\u6821\u624b\u673a\u7528\u6237\u603b\u6570</p></div></div></div></div></div><footer ng-show="user.role.name === \'ADMIN\' || user.role.name === \'UN_ADMIN\'"><p>Copyright \xa9 2013&nbsp;BoringKiller Ltd.&nbsp;&nbsp; \u4eacICP\u590713042578\u53f7<br>\u201c\u5317\u4eac\u535a\u7075\u51ef\u4e50\u79d1\u6280\u6709\u9650\u8d23\u4efb\u516c\u53f8\u201d\u7248\u6743\u6240\u6709</p></footer></div>');
    $templateCache.put('templates/candidate-sharing.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>{{candidate.title}}</title><link rel=stylesheet href=/static/styles/candidate-sharing.css><link rel="shortcut icon" href=/static/favicon.ico></head><body class=container><div id=ios_popweixin><div class="tip top2bottom"><img align=center src=/static/images/safari.png style="width:100%;height:100%"></div></div><div id=android_popweixin><div class="tip top2bottom"><img align=center src=/static/images/android_note.png style="width:100%;height:100%"></div></div><h1>{{candidate.vote_info.activity.subject}}</h1><div class=banner><div class=info><div class=nickname>{{candidate.title}}</div></div><ul>{% for image in candidate.images %}<li><img align=center src=/images/{{image.path}}></li>{% endfor %}</ul></div><div class=content><p>{{candidate.describe}}</p></div><a href=# class="btn footer-btn">\u5feb\u6765 i \u5fae\u6821\u4e3aTa\u6295\u7968\u5427\uff5e</a><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/bower_components/jquery.event.move/js/jquery.event.move.js></script><script src=/static/bower_components/jquery.event.swipe/js/jquery.event.swipe.js></script><script src=/static/bower_components/jquery.unslider/src/unslider.js></script><script src=/static/scripts/candidate-sharing.js></script></body></html>');
    $templateCache.put('templates/community-discover-sale-sharing.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>i\u5fae\u6821-\u6821\u56ed\u96c6\u5e02</title><link href=/static/bower_components/font-awesome/css/font-awesome.min.css rel=stylesheet><link rel=stylesheet href=/static/styles/community-discover-sale-sharing.css><link rel="shortcut icon" href=/static/favicon.ico></head><body class=container><div id=ios_popweixin><div class="tip top2bottom"><img align=center src=/static/images/safari.png style="width:100%;height:100%"></div></div><div id=android_popweixin><div class="tip top2bottom"><img align=center src=/static/images/android_note.png style="width:100%;height:100%"></div></div>{% if topic.image %}<div class=banner><ul>{% for im in topic.image %}<li><img align=center src="{{ im }}"></li>{% endfor %}</ul></div>{% endif %}<div class=content><h2>{{ topic.topic }}</h2><br><h4>{% if topic.price %} <font>\uffe5{{ topic.price }}</font> {% endif %} <font id=browsers><i class="fa fa-eye"></i> \u6d4f\u89c8{{ topic.browsers }}\u6b21</font></h4><br><hr><br><div><div id=community_logo><img id=logo_img src="/images/{{ topic.community_obj.logo }}"></div><div id=community_name_icon><div id=name_icon><img id=community_icon src=/static/images/community_icon.png> <font id=community_name>{{ topic.community_obj.name }}</font></div></div><div style="clear: both"></div></div><div id=community_content>{{ topic.content }}</div></div><a href=# class="btn footer-btn">\u6765 i \u5fae\u6821\u611f\u53d7\u65b0\u578b\u6821\u56ed\u751f\u6d3b~</a><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/bower_components/jquery.event.move/js/jquery.event.move.js></script><script src=/static/bower_components/jquery.event.swipe/js/jquery.event.swipe.js></script><script src=/static/bower_components/jquery.unslider/src/unslider.js></script><script src=/static/scripts/community-discover-sale-sharing.js></script></body></html>');
    $templateCache.put('templates/community.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title id=web_title></title><link href=/static/bower_components/font-awesome/css/font-awesome.min.css rel=stylesheet><link rel=stylesheet href=/static/styles/community.css><link rel="shortcut icon" href=/static/favicon.ico></head><body id=container><div id=comm_info style="position: relative;z-index: 0"><img class=comm_shade src=/static/images/comm_share-gray.png><div class=comm_info><div id=comm_logo_title><div id=comm_logo class=comm_logo><img id=logo_img class=logo_img src=""><canvas id=logo_canvas style="display: none"></canvas></div><div id=comm_title_btn class=comm_title_btn><div id=comm_title class=comm_title></div><div id=dep_btn class=dep_btn><div class=dep_btn_content>\u7b80&nbsp;\u4ecb</div></div></div><div class=clear></div></div><div id=br><br></div><div class=dep_content style="display: none"><p id=dep_content></p><div class=up_btn><img id=up_btn_img class=up_btn_img src=/static/images/activity-sharing-up.png></div></div><div class=clear></div></div></div><div class=split></div><div id=comm_act_title class=comm_act_title></div><div id=comm_activty></div></body><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/scripts/community.js></script></html>');
    $templateCache.put('templates/discover-sale-sharing-web.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>i\u5fae\u6821-\u6821\u56ed\u96c6\u5e02</title><link rel=stylesheet href=/static/bower_components/bootstrap/dist/css/bootstrap.min.css><link href=/static/bower_components/font-awesome/css/font-awesome.min.css rel=stylesheet><link rel=stylesheet href=/static/styles/discover-sale-sharing-web.css><link rel="shortcut icon" href=/static/favicon.ico></head><body><div class=container style="width: 600px">{% if topic.image %}<div class=banner><ul>{% for im in topic.image %}<li><img align=center src="{{ im }}"></li>{% endfor %}</ul></div>{% endif %}<div class=content><h2>{{ topic.topic }}</h2><br><h4>{% if topic.price %} <font>\uffe5{{ topic.price }}</font> {% endif %} <font id=browsers><i class="fa fa-eye"></i> \u6d4f\u89c8{{ topic.browsers }}\u6b21</font></h4><br><hr><br><div><img id=user_image src="/images/{{ topic.user_obj.icon }}"> <font id=user_name>{{ topic.user_obj.nickname }}</font></div><br><br><br>{{ topic.content }}</div></div><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/bower_components/jquery.event.move/js/jquery.event.move.js></script><script src=/static/bower_components/jquery.event.swipe/js/jquery.event.swipe.js></script><script src=/static/bower_components/jquery.unslider/src/unslider.js></script><script src=/static/scripts/discover-sale-sharing-web.js></script></body></html>');
    $templateCache.put('templates/discover-sale-sharing.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>i\u5fae\u6821-\u6821\u56ed\u96c6\u5e02</title><link href=/static/bower_components/font-awesome/css/font-awesome.min.css rel=stylesheet><link rel=stylesheet href=/static/styles/discover-sale-sharing.css><link rel="shortcut icon" href=/static/favicon.ico></head><body class=container><div id=ios_popweixin><div class="tip top2bottom"><img align=center src=/static/images/safari.png style="width:100%;height:100%"></div></div><div id=android_popweixin><div class="tip top2bottom"><img align=center src=/static/images/android_note.png style="width:100%;height:100%"></div></div>{% if topic.image %}<div class=banner><ul>{% for im in topic.image %}<li><img align=center src="{{ im }}"></li>{% endfor %}</ul></div>{% endif %}<div class=content><h2>{{ topic.topic }}</h2><br><h4>{% if topic.price %} <font>\uffe5{{ topic.price }}</font> {% endif %} <font id=browsers><i class="fa fa-eye"></i> \u6d4f\u89c8{{ topic.browsers }}\u6b21</font></h4><br><hr><br><div><img id=user_image src="/images/{{ topic.user_obj.icon }}"> <font id=user_name>{{ topic.user_obj.nickname }}</font></div><br><br><br>{{ topic.content }}</div><a href=# class="btn footer-btn">\u6765 i \u5fae\u6821\u611f\u53d7\u65b0\u578b\u6821\u56ed\u751f\u6d3b~</a><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/bower_components/jquery.event.move/js/jquery.event.move.js></script><script src=/static/bower_components/jquery.event.swipe/js/jquery.event.swipe.js></script><script src=/static/bower_components/jquery.unslider/src/unslider.js></script><script src=/static/scripts/discover-sale-sharing.js></script></body></html>');
    $templateCache.put('templates/draw-winners.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>\u62bd\u5956 - \u83b7\u5956\u8005\u540d\u5355</title><link rel=stylesheet href=/static/bower_components/bootstrap/dist/css/bootstrap.css><link rel=stylesheet href=/static/styles/draw-winners.css><link rel="shortcut icon" href=/static/favicon.ico></head><body class=container><div class=draw-winner></div><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/scripts/draw-winners.js></script></body></html>');
    $templateCache.put('templates/draw.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>\u62bd\u5956</title><link rel=stylesheet href=/static/bower_components/bootstrap/dist/css/bootstrap.css><link rel=stylesheet href=/static/bower_components/animate.css/animate.css><link rel=stylesheet href=/static/bower_components/font-awesome/css/font-awesome.css><link rel=stylesheet href=/static/styles/draw.css><link rel="shortcut icon" href=/static/favicon.ico></head><body class=container><div class=header><div class=row><div class=col-md-2 style="text-align: center"><div class=dropdown><div id=lotterieName></div></div></div><div class=col-md-10><div class=notice id=lotterieNotice></div></div></div></div><div class=warp><div id=circle class=circle><div class=btn><a class=start href=#><span><font size=5>\u70b9\u51fb\u5f00\u59cb\u8fdb\u884c\u62bd\u5956</font></span></a></div><div class=items></div><div class=done></div><div class="backdrop show"></div></div></div><script id=circleTpl type=text/x-handlebars-template charset=utf-8>{% raw %}\r' + '\n' + '    <ul>\r' + '\n' + '      {{#each items}}\r' + '\n' + '      <li><img src="{{avatar}}"></li>\r' + '\n' + '      {{/each}}\r' + '\n' + '    </ul>\r' + '\n' + '    {% endraw %}</script><script id=doneTpl type=text/x-handlebars-template charset=utf-8>{% raw %}\r' + '\n' + '    <img src="{{avatar}}">\r' + '\n' + '    <div>\r' + '\n' + '      <p>No.{{number}}<br/>{{name}}</p>\r' + '\n' + '    </div>\r' + '\n' + '    {% endraw %}</script><div id=loader class="pageload pageload-loading pageload-show"></div><div class=company_logo><img style="width: 100%" src=/static/images/iWeixiao_font_white.png></div><div class="footer clearfix"><div id=draw_btn class=draw_btn><a class=start href=#><span>\u5f00\u59cb</span></a></div></div><div class="modal fade" id=confirmModal tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true><div class=modal-dialog><div class=modal-content><div class=modal-header><button type=button class=close data-dismiss=modal><span aria-hidden=true>&times;</span><span class=sr-only>\u5173\u95ed</span></button></div><div class=modal-body><center><br><p id=message></p><br></center></div><div class=modal-footer><center><button id=cancel type=button class="btn btn-default" data-dismiss=modal><span aria-hidden=true>\u53d6\u6d88</span></button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <button id=confirm_del type=button class="btn btn-info" data-dismiss=modal>\u786e\u5b9a\u5220\u9664</button></center></div></div></div></div><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/bower_components/handlebars/handlebars.js></script><script src=/static/bower_components/bootstrap/dist/js/bootstrap.js></script><script src=/static/scripts/draw.js></script></body></html>');
    $templateCache.put('templates/nearby.html', '<!DOCTYPE html><html lang=zh><head><meta charset=utf-8><meta name=viewport content="width=device-width,initial-scale=1"><title>i \u5fae\u6821-\u8eab\u8fb9\u4e8b</title><link rel=stylesheet href=/static/bower_components/bootstrap/dist/css/bootstrap.min.css><link rel=stylesheet href=/static/bower_components/font-awesome/css/font-awesome.min.css><link rel=stylesheet href=/static/styles/nearby.css><link rel="shortcut icon" href=/static/favicon.ico></head><body><div id=ios_popweixin><div class="tip top2bottom"><img align=center src=/static/images/safari.png style="width:100%;height:100%"></div></div><div class=banner><ul id=image_list></ul></div><div class=nearby><div class=title><div class=nearby_label><span class="label label-info">\u8eab\u8fb9\u4e8b</span></div><div class=nearby_title><font id=nearby_title></font></div><div class=clear></div></div><hr class="title_hr"><div class=info><div class=logo><img id=nearby_logo class=nearby_logo></div><div class=publisher><div class=pub_name><font id=nickname></font></div><div class=publish_time><font id=publish_time></font></div></div><div class=clear></div></div><div class=content id=content></div></div><hr class="stat_hr"><div class=stat_num id=stat_num></div><div class=stats id=stats></div><div class="download download_iwx"><div class=download_iwx_btn><img class=logo_iwx src=/static/images/activity-sharing-logo.png><p style="margin-top: 20px"><font>&nbsp;&nbsp;\u5728&nbsp;i&nbsp;\u5fae\u6821\u53d1\u73b0\u8eab\u8fb9\u4e8b~</font> <img class=arrow_right src=/static/images/activity-right.png></p></div></div><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/bower_components/jquery.event.move/js/jquery.event.move.js></script><script src=/static/bower_components/jquery.event.swipe/js/jquery.event.swipe.js></script><script src=/static/bower_components/jquery.unslider/src/unslider.js></script><script src=/static/scripts/nearby.js></script></body></html>');
    $templateCache.put('templates/nearby_pc.html', '<!DOCTYPE html><html lang=zh><head><meta charset=utf-8><meta name=viewport content="width=device-width,initial-scale=1"><title>i \u5fae\u6821-\u8eab\u8fb9\u4e8b</title><link rel=stylesheet href=../bower_components/bootstrap/dist/css/bootstrap.min.css><link rel=stylesheet href=../bower_components/font-awesome/css/font-awesome.min.css><link rel=stylesheet href=/static/styles/nearby_pc.css><link rel="shortcut icon" href=/static/favicon.ico></head><body><div id=container class=container style="width: 600px"><div class=banner><ul id=image_list></ul></div><div class=nearby><div class=title><div class=nearby_label><span class="label label-info">\u8eab\u8fb9\u4e8b</span></div><div class=nearby_title><font id=nearby_title></font></div><div class=clear></div></div><hr class="title_hr"><div class=info><div class=logo><img id=nearby_logo class=nearby_logo></div><div class=publisher><div class=pub_name><font id=nickname></font></div><div class=publish_time><font id=publish_time></font></div></div><div class=clear></div></div><div class=content id=content></div></div><hr class="stat_hr"><div class=stat_num id=stat_num></div><div class=stats id=stats></div></div><script src=../bower_components/jquery/dist/jquery.js></script><script src=../bower_components/jquery.event.move/js/jquery.event.move.js></script><script src=../bower_components/jquery.event.swipe/js/jquery.event.swipe.js></script><script src=../bower_components/jquery.unslider/src/unslider.js></script><script src=/static/scripts/nearby_pc.js></script></body></html>');
    $templateCache.put('templates/nearby_web.html', '<!DOCTYPE html><html lang=zh><head><meta charset=utf-8><meta name=viewport content="width=device-width,initial-scale=1"><title>i \u5fae\u6821-\u8eab\u8fb9\u4e8b</title><link rel=stylesheet href=../bower_components/bootstrap/dist/css/bootstrap.min.css><link rel=stylesheet href=../bower_components/font-awesome/css/font-awesome.min.css><link rel=stylesheet href=/static/styles/nearby_web.css><link rel="shortcut icon" href=/static/favicon.ico></head><body><div id=containDiv style="position: absolute;width: 480px;height: 670px;overflow-x: hidden;overflow-y: visible;left: 35%;top: 10%;background: white"><div class=banner style="height: 480px"><ul id=image_list></ul></div><div class=nearby><div class=title><div class=nearby_label><span class="label label-info">\u8eab\u8fb9\u4e8b</span></div><div class=nearby_title><font id=nearby_title></font></div><div class=clear></div></div><hr class="title_hr"><div class=info><div class=logo><img id=nearby_logo class=nearby_logo></div><div class=publisher><div class=pub_name><font id=nickname></font></div><div class=publish_time><font id=publish_time></font></div></div><div class=clear></div></div><div class=content id=content></div></div><hr class="stat_hr"><div class=stat_num id=stat_num></div><div class=stats id=stats></div></div><script src=../bower_components/jquery/dist/jquery.js></script><script src=../bower_components/jquery.event.move/js/jquery.event.move.js></script><script src=../bower_components/jquery.event.swipe/js/jquery.event.swipe.js></script><script src=../bower_components/jquery.unslider/src/unslider.js></script><script src=/static/scripts/nearby_web.js></script></body></html>');
    $templateCache.put('templates/reset_password.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>\u91cd\u7f6e\u5bc6\u7801</title><link rel=stylesheet href=/static/styles/bootstrap.min.css></head><body class=container><div class="col-lg-6 col-lg-offset-3 col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1"><form action="{{ url_for_security(\'reset_password\', token=reset_password_token) }}" method=POST class="form-horizontal form-panel" role=form><div class="panel panel-default"><div class=panel-heading><div class=panel-title>\u91cd\u7f6e\u5bc6\u7801</div></div><div class=panel-body><div class=form-group><label class="col-sm-2 control-label" for=password>\u65b0\u5bc6\u7801</label><div class=col-sm-9><input class=form-control id=password name=password type=password></div></div><div class=form-group><label class="col-sm-2 control-label" for=password_confirm>\u518d\u6b21\u8f93\u5165</label><div class=col-sm-9><input class=form-control id=password_confirm name=password_confirm type=password></div></div><div class=form-group><div class="col-sm-9 col-sm-offset-2"><input class="btn btn-primary" id=submit name=submit type=submit value=\u91cd\u7f6e\u5bc6\u7801></div></div></div></div></form></div></body></html>');
    $templateCache.put('templates/sign_in.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>\u7b7e\u5230\u5927\u5c4f\u5e55</title><link rel=stylesheet href=/static/bower_components/bootstrap/dist/css/bootstrap.css><link rel=stylesheet href=/static/styles/sign_in.css><link rel="shortcut icon" href=/static/favicon.ico></head><body><img id=bg_flag src=/static/images/iweixiao_white_bg.png><br><br><div id=sign_ins></div><div class="footer clearfix"><span class=iweixiao></span></div><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/scripts/sign_in.js></script></body></html>');
    $templateCache.put('templates/ticket.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>\u7535\u5b50\u7968\u5927\u5c4f\u5e55</title><link rel=stylesheet href=/static/bower_components/bootstrap/dist/css/bootstrap.css><link rel=stylesheet href=/static/styles/animate.css><link rel=stylesheet href=/static/styles/ticket.css><link rel="shortcut icon" href=/static/favicon.ico></head><body><div class=content><img class=bg_logo src=/static/images/bg_ticket_logo.png> <img class=bg_ticket src=/static/images/bg_ticket_square.png><br><br><div id=ticket></div></div><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/scripts/ticket.js></script></body></html>');
    $templateCache.put('templates/undergo-page-test.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>\u515a\u5efa\u7ecf\u5386</title><link rel=stylesheet href=../bower_components/bootstrap/dist/css/bootstrap.css><link rel=stylesheet href=/static/styles/undergo-page.css><link rel="shortcut icon" href=/static/favicon.ico></head><body><div class=container><br><div class=row><div id=info class="col-md-9 col-md-offset-1"><script type=text/x-handlebars-template id=tpl><div class="panel panel-default">\r' + '\n' + '\t\t\t\t\t\t\t<div class="panel-heading">\r' + '\n' + '\t\t\t\t\t\t\t\t<div class="panel-title"><font>{{user_obj.user_obj.name}}</font>\u7684\u515a\u5efa\u5386\u7a0b</div>\r' + '\n' + '\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t<div id="personInfo" class="panel-body">\r' + '\n' + '\t\t\t\t\t\t\t\t<!--\u4eba\u5458\u4fe1\u606f-->\r' + '\n' + '\t\t\t\t\t\t\t\t<div class="row">\r' + '\n' + '\t\t\t\t\t\t\t\t\t<div class="col-sm-12">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t<div class="basic-info">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t<table class="table col-md-12">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-3" rowspan="5">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img class="poster_img" id="photo" src="{{user_obj.user_obj.icon}}" style="width: 100%;">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\u771f\u5b9e\u59d3\u540d</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2"><font id="name">{{user_obj.user_obj.name}}</font></td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\u8eab\u4efd</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{{statusfilter user_obj.status}}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\u6027\u522b</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2"><font id="sex">{{user_obj.user_obj.sex}}</font></td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\u4e13\u4e1a</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2"><font id="major">{{user_obj.user_obj.major}}</font></td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\u7535\u8bdd</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2"><font id="phone">{{user_obj.user_obj.phone}}</font></td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\u5165\u5b66\u65f6\u95f4</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2"><font id="admission_date">{{user_obj.user_obj.admission_date}}</font></td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\u52a0\u5165\u5b66\u5e74</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{#if user_obj.year_obj.name}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font id="year">{{user_obj.year_obj.name}}</font>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{else}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font color="#B8BEC3">\u672a\u91c7\u96c6</font>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{/if}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\u6240\u5c5e\u5206\u7ec4</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{#if user_obj.group_obj.name}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font id="group">{{user_obj.group_obj.name}}</font>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{else}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font color="#B8BEC3">\u672a\u91c7\u96c6</font>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{/if}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\u62c5\u4efb\u804c\u52a1</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{#if user_obj.duty_obj.name}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font id="duty">{{user_obj.duty_obj.name}}</font>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{else}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font color="#B8BEC3">\u672a\u91c7\u96c6</font>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{/if}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2"></td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td class="col-md-2"></td>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t</table>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t<!--\u515a\u5efa\u5386\u7a0b\u4fe1\u606f-->\r' + '\n' + '\t\t\t\t\t\t\t\t{{#if undergo_obj}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t{{#each undergo_obj}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t<div class="panel panel-default form-horizontal">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t<div class="panel-heading">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t<div class="panel-title">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t<font>{{datefilter this.create_time}}</font>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t<div class="panel-body">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t<div class="row">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t{{#if this.label}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{#each this.label}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="label label-info course">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font size="3">{{this.name}}</font>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{/each}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t{{/if}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t{{#if this.activity_obj}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t<div class="row">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-sm-6">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\u6d3b\u52a8\u540d\u79f0\uff1a<font>{{this.activity_obj.subject}}</font></p>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\u6d3b\u52a8\u5730\u70b9\uff1a<font>{{this.activity_obj.location}}</font></p>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\u6d3b\u52a8\u5f00\u59cb\u65f6\u95f4\uff1a<font>{{datefilter this.activity_obj.start_time}}</font></p>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>\u6d3b\u52a8\u7ed3\u675f\u65f6\u95f4\uff1a<font>{{datefilter this.activity_obj.end_time}}</font></p>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{#if this.activity_obj.plugins}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{#each this.activity_obj.plugins}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="label label-success plugin">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font id="plugin">{{this.name}}</font>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{/each}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{/if}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-sm-6">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="thumbnail" style="width: 300px;height: 200px;">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src="{{this.activity_obj.poster}}" style="width: 100%;height: 100%;">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p class="text-center" style="width: 300px">\u6d3b\u52a8\u6d77\u62a5</p>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t{{/if}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t<div class="row">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="col-sm-12">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="well course_content">\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{{content}}}\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t\t\t\t{{/each}}\r' + '\n' + '\t\t\t\t\t\t\t\t{{/if}}\r' + '\n' + '\t\t\t\t\t\t\t</div>\r' + '\n' + '\t\t\t\t\t\t</div></script></div></div></div><script src=../bower_components/jquery/dist/jquery.js></script><script src=../bower_components/handlebars/handlebars.js></script><script src=/static/scripts/undergo-page-test.js></script></body></html>');
    $templateCache.put('templates/undergo-page.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>\u515a\u5efa\u7ecf\u5386</title><link rel=stylesheet href=/static/bower_components/bootstrap/dist/css/bootstrap.css><link rel=stylesheet href=/static/styles/undergo-page.css><link rel="shortcut icon" href=/static/favicon.ico></head><body><div class=container><br><div class=row><div class="col-md-9 col-md-offset-1"><div class="panel panel-default"><div class=panel-heading><div class=panel-title><font id=person></font>\u7684\u515a\u5efa\u5386\u7a0b</div></div><div class=panel-body><div class=row><div class=col-sm-12><div class=basic-info><table class="table col-md-12"><tbody><tr><td class=col-md-3 rowspan=5><img class=poster_img id=photo style="width: 100%"></td><td class=col-md-2>\u771f\u5b9e\u59d3\u540d</td><td class=col-md-2><font id=name></font></td><td class=col-md-2>\u8eab\u4efd</td><td class=col-md-2><font id=status>\u6b63\u5f0f\u515a\u5458<font></font></font></td></tr><tr><td class=col-md-2>\u6027\u522b</td><td class=col-md-2><font id=sex>\u7537</font></td><td class=col-md-2>\u4e13\u4e1a</td><td class=col-md-2><font id=major></font></td></tr><tr><td class=col-md-2>\u7535\u8bdd</td><td class=col-md-2><font id=phone></font></td><td class=col-md-2>\u5165\u5b66\u65f6\u95f4</td><td class=col-md-2><font id=admission_date></font></td></tr><tr><td class=col-md-2>\u52a0\u5165\u5b66\u5e74</td><td class=col-md-2><font id=year></font></td><td class=col-md-2>\u6240\u5c5e\u5206\u7ec4</td><td class=col-md-2><font id=group></font></td></tr><tr><td class=col-md-2>\u62c5\u4efb\u804c\u52a1</td><td class=col-md-2><font id=duty></font></td><td class=col-md-2></td><td class=col-md-2></td></tr></tbody></table></div></div></div><div id=party_course></div></div></div></div></div></div><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/scripts/undergo-page.js></script></body></html>');
    $templateCache.put('templates/university.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>\u9752\u5e74\u6c11\u5927</title><link href=/static/bower_components/font-awesome/css/font-awesome.min.css rel=stylesheet><link rel=stylesheet href=/static/styles/university.css><link rel="shortcut icon" href=/static/favicon.ico></head><body id=container><div class=banner><ul id=top_list></ul></div><div id=banner_split class=split style="display: none"></div><div id=menu class=menu><div class=menu_activity><p>\u6d3b\u52a8<font id=act_number></font></p><div class=menu_select_a></div></div><div class=menu_org><p>\u7ec4\u7ec7<font id=org_number></font></p><div class=menu_select_o></div></div><div class=clear></div></div><div id=activity></div><div id=org style="display: none"></div></body><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/bower_components/jquery.event.move/js/jquery.event.move.js></script><script src=/static/bower_components/jquery.event.swipe/js/jquery.event.swipe.js></script><script src=/static/bower_components/jquery.unslider/src/unslider.js></script><script src=/static/scripts/university.js></script></html>');
    $templateCache.put('templates/university_union.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>\u9752\u5e74\u6c11\u5927</title><link href=/static/bower_components/font-awesome/css/font-awesome.min.css rel=stylesheet><link rel=stylesheet href=/static/styles/university_union.css><link rel="shortcut icon" href=/static/favicon.ico></head><body id=container><div class=banner><ul id=top_list></ul></div><div id=banner_split class=split style="display: none"></div><div id=menu class=menu><div class=menu_activity><p>\u6d3b\u52a8<font id=act_number></font></p><div class=menu_select_a></div></div><div class=menu_org><p>\u793e\u56e2<font id=org_number></font></p><div class=menu_select_o></div></div><div class=clear></div></div><div id=activity></div><div id=org style="display: none"></div></body><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/bower_components/jquery.event.move/js/jquery.event.move.js></script><script src=/static/bower_components/jquery.event.swipe/js/jquery.event.swipe.js></script><script src=/static/bower_components/jquery.unslider/src/unslider.js></script><script src=/static/scripts/university_union.js></script></html>');
    $templateCache.put('templates/wall.html', '<!DOCTYPE html><html lang=zh><head><meta charset=UTF-8><meta name=viewport content="width=device-width,initial-scale=1"><title>\u7206\u6599\u5899</title><link rel=stylesheet href=/static/styles/wall.css><link rel="shortcut icon" href=/static/favicon.ico></head><body><div class="header clearfix"><span class=iweixiao></span><br><br><span class=broke-wall></span> <span class=logo></span></div><div class=items id=items></div><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/scripts/wall.js></script></body></html>');
    $templateCache.put('templates/weixin_activity.html', '<!DOCTYPE html><html><head><title>\u6821\u56ed\u751f\u6d3b\u5c3d\u5728 i\u5fae\u6821</title><meta name=viewport content="width=device-width,initial-scale=1"><meta http-equiv=X-UA-Compatible content="IE=edge"><meta charset=utf-8><link rel=stylesheet href=/static/styles/bootstrap.min.css><link href=/static/styles/font-awesome.min.css rel=stylesheet><link rel=stylesheet href=/static/styles/weixin_activity.css><link rel="shortcut icon" href=/static/favicon.ico></head><body><div id=ios_popweixin><div class="tip top2bottom"><img align=center style=width:100%;height:100% src="/static/images/safari.png"></div></div><div id=android_popweixin><div class="tip top2bottom"><img align=center style=width:100%;height:100% src="/static/images/android_note.png"></div></div><div class=activity-container><div class=activity-card><div class=post_div><img class=shade src=/static/images/activity-sharing-gray.png> <img class=cover src="/images/{{ activity.cover }}"><h4 class=title>{{ activity.subject }}</h4></div><div class=activity><br><div class=activity-content style="font-size: 13px"><img class=logo_time src=/static/images/activity-shring-time.png>&nbsp; <font color=#666>{{ activity.start_time }} - {{ activity.end_time }}</font></div><div class=activity-content style="font-size: 13px"><img class=logo_loc src=/static/images/activity-sharing-loc.png>&nbsp; <font color=#666>{{ activity.location }}</font></div><br></div><div class=split></div><div class=activity><br><div class=activity-title><img class=logo src=/static/images/activity-sharing-group.png style="margin-top: 2px">&nbsp; <font color=#3b78f2>{{ activity.host.name }}</font></div><br></div><div class=split></div><div class=activity style="margin-top: 10px"><div class=activity-title><img class=logo src=/static/images/activity_detail.png>&nbsp; <font color=#333>\u6d3b\u52a8\u8be6\u60c5</font></div><div class=activity-content style="margin-left: 32px">{{ activity.content | safe }}</div><br></div><div class=split></div>{% for plugin in plugins["data"] %} {% if plugin["id"] == "timeline" %}<div class=activity><div class=activity-title style="padding: 10px 0px 10px 0px"><img class=logo src=/static/images/timeline_new.png style="margin-top: 2px">&nbsp; <font color=#333>\u7206\u6599\u5899</font> <img src=/static/images/activity-HOT.png style="width: 35px; margin-bottom: 10px"></div></div>{% if timeline_list %}<div class=tl_split_top></div><div class=activity style="padding: 5px 0px 0px 20px"><div class=activity-content>{% if timeline_list[0] %} {% if timeline_list[0]["images"] %}<div class=timeline_info><div><img class=tl_ps_logo src="/images/{{ timeline_list[0][\'icon\'] }}"> <font class=tl_ps_name>{{ timeline_list[0][\'nickname\'] }}</font></div><div class=tl_ps_content>{{ timeline_list[0][\'content\']|truncate(36, true) }}</div></div><div class=tl_image><img src="/images/{{ timeline_list[0][\'images\'][0] }}"></div><div class=clear></div>{% else %}<div class=tl_info_nopic><div><img class=tl_ps_logo src="/images/{{ timeline_list[0][\'icon\'] }}"> <font class=tl_ps_name>{{ timeline_list[0][\'nickname\'] }}</font></div><div class=tl_ps_content>{{ timeline_list[0][\'content\']|truncate(36, true) }}</div></div><div class=clear></div>{% endif %} {% endif %} {% if timeline_list[1] %}<div class=tl_split></div>{% if timeline_list[1]["images"] %}<div class=timeline_info><div><img class=tl_ps_logo src="/images/{{ timeline_list[1][\'icon\'] }}"> <font class=tl_ps_name>{{ timeline_list[1][\'nickname\'] }}</font></div><div class=tl_ps_content>{{ timeline_list[1][\'content\']|truncate(36, true) }}</div></div><div class=tl_image><img src="/images/{{ timeline_list[1][\'images\'][0] }}"></div><div class=clear></div>{% else %}<div class=tl_info_nopic><div><img class=tl_ps_logo src="/images/{{ timeline_list[1][\'icon\'] }}"> <font class=tl_ps_name>{{ timeline_list[1][\'nickname\'] }}</font></div><div class=tl_ps_content>{{ timeline_list[1][\'content\']|truncate(36, true) }}</div></div><div class=clear></div>{% endif %} {% endif %} {% if timeline_list[2] %}<div class=tl_split></div>{% if timeline_list[2]["images"] %}<div class=timeline_info><div><img class=tl_ps_logo src="/images/{{ timeline_list[2][\'icon\'] }}"> <font class=tl_ps_name>{{ timeline_list[2][\'nickname\'] }}</font></div><div class=tl_ps_content>{{ timeline_list[2][\'content\']|truncate(36, true) }}</div></div><div class=tl_image><img src="/images/{{ timeline_list[2][\'images\'][0] }}"></div><div class=clear></div>{% else %}<div class=tl_info_nopic><div><img class=tl_ps_logo src="/images/{{ timeline_list[2][\'icon\'] }}"> <font class=tl_ps_name>{{ timeline_list[2][\'nickname\'] }}</font></div><div class=tl_ps_content>{{ timeline_list[2][\'content\']|truncate(36, true) }}</div></div><div class=clear></div>{% endif %} {% endif %}</div></div><br>{% endif %}<div class=split></div>{% endif %} {% if plugin["id"] == "lottery" and plugin["preview"] %} {% if lottery_goods["1"] %}<div class=activity style="margin-top: 10px"><div class=activity-title><img class=logo src=/static/images/lottery_new.png style="margin-top: -4px">&nbsp; <font color=#333>\u73b0\u573a\u62bd\u5956</font></div><div class=activity-content><div class=lottery_fist><img class=award_img src="/images/{{ lottery_goods[\'1\'] }}"></div>{% if lottery_goods["2"] %}<div class=lottery_second><img class=award_img src="/images/{{ lottery_goods[\'2\'] }}"></div>{% endif %} {% if lottery_goods["3"] %}<div class=lottery_third><img class=award_img src="/images/{{ lottery_goods[\'3\'] }}"></div>{% endif %}<div class=clear></div></div><br></div><div class=split></div>{% else %}<div class=activity_lottery><div class=activity-title style="margin-top: 10px"><img class=logo src=/static/images/lottery_new.png style="margin-top: -4px">&nbsp; <font color=#333>\u73b0\u573a\u62bd\u5956</font></div><div class=activity-content><center>{% if plugin["preview"]["state"] %} {% if plugin["preview"]["state"] == 0 %} <font style="color: #999; font-size: 24px; font-weight: bold">\u5373\u5c06\u5f00\u59cb</font> {% endif %} {% if plugin["preview"]["state"] == 1 %} <font style="color: #999; font-size: 16px; font-weight: bold">\u5956\u54c1\u7b79\u5907\u4e2d......</font> {% endif %} {% else %} <font style="color: #999; font-size: 24px; font-weight: bold">\u5373\u5c06\u5f00\u59cb</font> {% endif %}</center></div><br></div><div class=split></div>{% endif %} {% endif %} {% if plugin["id"] == "ticket" and plugin["preview"] %}<div class=activity style="margin-top: 10px"><div class=activity-title><img class=logo src=/static/images/ticket_new.png style="margin-top: -1px">&nbsp; <font color=#333>\u7535\u5b50\u7968</font><font style="color: #666; font-size: 13px">&nbsp;&nbsp;\u5171&nbsp;{{ plugin.preview.total }}&nbsp;\u5f20</font></div><div class=activity-content>{% if ticket_dict["status"] == True %}<div style="float: left;padding-top: 8px"><center><font style="color: #666; font-size: 13px">\u5df2\u62a2\u7968\uff1a</font></center></div>{% for ticket in ticket_dict["users"] %}<div class=ticket_person><img class=person_logo src="/images/{{ ticket[\'user\'][\'icon\'] }}"></div>{% if loop.index == 6 %}<div class=ticket_point><img style="width: 100%" src=/static/images/activity-sharing-point.png></div>{% endif %} {% endfor %}<div class=clear></div>{% else %}<center><br><font style="color: #999; font-size: 16px; font-weight: bold">\u62a2\u7968\u5373\u5c06\u5f00\u59cb......</font></center>{% endif %}</div><br></div><div class=split></div>{% endif %} {% if plugin["id"] == "vote" and plugin["preview"] %}<div class=activity style="margin-top: 10px"><div class=activity-title><img class=logo src=/static/images/vote_new.png style="margin-top: -4px">&nbsp; <font color=#333>\u6295\u7968 | {{ plugin["preview"]["title"] }}</font></div><div class=activity-content>{% if plugin["preview"]["first"] and plugin["preview"]["first"]["img_path"] %}<div class=vote_left><img class=vote_img src="{{ plugin.preview.first.img_path }}"></div>{% if plugin["preview"]["second"] and plugin["preview"]["second"]["img_path"] %}<div class=vote_right><img class=vote_img src="{{ plugin.preview.second.img_path }}"></div>{% endif %}<div class=clear></div>{% else %}<center><br><font style="color: #999; font-size: 16px; font-weight: bold">\u656c\u8bf7\u671f\u5f85......</font></center>{% endif %}</div><div class=activity-content>{% if plugin["preview"]["first"] and plugin["preview"]["first"]["title"] %}<div class=vote_candi_left><font class=vote_candi_name>{{ plugin.preview.first.title }}</font></div>{% endif %} {% if plugin["preview"]["second"] and plugin["preview"]["second"]["title"] %}<div class=vote_candi_right><font class=vote_candi_name>{{ plugin.preview.second.title }}</font></div>{% endif %}<div class=clear></div></div></div><div class=split></div>{% endif %} {% endfor %}</div></div><div class="activity_download download_iwx"><div class=act_con_download><img class=logo_iwx src=/static/images/activity-sharing-logo.png><p style="margin-top: 25px"><font>\u53bb&nbsp;i&nbsp;\u5fae\u6821\uff0c\u5f00\u542f\u65b0\u578b\u6821\u56ed\u751f\u6d3b</font> <img class=arrow_right src=/static/images/activity-right.png></p></div></div><script src=/static/bower_components/jquery/dist/jquery.js></script><script src=/static/scripts/weixin_activity.js></script></body></html>');
  }
]);